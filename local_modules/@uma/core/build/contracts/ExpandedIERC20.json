{
  "contractName": "ExpandedIERC20",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addBurner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "resetOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addBurner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"resetOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"burn(uint256)\":{\"details\":\"Only burns the caller's tokens, so it is safe to leave this method permissionless.\"},\"burnFrom(address,uint256)\":{\"details\":\"Burns `value` tokens owned by `recipient`.\",\"params\":{\"recipient\":\"address to burn tokens from.\",\"value\":\"amount of tokens to burn.\"}},\"mint(address,uint256)\":{\"details\":\"This method should be permissioned to only allow designated parties to mint tokens.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"title\":\"ERC20 interface that includes burn and mint methods.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(uint256)\":{\"notice\":\"Burns a specific amount of the caller's tokens.\"},\"mint(address,uint256)\":{\"notice\":\"Mints tokens and adds them to the balance of the `to` address.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/circleci/protocol/packages/core/contracts/common/interfaces/ExpandedIERC20.sol\":\"ExpandedIERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":199},\"remappings\":[]},\"sources\":{\"/home/circleci/protocol/packages/core/contracts/common/interfaces/ExpandedIERC20.sol\":{\"keccak256\":\"0xb8252039cba45f1c19cd677f150a9823a5d6e1845cad90e3041d97c96f273c26\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://95106656c95e12c30a2a4c482a859df6df55c3b56bb9f7835eb5c685ca3175d3\",\"dweb:/ipfs/QmcuJoX7T53vTCDcQK8WcCJdT1LzHS35vPmSVfg1DG32cd\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n/**\n * @title ERC20 interface that includes burn and mint methods.\n */\nabstract contract ExpandedIERC20 is IERC20 {\n    /**\n     * @notice Burns a specific amount of the caller's tokens.\n     * @dev Only burns the caller's tokens, so it is safe to leave this method permissionless.\n     */\n    function burn(uint256 value) external virtual;\n\n    /**\n     * @dev Burns `value` tokens owned by `recipient`.\n     * @param recipient address to burn tokens from.\n     * @param value amount of tokens to burn.\n     */\n    function burnFrom(address recipient, uint256 value) external virtual returns (bool);\n\n    /**\n     * @notice Mints tokens and adds them to the balance of the `to` address.\n     * @dev This method should be permissioned to only allow designated parties to mint tokens.\n     */\n    function mint(address to, uint256 value) external virtual returns (bool);\n\n    function addMinter(address account) external virtual;\n\n    function addBurner(address account) external virtual;\n\n    function resetOwner(address account) external virtual;\n}\n",
  "sourcePath": "/home/circleci/protocol/packages/core/contracts/common/interfaces/ExpandedIERC20.sol",
  "ast": {
    "absolutePath": "/home/circleci/protocol/packages/core/contracts/common/interfaces/ExpandedIERC20.sol",
    "exportedSymbols": {
      "ExpandedIERC20": [
        5548
      ],
      "IERC20": [
        41847
      ]
    },
    "id": 5549,
    "license": "AGPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5502,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:23:21"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 5503,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5549,
        "sourceUnit": 41848,
        "src": "67:56:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 5505,
              "name": "IERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 41847,
              "src": "232:6:21"
            },
            "id": 5506,
            "nodeType": "InheritanceSpecifier",
            "src": "232:6:21"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 5504,
          "nodeType": "StructuredDocumentation",
          "src": "125:70:21",
          "text": " @title ERC20 interface that includes burn and mint methods."
        },
        "fullyImplemented": false,
        "id": 5548,
        "linearizedBaseContracts": [
          5548,
          41847
        ],
        "name": "ExpandedIERC20",
        "nameLocation": "214:14:21",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 5507,
              "nodeType": "StructuredDocumentation",
              "src": "245:169:21",
              "text": " @notice Burns a specific amount of the caller's tokens.\n @dev Only burns the caller's tokens, so it is safe to leave this method permissionless."
            },
            "functionSelector": "42966c68",
            "id": 5512,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "428:4:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5510,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5509,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "441:5:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 5512,
                  "src": "433:13:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5508,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "433:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "432:15:21"
            },
            "returnParameters": {
              "id": 5511,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "464:0:21"
            },
            "scope": 5548,
            "src": "419:46:21",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 5513,
              "nodeType": "StructuredDocumentation",
              "src": "471:165:21",
              "text": " @dev Burns `value` tokens owned by `recipient`.\n @param recipient address to burn tokens from.\n @param value amount of tokens to burn."
            },
            "functionSelector": "79cc6790",
            "id": 5522,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "burnFrom",
            "nameLocation": "650:8:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5518,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5515,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "667:9:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 5522,
                  "src": "659:17:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5514,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "659:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5517,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "686:5:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 5522,
                  "src": "678:13:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5516,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "678:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "658:34:21"
            },
            "returnParameters": {
              "id": 5521,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5520,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5522,
                  "src": "719:4:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5519,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "719:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "718:6:21"
            },
            "scope": 5548,
            "src": "641:84:21",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 5523,
              "nodeType": "StructuredDocumentation",
              "src": "731:185:21",
              "text": " @notice Mints tokens and adds them to the balance of the `to` address.\n @dev This method should be permissioned to only allow designated parties to mint tokens."
            },
            "functionSelector": "40c10f19",
            "id": 5532,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "930:4:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5528,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5525,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "943:2:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 5532,
                  "src": "935:10:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5524,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "935:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5527,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "955:5:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 5532,
                  "src": "947:13:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5526,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "947:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "934:27:21"
            },
            "returnParameters": {
              "id": 5531,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5530,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5532,
                  "src": "988:4:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5529,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "988:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "987:6:21"
            },
            "scope": 5548,
            "src": "921:73:21",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "functionSelector": "983b2d56",
            "id": 5537,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addMinter",
            "nameLocation": "1009:9:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5535,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5534,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1027:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 5537,
                  "src": "1019:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5533,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1019:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1018:17:21"
            },
            "returnParameters": {
              "id": 5536,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1052:0:21"
            },
            "scope": 5548,
            "src": "1000:53:21",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "functionSelector": "f44637ba",
            "id": 5542,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addBurner",
            "nameLocation": "1068:9:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5540,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5539,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1086:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 5542,
                  "src": "1078:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5538,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1078:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1077:17:21"
            },
            "returnParameters": {
              "id": 5541,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1111:0:21"
            },
            "scope": 5548,
            "src": "1059:53:21",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "functionSelector": "73cc802a",
            "id": 5547,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "resetOwner",
            "nameLocation": "1127:10:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5545,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5544,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1146:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 5547,
                  "src": "1138:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5543,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1138:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1137:17:21"
            },
            "returnParameters": {
              "id": 5546,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1171:0:21"
            },
            "scope": 5548,
            "src": "1118:54:21",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          }
        ],
        "scope": 5549,
        "src": "196:978:21",
        "usedErrors": []
      }
    ],
    "src": "42:1133:21"
  },
  "legacyAST": {
    "absolutePath": "/home/circleci/protocol/packages/core/contracts/common/interfaces/ExpandedIERC20.sol",
    "exportedSymbols": {
      "ExpandedIERC20": [
        5548
      ],
      "IERC20": [
        41847
      ]
    },
    "id": 5549,
    "license": "AGPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5502,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:23:21"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 5503,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5549,
        "sourceUnit": 41848,
        "src": "67:56:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 5505,
              "name": "IERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 41847,
              "src": "232:6:21"
            },
            "id": 5506,
            "nodeType": "InheritanceSpecifier",
            "src": "232:6:21"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 5504,
          "nodeType": "StructuredDocumentation",
          "src": "125:70:21",
          "text": " @title ERC20 interface that includes burn and mint methods."
        },
        "fullyImplemented": false,
        "id": 5548,
        "linearizedBaseContracts": [
          5548,
          41847
        ],
        "name": "ExpandedIERC20",
        "nameLocation": "214:14:21",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 5507,
              "nodeType": "StructuredDocumentation",
              "src": "245:169:21",
              "text": " @notice Burns a specific amount of the caller's tokens.\n @dev Only burns the caller's tokens, so it is safe to leave this method permissionless."
            },
            "functionSelector": "42966c68",
            "id": 5512,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "428:4:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5510,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5509,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "441:5:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 5512,
                  "src": "433:13:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5508,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "433:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "432:15:21"
            },
            "returnParameters": {
              "id": 5511,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "464:0:21"
            },
            "scope": 5548,
            "src": "419:46:21",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 5513,
              "nodeType": "StructuredDocumentation",
              "src": "471:165:21",
              "text": " @dev Burns `value` tokens owned by `recipient`.\n @param recipient address to burn tokens from.\n @param value amount of tokens to burn."
            },
            "functionSelector": "79cc6790",
            "id": 5522,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "burnFrom",
            "nameLocation": "650:8:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5518,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5515,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "667:9:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 5522,
                  "src": "659:17:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5514,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "659:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5517,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "686:5:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 5522,
                  "src": "678:13:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5516,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "678:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "658:34:21"
            },
            "returnParameters": {
              "id": 5521,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5520,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5522,
                  "src": "719:4:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5519,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "719:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "718:6:21"
            },
            "scope": 5548,
            "src": "641:84:21",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 5523,
              "nodeType": "StructuredDocumentation",
              "src": "731:185:21",
              "text": " @notice Mints tokens and adds them to the balance of the `to` address.\n @dev This method should be permissioned to only allow designated parties to mint tokens."
            },
            "functionSelector": "40c10f19",
            "id": 5532,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "930:4:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5528,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5525,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "943:2:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 5532,
                  "src": "935:10:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5524,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "935:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5527,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "955:5:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 5532,
                  "src": "947:13:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5526,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "947:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "934:27:21"
            },
            "returnParameters": {
              "id": 5531,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5530,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5532,
                  "src": "988:4:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5529,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "988:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "987:6:21"
            },
            "scope": 5548,
            "src": "921:73:21",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "functionSelector": "983b2d56",
            "id": 5537,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addMinter",
            "nameLocation": "1009:9:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5535,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5534,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1027:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 5537,
                  "src": "1019:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5533,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1019:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1018:17:21"
            },
            "returnParameters": {
              "id": 5536,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1052:0:21"
            },
            "scope": 5548,
            "src": "1000:53:21",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "functionSelector": "f44637ba",
            "id": 5542,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addBurner",
            "nameLocation": "1068:9:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5540,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5539,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1086:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 5542,
                  "src": "1078:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5538,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1078:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1077:17:21"
            },
            "returnParameters": {
              "id": 5541,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1111:0:21"
            },
            "scope": 5548,
            "src": "1059:53:21",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "functionSelector": "73cc802a",
            "id": 5547,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "resetOwner",
            "nameLocation": "1127:10:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5545,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5544,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1146:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 5547,
                  "src": "1138:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5543,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1138:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1137:17:21"
            },
            "returnParameters": {
              "id": 5546,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1171:0:21"
            },
            "scope": 5548,
            "src": "1118:54:21",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          }
        ],
        "scope": 5549,
        "src": "196:978:21",
        "usedErrors": []
      }
    ],
    "src": "42:1133:21"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-07-16T20:27:09.602Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
      },
      "approve(address,uint256)": {
        "details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
      },
      "balanceOf(address)": {
        "details": "Returns the amount of tokens owned by `account`."
      },
      "burn(uint256)": {
        "details": "Only burns the caller's tokens, so it is safe to leave this method permissionless."
      },
      "burnFrom(address,uint256)": {
        "details": "Burns `value` tokens owned by `recipient`.",
        "params": {
          "recipient": "address to burn tokens from.",
          "value": "amount of tokens to burn."
        }
      },
      "mint(address,uint256)": {
        "details": "This method should be permissioned to only allow designated parties to mint tokens."
      },
      "totalSupply()": {
        "details": "Returns the amount of tokens in existence."
      },
      "transfer(address,uint256)": {
        "details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
      }
    },
    "title": "ERC20 interface that includes burn and mint methods.",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "burn(uint256)": {
        "notice": "Burns a specific amount of the caller's tokens."
      },
      "mint(address,uint256)": {
        "notice": "Mints tokens and adds them to the balance of the `to` address."
      }
    },
    "version": 1
  }
}