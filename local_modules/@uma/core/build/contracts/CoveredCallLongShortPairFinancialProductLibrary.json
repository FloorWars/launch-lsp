{
  "contractName": "CoveredCallLongShortPairFinancialProductLibrary",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "longShortPairStrikePrices",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "longShortPair",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "strikePrice",
          "type": "uint256"
        }
      ],
      "name": "setLongShortPairParameters",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "expiryPrice",
          "type": "int256"
        }
      ],
      "name": "percentageLongCollateralAtExpiry",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"longShortPairStrikePrices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"expiryPrice\",\"type\":\"int256\"}],\"name\":\"percentageLongCollateralAtExpiry\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"longShortPair\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"strikePrice\",\"type\":\"uint256\"}],\"name\":\"setLongShortPairParameters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"percentageLongCollateralAtExpiry(int256)\":{\"params\":{\"expiryPrice\":\"price from the optimistic oracle for the LSP price identifier.\"},\"returns\":{\"_0\":\"expiryPercentLong to indicate how much collateral should be sent between long and short tokens.\"}},\"setLongShortPairParameters(address,uint256)\":{\"details\":\"Note: a) Any address can set the initial strike price b) A strike price cannot be 0. c) A strike price can only be set once to prevent the deployer from changing the strike after the fact. d) For safety, a strike price should be set before depositing any synthetic tokens in a liquidity pool. e) longShortPair must expose an expirationTimestamp method to validate it is correctly deployed.\",\"params\":{\"longShortPair\":\"address of the LSP.\",\"strikePrice\":\"the strike price for the covered call for the associated LSP.\"}}},\"title\":\"Covered call Long Short Pair Financial Product Library.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"percentageLongCollateralAtExpiry(int256)\":{\"notice\":\"Returns a number between 0 and 1e18 to indicate how much collateral each long and short token are entitled to per collateralPerPair.\"},\"setLongShortPairParameters(address,uint256)\":{\"notice\":\"Enables any address to set the strike price for an associated LSP.\"}},\"notice\":\"Adds settlement logic to create covered call LSPs. The contract will payout a scaled amount of collateral depending on where the settlement price lands relative to the call's strike price. If the settlement is below the strike price then longs expire worthless. If the settlement is above the strike then the payout is the fraction above the strike defined by (expiryPrice - strikePrice) / expiryPrice. For example, consider a covered call option collateralized in ETH, with a strike a price of 3000. - If the price is less than 3000 then the each long is worth 0 and each short is worth collateralPerPair. - If the price is more than 3000 then each long is worth the fraction of collateralPerPair that was in the money and each short is worth the remaining collateralPerPair. - Say settlement price is 3500.  Then expiryPercentLong = (3500 - 3000) / 3500 = 0.143. The value of this 0.143 ETH is worth 0.143*3500=500 which is the percentage of the collateralPerPair that was above the strike price.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/circleci/protocol/packages/core/contracts/financial-templates/common/financial-product-libraries/long-short-pair-libraries/CoveredCallLongShortPairFinancialProductLibrary.sol\":\"CoveredCallLongShortPairFinancialProductLibrary\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":199},\"remappings\":[]},\"sources\":{\"/home/circleci/protocol/packages/core/contracts/common/implementation/FixedPoint.sol\":{\"keccak256\":\"0x8ea44f1bf5e1efcfc5943ea67c3dc5bf7ce1ba84bf2d6b868baafac7e422cc01\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://94e828e682e9e44991807f5f39c2ed499b451d65155d8a6c6d0fd62b13dbd222\",\"dweb:/ipfs/QmPfPWyR9deca2dHmwVnm3E9Kt2fLXXABQE4WT8iSdKSXm\"]},\"/home/circleci/protocol/packages/core/contracts/common/implementation/Lockable.sol\":{\"keccak256\":\"0xcd34b3f83b61a096b53020749f327096d5cacd89c2393d947595afb934496ad4\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://aef5cb31ab23e1e6baad76130c29aff1ee3fcda3c4ffc80e0a5294341a253934\",\"dweb:/ipfs/QmNyso4UszNxE6un3Cqc3R7KiBmZzdWNULvjBDfnLRAmwc\"]},\"/home/circleci/protocol/packages/core/contracts/financial-templates/common/financial-product-libraries/long-short-pair-libraries/CoveredCallLongShortPairFinancialProductLibrary.sol\":{\"keccak256\":\"0xef3589f742f323e3cb374488c8d634fc4125b87064849ca54a2c1f6771d6589e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://3db24681f07552491dad1dbf5cfbf24333ac1181d224ff8a8cad1c06092ca3a4\",\"dweb:/ipfs/QmW2bF3bfDV36yFFZhJocZdo9UEor6icS82XQnieAQunQv\"]},\"/home/circleci/protocol/packages/core/contracts/financial-templates/common/financial-product-libraries/long-short-pair-libraries/LongShortPairFinancialProductLibrary.sol\":{\"keccak256\":\"0x74229dc41c9be406f5b038f5e7e42403355110559e5f37ade5ed3d547020cfae\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://05bfc5c3dcf36b82db8530b259933c8112dbfa9ca14f287b4bf57209aee5449b\",\"dweb:/ipfs/QmdvWd7xU6FcduDBjzw1QpqRCRe1ogkL4xXYWWMsYT6vYN\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x2526b7c6a366fc211bbc176078ab02b83833e7682abcc5b3bed9d700b34e2a3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f9529d3d365e8415155cee11394e0f7c0de2152b601b7e77508fce16cb4a509\",\"dweb:/ipfs/QmVhbcLVsAzvqfjsdLwy25XMjgVJm7Z3w2JCNiNbZF2GHT\"]},\"@openzeppelin/contracts/utils/math/SignedSafeMath.sol\":{\"keccak256\":\"0xd1ddc24b24f12a347093844dd645c3a96bcdce05d1f51b8650946ad404cb3c40\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://873363c817ef68913ced271e77fc4af21d4a94ffba23de2b205c6e9de8ff6b72\",\"dweb:/ipfs/QmNmN46R3rrvTxMUjDTbZiCiqqTX9TRvWbiaN9qLrWQXPS\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506000805460ff1916600117905561051d8061002d6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80632da52361146100465780636cf3f7691461006b57806371b0b3601461008b575b600080fd5b61005961005436600461044b565b6100a0565b60405190815260200160405180910390f35b610059610079366004610408565b60016020526000908152604090205481565b61009e610099366004610422565b610174565b005b60006100aa6102ce565b336000908152600160205260409020548061010c5760405162461bcd60e51b815260206004820152601e60248201527f506172616d73206e6f742073657420666f722063616c6c696e67204c5350000060448201526064015b60405180910390fd5b600083128061011a57508083105b15610133576101296000610322565b51915061016f9050565b604080516020808201835285825282518082018452848152835191820190935285815261016a926101649190610357565b9061038a565b519150505b919050565b61017c6102ce565b61018b6000805460ff19169055565b816001600160a01b0316639f43ddd26040518163ffffffff1660e01b815260040160206040518083038186803b1580156101c457600080fd5b505afa1580156101d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101fc9190610463565b61023e5760405162461bcd60e51b8152602060048201526013602482015272496e76616c6964204c5350206164647265737360681b6044820152606401610103565b6001600160a01b0382166000908152600160205260409020541561029d5760405162461bcd60e51b815260206004820152601660248201527514185c985b595d195c9cc8185b1c9958591e481cd95d60521b6044820152606401610103565b6001600160a01b03821660009081526001602052604090208190556102ca6000805460ff19166001179055565b5050565b60005460ff166103205760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610103565b565b60408051602081019091526000815260408051602081019091528061034f84670de0b6b3a76400006103c6565b905292915050565b604080516020810190915260008152604080516020810190915282518451829161038191906103d9565b90529392505050565b6040805160208101909152600081526040805160208101909152825184518291610381916103c090670de0b6b3a76400006103c6565b906103e5565b60006103d2828461049b565b9392505050565b60006103d282846104ba565b60006103d2828461047b565b80356001600160a01b038116811461016f57600080fd5b600060208284031215610419578081fd5b6103d2826103f1565b60008060408385031215610434578081fd5b61043d836103f1565b946020939093013593505050565b60006020828403121561045c578081fd5b5035919050565b600060208284031215610474578081fd5b5051919050565b60008261049657634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156104b5576104b56104d1565b500290565b6000828210156104cc576104cc6104d1565b500390565b634e487b7160e01b600052601160045260246000fdfea264697066735822122058dad24ab7095a77892e02f71871a49dd44c7928eecfc89a0466a7343e9da95764736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c80632da52361146100465780636cf3f7691461006b57806371b0b3601461008b575b600080fd5b61005961005436600461044b565b6100a0565b60405190815260200160405180910390f35b610059610079366004610408565b60016020526000908152604090205481565b61009e610099366004610422565b610174565b005b60006100aa6102ce565b336000908152600160205260409020548061010c5760405162461bcd60e51b815260206004820152601e60248201527f506172616d73206e6f742073657420666f722063616c6c696e67204c5350000060448201526064015b60405180910390fd5b600083128061011a57508083105b15610133576101296000610322565b51915061016f9050565b604080516020808201835285825282518082018452848152835191820190935285815261016a926101649190610357565b9061038a565b519150505b919050565b61017c6102ce565b61018b6000805460ff19169055565b816001600160a01b0316639f43ddd26040518163ffffffff1660e01b815260040160206040518083038186803b1580156101c457600080fd5b505afa1580156101d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101fc9190610463565b61023e5760405162461bcd60e51b8152602060048201526013602482015272496e76616c6964204c5350206164647265737360681b6044820152606401610103565b6001600160a01b0382166000908152600160205260409020541561029d5760405162461bcd60e51b815260206004820152601660248201527514185c985b595d195c9cc8185b1c9958591e481cd95d60521b6044820152606401610103565b6001600160a01b03821660009081526001602052604090208190556102ca6000805460ff19166001179055565b5050565b60005460ff166103205760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610103565b565b60408051602081019091526000815260408051602081019091528061034f84670de0b6b3a76400006103c6565b905292915050565b604080516020810190915260008152604080516020810190915282518451829161038191906103d9565b90529392505050565b6040805160208101909152600081526040805160208101909152825184518291610381916103c090670de0b6b3a76400006103c6565b906103e5565b60006103d2828461049b565b9392505050565b60006103d282846104ba565b60006103d2828461047b565b80356001600160a01b038116811461016f57600080fd5b600060208284031215610419578081fd5b6103d2826103f1565b60008060408385031215610434578081fd5b61043d836103f1565b946020939093013593505050565b60006020828403121561045c578081fd5b5035919050565b600060208284031215610474578081fd5b5051919050565b60008261049657634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156104b5576104b56104d1565b500290565b6000828210156104cc576104cc6104d1565b500390565b634e487b7160e01b600052601160045260246000fdfea264697066735822122058dad24ab7095a77892e02f71871a49dd44c7928eecfc89a0466a7343e9da95764736f6c63430008040033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3309:192",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:192",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "63:124:192",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "73:29:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:192"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "82:12:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:20:192"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "73:5:192"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "165:16:192",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "174:1:192",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "177:1:192",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "167:6:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "167:12:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "167:12:192"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "124:5:192"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "135:5:192"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "150:3:192",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "155:1:192",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "146:3:192"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "146:11:192"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "159:1:192",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "142:3:192"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "142:19:192"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "131:3:192"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "131:31:192"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "121:2:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "121:42:192"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "114:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "114:50:192"
                  },
                  "nodeType": "YulIf",
                  "src": "111:2:192"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "42:6:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:192",
                "type": ""
              }
            ],
            "src": "14:173:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "262:126:192",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "308:26:192",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "317:6:192"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "325:6:192"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "310:6:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "310:22:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "310:22:192"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "283:7:192"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "292:9:192"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "279:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "279:23:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "304:2:192",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "275:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "275:32:192"
                  },
                  "nodeType": "YulIf",
                  "src": "272:2:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "343:39:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "372:9:192"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "353:18:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "353:29:192"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "343:6:192"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "228:9:192",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "239:7:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "251:6:192",
                "type": ""
              }
            ],
            "src": "192:196:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "480:177:192",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "526:26:192",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "535:6:192"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "543:6:192"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "528:6:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "528:22:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "528:22:192"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "501:7:192"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "510:9:192"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "497:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "497:23:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "522:2:192",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "493:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "493:32:192"
                  },
                  "nodeType": "YulIf",
                  "src": "490:2:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "561:39:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "590:9:192"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "571:18:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "571:29:192"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "561:6:192"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "609:42:192",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "636:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "647:2:192",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "632:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "632:18:192"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "619:12:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "619:32:192"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "609:6:192"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "438:9:192",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "449:7:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "461:6:192",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "469:6:192",
                "type": ""
              }
            ],
            "src": "393:264:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "731:120:192",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "777:26:192",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "786:6:192"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "794:6:192"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "779:6:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "779:22:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "779:22:192"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "752:7:192"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "761:9:192"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "748:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "748:23:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "773:2:192",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "744:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "744:32:192"
                  },
                  "nodeType": "YulIf",
                  "src": "741:2:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "812:33:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "835:9:192"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "822:12:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "822:23:192"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "812:6:192"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "697:9:192",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "708:7:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "720:6:192",
                "type": ""
              }
            ],
            "src": "662:189:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "937:113:192",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "983:26:192",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "992:6:192"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1000:6:192"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "985:6:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "985:22:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "985:22:192"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "958:7:192"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "967:9:192"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "954:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "954:23:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "979:2:192",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "950:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "950:32:192"
                  },
                  "nodeType": "YulIf",
                  "src": "947:2:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1018:26:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1034:9:192"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1028:5:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1028:16:192"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1018:6:192"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "903:9:192",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "914:7:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "926:6:192",
                "type": ""
              }
            ],
            "src": "856:194:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1229:172:192",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1246:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1257:2:192",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1239:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1239:21:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1239:21:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1280:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1291:2:192",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1276:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1276:18:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1296:2:192",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1269:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1269:30:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1269:30:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1319:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1330:2:192",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1315:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1315:18:192"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1335:24:192",
                        "type": "",
                        "value": "Parameters already set"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1308:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1308:52:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1308:52:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1369:26:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1381:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1392:2:192",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1377:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1377:18:192"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1369:4:192"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1c660ff5672050f49f4504349febd871d9a8af4dbd7a242ac305e556f78030ee__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1206:9:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1220:4:192",
                "type": ""
              }
            ],
            "src": "1055:346:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1580:180:192",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1597:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1608:2:192",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1590:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1590:21:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1590:21:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1631:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1642:2:192",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1627:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1627:18:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1647:2:192",
                        "type": "",
                        "value": "30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1620:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1620:30:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1620:30:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1670:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1681:2:192",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1666:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1666:18:192"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1686:32:192",
                        "type": "",
                        "value": "Params not set for calling LSP"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1659:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1659:60:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1659:60:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1728:26:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1740:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1751:2:192",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1736:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1736:18:192"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1728:4:192"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_68cc0dd0836e3d636c6d9a388054767b5f98741a714b83391a138d4c0cefe7d2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1557:9:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1571:4:192",
                "type": ""
              }
            ],
            "src": "1406:354:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1939:169:192",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1956:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1967:2:192",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1949:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1949:21:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1949:21:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1990:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2001:2:192",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1986:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1986:18:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2006:2:192",
                        "type": "",
                        "value": "19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1979:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1979:30:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1979:30:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2029:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2040:2:192",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2025:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2025:18:192"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2045:21:192",
                        "type": "",
                        "value": "Invalid LSP address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2018:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2018:49:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2018:49:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2076:26:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2088:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2099:2:192",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2084:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2084:18:192"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2076:4:192"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9c7a742eb98e20c17de092129b9e73fedab190e4a1e2e034f7e056503d041914__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1916:9:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1930:4:192",
                "type": ""
              }
            ],
            "src": "1765:343:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2287:181:192",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2304:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2315:2:192",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2297:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2297:21:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2297:21:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2338:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2349:2:192",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2334:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2334:18:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2354:2:192",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2327:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2327:30:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2327:30:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2377:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2388:2:192",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2373:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2373:18:192"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2393:33:192",
                        "type": "",
                        "value": "ReentrancyGuard: reentrant call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2366:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2366:61:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2366:61:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2436:26:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2448:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2459:2:192",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2444:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2444:18:192"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2436:4:192"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2264:9:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2278:4:192",
                "type": ""
              }
            ],
            "src": "2113:355:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2574:76:192",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2584:26:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2596:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2607:2:192",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2592:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2592:18:192"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2584:4:192"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2626:9:192"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2637:6:192"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2619:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2619:25:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2619:25:192"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2543:9:192",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2554:6:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2565:4:192",
                "type": ""
              }
            ],
            "src": "2473:177:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2701:171:192",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2732:111:192",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "2753:1:192"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2760:3:192",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2765:10:192",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "2756:3:192"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2756:20:192"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2746:6:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2746:31:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2746:31:192"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2797:1:192",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2800:4:192",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2790:6:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2790:15:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2790:15:192"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "2825:1:192"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2828:4:192",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2818:6:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2818:15:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2818:15:192"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2721:1:192"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2714:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2714:9:192"
                  },
                  "nodeType": "YulIf",
                  "src": "2711:2:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2852:14:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2861:1:192"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2864:1:192"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "2857:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2857:9:192"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "2852:1:192"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "2686:1:192",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "2689:1:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "2695:1:192",
                "type": ""
              }
            ],
            "src": "2655:217:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2929:116:192",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2988:22:192",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "2990:16:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2990:18:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2990:18:192"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "2960:1:192"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2953:6:192"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2953:9:192"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "2946:6:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2946:17:192"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "2968:1:192"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2979:1:192",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "2975:3:192"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2975:6:192"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "2983:1:192"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "2971:3:192"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2971:14:192"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2965:2:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2965:21:192"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2942:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2942:45:192"
                  },
                  "nodeType": "YulIf",
                  "src": "2939:2:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3019:20:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3034:1:192"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3037:1:192"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "3030:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3030:9:192"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "3019:7:192"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "2908:1:192",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "2911:1:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "2917:7:192",
                "type": ""
              }
            ],
            "src": "2877:168:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3099:76:192",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3121:22:192",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "3123:16:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3123:18:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3123:18:192"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3115:1:192"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3118:1:192"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "3112:2:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3112:8:192"
                  },
                  "nodeType": "YulIf",
                  "src": "3109:2:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3152:17:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3164:1:192"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3167:1:192"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "3160:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3160:9:192"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "3152:4:192"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3081:1:192",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3084:1:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "3090:4:192",
                "type": ""
              }
            ],
            "src": "3050:125:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3212:95:192",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3229:1:192",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3236:3:192",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3241:10:192",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "3232:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3232:20:192"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3222:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3222:31:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3222:31:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3269:1:192",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3272:4:192",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3262:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3262:15:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3262:15:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3293:1:192",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3296:4:192",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3286:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3286:15:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3286:15:192"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "3180:127:192"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_int256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_1c660ff5672050f49f4504349febd871d9a8af4dbd7a242ac305e556f78030ee__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Parameters already set\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_68cc0dd0836e3d636c6d9a388054767b5f98741a714b83391a138d4c0cefe7d2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Params not set for calling LSP\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9c7a742eb98e20c17de092129b9e73fedab190e4a1e2e034f7e056503d041914__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Invalid LSP address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
      "id": 192,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "1348:2908:73:-:0;;;;;;;;;;;;-1:-1:-1;874:11:11;:18;;-1:-1:-1;;874:18:11;888:4;874:18;;;1348:2908:73;;;;;;",
  "deployedSourceMap": "1348:2908:73:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3014:1240;;;;;;:::i;:::-;;:::i;:::-;;;2619:25:192;;;2607:2;2592:18;3014:1240:73;;;;;;;1540:60;;;;;;:::i;:::-;;;;;;;;;;;;;;2264:373;;;;;;:::i;:::-;;:::i;:::-;;3014:1240;3165:7;1603:19:11;:17;:19::i;:::-;3244:10:73::1;3188:27;3218:37:::0;;;:25:::1;:37;::::0;;;;;3273:24;3265:67:::1;;;::::0;-1:-1:-1;;;3265:67:73;;1608:2:192;3265:67:73::1;::::0;::::1;1590:21:192::0;1647:2;1627:18;;;1620:30;1686:32;1666:18;;;1659:60;1736:18;;3265:67:73::1;;;;;;;;;3575:1;3561:11;:15;:61;;;;3603:19;3588:11;3580:42;3561:61;3557:125;;;3643:30;3671:1;3643:27;:30::i;:::-;:39:::0;;-1:-1:-1;3636:46:73::1;::::0;-1:-1:-1;3636:46:73::1;3557:125;4179:41;::::0;;::::1;::::0;;::::1;::::0;;;;;4115:40;;;;::::1;::::0;;;;;4069:41;;;;::::1;::::0;;;;;;4068:153:::1;::::0;4069:87:::1;::::0;:41;:45:::1;:87::i;:::-;4068:110:::0;::::1;:153::i;:::-;:179:::0;;-1:-1:-1;;1632:1:11::1;3014:1240:73::0;;;:::o;2264:373::-;1317:19:11;:17;:19::i;:::-;1346:17;2459:5;2445:19;;-1:-1:-1;;2445:19:11;;;2335:136;1346:17;2410:13:73::1;-1:-1:-1::0;;;;;2384:60:73::1;;:62;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2376:99;;;::::0;-1:-1:-1;;;2376:99:73;;1967:2:192;2376:99:73::1;::::0;::::1;1949:21:192::0;2006:2;1986:18;;;1979:30;-1:-1:-1;;;2025:18:192;;;2018:49;2084:18;;2376:99:73::1;1939:169:192::0;2376:99:73::1;-1:-1:-1::0;;;;;2493:40:73;::::1;;::::0;;;:25:::1;:40;::::0;;;;;:45;2485:80:::1;;;::::0;-1:-1:-1;;;2485:80:73;;1257:2:192;2485:80:73::1;::::0;::::1;1239:21:192::0;1296:2;1276:18;;;1269:30;-1:-1:-1;;;1315:18:192;;;1308:52;1377:18;;2485:80:73::1;1229:172:192::0;2485:80:73::1;-1:-1:-1::0;;;;;2576:40:73;::::1;;::::0;;;:25:::1;:40;::::0;;;;:54;;;1384:20:11;2658:11;:18;;-1:-1:-1;;2658:18:11;2672:4;2658:18;;;2477:206;1384:20;2264:373:73;;:::o;2143:186:11:-;2275:11;;;;2267:55;;;;-1:-1:-1;;;2267:55:11;;2315:2:192;2267:55:11;;;2297:21:192;2354:2;2334:18;;;2327:30;2393:33;2373:18;;;2366:61;2444:18;;2267:55:11;2287:181:192;2267:55:11;2143:186::o;1044:135:10:-;-1:-1:-1;;;;;;;;;;;;1138:34:10;;;;;;;;;;1147:24;:1;619:6;1147:5;:24::i;:::-;1138:34;;1131:41;1044:135;-1:-1:-1;;1044:135:10:o;7119:151::-;-1:-1:-1;;;;;;;;;;;;7227:36:10;;;;;;;;;7251:10;;7236;;7227:36;;7236:26;;:10;:14;:26::i;:::-;7227:36;;7220:43;7119:151;-1:-1:-1;;;7119:151:10:o;10614:634::-;-1:-1:-1;;;;;;;;;;;;11182:59:10;;;;;;;;;11229:10;;11191;;11182:59;;11191:49;;:33;;619:6;11191:14;:33::i;:::-;:37;;:49::i;3382:96:172:-;3440:7;3466:5;3470:1;3466;:5;:::i;:::-;3459:12;3382:96;-1:-1:-1;;;3382:96:172:o;3039:::-;3097:7;3123:5;3127:1;3123;:5;:::i;3767:96::-;3825:7;3851:5;3855:1;3851;:5;:::i;14:173:192:-;82:20;;-1:-1:-1;;;;;131:31:192;;121:42;;111:2;;177:1;174;167:12;192:196;251:6;304:2;292:9;283:7;279:23;275:32;272:2;;;325:6;317;310:22;272:2;353:29;372:9;353:29;:::i;393:264::-;461:6;469;522:2;510:9;501:7;497:23;493:32;490:2;;;543:6;535;528:22;490:2;571:29;590:9;571:29;:::i;:::-;561:39;647:2;632:18;;;;619:32;;-1:-1:-1;;;480:177:192:o;662:189::-;720:6;773:2;761:9;752:7;748:23;744:32;741:2;;;794:6;786;779:22;741:2;-1:-1:-1;822:23:192;;731:120;-1:-1:-1;731:120:192:o;856:194::-;926:6;979:2;967:9;958:7;954:23;950:32;947:2;;;1000:6;992;985:22;947:2;-1:-1:-1;1028:16:192;;937:113;-1:-1:-1;937:113:192:o;2655:217::-;2695:1;2721;2711:2;;-1:-1:-1;;;2746:31:192;;2800:4;2797:1;2790:15;2828:4;2753:1;2818:15;2711:2;-1:-1:-1;2857:9:192;;2701:171::o;2877:168::-;2917:7;2983:1;2979;2975:6;2971:14;2968:1;2965:21;2960:1;2953:9;2946:17;2942:45;2939:2;;;2990:18;;:::i;:::-;-1:-1:-1;3030:9:192;;2929:116::o;3050:125::-;3090:4;3118:1;3115;3112:8;3109:2;;;3123:18;;:::i;:::-;-1:-1:-1;3160:9:192;;3099:76::o;3180:127::-;3241:10;3236:3;3232:20;3229:1;3222:31;3272:4;3269:1;3262:15;3296:4;3293:1;3286:15",
  "source": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\n\nimport \"./LongShortPairFinancialProductLibrary.sol\";\nimport \"../../../../common/implementation/Lockable.sol\";\n\n/**\n * @title Covered call Long Short Pair Financial Product Library.\n * @notice Adds settlement logic to create covered call LSPs. The contract will payout a scaled amount of collateral\n * depending on where the settlement price lands relative to the call's strike price. If the settlement is below the\n * strike price then longs expire worthless. If the settlement is above the strike then the payout is the fraction above\n * the strike defined by (expiryPrice - strikePrice) / expiryPrice. For example, consider a covered call option\n * collateralized in ETH, with a strike a price of 3000.\n * - If the price is less than 3000 then the each long is worth 0 and each short is worth collateralPerPair.\n * - If the price is more than 3000 then each long is worth the fraction of collateralPerPair that was in the money and\n * each short is worth the remaining collateralPerPair.\n * - Say settlement price is 3500.  Then expiryPercentLong = (3500 - 3000) / 3500 = 0.143. The value of this 0.143 ETH\n * is worth 0.143*3500=500 which is the percentage of the collateralPerPair that was above the strike price.\n */\ncontract CoveredCallLongShortPairFinancialProductLibrary is LongShortPairFinancialProductLibrary, Lockable {\n    using FixedPoint for FixedPoint.Unsigned;\n    using SafeMath for uint256;\n\n    mapping(address => uint256) public longShortPairStrikePrices;\n\n    /**\n     * @notice Enables any address to set the strike price for an associated LSP.\n     * @param longShortPair address of the LSP.\n     * @param strikePrice the strike price for the covered call for the associated LSP.\n     * @dev Note: a) Any address can set the initial strike price b) A strike price cannot be 0.\n     * c) A strike price can only be set once to prevent the deployer from changing the strike after the fact.\n     * d) For safety, a strike price should be set before depositing any synthetic tokens in a liquidity pool.\n     * e) longShortPair must expose an expirationTimestamp method to validate it is correctly deployed.\n     */\n    function setLongShortPairParameters(address longShortPair, uint256 strikePrice) public nonReentrant() {\n        require(ExpiringContractInterface(longShortPair).expirationTimestamp() != 0, \"Invalid LSP address\");\n        require(longShortPairStrikePrices[longShortPair] == 0, \"Parameters already set\");\n\n        longShortPairStrikePrices[longShortPair] = strikePrice;\n    }\n\n    /**\n     * @notice Returns a number between 0 and 1e18 to indicate how much collateral each long and short token are entitled\n     * to per collateralPerPair.\n     * @param expiryPrice price from the optimistic oracle for the LSP price identifier.\n     * @return expiryPercentLong to indicate how much collateral should be sent between long and short tokens.\n     */\n    function percentageLongCollateralAtExpiry(int256 expiryPrice)\n        public\n        view\n        override\n        nonReentrantView()\n        returns (uint256)\n    {\n        uint256 contractStrikePrice = longShortPairStrikePrices[msg.sender];\n        require(contractStrikePrice != 0, \"Params not set for calling LSP\");\n\n        // If the expiry price is less than the strike price then the long options expire worthless (out of the money).\n        // Note we do not consider negative expiry prices in this call option implementation.\n        if (expiryPrice < 0 || uint256(expiryPrice) < contractStrikePrice)\n            return FixedPoint.fromUnscaledUint(0).rawValue;\n\n        // Else, token expires to be worth the fraction of a collateral token that's in the money. eg if ETH is $3500\n        // and strike is $3000, long token is redeemable for (3500-3000)/3500 = 0.143 WETH which is worth $500 and the\n        // short token is worth the remaining 0.8. This is strictly < 1, tending to 1 as the expiry tends to infinity.\n        return\n            (FixedPoint.Unsigned(uint256(expiryPrice)).sub(FixedPoint.Unsigned(contractStrikePrice)))\n                .div(FixedPoint.Unsigned(uint256(expiryPrice)))\n                .rawValue;\n    }\n}\n",
  "sourcePath": "/home/circleci/protocol/packages/core/contracts/financial-templates/common/financial-product-libraries/long-short-pair-libraries/CoveredCallLongShortPairFinancialProductLibrary.sol",
  "ast": {
    "absolutePath": "/home/circleci/protocol/packages/core/contracts/financial-templates/common/financial-product-libraries/long-short-pair-libraries/CoveredCallLongShortPairFinancialProductLibrary.sol",
    "exportedSymbols": {
      "CoveredCallLongShortPairFinancialProductLibrary": [
        14614
      ],
      "ExpiringContractInterface": [
        14792
      ],
      "FixedPoint": [
        3659
      ],
      "Lockable": [
        3720
      ],
      "LongShortPairFinancialProductLibrary": [
        14800
      ],
      "SafeMath": [
        44033
      ],
      "SignedSafeMath": [
        44097
      ]
    },
    "id": 14615,
    "license": "AGPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 14489,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:23:73"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 14490,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14615,
        "sourceUnit": 44034,
        "src": "67:57:73",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/circleci/protocol/packages/core/contracts/financial-templates/common/financial-product-libraries/long-short-pair-libraries/LongShortPairFinancialProductLibrary.sol",
        "file": "./LongShortPairFinancialProductLibrary.sol",
        "id": 14491,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14615,
        "sourceUnit": 14801,
        "src": "126:52:73",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/circleci/protocol/packages/core/contracts/common/implementation/Lockable.sol",
        "file": "../../../../common/implementation/Lockable.sol",
        "id": 14492,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14615,
        "sourceUnit": 3721,
        "src": "179:56:73",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 14494,
              "name": "LongShortPairFinancialProductLibrary",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14800,
              "src": "1408:36:73"
            },
            "id": 14495,
            "nodeType": "InheritanceSpecifier",
            "src": "1408:36:73"
          },
          {
            "baseName": {
              "id": 14496,
              "name": "Lockable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3720,
              "src": "1446:8:73"
            },
            "id": 14497,
            "nodeType": "InheritanceSpecifier",
            "src": "1446:8:73"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 14493,
          "nodeType": "StructuredDocumentation",
          "src": "237:1110:73",
          "text": " @title Covered call Long Short Pair Financial Product Library.\n @notice Adds settlement logic to create covered call LSPs. The contract will payout a scaled amount of collateral\n depending on where the settlement price lands relative to the call's strike price. If the settlement is below the\n strike price then longs expire worthless. If the settlement is above the strike then the payout is the fraction above\n the strike defined by (expiryPrice - strikePrice) / expiryPrice. For example, consider a covered call option\n collateralized in ETH, with a strike a price of 3000.\n - If the price is less than 3000 then the each long is worth 0 and each short is worth collateralPerPair.\n - If the price is more than 3000 then each long is worth the fraction of collateralPerPair that was in the money and\n each short is worth the remaining collateralPerPair.\n - Say settlement price is 3500.  Then expiryPercentLong = (3500 - 3000) / 3500 = 0.143. The value of this 0.143 ETH\n is worth 0.143*3500=500 which is the percentage of the collateralPerPair that was above the strike price."
        },
        "fullyImplemented": true,
        "id": 14614,
        "linearizedBaseContracts": [
          14614,
          3720,
          14800
        ],
        "name": "CoveredCallLongShortPairFinancialProductLibrary",
        "nameLocation": "1357:47:73",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 14501,
            "libraryName": {
              "id": 14498,
              "name": "FixedPoint",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3659,
              "src": "1467:10:73"
            },
            "nodeType": "UsingForDirective",
            "src": "1461:41:73",
            "typeName": {
              "id": 14500,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 14499,
                "name": "FixedPoint.Unsigned",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2045,
                "src": "1482:19:73"
              },
              "referencedDeclaration": 2045,
              "src": "1482:19:73",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Unsigned_$2045_storage_ptr",
                "typeString": "struct FixedPoint.Unsigned"
              }
            }
          },
          {
            "id": 14504,
            "libraryName": {
              "id": 14502,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 44033,
              "src": "1513:8:73"
            },
            "nodeType": "UsingForDirective",
            "src": "1507:27:73",
            "typeName": {
              "id": 14503,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1526:7:73",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "6cf3f769",
            "id": 14508,
            "mutability": "mutable",
            "name": "longShortPairStrikePrices",
            "nameLocation": "1575:25:73",
            "nodeType": "VariableDeclaration",
            "scope": 14614,
            "src": "1540:60:73",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 14507,
              "keyType": {
                "id": 14505,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1548:7:73",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1540:27:73",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 14506,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1559:7:73",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 14544,
              "nodeType": "Block",
              "src": "2366:271:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 14525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 14520,
                                  "name": "longShortPair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14511,
                                  "src": "2410:13:73",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 14519,
                                "name": "ExpiringContractInterface",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14792,
                                "src": "2384:25:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ExpiringContractInterface_$14792_$",
                                  "typeString": "type(contract ExpiringContractInterface)"
                                }
                              },
                              "id": 14521,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2384:40:73",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ExpiringContractInterface_$14792",
                                "typeString": "contract ExpiringContractInterface"
                              }
                            },
                            "id": 14522,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "expirationTimestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14791,
                            "src": "2384:60:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 14523,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2384:62:73",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 14524,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2450:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2384:67:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964204c53502061646472657373",
                        "id": 14526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2453:21:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9c7a742eb98e20c17de092129b9e73fedab190e4a1e2e034f7e056503d041914",
                          "typeString": "literal_string \"Invalid LSP address\""
                        },
                        "value": "Invalid LSP address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9c7a742eb98e20c17de092129b9e73fedab190e4a1e2e034f7e056503d041914",
                          "typeString": "literal_string \"Invalid LSP address\""
                        }
                      ],
                      "id": 14518,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2376:7:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2376:99:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14528,
                  "nodeType": "ExpressionStatement",
                  "src": "2376:99:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 14534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 14530,
                            "name": "longShortPairStrikePrices",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14508,
                            "src": "2493:25:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 14532,
                          "indexExpression": {
                            "id": 14531,
                            "name": "longShortPair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14511,
                            "src": "2519:13:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2493:40:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 14533,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2537:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2493:45:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506172616d657465727320616c726561647920736574",
                        "id": 14535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2540:24:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1c660ff5672050f49f4504349febd871d9a8af4dbd7a242ac305e556f78030ee",
                          "typeString": "literal_string \"Parameters already set\""
                        },
                        "value": "Parameters already set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1c660ff5672050f49f4504349febd871d9a8af4dbd7a242ac305e556f78030ee",
                          "typeString": "literal_string \"Parameters already set\""
                        }
                      ],
                      "id": 14529,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2485:7:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2485:80:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14537,
                  "nodeType": "ExpressionStatement",
                  "src": "2485:80:73"
                },
                {
                  "expression": {
                    "id": 14542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 14538,
                        "name": "longShortPairStrikePrices",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14508,
                        "src": "2576:25:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 14540,
                      "indexExpression": {
                        "id": 14539,
                        "name": "longShortPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14511,
                        "src": "2602:13:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2576:40:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 14541,
                      "name": "strikePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14513,
                      "src": "2619:11:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2576:54:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 14543,
                  "nodeType": "ExpressionStatement",
                  "src": "2576:54:73"
                }
              ]
            },
            "documentation": {
              "id": 14509,
              "nodeType": "StructuredDocumentation",
              "src": "1607:652:73",
              "text": " @notice Enables any address to set the strike price for an associated LSP.\n @param longShortPair address of the LSP.\n @param strikePrice the strike price for the covered call for the associated LSP.\n @dev Note: a) Any address can set the initial strike price b) A strike price cannot be 0.\n c) A strike price can only be set once to prevent the deployer from changing the strike after the fact.\n d) For safety, a strike price should be set before depositing any synthetic tokens in a liquidity pool.\n e) longShortPair must expose an expirationTimestamp method to validate it is correctly deployed."
            },
            "functionSelector": "71b0b360",
            "id": 14545,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 14516,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14515,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3686,
                  "src": "2351:12:73"
                },
                "nodeType": "ModifierInvocation",
                "src": "2351:14:73"
              }
            ],
            "name": "setLongShortPairParameters",
            "nameLocation": "2273:26:73",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14514,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14511,
                  "mutability": "mutable",
                  "name": "longShortPair",
                  "nameLocation": "2308:13:73",
                  "nodeType": "VariableDeclaration",
                  "scope": 14545,
                  "src": "2300:21:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14510,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2300:7:73",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14513,
                  "mutability": "mutable",
                  "name": "strikePrice",
                  "nameLocation": "2331:11:73",
                  "nodeType": "VariableDeclaration",
                  "scope": 14545,
                  "src": "2323:19:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14512,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2323:7:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2299:44:73"
            },
            "returnParameters": {
              "id": 14517,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2366:0:73"
            },
            "scope": 14614,
            "src": "2264:373:73",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              14799
            ],
            "body": {
              "id": 14612,
              "nodeType": "Block",
              "src": "3178:1076:73",
              "statements": [
                {
                  "assignments": [
                    14557
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14557,
                      "mutability": "mutable",
                      "name": "contractStrikePrice",
                      "nameLocation": "3196:19:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 14612,
                      "src": "3188:27:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 14556,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3188:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14562,
                  "initialValue": {
                    "baseExpression": {
                      "id": 14558,
                      "name": "longShortPairStrikePrices",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14508,
                      "src": "3218:25:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 14561,
                    "indexExpression": {
                      "expression": {
                        "id": 14559,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "3244:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 14560,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3244:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3218:37:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3188:67:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 14566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 14564,
                          "name": "contractStrikePrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14557,
                          "src": "3273:19:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 14565,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3296:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3273:24:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506172616d73206e6f742073657420666f722063616c6c696e67204c5350",
                        "id": 14567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3299:32:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_68cc0dd0836e3d636c6d9a388054767b5f98741a714b83391a138d4c0cefe7d2",
                          "typeString": "literal_string \"Params not set for calling LSP\""
                        },
                        "value": "Params not set for calling LSP"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_68cc0dd0836e3d636c6d9a388054767b5f98741a714b83391a138d4c0cefe7d2",
                          "typeString": "literal_string \"Params not set for calling LSP\""
                        }
                      ],
                      "id": 14563,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3265:7:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3265:67:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14569,
                  "nodeType": "ExpressionStatement",
                  "src": "3265:67:73"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 14579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "id": 14572,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 14570,
                        "name": "expiryPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14548,
                        "src": "3561:11:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 14571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3575:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3561:15:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 14578,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 14575,
                            "name": "expiryPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14548,
                            "src": "3588:11:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          ],
                          "id": 14574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3580:7:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 14573,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "3580:7:73",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 14576,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3580:20:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 14577,
                        "name": "contractStrikePrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14557,
                        "src": "3603:19:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3580:42:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3561:61:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 14586,
                  "nodeType": "IfStatement",
                  "src": "3557:125:73",
                  "trueBody": {
                    "expression": {
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 14582,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3671:1:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "expression": {
                            "id": 14580,
                            "name": "FixedPoint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3659,
                            "src": "3643:10:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_FixedPoint_$3659_$",
                              "typeString": "type(library FixedPoint)"
                            }
                          },
                          "id": 14581,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "fromUnscaledUint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2062,
                          "src": "3643:27:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_Unsigned_$2045_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (struct FixedPoint.Unsigned memory)"
                          }
                        },
                        "id": 14583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3643:30:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Unsigned_$2045_memory_ptr",
                          "typeString": "struct FixedPoint.Unsigned memory"
                        }
                      },
                      "id": 14584,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rawValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2044,
                      "src": "3643:39:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 14555,
                    "id": 14585,
                    "nodeType": "Return",
                    "src": "3636:46:73"
                  }
                },
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 14606,
                                  "name": "expiryPrice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14548,
                                  "src": "4207:11:73",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                ],
                                "id": 14605,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4199:7:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 14604,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4199:7:73",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 14607,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4199:20:73",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 14602,
                              "name": "FixedPoint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3659,
                              "src": "4179:10:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_FixedPoint_$3659_$",
                                "typeString": "type(library FixedPoint)"
                              }
                            },
                            "id": 14603,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Unsigned",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2045,
                            "src": "4179:19:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Unsigned_$2045_storage_ptr_$",
                              "typeString": "type(struct FixedPoint.Unsigned storage pointer)"
                            }
                          },
                          "id": 14608,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4179:41:73",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Unsigned_$2045_memory_ptr",
                            "typeString": "struct FixedPoint.Unsigned memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Unsigned_$2045_memory_ptr",
                            "typeString": "struct FixedPoint.Unsigned memory"
                          }
                        ],
                        "expression": {
                          "components": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 14597,
                                      "name": "contractStrikePrice",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 14557,
                                      "src": "4135:19:73",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 14595,
                                      "name": "FixedPoint",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3659,
                                      "src": "4115:10:73",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_FixedPoint_$3659_$",
                                        "typeString": "type(library FixedPoint)"
                                      }
                                    },
                                    "id": 14596,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "Unsigned",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2045,
                                    "src": "4115:19:73",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_struct$_Unsigned_$2045_storage_ptr_$",
                                      "typeString": "type(struct FixedPoint.Unsigned storage pointer)"
                                    }
                                  },
                                  "id": 14598,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "structConstructorCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4115:40:73",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Unsigned_$2045_memory_ptr",
                                    "typeString": "struct FixedPoint.Unsigned memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_struct$_Unsigned_$2045_memory_ptr",
                                    "typeString": "struct FixedPoint.Unsigned memory"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 14591,
                                          "name": "expiryPrice",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 14548,
                                          "src": "4097:11:73",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_int256",
                                            "typeString": "int256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_int256",
                                            "typeString": "int256"
                                          }
                                        ],
                                        "id": 14590,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "4089:7:73",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint256_$",
                                          "typeString": "type(uint256)"
                                        },
                                        "typeName": {
                                          "id": 14589,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "4089:7:73",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 14592,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4089:20:73",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 14587,
                                      "name": "FixedPoint",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3659,
                                      "src": "4069:10:73",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_FixedPoint_$3659_$",
                                        "typeString": "type(library FixedPoint)"
                                      }
                                    },
                                    "id": 14588,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "Unsigned",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2045,
                                    "src": "4069:19:73",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_struct$_Unsigned_$2045_storage_ptr_$",
                                      "typeString": "type(struct FixedPoint.Unsigned storage pointer)"
                                    }
                                  },
                                  "id": 14593,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "structConstructorCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4069:41:73",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Unsigned_$2045_memory_ptr",
                                    "typeString": "struct FixedPoint.Unsigned memory"
                                  }
                                },
                                "id": 14594,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sub",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2449,
                                "src": "4069:45:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_struct$_Unsigned_$2045_memory_ptr_$_t_struct$_Unsigned_$2045_memory_ptr_$returns$_t_struct$_Unsigned_$2045_memory_ptr_$bound_to$_t_struct$_Unsigned_$2045_memory_ptr_$",
                                  "typeString": "function (struct FixedPoint.Unsigned memory,struct FixedPoint.Unsigned memory) pure returns (struct FixedPoint.Unsigned memory)"
                                }
                              },
                              "id": 14599,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4069:87:73",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Unsigned_$2045_memory_ptr",
                                "typeString": "struct FixedPoint.Unsigned memory"
                              }
                            }
                          ],
                          "id": 14600,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4068:89:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Unsigned_$2045_memory_ptr",
                            "typeString": "struct FixedPoint.Unsigned memory"
                          }
                        },
                        "id": 14601,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2635,
                        "src": "4068:110:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_struct$_Unsigned_$2045_memory_ptr_$_t_struct$_Unsigned_$2045_memory_ptr_$returns$_t_struct$_Unsigned_$2045_memory_ptr_$bound_to$_t_struct$_Unsigned_$2045_memory_ptr_$",
                          "typeString": "function (struct FixedPoint.Unsigned memory,struct FixedPoint.Unsigned memory) pure returns (struct FixedPoint.Unsigned memory)"
                        }
                      },
                      "id": 14609,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4068:153:73",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Unsigned_$2045_memory_ptr",
                        "typeString": "struct FixedPoint.Unsigned memory"
                      }
                    },
                    "id": 14610,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "rawValue",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 2044,
                    "src": "4068:179:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 14555,
                  "id": 14611,
                  "nodeType": "Return",
                  "src": "4049:198:73"
                }
              ]
            },
            "documentation": {
              "id": 14546,
              "nodeType": "StructuredDocumentation",
              "src": "2643:366:73",
              "text": " @notice Returns a number between 0 and 1e18 to indicate how much collateral each long and short token are entitled\n to per collateralPerPair.\n @param expiryPrice price from the optimistic oracle for the LSP price identifier.\n @return expiryPercentLong to indicate how much collateral should be sent between long and short tokens."
            },
            "functionSelector": "2da52361",
            "id": 14613,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 14552,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14551,
                  "name": "nonReentrantView",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3694,
                  "src": "3129:16:73"
                },
                "nodeType": "ModifierInvocation",
                "src": "3129:18:73"
              }
            ],
            "name": "percentageLongCollateralAtExpiry",
            "nameLocation": "3023:32:73",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 14550,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3112:8:73"
            },
            "parameters": {
              "id": 14549,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14548,
                  "mutability": "mutable",
                  "name": "expiryPrice",
                  "nameLocation": "3063:11:73",
                  "nodeType": "VariableDeclaration",
                  "scope": 14613,
                  "src": "3056:18:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 14547,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3056:6:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3055:20:73"
            },
            "returnParameters": {
              "id": 14555,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14554,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14613,
                  "src": "3165:7:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14553,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3165:7:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3164:9:73"
            },
            "scope": 14614,
            "src": "3014:1240:73",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 14615,
        "src": "1348:2908:73",
        "usedErrors": []
      }
    ],
    "src": "42:4215:73"
  },
  "legacyAST": {
    "absolutePath": "/home/circleci/protocol/packages/core/contracts/financial-templates/common/financial-product-libraries/long-short-pair-libraries/CoveredCallLongShortPairFinancialProductLibrary.sol",
    "exportedSymbols": {
      "CoveredCallLongShortPairFinancialProductLibrary": [
        14614
      ],
      "ExpiringContractInterface": [
        14792
      ],
      "FixedPoint": [
        3659
      ],
      "Lockable": [
        3720
      ],
      "LongShortPairFinancialProductLibrary": [
        14800
      ],
      "SafeMath": [
        44033
      ],
      "SignedSafeMath": [
        44097
      ]
    },
    "id": 14615,
    "license": "AGPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 14489,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:23:73"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 14490,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14615,
        "sourceUnit": 44034,
        "src": "67:57:73",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/circleci/protocol/packages/core/contracts/financial-templates/common/financial-product-libraries/long-short-pair-libraries/LongShortPairFinancialProductLibrary.sol",
        "file": "./LongShortPairFinancialProductLibrary.sol",
        "id": 14491,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14615,
        "sourceUnit": 14801,
        "src": "126:52:73",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/circleci/protocol/packages/core/contracts/common/implementation/Lockable.sol",
        "file": "../../../../common/implementation/Lockable.sol",
        "id": 14492,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14615,
        "sourceUnit": 3721,
        "src": "179:56:73",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 14494,
              "name": "LongShortPairFinancialProductLibrary",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14800,
              "src": "1408:36:73"
            },
            "id": 14495,
            "nodeType": "InheritanceSpecifier",
            "src": "1408:36:73"
          },
          {
            "baseName": {
              "id": 14496,
              "name": "Lockable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3720,
              "src": "1446:8:73"
            },
            "id": 14497,
            "nodeType": "InheritanceSpecifier",
            "src": "1446:8:73"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 14493,
          "nodeType": "StructuredDocumentation",
          "src": "237:1110:73",
          "text": " @title Covered call Long Short Pair Financial Product Library.\n @notice Adds settlement logic to create covered call LSPs. The contract will payout a scaled amount of collateral\n depending on where the settlement price lands relative to the call's strike price. If the settlement is below the\n strike price then longs expire worthless. If the settlement is above the strike then the payout is the fraction above\n the strike defined by (expiryPrice - strikePrice) / expiryPrice. For example, consider a covered call option\n collateralized in ETH, with a strike a price of 3000.\n - If the price is less than 3000 then the each long is worth 0 and each short is worth collateralPerPair.\n - If the price is more than 3000 then each long is worth the fraction of collateralPerPair that was in the money and\n each short is worth the remaining collateralPerPair.\n - Say settlement price is 3500.  Then expiryPercentLong = (3500 - 3000) / 3500 = 0.143. The value of this 0.143 ETH\n is worth 0.143*3500=500 which is the percentage of the collateralPerPair that was above the strike price."
        },
        "fullyImplemented": true,
        "id": 14614,
        "linearizedBaseContracts": [
          14614,
          3720,
          14800
        ],
        "name": "CoveredCallLongShortPairFinancialProductLibrary",
        "nameLocation": "1357:47:73",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 14501,
            "libraryName": {
              "id": 14498,
              "name": "FixedPoint",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3659,
              "src": "1467:10:73"
            },
            "nodeType": "UsingForDirective",
            "src": "1461:41:73",
            "typeName": {
              "id": 14500,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 14499,
                "name": "FixedPoint.Unsigned",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2045,
                "src": "1482:19:73"
              },
              "referencedDeclaration": 2045,
              "src": "1482:19:73",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Unsigned_$2045_storage_ptr",
                "typeString": "struct FixedPoint.Unsigned"
              }
            }
          },
          {
            "id": 14504,
            "libraryName": {
              "id": 14502,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 44033,
              "src": "1513:8:73"
            },
            "nodeType": "UsingForDirective",
            "src": "1507:27:73",
            "typeName": {
              "id": 14503,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1526:7:73",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "6cf3f769",
            "id": 14508,
            "mutability": "mutable",
            "name": "longShortPairStrikePrices",
            "nameLocation": "1575:25:73",
            "nodeType": "VariableDeclaration",
            "scope": 14614,
            "src": "1540:60:73",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 14507,
              "keyType": {
                "id": 14505,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1548:7:73",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1540:27:73",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 14506,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1559:7:73",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 14544,
              "nodeType": "Block",
              "src": "2366:271:73",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 14525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 14520,
                                  "name": "longShortPair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14511,
                                  "src": "2410:13:73",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 14519,
                                "name": "ExpiringContractInterface",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14792,
                                "src": "2384:25:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ExpiringContractInterface_$14792_$",
                                  "typeString": "type(contract ExpiringContractInterface)"
                                }
                              },
                              "id": 14521,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2384:40:73",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ExpiringContractInterface_$14792",
                                "typeString": "contract ExpiringContractInterface"
                              }
                            },
                            "id": 14522,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "expirationTimestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14791,
                            "src": "2384:60:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 14523,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2384:62:73",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 14524,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2450:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2384:67:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964204c53502061646472657373",
                        "id": 14526,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2453:21:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9c7a742eb98e20c17de092129b9e73fedab190e4a1e2e034f7e056503d041914",
                          "typeString": "literal_string \"Invalid LSP address\""
                        },
                        "value": "Invalid LSP address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9c7a742eb98e20c17de092129b9e73fedab190e4a1e2e034f7e056503d041914",
                          "typeString": "literal_string \"Invalid LSP address\""
                        }
                      ],
                      "id": 14518,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2376:7:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2376:99:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14528,
                  "nodeType": "ExpressionStatement",
                  "src": "2376:99:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 14534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 14530,
                            "name": "longShortPairStrikePrices",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14508,
                            "src": "2493:25:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 14532,
                          "indexExpression": {
                            "id": 14531,
                            "name": "longShortPair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14511,
                            "src": "2519:13:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2493:40:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 14533,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2537:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2493:45:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506172616d657465727320616c726561647920736574",
                        "id": 14535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2540:24:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1c660ff5672050f49f4504349febd871d9a8af4dbd7a242ac305e556f78030ee",
                          "typeString": "literal_string \"Parameters already set\""
                        },
                        "value": "Parameters already set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1c660ff5672050f49f4504349febd871d9a8af4dbd7a242ac305e556f78030ee",
                          "typeString": "literal_string \"Parameters already set\""
                        }
                      ],
                      "id": 14529,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2485:7:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2485:80:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14537,
                  "nodeType": "ExpressionStatement",
                  "src": "2485:80:73"
                },
                {
                  "expression": {
                    "id": 14542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 14538,
                        "name": "longShortPairStrikePrices",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14508,
                        "src": "2576:25:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 14540,
                      "indexExpression": {
                        "id": 14539,
                        "name": "longShortPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14511,
                        "src": "2602:13:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2576:40:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 14541,
                      "name": "strikePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14513,
                      "src": "2619:11:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2576:54:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 14543,
                  "nodeType": "ExpressionStatement",
                  "src": "2576:54:73"
                }
              ]
            },
            "documentation": {
              "id": 14509,
              "nodeType": "StructuredDocumentation",
              "src": "1607:652:73",
              "text": " @notice Enables any address to set the strike price for an associated LSP.\n @param longShortPair address of the LSP.\n @param strikePrice the strike price for the covered call for the associated LSP.\n @dev Note: a) Any address can set the initial strike price b) A strike price cannot be 0.\n c) A strike price can only be set once to prevent the deployer from changing the strike after the fact.\n d) For safety, a strike price should be set before depositing any synthetic tokens in a liquidity pool.\n e) longShortPair must expose an expirationTimestamp method to validate it is correctly deployed."
            },
            "functionSelector": "71b0b360",
            "id": 14545,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 14516,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14515,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3686,
                  "src": "2351:12:73"
                },
                "nodeType": "ModifierInvocation",
                "src": "2351:14:73"
              }
            ],
            "name": "setLongShortPairParameters",
            "nameLocation": "2273:26:73",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14514,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14511,
                  "mutability": "mutable",
                  "name": "longShortPair",
                  "nameLocation": "2308:13:73",
                  "nodeType": "VariableDeclaration",
                  "scope": 14545,
                  "src": "2300:21:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14510,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2300:7:73",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14513,
                  "mutability": "mutable",
                  "name": "strikePrice",
                  "nameLocation": "2331:11:73",
                  "nodeType": "VariableDeclaration",
                  "scope": 14545,
                  "src": "2323:19:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14512,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2323:7:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2299:44:73"
            },
            "returnParameters": {
              "id": 14517,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2366:0:73"
            },
            "scope": 14614,
            "src": "2264:373:73",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              14799
            ],
            "body": {
              "id": 14612,
              "nodeType": "Block",
              "src": "3178:1076:73",
              "statements": [
                {
                  "assignments": [
                    14557
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14557,
                      "mutability": "mutable",
                      "name": "contractStrikePrice",
                      "nameLocation": "3196:19:73",
                      "nodeType": "VariableDeclaration",
                      "scope": 14612,
                      "src": "3188:27:73",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 14556,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3188:7:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14562,
                  "initialValue": {
                    "baseExpression": {
                      "id": 14558,
                      "name": "longShortPairStrikePrices",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14508,
                      "src": "3218:25:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 14561,
                    "indexExpression": {
                      "expression": {
                        "id": 14559,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "3244:3:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 14560,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3244:10:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3218:37:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3188:67:73"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 14566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 14564,
                          "name": "contractStrikePrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14557,
                          "src": "3273:19:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 14565,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3296:1:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3273:24:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506172616d73206e6f742073657420666f722063616c6c696e67204c5350",
                        "id": 14567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3299:32:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_68cc0dd0836e3d636c6d9a388054767b5f98741a714b83391a138d4c0cefe7d2",
                          "typeString": "literal_string \"Params not set for calling LSP\""
                        },
                        "value": "Params not set for calling LSP"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_68cc0dd0836e3d636c6d9a388054767b5f98741a714b83391a138d4c0cefe7d2",
                          "typeString": "literal_string \"Params not set for calling LSP\""
                        }
                      ],
                      "id": 14563,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3265:7:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3265:67:73",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14569,
                  "nodeType": "ExpressionStatement",
                  "src": "3265:67:73"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 14579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "id": 14572,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 14570,
                        "name": "expiryPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14548,
                        "src": "3561:11:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 14571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3575:1:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "3561:15:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 14578,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 14575,
                            "name": "expiryPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14548,
                            "src": "3588:11:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          ],
                          "id": 14574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3580:7:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 14573,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "3580:7:73",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 14576,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3580:20:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 14577,
                        "name": "contractStrikePrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14557,
                        "src": "3603:19:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3580:42:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3561:61:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 14586,
                  "nodeType": "IfStatement",
                  "src": "3557:125:73",
                  "trueBody": {
                    "expression": {
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 14582,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3671:1:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "expression": {
                            "id": 14580,
                            "name": "FixedPoint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3659,
                            "src": "3643:10:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_FixedPoint_$3659_$",
                              "typeString": "type(library FixedPoint)"
                            }
                          },
                          "id": 14581,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "fromUnscaledUint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2062,
                          "src": "3643:27:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_Unsigned_$2045_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (struct FixedPoint.Unsigned memory)"
                          }
                        },
                        "id": 14583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3643:30:73",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Unsigned_$2045_memory_ptr",
                          "typeString": "struct FixedPoint.Unsigned memory"
                        }
                      },
                      "id": 14584,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rawValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2044,
                      "src": "3643:39:73",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 14555,
                    "id": 14585,
                    "nodeType": "Return",
                    "src": "3636:46:73"
                  }
                },
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 14606,
                                  "name": "expiryPrice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14548,
                                  "src": "4207:11:73",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                ],
                                "id": 14605,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4199:7:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 14604,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4199:7:73",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 14607,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4199:20:73",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 14602,
                              "name": "FixedPoint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3659,
                              "src": "4179:10:73",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_FixedPoint_$3659_$",
                                "typeString": "type(library FixedPoint)"
                              }
                            },
                            "id": 14603,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Unsigned",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2045,
                            "src": "4179:19:73",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Unsigned_$2045_storage_ptr_$",
                              "typeString": "type(struct FixedPoint.Unsigned storage pointer)"
                            }
                          },
                          "id": 14608,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4179:41:73",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Unsigned_$2045_memory_ptr",
                            "typeString": "struct FixedPoint.Unsigned memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Unsigned_$2045_memory_ptr",
                            "typeString": "struct FixedPoint.Unsigned memory"
                          }
                        ],
                        "expression": {
                          "components": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 14597,
                                      "name": "contractStrikePrice",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 14557,
                                      "src": "4135:19:73",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 14595,
                                      "name": "FixedPoint",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3659,
                                      "src": "4115:10:73",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_FixedPoint_$3659_$",
                                        "typeString": "type(library FixedPoint)"
                                      }
                                    },
                                    "id": 14596,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "Unsigned",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2045,
                                    "src": "4115:19:73",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_struct$_Unsigned_$2045_storage_ptr_$",
                                      "typeString": "type(struct FixedPoint.Unsigned storage pointer)"
                                    }
                                  },
                                  "id": 14598,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "structConstructorCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4115:40:73",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Unsigned_$2045_memory_ptr",
                                    "typeString": "struct FixedPoint.Unsigned memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_struct$_Unsigned_$2045_memory_ptr",
                                    "typeString": "struct FixedPoint.Unsigned memory"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 14591,
                                          "name": "expiryPrice",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 14548,
                                          "src": "4097:11:73",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_int256",
                                            "typeString": "int256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_int256",
                                            "typeString": "int256"
                                          }
                                        ],
                                        "id": 14590,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "4089:7:73",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint256_$",
                                          "typeString": "type(uint256)"
                                        },
                                        "typeName": {
                                          "id": 14589,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "4089:7:73",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 14592,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4089:20:73",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 14587,
                                      "name": "FixedPoint",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 3659,
                                      "src": "4069:10:73",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_FixedPoint_$3659_$",
                                        "typeString": "type(library FixedPoint)"
                                      }
                                    },
                                    "id": 14588,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "Unsigned",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2045,
                                    "src": "4069:19:73",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_struct$_Unsigned_$2045_storage_ptr_$",
                                      "typeString": "type(struct FixedPoint.Unsigned storage pointer)"
                                    }
                                  },
                                  "id": 14593,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "structConstructorCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4069:41:73",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Unsigned_$2045_memory_ptr",
                                    "typeString": "struct FixedPoint.Unsigned memory"
                                  }
                                },
                                "id": 14594,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sub",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2449,
                                "src": "4069:45:73",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_struct$_Unsigned_$2045_memory_ptr_$_t_struct$_Unsigned_$2045_memory_ptr_$returns$_t_struct$_Unsigned_$2045_memory_ptr_$bound_to$_t_struct$_Unsigned_$2045_memory_ptr_$",
                                  "typeString": "function (struct FixedPoint.Unsigned memory,struct FixedPoint.Unsigned memory) pure returns (struct FixedPoint.Unsigned memory)"
                                }
                              },
                              "id": 14599,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4069:87:73",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Unsigned_$2045_memory_ptr",
                                "typeString": "struct FixedPoint.Unsigned memory"
                              }
                            }
                          ],
                          "id": 14600,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4068:89:73",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Unsigned_$2045_memory_ptr",
                            "typeString": "struct FixedPoint.Unsigned memory"
                          }
                        },
                        "id": 14601,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2635,
                        "src": "4068:110:73",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_struct$_Unsigned_$2045_memory_ptr_$_t_struct$_Unsigned_$2045_memory_ptr_$returns$_t_struct$_Unsigned_$2045_memory_ptr_$bound_to$_t_struct$_Unsigned_$2045_memory_ptr_$",
                          "typeString": "function (struct FixedPoint.Unsigned memory,struct FixedPoint.Unsigned memory) pure returns (struct FixedPoint.Unsigned memory)"
                        }
                      },
                      "id": 14609,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4068:153:73",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Unsigned_$2045_memory_ptr",
                        "typeString": "struct FixedPoint.Unsigned memory"
                      }
                    },
                    "id": 14610,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "rawValue",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 2044,
                    "src": "4068:179:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 14555,
                  "id": 14611,
                  "nodeType": "Return",
                  "src": "4049:198:73"
                }
              ]
            },
            "documentation": {
              "id": 14546,
              "nodeType": "StructuredDocumentation",
              "src": "2643:366:73",
              "text": " @notice Returns a number between 0 and 1e18 to indicate how much collateral each long and short token are entitled\n to per collateralPerPair.\n @param expiryPrice price from the optimistic oracle for the LSP price identifier.\n @return expiryPercentLong to indicate how much collateral should be sent between long and short tokens."
            },
            "functionSelector": "2da52361",
            "id": 14613,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 14552,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14551,
                  "name": "nonReentrantView",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3694,
                  "src": "3129:16:73"
                },
                "nodeType": "ModifierInvocation",
                "src": "3129:18:73"
              }
            ],
            "name": "percentageLongCollateralAtExpiry",
            "nameLocation": "3023:32:73",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 14550,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3112:8:73"
            },
            "parameters": {
              "id": 14549,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14548,
                  "mutability": "mutable",
                  "name": "expiryPrice",
                  "nameLocation": "3063:11:73",
                  "nodeType": "VariableDeclaration",
                  "scope": 14613,
                  "src": "3056:18:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 14547,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3056:6:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3055:20:73"
            },
            "returnParameters": {
              "id": 14555,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14554,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14613,
                  "src": "3165:7:73",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14553,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3165:7:73",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3164:9:73"
            },
            "scope": 14614,
            "src": "3014:1240:73",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 14615,
        "src": "1348:2908:73",
        "usedErrors": []
      }
    ],
    "src": "42:4215:73"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {
    "1": {
      "events": {},
      "links": {},
      "address": "0x37780b718c19F7f06D41f3c68C3A78ECB2Ca191f",
      "transactionHash": ""
    },
    "42": {
      "events": {},
      "links": {},
      "address": "0x914F9acDfB2231912AA43d30509A5Db27fdeD3CE",
      "transactionHash": ""
    },
    "137": {
      "events": {},
      "links": {},
      "address": "0x3F62D7F4Be7671cc93BCDFE7A3Dd900FEC4b5025",
      "transactionHash": ""
    },
    "80001": {
      "events": {},
      "links": {},
      "address": "0xc6aFa90Ebf5F7eC9Ce0409a0B2bF7b0E6E81b5F6",
      "transactionHash": ""
    }
  },
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-07-16T20:27:09.754Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "percentageLongCollateralAtExpiry(int256)": {
        "params": {
          "expiryPrice": "price from the optimistic oracle for the LSP price identifier."
        },
        "returns": {
          "_0": "expiryPercentLong to indicate how much collateral should be sent between long and short tokens."
        }
      },
      "setLongShortPairParameters(address,uint256)": {
        "details": "Note: a) Any address can set the initial strike price b) A strike price cannot be 0. c) A strike price can only be set once to prevent the deployer from changing the strike after the fact. d) For safety, a strike price should be set before depositing any synthetic tokens in a liquidity pool. e) longShortPair must expose an expirationTimestamp method to validate it is correctly deployed.",
        "params": {
          "longShortPair": "address of the LSP.",
          "strikePrice": "the strike price for the covered call for the associated LSP."
        }
      }
    },
    "title": "Covered call Long Short Pair Financial Product Library.",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "percentageLongCollateralAtExpiry(int256)": {
        "notice": "Returns a number between 0 and 1e18 to indicate how much collateral each long and short token are entitled to per collateralPerPair."
      },
      "setLongShortPairParameters(address,uint256)": {
        "notice": "Enables any address to set the strike price for an associated LSP."
      }
    },
    "notice": "Adds settlement logic to create covered call LSPs. The contract will payout a scaled amount of collateral depending on where the settlement price lands relative to the call's strike price. If the settlement is below the strike price then longs expire worthless. If the settlement is above the strike then the payout is the fraction above the strike defined by (expiryPrice - strikePrice) / expiryPrice. For example, consider a covered call option collateralized in ETH, with a strike a price of 3000. - If the price is less than 3000 then the each long is worth 0 and each short is worth collateralPerPair. - If the price is more than 3000 then each long is worth the fraction of collateralPerPair that was in the money and each short is worth the remaining collateralPerPair. - Say settlement price is 3500.  Then expiryPercentLong = (3500 - 3000) / 3500 = 0.143. The value of this 0.143 ETH is worth 0.143*3500=500 which is the percentage of the collateralPerPair that was above the strike price.",
    "version": 1
  }
}