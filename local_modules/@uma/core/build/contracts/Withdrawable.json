{
  "contractName": "Withdrawable",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newMember",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "manager",
          "type": "address"
        }
      ],
      "name": "AddedSharedMember",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldMember",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "manager",
          "type": "address"
        }
      ],
      "name": "RemovedSharedMember",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newMember",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "manager",
          "type": "address"
        }
      ],
      "name": "ResetExclusiveMember",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "newMember",
          "type": "address"
        }
      ],
      "name": "addMember",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        }
      ],
      "name": "getMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "memberToCheck",
          "type": "address"
        }
      ],
      "name": "holdsRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "memberToRemove",
          "type": "address"
        }
      ],
      "name": "removeMember",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        }
      ],
      "name": "renounceMembership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "newMember",
          "type": "address"
        }
      ],
      "name": "resetMember",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "erc20Address",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawErc20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newMember\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"AddedSharedMember\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldMember\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"RemovedSharedMember\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newMember\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"ResetExclusiveMember\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newMember\",\"type\":\"address\"}],\"name\":\"addMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"}],\"name\":\"getMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"memberToCheck\",\"type\":\"address\"}],\"name\":\"holdsRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"memberToRemove\",\"type\":\"address\"}],\"name\":\"removeMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"}],\"name\":\"renounceMembership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newMember\",\"type\":\"address\"}],\"name\":\"resetMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc20Address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawErc20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addMember(uint256,address)\":{\"details\":\"Reverts if `roleId` does not represent an initialized, SharedRole or if the caller is not a member of the managing role for `roleId`.\",\"params\":{\"newMember\":\"the new SharedRole member.\",\"roleId\":\"the SharedRole membership to modify.\"}},\"getMember(uint256)\":{\"details\":\"Reverts if `roleId` does not represent an initialized, exclusive role.\",\"params\":{\"roleId\":\"the ExclusiveRole membership to check.\"},\"returns\":{\"_0\":\"the address of the current ExclusiveRole member.\"}},\"holdsRole(uint256,address)\":{\"details\":\"Reverts if roleId does not correspond to an initialized role.\",\"params\":{\"memberToCheck\":\"the address to check.\",\"roleId\":\"the Role to check.\"},\"returns\":{\"_0\":\"True if `memberToCheck` is a member of `roleId`.\"}},\"removeMember(uint256,address)\":{\"details\":\"Reverts if `roleId` does not represent an initialized, SharedRole or if the caller is not a member of the managing role for `roleId`.\",\"params\":{\"memberToRemove\":\"the current SharedRole member to remove.\",\"roleId\":\"the SharedRole membership to modify.\"}},\"renounceMembership(uint256)\":{\"details\":\"Reverts if the caller is not a member of the role for `roleId` or if `roleId` is not an initialized, SharedRole.\",\"params\":{\"roleId\":\"the SharedRole membership to modify.\"}},\"resetMember(uint256,address)\":{\"details\":\"Reverts if the caller is not a member of the managing role for `roleId` or if `roleId` is not an initialized, ExclusiveRole.\",\"params\":{\"newMember\":\"the new ExclusiveRole member.\",\"roleId\":\"the ExclusiveRole membership to modify.\"}},\"withdrawErc20(address,uint256)\":{\"params\":{\"amount\":\"amount of tokens to withdraw.\",\"erc20Address\":\"ERC20 token to withdraw.\"}}},\"title\":\"Base contract that allows a specific role to withdraw any ETH and/or ERC20 tokens that the contract holds.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addMember(uint256,address)\":{\"notice\":\"Adds `newMember` to the shared role, `roleId`.\"},\"getMember(uint256)\":{\"notice\":\"Gets the current holder of the exclusive role, `roleId`.\"},\"holdsRole(uint256,address)\":{\"notice\":\"Whether `memberToCheck` is a member of roleId.\"},\"removeMember(uint256,address)\":{\"notice\":\"Removes `memberToRemove` from the shared role, `roleId`.\"},\"renounceMembership(uint256)\":{\"notice\":\"Removes caller from the role, `roleId`.\"},\"resetMember(uint256,address)\":{\"notice\":\"Changes the exclusive role holder of `roleId` to `newMember`.\"},\"withdraw(uint256)\":{\"notice\":\"Withdraws ETH from the contract.\"},\"withdrawErc20(address,uint256)\":{\"notice\":\"Withdraws ERC20 tokens from the contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/circleci/protocol/packages/core/contracts/common/implementation/Withdrawable.sol\":\"Withdrawable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":199},\"remappings\":[]},\"sources\":{\"/home/circleci/protocol/packages/core/contracts/common/implementation/MultiRole.sol\":{\"keccak256\":\"0x134c5a2f847832705be631f2b4eb2a3e23a91a2f0e63560abb481e85eeebfae6\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://f1267c6ad560d1eb896575919ecca13759bf50bb82d1215e03fc1f0424ec37a6\",\"dweb:/ipfs/QmXewGxpSmSMGYmT6ZUyxCVzy2cybxicbnyCn8w87m5mo3\"]},\"/home/circleci/protocol/packages/core/contracts/common/implementation/Withdrawable.sol\":{\"keccak256\":\"0x0cffa58907ae0c4b2948f225723e5f4346276c0f1484452fb5c78fc90b79c630\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://e832b3f09aa18ef687a34ffc754f9e9d1200c63da8f1550e46111a44a2b2433d\",\"dweb:/ipfs/QmdqUvbxXtea2w3msKp9PRAhxs3YsJCWX31bWRHSuq54Vr\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x99f5c21018d796db7833a2100bb0e7411999e248a3c950fb526eee5d2bf47cb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b31b80dd57f8c28320b01fa4f3ed98ac1aa678f61846c1db2771c996b77a9451\",\"dweb:/ipfs/QmcT2Di5L9t82A9XdYDZ4tWMEPGFVFazKDwC2Vrd135AA3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a4c96fafff76deda5697c3c5c98cade6e6e1b178254544c106bf360c079ce4e\",\"dweb:/ipfs/QmXmxubE3jnatFgZuN8ay1VV6hZ8WRmhvUjNpeVjki15HX\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "/**\n * Withdrawable contract.\n */\n\n// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\nimport \"./MultiRole.sol\";\n\n/**\n * @title Base contract that allows a specific role to withdraw any ETH and/or ERC20 tokens that the contract holds.\n */\nabstract contract Withdrawable is MultiRole {\n    using SafeERC20 for IERC20;\n\n    uint256 private roleId;\n\n    /**\n     * @notice Withdraws ETH from the contract.\n     */\n    function withdraw(uint256 amount) external onlyRoleHolder(roleId) {\n        Address.sendValue(payable(msg.sender), amount);\n    }\n\n    /**\n     * @notice Withdraws ERC20 tokens from the contract.\n     * @param erc20Address ERC20 token to withdraw.\n     * @param amount amount of tokens to withdraw.\n     */\n    function withdrawErc20(address erc20Address, uint256 amount) external onlyRoleHolder(roleId) {\n        IERC20 erc20 = IERC20(erc20Address);\n        erc20.safeTransfer(msg.sender, amount);\n    }\n\n    /**\n     * @notice Internal method that allows derived contracts to create a role for withdrawal.\n     * @dev Either this method or `_setWithdrawRole` must be called by the derived class for this contract to function\n     * properly.\n     * @param newRoleId ID corresponding to role whose members can withdraw.\n     * @param managingRoleId ID corresponding to managing role who can modify the withdrawable role's membership.\n     * @param withdrawerAddress new manager of withdrawable role.\n     */\n    function _createWithdrawRole(\n        uint256 newRoleId,\n        uint256 managingRoleId,\n        address withdrawerAddress\n    ) internal {\n        roleId = newRoleId;\n        _createExclusiveRole(newRoleId, managingRoleId, withdrawerAddress);\n    }\n\n    /**\n     * @notice Internal method that allows derived contracts to choose the role for withdrawal.\n     * @dev The role `setRoleId` must exist. Either this method or `_createWithdrawRole` must be\n     * called by the derived class for this contract to function properly.\n     * @param setRoleId ID corresponding to role whose members can withdraw.\n     */\n    function _setWithdrawRole(uint256 setRoleId) internal onlyValidRole(setRoleId) {\n        roleId = setRoleId;\n    }\n}\n",
  "sourcePath": "/home/circleci/protocol/packages/core/contracts/common/implementation/Withdrawable.sol",
  "ast": {
    "absolutePath": "/home/circleci/protocol/packages/core/contracts/common/implementation/Withdrawable.sol",
    "exportedSymbols": {
      "Address": [
        42712
      ],
      "Exclusive": [
        3793
      ],
      "IERC20": [
        41847
      ],
      "MultiRole": [
        4345
      ],
      "SafeERC20": [
        42416
      ],
      "Shared": [
        3889
      ],
      "Withdrawable": [
        4604
      ]
    },
    "id": 4605,
    "license": "AGPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4507,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "77:23:16"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "id": 4508,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4605,
        "sourceUnit": 42713,
        "src": "102:51:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 4509,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4605,
        "sourceUnit": 41848,
        "src": "154:56:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 4510,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4605,
        "sourceUnit": 42417,
        "src": "211:65:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/circleci/protocol/packages/core/contracts/common/implementation/MultiRole.sol",
        "file": "./MultiRole.sol",
        "id": 4511,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4605,
        "sourceUnit": 4346,
        "src": "278:25:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 4513,
              "name": "MultiRole",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4345,
              "src": "464:9:16"
            },
            "id": 4514,
            "nodeType": "InheritanceSpecifier",
            "src": "464:9:16"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 4512,
          "nodeType": "StructuredDocumentation",
          "src": "305:124:16",
          "text": " @title Base contract that allows a specific role to withdraw any ETH and/or ERC20 tokens that the contract holds."
        },
        "fullyImplemented": true,
        "id": 4604,
        "linearizedBaseContracts": [
          4604,
          4345
        ],
        "name": "Withdrawable",
        "nameLocation": "448:12:16",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 4518,
            "libraryName": {
              "id": 4515,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 42416,
              "src": "486:9:16"
            },
            "nodeType": "UsingForDirective",
            "src": "480:27:16",
            "typeName": {
              "id": 4517,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4516,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 41847,
                "src": "500:6:16"
              },
              "referencedDeclaration": 41847,
              "src": "500:6:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$41847",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": false,
            "id": 4520,
            "mutability": "mutable",
            "name": "roleId",
            "nameLocation": "529:6:16",
            "nodeType": "VariableDeclaration",
            "scope": 4604,
            "src": "513:22:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4519,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "513:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 4540,
              "nodeType": "Block",
              "src": "672:63:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 4534,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "708:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 4535,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "708:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4533,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "700:8:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 4532,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "700:8:16",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "700:19:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 4537,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4523,
                        "src": "721:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4529,
                        "name": "Address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42712,
                        "src": "682:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Address_$42712_$",
                          "typeString": "type(library Address)"
                        }
                      },
                      "id": 4531,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sendValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42470,
                      "src": "682:17:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$",
                        "typeString": "function (address payable,uint256)"
                      }
                    },
                    "id": 4538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "682:46:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4539,
                  "nodeType": "ExpressionStatement",
                  "src": "682:46:16"
                }
              ]
            },
            "documentation": {
              "id": 4521,
              "nodeType": "StructuredDocumentation",
              "src": "542:59:16",
              "text": " @notice Withdraws ETH from the contract."
            },
            "functionSelector": "2e1a7d4d",
            "id": 4541,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 4526,
                    "name": "roleId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4520,
                    "src": "664:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 4527,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4525,
                  "name": "onlyRoleHolder",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3959,
                  "src": "649:14:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "649:22:16"
              }
            ],
            "name": "withdraw",
            "nameLocation": "615:8:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4524,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4523,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "632:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 4541,
                  "src": "624:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4522,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "624:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "623:16:16"
            },
            "returnParameters": {
              "id": 4528,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "672:0:16"
            },
            "scope": 4604,
            "src": "606:129:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4567,
              "nodeType": "Block",
              "src": "1010:100:16",
              "statements": [
                {
                  "assignments": [
                    4554
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4554,
                      "mutability": "mutable",
                      "name": "erc20",
                      "nameLocation": "1027:5:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 4567,
                      "src": "1020:12:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$41847",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 4553,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4552,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 41847,
                          "src": "1020:6:16"
                        },
                        "referencedDeclaration": 41847,
                        "src": "1020:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$41847",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4558,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4556,
                        "name": "erc20Address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4544,
                        "src": "1042:12:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4555,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41847,
                      "src": "1035:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$41847_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 4557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1035:20:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$41847",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1020:35:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 4562,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1084:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1084:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4564,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4546,
                        "src": "1096:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4559,
                        "name": "erc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4554,
                        "src": "1065:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$41847",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 4561,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42223,
                      "src": "1065:18:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$41847_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$41847_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 4565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1065:38:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4566,
                  "nodeType": "ExpressionStatement",
                  "src": "1065:38:16"
                }
              ]
            },
            "documentation": {
              "id": 4542,
              "nodeType": "StructuredDocumentation",
              "src": "741:171:16",
              "text": " @notice Withdraws ERC20 tokens from the contract.\n @param erc20Address ERC20 token to withdraw.\n @param amount amount of tokens to withdraw."
            },
            "functionSelector": "bd1f4b52",
            "id": 4568,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 4549,
                    "name": "roleId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4520,
                    "src": "1002:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 4550,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4548,
                  "name": "onlyRoleHolder",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3959,
                  "src": "987:14:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "987:22:16"
              }
            ],
            "name": "withdrawErc20",
            "nameLocation": "926:13:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4547,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4544,
                  "mutability": "mutable",
                  "name": "erc20Address",
                  "nameLocation": "948:12:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 4568,
                  "src": "940:20:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4543,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "940:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4546,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "970:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 4568,
                  "src": "962:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4545,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "962:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "939:38:16"
            },
            "returnParameters": {
              "id": 4551,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1010:0:16"
            },
            "scope": 4604,
            "src": "917:193:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4588,
              "nodeType": "Block",
              "src": "1757:111:16",
              "statements": [
                {
                  "expression": {
                    "id": 4580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4578,
                      "name": "roleId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4520,
                      "src": "1767:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4579,
                      "name": "newRoleId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4571,
                      "src": "1776:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1767:18:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4581,
                  "nodeType": "ExpressionStatement",
                  "src": "1767:18:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4583,
                        "name": "newRoleId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4571,
                        "src": "1816:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4584,
                        "name": "managingRoleId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4573,
                        "src": "1827:14:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4585,
                        "name": "withdrawerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4575,
                        "src": "1843:17:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4582,
                      "name": "_createExclusiveRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4344,
                      "src": "1795:20:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256,address)"
                      }
                    },
                    "id": 4586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1795:66:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4587,
                  "nodeType": "ExpressionStatement",
                  "src": "1795:66:16"
                }
              ]
            },
            "documentation": {
              "id": 4569,
              "nodeType": "StructuredDocumentation",
              "src": "1116:498:16",
              "text": " @notice Internal method that allows derived contracts to create a role for withdrawal.\n @dev Either this method or `_setWithdrawRole` must be called by the derived class for this contract to function\n properly.\n @param newRoleId ID corresponding to role whose members can withdraw.\n @param managingRoleId ID corresponding to managing role who can modify the withdrawable role's membership.\n @param withdrawerAddress new manager of withdrawable role."
            },
            "id": 4589,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_createWithdrawRole",
            "nameLocation": "1628:19:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4576,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4571,
                  "mutability": "mutable",
                  "name": "newRoleId",
                  "nameLocation": "1665:9:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 4589,
                  "src": "1657:17:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4570,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1657:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4573,
                  "mutability": "mutable",
                  "name": "managingRoleId",
                  "nameLocation": "1692:14:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 4589,
                  "src": "1684:22:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4572,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1684:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4575,
                  "mutability": "mutable",
                  "name": "withdrawerAddress",
                  "nameLocation": "1724:17:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 4589,
                  "src": "1716:25:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4574,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1716:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1647:100:16"
            },
            "returnParameters": {
              "id": 4577,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1757:0:16"
            },
            "scope": 4604,
            "src": "1619:249:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4602,
              "nodeType": "Block",
              "src": "2314:35:16",
              "statements": [
                {
                  "expression": {
                    "id": 4600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4598,
                      "name": "roleId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4520,
                      "src": "2324:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4599,
                      "name": "setRoleId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4592,
                      "src": "2333:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2324:18:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4601,
                  "nodeType": "ExpressionStatement",
                  "src": "2324:18:16"
                }
              ]
            },
            "documentation": {
              "id": 4590,
              "nodeType": "StructuredDocumentation",
              "src": "1874:356:16",
              "text": " @notice Internal method that allows derived contracts to choose the role for withdrawal.\n @dev The role `setRoleId` must exist. Either this method or `_createWithdrawRole` must be\n called by the derived class for this contract to function properly.\n @param setRoleId ID corresponding to role whose members can withdraw."
            },
            "id": 4603,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 4595,
                    "name": "setRoleId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4592,
                    "src": "2303:9:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 4596,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4594,
                  "name": "onlyValidRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4219,
                  "src": "2289:13:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "2289:24:16"
              }
            ],
            "name": "_setWithdrawRole",
            "nameLocation": "2244:16:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4593,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4592,
                  "mutability": "mutable",
                  "name": "setRoleId",
                  "nameLocation": "2269:9:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 4603,
                  "src": "2261:17:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4591,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2261:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2260:19:16"
            },
            "returnParameters": {
              "id": 4597,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2314:0:16"
            },
            "scope": 4604,
            "src": "2235:114:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 4605,
        "src": "430:1921:16",
        "usedErrors": []
      }
    ],
    "src": "77:2275:16"
  },
  "legacyAST": {
    "absolutePath": "/home/circleci/protocol/packages/core/contracts/common/implementation/Withdrawable.sol",
    "exportedSymbols": {
      "Address": [
        42712
      ],
      "Exclusive": [
        3793
      ],
      "IERC20": [
        41847
      ],
      "MultiRole": [
        4345
      ],
      "SafeERC20": [
        42416
      ],
      "Shared": [
        3889
      ],
      "Withdrawable": [
        4604
      ]
    },
    "id": 4605,
    "license": "AGPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4507,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "77:23:16"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "id": 4508,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4605,
        "sourceUnit": 42713,
        "src": "102:51:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 4509,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4605,
        "sourceUnit": 41848,
        "src": "154:56:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 4510,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4605,
        "sourceUnit": 42417,
        "src": "211:65:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/circleci/protocol/packages/core/contracts/common/implementation/MultiRole.sol",
        "file": "./MultiRole.sol",
        "id": 4511,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4605,
        "sourceUnit": 4346,
        "src": "278:25:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 4513,
              "name": "MultiRole",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4345,
              "src": "464:9:16"
            },
            "id": 4514,
            "nodeType": "InheritanceSpecifier",
            "src": "464:9:16"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 4512,
          "nodeType": "StructuredDocumentation",
          "src": "305:124:16",
          "text": " @title Base contract that allows a specific role to withdraw any ETH and/or ERC20 tokens that the contract holds."
        },
        "fullyImplemented": true,
        "id": 4604,
        "linearizedBaseContracts": [
          4604,
          4345
        ],
        "name": "Withdrawable",
        "nameLocation": "448:12:16",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 4518,
            "libraryName": {
              "id": 4515,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 42416,
              "src": "486:9:16"
            },
            "nodeType": "UsingForDirective",
            "src": "480:27:16",
            "typeName": {
              "id": 4517,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 4516,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 41847,
                "src": "500:6:16"
              },
              "referencedDeclaration": 41847,
              "src": "500:6:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$41847",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": false,
            "id": 4520,
            "mutability": "mutable",
            "name": "roleId",
            "nameLocation": "529:6:16",
            "nodeType": "VariableDeclaration",
            "scope": 4604,
            "src": "513:22:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4519,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "513:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 4540,
              "nodeType": "Block",
              "src": "672:63:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 4534,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "708:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 4535,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "708:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4533,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "700:8:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 4532,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "700:8:16",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "700:19:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 4537,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4523,
                        "src": "721:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4529,
                        "name": "Address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42712,
                        "src": "682:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Address_$42712_$",
                          "typeString": "type(library Address)"
                        }
                      },
                      "id": 4531,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sendValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42470,
                      "src": "682:17:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$",
                        "typeString": "function (address payable,uint256)"
                      }
                    },
                    "id": 4538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "682:46:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4539,
                  "nodeType": "ExpressionStatement",
                  "src": "682:46:16"
                }
              ]
            },
            "documentation": {
              "id": 4521,
              "nodeType": "StructuredDocumentation",
              "src": "542:59:16",
              "text": " @notice Withdraws ETH from the contract."
            },
            "functionSelector": "2e1a7d4d",
            "id": 4541,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 4526,
                    "name": "roleId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4520,
                    "src": "664:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 4527,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4525,
                  "name": "onlyRoleHolder",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3959,
                  "src": "649:14:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "649:22:16"
              }
            ],
            "name": "withdraw",
            "nameLocation": "615:8:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4524,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4523,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "632:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 4541,
                  "src": "624:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4522,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "624:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "623:16:16"
            },
            "returnParameters": {
              "id": 4528,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "672:0:16"
            },
            "scope": 4604,
            "src": "606:129:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4567,
              "nodeType": "Block",
              "src": "1010:100:16",
              "statements": [
                {
                  "assignments": [
                    4554
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4554,
                      "mutability": "mutable",
                      "name": "erc20",
                      "nameLocation": "1027:5:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 4567,
                      "src": "1020:12:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$41847",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 4553,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 4552,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 41847,
                          "src": "1020:6:16"
                        },
                        "referencedDeclaration": 41847,
                        "src": "1020:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$41847",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4558,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4556,
                        "name": "erc20Address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4544,
                        "src": "1042:12:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4555,
                      "name": "IERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41847,
                      "src": "1035:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IERC20_$41847_$",
                        "typeString": "type(contract IERC20)"
                      }
                    },
                    "id": 4557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1035:20:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$41847",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1020:35:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 4562,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1084:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1084:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4564,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4546,
                        "src": "1096:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 4559,
                        "name": "erc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4554,
                        "src": "1065:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$41847",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 4561,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42223,
                      "src": "1065:18:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$41847_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$41847_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 4565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1065:38:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4566,
                  "nodeType": "ExpressionStatement",
                  "src": "1065:38:16"
                }
              ]
            },
            "documentation": {
              "id": 4542,
              "nodeType": "StructuredDocumentation",
              "src": "741:171:16",
              "text": " @notice Withdraws ERC20 tokens from the contract.\n @param erc20Address ERC20 token to withdraw.\n @param amount amount of tokens to withdraw."
            },
            "functionSelector": "bd1f4b52",
            "id": 4568,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 4549,
                    "name": "roleId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4520,
                    "src": "1002:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 4550,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4548,
                  "name": "onlyRoleHolder",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3959,
                  "src": "987:14:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "987:22:16"
              }
            ],
            "name": "withdrawErc20",
            "nameLocation": "926:13:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4547,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4544,
                  "mutability": "mutable",
                  "name": "erc20Address",
                  "nameLocation": "948:12:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 4568,
                  "src": "940:20:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4543,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "940:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4546,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "970:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 4568,
                  "src": "962:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4545,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "962:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "939:38:16"
            },
            "returnParameters": {
              "id": 4551,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1010:0:16"
            },
            "scope": 4604,
            "src": "917:193:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4588,
              "nodeType": "Block",
              "src": "1757:111:16",
              "statements": [
                {
                  "expression": {
                    "id": 4580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4578,
                      "name": "roleId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4520,
                      "src": "1767:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4579,
                      "name": "newRoleId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4571,
                      "src": "1776:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1767:18:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4581,
                  "nodeType": "ExpressionStatement",
                  "src": "1767:18:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4583,
                        "name": "newRoleId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4571,
                        "src": "1816:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4584,
                        "name": "managingRoleId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4573,
                        "src": "1827:14:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4585,
                        "name": "withdrawerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4575,
                        "src": "1843:17:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 4582,
                      "name": "_createExclusiveRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4344,
                      "src": "1795:20:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256,address)"
                      }
                    },
                    "id": 4586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1795:66:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4587,
                  "nodeType": "ExpressionStatement",
                  "src": "1795:66:16"
                }
              ]
            },
            "documentation": {
              "id": 4569,
              "nodeType": "StructuredDocumentation",
              "src": "1116:498:16",
              "text": " @notice Internal method that allows derived contracts to create a role for withdrawal.\n @dev Either this method or `_setWithdrawRole` must be called by the derived class for this contract to function\n properly.\n @param newRoleId ID corresponding to role whose members can withdraw.\n @param managingRoleId ID corresponding to managing role who can modify the withdrawable role's membership.\n @param withdrawerAddress new manager of withdrawable role."
            },
            "id": 4589,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_createWithdrawRole",
            "nameLocation": "1628:19:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4576,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4571,
                  "mutability": "mutable",
                  "name": "newRoleId",
                  "nameLocation": "1665:9:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 4589,
                  "src": "1657:17:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4570,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1657:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4573,
                  "mutability": "mutable",
                  "name": "managingRoleId",
                  "nameLocation": "1692:14:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 4589,
                  "src": "1684:22:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4572,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1684:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4575,
                  "mutability": "mutable",
                  "name": "withdrawerAddress",
                  "nameLocation": "1724:17:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 4589,
                  "src": "1716:25:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4574,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1716:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1647:100:16"
            },
            "returnParameters": {
              "id": 4577,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1757:0:16"
            },
            "scope": 4604,
            "src": "1619:249:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4602,
              "nodeType": "Block",
              "src": "2314:35:16",
              "statements": [
                {
                  "expression": {
                    "id": 4600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4598,
                      "name": "roleId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4520,
                      "src": "2324:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4599,
                      "name": "setRoleId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4592,
                      "src": "2333:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2324:18:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4601,
                  "nodeType": "ExpressionStatement",
                  "src": "2324:18:16"
                }
              ]
            },
            "documentation": {
              "id": 4590,
              "nodeType": "StructuredDocumentation",
              "src": "1874:356:16",
              "text": " @notice Internal method that allows derived contracts to choose the role for withdrawal.\n @dev The role `setRoleId` must exist. Either this method or `_createWithdrawRole` must be\n called by the derived class for this contract to function properly.\n @param setRoleId ID corresponding to role whose members can withdraw."
            },
            "id": 4603,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 4595,
                    "name": "setRoleId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4592,
                    "src": "2303:9:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 4596,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4594,
                  "name": "onlyValidRole",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4219,
                  "src": "2289:13:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "2289:24:16"
              }
            ],
            "name": "_setWithdrawRole",
            "nameLocation": "2244:16:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4593,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4592,
                  "mutability": "mutable",
                  "name": "setRoleId",
                  "nameLocation": "2269:9:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 4603,
                  "src": "2261:17:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4591,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2261:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2260:19:16"
            },
            "returnParameters": {
              "id": 4597,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2314:0:16"
            },
            "scope": 4604,
            "src": "2235:114:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 4605,
        "src": "430:1921:16",
        "usedErrors": []
      }
    ],
    "src": "77:2275:16"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-07-16T20:27:09.555Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addMember(uint256,address)": {
        "details": "Reverts if `roleId` does not represent an initialized, SharedRole or if the caller is not a member of the managing role for `roleId`.",
        "params": {
          "newMember": "the new SharedRole member.",
          "roleId": "the SharedRole membership to modify."
        }
      },
      "getMember(uint256)": {
        "details": "Reverts if `roleId` does not represent an initialized, exclusive role.",
        "params": {
          "roleId": "the ExclusiveRole membership to check."
        },
        "returns": {
          "_0": "the address of the current ExclusiveRole member."
        }
      },
      "holdsRole(uint256,address)": {
        "details": "Reverts if roleId does not correspond to an initialized role.",
        "params": {
          "memberToCheck": "the address to check.",
          "roleId": "the Role to check."
        },
        "returns": {
          "_0": "True if `memberToCheck` is a member of `roleId`."
        }
      },
      "removeMember(uint256,address)": {
        "details": "Reverts if `roleId` does not represent an initialized, SharedRole or if the caller is not a member of the managing role for `roleId`.",
        "params": {
          "memberToRemove": "the current SharedRole member to remove.",
          "roleId": "the SharedRole membership to modify."
        }
      },
      "renounceMembership(uint256)": {
        "details": "Reverts if the caller is not a member of the role for `roleId` or if `roleId` is not an initialized, SharedRole.",
        "params": {
          "roleId": "the SharedRole membership to modify."
        }
      },
      "resetMember(uint256,address)": {
        "details": "Reverts if the caller is not a member of the managing role for `roleId` or if `roleId` is not an initialized, ExclusiveRole.",
        "params": {
          "newMember": "the new ExclusiveRole member.",
          "roleId": "the ExclusiveRole membership to modify."
        }
      },
      "withdrawErc20(address,uint256)": {
        "params": {
          "amount": "amount of tokens to withdraw.",
          "erc20Address": "ERC20 token to withdraw."
        }
      }
    },
    "title": "Base contract that allows a specific role to withdraw any ETH and/or ERC20 tokens that the contract holds.",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addMember(uint256,address)": {
        "notice": "Adds `newMember` to the shared role, `roleId`."
      },
      "getMember(uint256)": {
        "notice": "Gets the current holder of the exclusive role, `roleId`."
      },
      "holdsRole(uint256,address)": {
        "notice": "Whether `memberToCheck` is a member of roleId."
      },
      "removeMember(uint256,address)": {
        "notice": "Removes `memberToRemove` from the shared role, `roleId`."
      },
      "renounceMembership(uint256)": {
        "notice": "Removes caller from the role, `roleId`."
      },
      "resetMember(uint256,address)": {
        "notice": "Changes the exclusive role holder of `roleId` to `newMember`."
      },
      "withdraw(uint256)": {
        "notice": "Withdraws ETH from the contract."
      },
      "withdrawErc20(address,uint256)": {
        "notice": "Withdraws ERC20 tokens from the contract."
      }
    },
    "version": 1
  }
}