{
  "contractName": "IERCHandler",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "resourceID",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        }
      ],
      "name": "setResource",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        }
      ],
      "name": "setBurnable",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountOrTokenID",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"setBurnable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"resourceID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"setResource\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountOrTokenID\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"ChainSafe Systems.\",\"kind\":\"dev\",\"methods\":{\"setBurnable(address)\":{\"params\":{\"contractAddress\":\"Address of contract to be used when making or executing deposits.\"}},\"setResource(bytes32,address)\":{\"params\":{\"contractAddress\":\"Address of contract to be called when a deposit is made and a deposited is executed.\",\"resourceID\":\"ResourceID to be used when making deposits.\"}},\"withdraw(address,address,uint256)\":{\"params\":{\"amountOrTokenID\":\"Either the amount of ERC20 tokens or the ERC721 token ID to release.\",\"recipient\":\"Address to release tokens to.\",\"tokenAddress\":\"Address of token contract to release.\"}}},\"title\":\"Interface to be used with handlers that support ERC20s and ERC721s.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setBurnable(address)\":{\"notice\":\"Marks {contractAddress} as mintable/burnable.\"},\"setResource(bytes32,address)\":{\"notice\":\"Correlates {resourceID} with {contractAddress}.\"},\"withdraw(address,address,uint256)\":{\"notice\":\"Used to manually release funds from ERC safes.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/circleci/protocol/packages/core/contracts/external/chainbridge/interfaces/IERCHandler.sol\":\"IERCHandler\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":199},\"remappings\":[]},\"sources\":{\"/home/circleci/protocol/packages/core/contracts/external/chainbridge/interfaces/IERCHandler.sol\":{\"keccak256\":\"0x4cb963987737ffcf36cfb2c0f9e035854f42f3868f0c55f81c4d447be80b7f16\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://608ec8330d29520250c6b6c05689512c00941998c88c39d46d2265666ed3161f\",\"dweb:/ipfs/QmWvz6UKvHoG6mXtE6uEDgJJZy2qedh7vjSCeFfPFzS1n1\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity ^0.8.0;\n\n/**\n    @title Interface to be used with handlers that support ERC20s and ERC721s.\n    @author ChainSafe Systems.\n */\ninterface IERCHandler {\n    /**\n        @notice Correlates {resourceID} with {contractAddress}.\n        @param resourceID ResourceID to be used when making deposits.\n        @param contractAddress Address of contract to be called when a deposit is made and a deposited is executed.\n     */\n    function setResource(bytes32 resourceID, address contractAddress) external;\n\n    /**\n        @notice Marks {contractAddress} as mintable/burnable.\n        @param contractAddress Address of contract to be used when making or executing deposits.\n     */\n    function setBurnable(address contractAddress) external;\n\n    /**\n        @notice Used to manually release funds from ERC safes.\n        @param tokenAddress Address of token contract to release.\n        @param recipient Address to release tokens to.\n        @param amountOrTokenID Either the amount of ERC20 tokens or the ERC721 token ID to release.\n     */\n    function withdraw(\n        address tokenAddress,\n        address recipient,\n        uint256 amountOrTokenID\n    ) external;\n}\n",
  "sourcePath": "/home/circleci/protocol/packages/core/contracts/external/chainbridge/interfaces/IERCHandler.sol",
  "ast": {
    "absolutePath": "/home/circleci/protocol/packages/core/contracts/external/chainbridge/interfaces/IERCHandler.sol",
    "exportedSymbols": {
      "IERCHandler": [
        9659
      ]
    },
    "id": 9660,
    "license": "AGPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9633,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:23:50"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 9634,
          "nodeType": "StructuredDocumentation",
          "src": "67:117:50",
          "text": "@title Interface to be used with handlers that support ERC20s and ERC721s.\n@author ChainSafe Systems."
        },
        "fullyImplemented": false,
        "id": 9659,
        "linearizedBaseContracts": [
          9659
        ],
        "name": "IERCHandler",
        "nameLocation": "195:11:50",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 9635,
              "nodeType": "StructuredDocumentation",
              "src": "213:261:50",
              "text": "@notice Correlates {resourceID} with {contractAddress}.\n@param resourceID ResourceID to be used when making deposits.\n@param contractAddress Address of contract to be called when a deposit is made and a deposited is executed."
            },
            "functionSelector": "b8fa3736",
            "id": 9642,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setResource",
            "nameLocation": "488:11:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9640,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9637,
                  "mutability": "mutable",
                  "name": "resourceID",
                  "nameLocation": "508:10:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 9642,
                  "src": "500:18:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 9636,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "500:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9639,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nameLocation": "528:15:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 9642,
                  "src": "520:23:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9638,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "520:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "499:45:50"
            },
            "returnParameters": {
              "id": 9641,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "553:0:50"
            },
            "scope": 9659,
            "src": "479:75:50",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 9643,
              "nodeType": "StructuredDocumentation",
              "src": "560:170:50",
              "text": "@notice Marks {contractAddress} as mintable/burnable.\n@param contractAddress Address of contract to be used when making or executing deposits."
            },
            "functionSelector": "07b7ed99",
            "id": 9648,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setBurnable",
            "nameLocation": "744:11:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9646,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9645,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nameLocation": "764:15:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 9648,
                  "src": "756:23:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9644,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "756:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "755:25:50"
            },
            "returnParameters": {
              "id": 9647,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "789:0:50"
            },
            "scope": 9659,
            "src": "735:55:50",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 9649,
              "nodeType": "StructuredDocumentation",
              "src": "796:295:50",
              "text": "@notice Used to manually release funds from ERC safes.\n@param tokenAddress Address of token contract to release.\n@param recipient Address to release tokens to.\n@param amountOrTokenID Either the amount of ERC20 tokens or the ERC721 token ID to release."
            },
            "functionSelector": "d9caed12",
            "id": 9658,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "1105:8:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9656,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9651,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "1131:12:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 9658,
                  "src": "1123:20:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9650,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1123:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9653,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1161:9:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 9658,
                  "src": "1153:17:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9652,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1153:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9655,
                  "mutability": "mutable",
                  "name": "amountOrTokenID",
                  "nameLocation": "1188:15:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 9658,
                  "src": "1180:23:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9654,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1180:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1113:96:50"
            },
            "returnParameters": {
              "id": 9657,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1218:0:50"
            },
            "scope": 9659,
            "src": "1096:123:50",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 9660,
        "src": "185:1036:50",
        "usedErrors": []
      }
    ],
    "src": "42:1180:50"
  },
  "legacyAST": {
    "absolutePath": "/home/circleci/protocol/packages/core/contracts/external/chainbridge/interfaces/IERCHandler.sol",
    "exportedSymbols": {
      "IERCHandler": [
        9659
      ]
    },
    "id": 9660,
    "license": "AGPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9633,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:23:50"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 9634,
          "nodeType": "StructuredDocumentation",
          "src": "67:117:50",
          "text": "@title Interface to be used with handlers that support ERC20s and ERC721s.\n@author ChainSafe Systems."
        },
        "fullyImplemented": false,
        "id": 9659,
        "linearizedBaseContracts": [
          9659
        ],
        "name": "IERCHandler",
        "nameLocation": "195:11:50",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 9635,
              "nodeType": "StructuredDocumentation",
              "src": "213:261:50",
              "text": "@notice Correlates {resourceID} with {contractAddress}.\n@param resourceID ResourceID to be used when making deposits.\n@param contractAddress Address of contract to be called when a deposit is made and a deposited is executed."
            },
            "functionSelector": "b8fa3736",
            "id": 9642,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setResource",
            "nameLocation": "488:11:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9640,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9637,
                  "mutability": "mutable",
                  "name": "resourceID",
                  "nameLocation": "508:10:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 9642,
                  "src": "500:18:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 9636,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "500:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9639,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nameLocation": "528:15:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 9642,
                  "src": "520:23:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9638,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "520:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "499:45:50"
            },
            "returnParameters": {
              "id": 9641,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "553:0:50"
            },
            "scope": 9659,
            "src": "479:75:50",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 9643,
              "nodeType": "StructuredDocumentation",
              "src": "560:170:50",
              "text": "@notice Marks {contractAddress} as mintable/burnable.\n@param contractAddress Address of contract to be used when making or executing deposits."
            },
            "functionSelector": "07b7ed99",
            "id": 9648,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setBurnable",
            "nameLocation": "744:11:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9646,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9645,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nameLocation": "764:15:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 9648,
                  "src": "756:23:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9644,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "756:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "755:25:50"
            },
            "returnParameters": {
              "id": 9647,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "789:0:50"
            },
            "scope": 9659,
            "src": "735:55:50",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 9649,
              "nodeType": "StructuredDocumentation",
              "src": "796:295:50",
              "text": "@notice Used to manually release funds from ERC safes.\n@param tokenAddress Address of token contract to release.\n@param recipient Address to release tokens to.\n@param amountOrTokenID Either the amount of ERC20 tokens or the ERC721 token ID to release."
            },
            "functionSelector": "d9caed12",
            "id": 9658,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "1105:8:50",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9656,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9651,
                  "mutability": "mutable",
                  "name": "tokenAddress",
                  "nameLocation": "1131:12:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 9658,
                  "src": "1123:20:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9650,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1123:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9653,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1161:9:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 9658,
                  "src": "1153:17:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9652,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1153:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9655,
                  "mutability": "mutable",
                  "name": "amountOrTokenID",
                  "nameLocation": "1188:15:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 9658,
                  "src": "1180:23:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9654,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1180:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1113:96:50"
            },
            "returnParameters": {
              "id": 9657,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1218:0:50"
            },
            "scope": 9659,
            "src": "1096:123:50",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 9660,
        "src": "185:1036:50",
        "usedErrors": []
      }
    ],
    "src": "42:1180:50"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-07-16T20:27:09.675Z",
  "devdoc": {
    "author": "ChainSafe Systems.",
    "kind": "dev",
    "methods": {
      "setBurnable(address)": {
        "params": {
          "contractAddress": "Address of contract to be used when making or executing deposits."
        }
      },
      "setResource(bytes32,address)": {
        "params": {
          "contractAddress": "Address of contract to be called when a deposit is made and a deposited is executed.",
          "resourceID": "ResourceID to be used when making deposits."
        }
      },
      "withdraw(address,address,uint256)": {
        "params": {
          "amountOrTokenID": "Either the amount of ERC20 tokens or the ERC721 token ID to release.",
          "recipient": "Address to release tokens to.",
          "tokenAddress": "Address of token contract to release."
        }
      }
    },
    "title": "Interface to be used with handlers that support ERC20s and ERC721s.",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "setBurnable(address)": {
        "notice": "Marks {contractAddress} as mintable/burnable."
      },
      "setResource(bytes32,address)": {
        "notice": "Correlates {resourceID} with {contractAddress}."
      },
      "withdraw(address,address,uint256)": {
        "notice": "Used to manually release funds from ERC safes."
      }
    },
    "version": 1
  }
}