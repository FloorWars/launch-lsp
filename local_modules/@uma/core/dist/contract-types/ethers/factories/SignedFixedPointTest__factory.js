"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SignedFixedPointTest__factory = void 0;
const ethers_1 = require("ethers");
class SignedFixedPointTest__factory extends ethers_1.ContractFactory {
    constructor(signer) {
        super(_abi, _bytecode, signer);
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.SignedFixedPointTest__factory = SignedFixedPointTest__factory;
const _abi = [
    {
        inputs: [
            {
                internalType: "int256",
                name: "a",
                type: "int256",
            },
        ],
        name: "wrapFromSigned",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "a",
                type: "uint256",
            },
        ],
        name: "wrapFromUnsigned",
        outputs: [
            {
                internalType: "int256",
                name: "",
                type: "int256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "int256",
                name: "a",
                type: "int256",
            },
        ],
        name: "wrapFromUnscaledInt",
        outputs: [
            {
                internalType: "int256",
                name: "",
                type: "int256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "int256",
                name: "a",
                type: "int256",
            },
            {
                internalType: "int256",
                name: "b",
                type: "int256",
            },
        ],
        name: "wrapIsEqual",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "int256",
                name: "a",
                type: "int256",
            },
            {
                internalType: "int256",
                name: "b",
                type: "int256",
            },
        ],
        name: "wrapMixedIsEqual",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "int256",
                name: "a",
                type: "int256",
            },
            {
                internalType: "int256",
                name: "b",
                type: "int256",
            },
        ],
        name: "wrapIsGreaterThan",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "int256",
                name: "a",
                type: "int256",
            },
            {
                internalType: "int256",
                name: "b",
                type: "int256",
            },
        ],
        name: "wrapIsGreaterThanOrEqual",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "int256",
                name: "a",
                type: "int256",
            },
            {
                internalType: "int256",
                name: "b",
                type: "int256",
            },
        ],
        name: "wrapMixedIsGreaterThan",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "int256",
                name: "a",
                type: "int256",
            },
            {
                internalType: "int256",
                name: "b",
                type: "int256",
            },
        ],
        name: "wrapMixedIsGreaterThanOrEqual",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "int256",
                name: "a",
                type: "int256",
            },
            {
                internalType: "int256",
                name: "b",
                type: "int256",
            },
        ],
        name: "wrapMixedIsGreaterThanOpposite",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "int256",
                name: "a",
                type: "int256",
            },
            {
                internalType: "int256",
                name: "b",
                type: "int256",
            },
        ],
        name: "wrapMixedIsGreaterThanOrEqualOpposite",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "int256",
                name: "a",
                type: "int256",
            },
            {
                internalType: "int256",
                name: "b",
                type: "int256",
            },
        ],
        name: "wrapIsLessThan",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "int256",
                name: "a",
                type: "int256",
            },
            {
                internalType: "int256",
                name: "b",
                type: "int256",
            },
        ],
        name: "wrapIsLessThanOrEqual",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "int256",
                name: "a",
                type: "int256",
            },
            {
                internalType: "int256",
                name: "b",
                type: "int256",
            },
        ],
        name: "wrapMixedIsLessThan",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "int256",
                name: "a",
                type: "int256",
            },
            {
                internalType: "int256",
                name: "b",
                type: "int256",
            },
        ],
        name: "wrapMixedIsLessThanOrEqual",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "int256",
                name: "a",
                type: "int256",
            },
            {
                internalType: "int256",
                name: "b",
                type: "int256",
            },
        ],
        name: "wrapMixedIsLessThanOpposite",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "int256",
                name: "a",
                type: "int256",
            },
            {
                internalType: "int256",
                name: "b",
                type: "int256",
            },
        ],
        name: "wrapMixedIsLessThanOrEqualOpposite",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "int256",
                name: "a",
                type: "int256",
            },
            {
                internalType: "int256",
                name: "b",
                type: "int256",
            },
        ],
        name: "wrapMin",
        outputs: [
            {
                internalType: "int256",
                name: "",
                type: "int256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "int256",
                name: "a",
                type: "int256",
            },
            {
                internalType: "int256",
                name: "b",
                type: "int256",
            },
        ],
        name: "wrapMax",
        outputs: [
            {
                internalType: "int256",
                name: "",
                type: "int256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "int256",
                name: "a",
                type: "int256",
            },
            {
                internalType: "int256",
                name: "b",
                type: "int256",
            },
        ],
        name: "wrapAdd",
        outputs: [
            {
                internalType: "int256",
                name: "",
                type: "int256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "int256",
                name: "a",
                type: "int256",
            },
            {
                internalType: "int256",
                name: "b",
                type: "int256",
            },
        ],
        name: "wrapMixedAdd",
        outputs: [
            {
                internalType: "int256",
                name: "",
                type: "int256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "int256",
                name: "a",
                type: "int256",
            },
            {
                internalType: "int256",
                name: "b",
                type: "int256",
            },
        ],
        name: "wrapSub",
        outputs: [
            {
                internalType: "int256",
                name: "",
                type: "int256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "int256",
                name: "a",
                type: "int256",
            },
            {
                internalType: "int256",
                name: "b",
                type: "int256",
            },
        ],
        name: "wrapMixedSub",
        outputs: [
            {
                internalType: "int256",
                name: "",
                type: "int256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "int256",
                name: "a",
                type: "int256",
            },
            {
                internalType: "int256",
                name: "b",
                type: "int256",
            },
        ],
        name: "wrapMixedSubOpposite",
        outputs: [
            {
                internalType: "int256",
                name: "",
                type: "int256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "int256",
                name: "a",
                type: "int256",
            },
            {
                internalType: "int256",
                name: "b",
                type: "int256",
            },
        ],
        name: "wrapMul",
        outputs: [
            {
                internalType: "int256",
                name: "",
                type: "int256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "int256",
                name: "a",
                type: "int256",
            },
            {
                internalType: "int256",
                name: "b",
                type: "int256",
            },
        ],
        name: "wrapMulAwayFromZero",
        outputs: [
            {
                internalType: "int256",
                name: "",
                type: "int256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "int256",
                name: "a",
                type: "int256",
            },
            {
                internalType: "int256",
                name: "b",
                type: "int256",
            },
        ],
        name: "wrapMixedMul",
        outputs: [
            {
                internalType: "int256",
                name: "",
                type: "int256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "int256",
                name: "a",
                type: "int256",
            },
            {
                internalType: "int256",
                name: "b",
                type: "int256",
            },
        ],
        name: "wrapMixedMulAwayFromZero",
        outputs: [
            {
                internalType: "int256",
                name: "",
                type: "int256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "int256",
                name: "a",
                type: "int256",
            },
            {
                internalType: "int256",
                name: "b",
                type: "int256",
            },
        ],
        name: "wrapDiv",
        outputs: [
            {
                internalType: "int256",
                name: "",
                type: "int256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "int256",
                name: "a",
                type: "int256",
            },
            {
                internalType: "int256",
                name: "b",
                type: "int256",
            },
        ],
        name: "wrapDivAwayFromZero",
        outputs: [
            {
                internalType: "int256",
                name: "",
                type: "int256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "int256",
                name: "a",
                type: "int256",
            },
            {
                internalType: "int256",
                name: "b",
                type: "int256",
            },
        ],
        name: "wrapMixedDiv",
        outputs: [
            {
                internalType: "int256",
                name: "",
                type: "int256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "int256",
                name: "a",
                type: "int256",
            },
            {
                internalType: "int256",
                name: "b",
                type: "int256",
            },
        ],
        name: "wrapMixedDivAwayFromZero",
        outputs: [
            {
                internalType: "int256",
                name: "",
                type: "int256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "int256",
                name: "a",
                type: "int256",
            },
            {
                internalType: "int256",
                name: "b",
                type: "int256",
            },
        ],
        name: "wrapMixedDivOpposite",
        outputs: [
            {
                internalType: "int256",
                name: "",
                type: "int256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "int256",
                name: "a",
                type: "int256",
            },
            {
                internalType: "uint256",
                name: "b",
                type: "uint256",
            },
        ],
        name: "wrapPow",
        outputs: [
            {
                internalType: "int256",
                name: "",
                type: "int256",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
];
const _bytecode = "";
