"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.TokenSender__factory = void 0;
const ethers_1 = require("ethers");
class TokenSender__factory extends ethers_1.ContractFactory {
    constructor(signer) {
        super(_abi, _bytecode, signer);
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.TokenSender__factory = TokenSender__factory;
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
            },
            {
                internalType: "address",
                name: "recipientAddress",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "amount",
                type: "uint256",
            },
        ],
        name: "transferERC20",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b5061019e806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80639db5dbe414610030575b600080fd5b61004361003e366004610106565b610057565b604051901515815260200160405180910390f35b60405163a9059cbb60e01b81526001600160a01b03838116600483015260248201839052600091859182169063a9059cbb90604401602060405180830381600087803b1580156100a657600080fd5b505af11580156100ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100de9190610141565b50600195945050505050565b80356001600160a01b038116811461010157600080fd5b919050565b60008060006060848603121561011a578283fd5b610123846100ea565b9250610131602085016100ea565b9150604084013590509250925092565b600060208284031215610152578081fd5b81518015158114610161578182fd5b939250505056fea2646970667358221220f3d9467350ec3511ea1309d63a2f80f9da97ba50c24dd9886a63fafa118a24da64736f6c63430008040033";
