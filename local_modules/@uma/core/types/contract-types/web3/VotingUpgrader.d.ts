/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import BN from "bn.js";
import { ContractOptions } from "web3-eth-contract";
import { EventLog } from "web3-core";
import { EventEmitter } from "events";
import {
  Callback,
  PayableTransactionObject,
  NonPayableTransactionObject,
  BlockType,
  ContractEventLog,
  BaseContract,
} from "./types";

interface EventOptions {
  filter?: object;
  fromBlock?: BlockType;
  topics?: string[];
}

export interface VotingUpgrader extends BaseContract {
  constructor(
    jsonInterface: any[],
    address?: string,
    options?: ContractOptions
  ): VotingUpgrader;
  clone(): VotingUpgrader;
  methods: {
    existingVoting(): NonPayableTransactionObject<string>;

    finder(): NonPayableTransactionObject<string>;

    governor(): NonPayableTransactionObject<string>;

    newVoting(): NonPayableTransactionObject<string>;

    setMigratedAddress(): NonPayableTransactionObject<string>;

    /**
     * This method updates the Voting address in the finder, sets the old voting contract to migrated state, and returns ownership of the existing Voting contract and Finder back to the Governor.
     * Performs the atomic portion of the upgrade process.
     */
    upgrade(): NonPayableTransactionObject<void>;
  };
  events: {
    allEvents(options?: EventOptions, cb?: Callback<EventLog>): EventEmitter;
  };
}
