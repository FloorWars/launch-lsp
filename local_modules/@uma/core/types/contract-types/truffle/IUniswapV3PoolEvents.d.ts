/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import BN from "bn.js";
import { EventData, PastEventOptions } from "web3-eth-contract";

export interface IUniswapV3PoolEventsContract
  extends Truffle.Contract<IUniswapV3PoolEventsInstance> {
  "new"(
    meta?: Truffle.TransactionDetails
  ): Promise<IUniswapV3PoolEventsInstance>;
}

export interface Burn {
  name: "Burn";
  args: {
    owner: string;
    tickLower: BN;
    tickUpper: BN;
    amount: BN;
    amount0: BN;
    amount1: BN;
    0: string;
    1: BN;
    2: BN;
    3: BN;
    4: BN;
    5: BN;
  };
}

export interface Collect {
  name: "Collect";
  args: {
    owner: string;
    recipient: string;
    tickLower: BN;
    tickUpper: BN;
    amount0: BN;
    amount1: BN;
    0: string;
    1: string;
    2: BN;
    3: BN;
    4: BN;
    5: BN;
  };
}

export interface CollectProtocol {
  name: "CollectProtocol";
  args: {
    sender: string;
    recipient: string;
    amount0: BN;
    amount1: BN;
    0: string;
    1: string;
    2: BN;
    3: BN;
  };
}

export interface Flash {
  name: "Flash";
  args: {
    sender: string;
    recipient: string;
    amount0: BN;
    amount1: BN;
    paid0: BN;
    paid1: BN;
    0: string;
    1: string;
    2: BN;
    3: BN;
    4: BN;
    5: BN;
  };
}

export interface IncreaseObservationCardinalityNext {
  name: "IncreaseObservationCardinalityNext";
  args: {
    observationCardinalityNextOld: BN;
    observationCardinalityNextNew: BN;
    0: BN;
    1: BN;
  };
}

export interface Initialize {
  name: "Initialize";
  args: {
    sqrtPriceX96: BN;
    tick: BN;
    0: BN;
    1: BN;
  };
}

export interface Mint {
  name: "Mint";
  args: {
    sender: string;
    owner: string;
    tickLower: BN;
    tickUpper: BN;
    amount: BN;
    amount0: BN;
    amount1: BN;
    0: string;
    1: string;
    2: BN;
    3: BN;
    4: BN;
    5: BN;
    6: BN;
  };
}

export interface SetFeeProtocol {
  name: "SetFeeProtocol";
  args: {
    feeProtocol0Old: BN;
    feeProtocol1Old: BN;
    feeProtocol0New: BN;
    feeProtocol1New: BN;
    0: BN;
    1: BN;
    2: BN;
    3: BN;
  };
}

export interface Swap {
  name: "Swap";
  args: {
    sender: string;
    recipient: string;
    amount0: BN;
    amount1: BN;
    sqrtPriceX96: BN;
    tick: BN;
    0: string;
    1: string;
    2: BN;
    3: BN;
    4: BN;
    5: BN;
  };
}

type AllEvents =
  | Burn
  | Collect
  | CollectProtocol
  | Flash
  | IncreaseObservationCardinalityNext
  | Initialize
  | Mint
  | SetFeeProtocol
  | Swap;

export interface IUniswapV3PoolEventsInstance extends Truffle.ContractInstance {
  methods: {};

  getPastEvents(event: string): Promise<EventData[]>;
  getPastEvents(
    event: string,
    options: PastEventOptions,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
  getPastEvents(event: string, options: PastEventOptions): Promise<EventData[]>;
  getPastEvents(
    event: string,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
}
