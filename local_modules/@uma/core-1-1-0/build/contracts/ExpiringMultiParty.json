{
  "contractName": "ExpiringMultiParty",
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "expirationTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "withdrawalLiveness",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "collateralAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "finderAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "tokenFactoryAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "timerAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "excessTokenBeneficiary",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "priceFeedIdentifier",
              "type": "bytes32"
            },
            {
              "internalType": "string",
              "name": "syntheticName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "syntheticSymbol",
              "type": "string"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "rawValue",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FixedPoint.Unsigned",
              "name": "minSponsorTokens",
              "type": "tuple"
            },
            {
              "internalType": "uint256",
              "name": "liquidationLiveness",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "rawValue",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FixedPoint.Unsigned",
              "name": "collateralRequirement",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "rawValue",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FixedPoint.Unsigned",
              "name": "disputeBondPct",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "rawValue",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FixedPoint.Unsigned",
              "name": "sponsorDisputeRewardPct",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "rawValue",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FixedPoint.Unsigned",
              "name": "disputerDisputeRewardPct",
              "type": "tuple"
            }
          ],
          "internalType": "struct Liquidatable.ConstructorParams",
          "name": "params",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        }
      ],
      "name": "ContractExpired",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "liquidator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "disputer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "liquidationId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "disputeSucceeded",
          "type": "bool"
        }
      ],
      "name": "DisputeSettled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "originalExpirationTimestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shutdownTimestamp",
          "type": "uint256"
        }
      ],
      "name": "EmergencyShutdown",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        }
      ],
      "name": "EndedSponsorPosition",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "FinalFeesPaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "liquidator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "liquidationId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokensOutstanding",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lockedCollateral",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "liquidatedCollateral",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "liquidationTime",
          "type": "uint256"
        }
      ],
      "name": "LiquidationCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "liquidator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "disputer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "liquidationId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "disputeBondAmount",
          "type": "uint256"
        }
      ],
      "name": "LiquidationDisputed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "withdrawalAmount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "enum Liquidatable.Status",
          "name": "liquidationStatus",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "settlementPrice",
          "type": "uint256"
        }
      ],
      "name": "LiquidationWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        }
      ],
      "name": "NewSponsor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        }
      ],
      "name": "PositionCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        }
      ],
      "name": "Redeem",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "regularFee",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "lateFee",
          "type": "uint256"
        }
      ],
      "name": "RegularFeesPaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldSponsor",
          "type": "address"
        }
      ],
      "name": "RequestTransferPosition",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldSponsor",
          "type": "address"
        }
      ],
      "name": "RequestTransferPositionCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldSponsor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newSponsor",
          "type": "address"
        }
      ],
      "name": "RequestTransferPositionExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        }
      ],
      "name": "RequestWithdrawal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        }
      ],
      "name": "RequestWithdrawalCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        }
      ],
      "name": "RequestWithdrawalExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "collateralReturned",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokensBurned",
          "type": "uint256"
        }
      ],
      "name": "SettleExpiredPosition",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawal",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "cancelTransferPosition",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cancelWithdrawal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "collateralCurrency",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "collateralRequirement",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rawValue",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractState",
      "outputs": [
        {
          "internalType": "enum PricelessPositionManager.ContractState",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "collateralAmount",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "numTokens",
          "type": "tuple"
        }
      ],
      "name": "create",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "minCollateralPerToken",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "maxCollateralPerToken",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "maxTokensToLiquidate",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "createLiquidation",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "liquidationId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "tokensLiquidated",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "finalFeeBond",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cumulativeFeeMultiplier",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rawValue",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "collateralAmount",
          "type": "tuple"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "collateralAmount",
          "type": "tuple"
        }
      ],
      "name": "depositTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "liquidationId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        }
      ],
      "name": "dispute",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "totalPaid",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "disputeBondPct",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rawValue",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "disputerDisputeRewardPct",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rawValue",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "emergencyShutdown",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excessTokenBeneficiary",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "expirationTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "expire",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "expiryPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rawValue",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "finder",
      "outputs": [
        {
          "internalType": "contract FinderInterface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        }
      ],
      "name": "getCollateral",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "collateralAmount",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        }
      ],
      "name": "getLiquidations",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "sponsor",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "liquidator",
              "type": "address"
            },
            {
              "internalType": "enum Liquidatable.Status",
              "name": "state",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "liquidationTime",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "rawValue",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FixedPoint.Unsigned",
              "name": "tokensOutstanding",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "rawValue",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FixedPoint.Unsigned",
              "name": "lockedCollateral",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "rawValue",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FixedPoint.Unsigned",
              "name": "liquidatedCollateral",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "rawValue",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FixedPoint.Unsigned",
              "name": "rawUnitCollateral",
              "type": "tuple"
            },
            {
              "internalType": "address",
              "name": "disputer",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "rawValue",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FixedPoint.Unsigned",
              "name": "settlementPrice",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "rawValue",
                  "type": "uint256"
                }
              ],
              "internalType": "struct FixedPoint.Unsigned",
              "name": "finalFee",
              "type": "tuple"
            }
          ],
          "internalType": "struct Liquidatable.LiquidationData[]",
          "name": "liquidationData",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidationLiveness",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "liquidations",
      "outputs": [
        {
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "liquidator",
          "type": "address"
        },
        {
          "internalType": "enum Liquidatable.Status",
          "name": "state",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "liquidationTime",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "tokensOutstanding",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "lockedCollateral",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "liquidatedCollateral",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "rawUnitCollateral",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "disputer",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "settlementPrice",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "finalFee",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minSponsorTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rawValue",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "payRegularFees",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "totalPaid",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pfc",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "positions",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "tokensOutstanding",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "withdrawalRequestPassTimestamp",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "withdrawalRequestAmount",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "rawCollateral",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "transferPositionRequestPassTimestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceIdentifier",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rawLiquidationCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rawValue",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rawTotalPositionCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rawValue",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "numTokens",
          "type": "tuple"
        }
      ],
      "name": "redeem",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "amountWithdrawn",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "remargin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "requestTransferPosition",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "collateralAmount",
          "type": "tuple"
        }
      ],
      "name": "requestWithdrawal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "setCurrentTime",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "settleExpired",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "amountWithdrawn",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sponsorDisputeRewardPct",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rawValue",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timerAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenCurrency",
      "outputs": [
        {
          "internalType": "contract ExpandedIERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalPositionCollateral",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "totalCollateral",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalTokensOutstanding",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rawValue",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newSponsorAddress",
          "type": "address"
        }
      ],
      "name": "transferPositionPassedRequest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "trimExcess",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "amount",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "collateralAmount",
          "type": "tuple"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "amountWithdrawn",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "liquidationId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "sponsor",
          "type": "address"
        }
      ],
      "name": "withdrawLiquidation",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "amountWithdrawn",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawPassedRequest",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "amountWithdrawn",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawalLiveness",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"expirationTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalLiveness\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"finderAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenFactoryAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"timerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"excessTokenBeneficiary\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"priceFeedIdentifier\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"syntheticName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"syntheticSymbol\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"minSponsorTokens\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"liquidationLiveness\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"collateralRequirement\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"disputeBondPct\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"sponsorDisputeRewardPct\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"disputerDisputeRewardPct\",\"type\":\"tuple\"}],\"internalType\":\"struct Liquidatable.ConstructorParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"}],\"name\":\"ContractExpired\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"disputer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidationId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"disputeSucceeded\",\"type\":\"bool\"}],\"name\":\"DisputeSettled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"originalExpirationTimestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shutdownTimestamp\",\"type\":\"uint256\"}],\"name\":\"EmergencyShutdown\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"}],\"name\":\"EndedSponsorPosition\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FinalFeesPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"liquidationId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokensOutstanding\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lockedCollateral\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidatedCollateral\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidationTime\",\"type\":\"uint256\"}],\"name\":\"LiquidationCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"disputer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidationId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"disputeBondAmount\",\"type\":\"uint256\"}],\"name\":\"LiquidationDisputed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawalAmount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"enum Liquidatable.Status\",\"name\":\"liquidationStatus\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"settlementPrice\",\"type\":\"uint256\"}],\"name\":\"LiquidationWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"}],\"name\":\"NewSponsor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"PositionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"Redeem\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"regularFee\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"lateFee\",\"type\":\"uint256\"}],\"name\":\"RegularFeesPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldSponsor\",\"type\":\"address\"}],\"name\":\"RequestTransferPosition\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldSponsor\",\"type\":\"address\"}],\"name\":\"RequestTransferPositionCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldSponsor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newSponsor\",\"type\":\"address\"}],\"name\":\"RequestTransferPositionExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"}],\"name\":\"RequestWithdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"}],\"name\":\"RequestWithdrawalCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"}],\"name\":\"RequestWithdrawalExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"collateralReturned\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokensBurned\",\"type\":\"uint256\"}],\"name\":\"SettleExpiredPosition\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"cancelTransferPosition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancelWithdrawal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collateralCurrency\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collateralRequirement\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractState\",\"outputs\":[{\"internalType\":\"enum PricelessPositionManager.ContractState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"collateralAmount\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"numTokens\",\"type\":\"tuple\"}],\"name\":\"create\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"minCollateralPerToken\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"maxCollateralPerToken\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"maxTokensToLiquidate\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"createLiquidation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidationId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"tokensLiquidated\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"finalFeeBond\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cumulativeFeeMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"collateralAmount\",\"type\":\"tuple\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"collateralAmount\",\"type\":\"tuple\"}],\"name\":\"depositTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidationId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"}],\"name\":\"dispute\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"totalPaid\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disputeBondPct\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"disputerDisputeRewardPct\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyShutdown\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excessTokenBeneficiary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expirationTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expire\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"expiryPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finder\",\"outputs\":[{\"internalType\":\"contract FinderInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"}],\"name\":\"getCollateral\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"collateralAmount\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"}],\"name\":\"getLiquidations\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"internalType\":\"enum Liquidatable.Status\",\"name\":\"state\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"liquidationTime\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"tokensOutstanding\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"lockedCollateral\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"liquidatedCollateral\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"rawUnitCollateral\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"disputer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"settlementPrice\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"finalFee\",\"type\":\"tuple\"}],\"internalType\":\"struct Liquidatable.LiquidationData[]\",\"name\":\"liquidationData\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidationLiveness\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"liquidations\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"internalType\":\"enum Liquidatable.Status\",\"name\":\"state\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"liquidationTime\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"tokensOutstanding\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"lockedCollateral\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"liquidatedCollateral\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"rawUnitCollateral\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"disputer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"settlementPrice\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"finalFee\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minSponsorTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"payRegularFees\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"totalPaid\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pfc\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"positions\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"tokensOutstanding\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"withdrawalRequestPassTimestamp\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"withdrawalRequestAmount\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"rawCollateral\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"transferPositionRequestPassTimestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceIdentifier\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rawLiquidationCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rawTotalPositionCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"numTokens\",\"type\":\"tuple\"}],\"name\":\"redeem\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"amountWithdrawn\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"remargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestTransferPosition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"collateralAmount\",\"type\":\"tuple\"}],\"name\":\"requestWithdrawal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"setCurrentTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"settleExpired\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"amountWithdrawn\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sponsorDisputeRewardPct\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenCurrency\",\"outputs\":[{\"internalType\":\"contract ExpandedIERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalPositionCollateral\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"totalCollateral\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalTokensOutstanding\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newSponsorAddress\",\"type\":\"address\"}],\"name\":\"transferPositionPassedRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"trimExcess\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"amount\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"collateralAmount\",\"type\":\"tuple\"}],\"name\":\"withdraw\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"amountWithdrawn\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidationId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"}],\"name\":\"withdrawLiquidation\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"amountWithdrawn\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawPassedRequest\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"amountWithdrawn\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawalLiveness\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"params\":\"struct to define input parameters for construction of Liquidatable. Some params are fed directly into the PricelessPositionManager's constructor within the inheritance tree.\"}},\"create((uint256),(uint256))\":{\"details\":\"Reverts if minting these tokens would put the position's collateralization ratio below the global collateralization ratio. This contract must be approved to spend at least `collateralAmount` of `collateralCurrency`.\",\"params\":{\"collateralAmount\":\"is the number of collateral tokens to collateralize the position with\",\"numTokens\":\"is the number of tokens to mint from the position.\"}},\"createLiquidation(address,(uint256),(uint256),(uint256),uint256)\":{\"details\":\"This method generates an ID that will uniquely identify liquidation for the sponsor. This contract must be approved to spend at least `tokensLiquidated` of `tokenCurrency` and at least `finalFeeBond` of `collateralCurrency`.\",\"params\":{\"deadline\":\"abort the liquidation if the transaction is mined after this timestamp.\",\"maxCollateralPerToken\":\"abort the liquidation if the position's collateral per token exceeds this value.\",\"maxTokensToLiquidate\":\"max number of tokens to liquidate.\",\"minCollateralPerToken\":\"abort the liquidation if the position's collateral per token is below this value.\",\"sponsor\":\"address of the sponsor to liquidate.\"},\"returns\":{\"finalFeeBond\":\"amount of collateral to be posted by liquidator and returned if not disputed successfully.\",\"liquidationId\":\"ID of the newly created liquidation.\",\"tokensLiquidated\":\"amount of synthetic tokens removed and liquidated from the `sponsor`'s position.\"}},\"deposit((uint256))\":{\"details\":\"Increases the collateralization level of a position after creation. This contract must be approved to spend at least `collateralAmount` of `collateralCurrency`.\",\"params\":{\"collateralAmount\":\"total amount of collateral tokens to be sent to the sponsor's position.\"}},\"depositTo(address,(uint256))\":{\"details\":\"Increases the collateralization level of a position after creation. This contract must be approved to spend at least `collateralAmount` of `collateralCurrency`.\",\"params\":{\"collateralAmount\":\"total amount of collateral tokens to be sent to the sponsor's position.\",\"sponsor\":\"the sponsor to credit the deposit to.\"}},\"dispute(uint256,address)\":{\"details\":\"Can only dispute a liquidation before the liquidation expires and if there are no other pending disputes. This contract must be approved to spend at least the dispute bond amount of `collateralCurrency`. This dispute bond amount is calculated from `disputeBondPct` times the collateral in the liquidation.\",\"params\":{\"liquidationId\":\"of the disputed liquidation.\",\"sponsor\":\"the address of the sponsor whose liquidation is being disputed.\"},\"returns\":{\"totalPaid\":\"amount of collateral charged to disputer (i.e. final fee bond + dispute bond).\"}},\"emergencyShutdown()\":{\"details\":\"Only the governor can call this function as they are permissioned within the `FinancialContractAdmin`. Upon emergency shutdown, the contract settlement time is set to the shutdown time. This enables withdrawal to occur via the standard `settleExpired` function. Contract state is set to `ExpiredPriceRequested` which prevents re-entry into this function or the `expire` function. No fees are paid when calling `emergencyShutdown` as the governor who would call the function would also receive the fees.\"},\"expire()\":{\"details\":\"this function can only be called once the contract is expired and can't be re-called.\"},\"getCollateral(address)\":{\"details\":\"This is necessary because the struct returned by the positions() method shows rawCollateral, which isn't a user-readable value.\",\"params\":{\"sponsor\":\"address whose collateral amount is retrieved.\"},\"returns\":{\"collateralAmount\":\"amount of collateral within a sponsors position.\"}},\"getCurrentTime()\":{\"returns\":{\"_0\":\"uint for the current Testable timestamp.\"}},\"getLiquidations(address)\":{\"params\":{\"sponsor\":\"address of the position sponsor.\"},\"returns\":{\"liquidationData\":\"array of all liquidation information for the given sponsor address.\"}},\"payRegularFees()\":{\"details\":\"These must be paid periodically for the life of the contract. If the contract has not paid its regular fee in a week or more then a late penalty is applied which is sent to the caller. If the amount of fees owed are greater than the pfc, then this will pay as much as possible from the available collateral. An event is only fired if the fees charged are greater than 0.\",\"returns\":{\"totalPaid\":\"Amount of collateral that the contract paid (sum of the amount paid to the Store and caller). This returns 0 and exit early if there is no pfc, fees were already paid during the current block, or the fee rate is 0.\"}},\"pfc()\":{\"details\":\"This is equivalent to the collateral pool available from which to pay fees. Therefore, derived contracts are expected to implement this so that pay-fee methods can correctly compute the owed fees as a % of PfC.\",\"returns\":{\"_0\":\"pfc value for equal to the current profit from corruption denominated in collateral currency.\"}},\"redeem((uint256))\":{\"details\":\"Can only be called by a token sponsor. Might not redeem the full proportional amount of collateral in order to account for precision loss. This contract must be approved to spend at least `numTokens` of `tokenCurrency`.\",\"params\":{\"numTokens\":\"is the number of tokens to be burnt for a commensurate amount of collateral.\"},\"returns\":{\"amountWithdrawn\":\"The actual amount of collateral withdrawn.\"}},\"remargin()\":{\"details\":\"This is supposed to be implemented by any contract that inherits `AdministrateeInterface` and callable only by the Governor contract. This method is therefore minimally implemented in this contract and does nothing.\"},\"requestTransferPosition()\":{\"details\":\"The liveness length is the same as the withdrawal liveness.\"},\"requestWithdrawal((uint256))\":{\"details\":\"The request will be pending for `withdrawalLiveness`, during which the position can be liquidated.\",\"params\":{\"collateralAmount\":\"the amount of collateral requested to withdraw\"}},\"setCurrentTime(uint256)\":{\"details\":\"Will revert if not running in test mode.\",\"params\":{\"time\":\"timestamp to set current Testable time to.\"}},\"settleExpired()\":{\"details\":\"This burns all tokens from the caller of `tokenCurrency` and sends back the proportional amount of `collateralCurrency`. Might not redeem the full proportional amount of collateral in order to account for precision loss. This contract must be approved to spend `tokenCurrency` at least up to the caller's full balance.\",\"returns\":{\"amountWithdrawn\":\"The actual amount of collateral withdrawn.\"}},\"totalPositionCollateral()\":{\"returns\":{\"totalCollateral\":\"amount of all collateral within the Expiring Multi Party Contract.\"}},\"transferPositionPassedRequest(address)\":{\"details\":\"Transferring positions can only occur if the recipient does not already have a position.\",\"params\":{\"newSponsorAddress\":\"is the address to which the position will be transferred.\"}},\"trimExcess(address)\":{\"details\":\"This will drain down to the amount of tracked collateral and drain the full balance of any other token.\",\"params\":{\"token\":\"address of the ERC20 token whose excess balance should be drained.\"}},\"withdraw((uint256))\":{\"details\":\"Reverts if the withdrawal puts this position's collateralization ratio below the global collateralization ratio. In that case, use `requestWithdrawal`. Might not withdraw the full requested amount to account for precision loss.\",\"params\":{\"collateralAmount\":\"is the amount of collateral to withdraw.\"},\"returns\":{\"amountWithdrawn\":\"The actual amount of collateral withdrawn.\"}},\"withdrawLiquidation(uint256,address)\":{\"details\":\"If the dispute SUCCEEDED: the sponsor, liquidator, and disputer are eligible for payment. If the dispute FAILED: only the liquidator can receive payment. Once all collateral is withdrawn, delete the liquidation data.\",\"params\":{\"liquidationId\":\"uniquely identifies the sponsor's liquidation.\",\"sponsor\":\"address of the sponsor associated with the liquidation.\"},\"returns\":{\"amountWithdrawn\":\"the total amount of underlying returned from the liquidation.\"}},\"withdrawPassedRequest()\":{\"details\":\"Might not withdraw the full requested amount in order to account for precision loss or if the full requested amount exceeds the collateral in the position (due to paying fees).\",\"returns\":{\"amountWithdrawn\":\"The actual amount of collateral withdrawn.\"}}},\"title\":\"Expiring Multi Party.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"cancelTransferPosition()\":{\"notice\":\"Cancels a pending transfer position request.\"},\"cancelWithdrawal()\":{\"notice\":\"Cancels a pending withdrawal request.\"},\"constructor\":\"Constructs the ExpiringMultiParty contract.\",\"create((uint256),(uint256))\":{\"notice\":\"Creates tokens by creating a new position or by augmenting an existing position. Pulls `collateralAmount` into the sponsor's position and mints `numTokens` of `tokenCurrency`.\"},\"createLiquidation(address,(uint256),(uint256),(uint256),uint256)\":{\"notice\":\"Liquidates the sponsor's position if the caller has enough synthetic tokens to retire the position's outstanding tokens. Liquidations above a minimum size also reset an ongoing \\\"slow withdrawal\\\"'s liveness.\"},\"deposit((uint256))\":{\"notice\":\"Transfers `collateralAmount` of `collateralCurrency` into the caller's position.\"},\"depositTo(address,(uint256))\":{\"notice\":\"Transfers `collateralAmount` of `collateralCurrency` into the specified sponsor's position.\"},\"dispute(uint256,address)\":{\"notice\":\"Disputes a liquidation, if the caller has enough collateral to post a dispute bond and pay a fixed final fee charged on each price request.\"},\"emergencyShutdown()\":{\"notice\":\"Premature contract settlement under emergency circumstances.\"},\"expire()\":{\"notice\":\"Locks contract state in expired and requests oracle price.\"},\"getCollateral(address)\":{\"notice\":\"Accessor method for a sponsor's collateral.\"},\"getCurrentTime()\":{\"notice\":\"Gets the current time. Will return the last time set in `setCurrentTime` if running in test mode. Otherwise, it will return the block timestamp.\"},\"getLiquidations(address)\":{\"notice\":\"Gets all liquidation information for a given sponsor address.\"},\"payRegularFees()\":{\"notice\":\"Pays UMA DVM regular fees (as a % of the collateral pool) to the Store contract.\"},\"pfc()\":{\"notice\":\"Gets the current profit from corruption for this contract in terms of the collateral currency.\"},\"redeem((uint256))\":{\"notice\":\"Burns `numTokens` of `tokenCurrency` and sends back the proportional amount of `collateralCurrency`.\"},\"remargin()\":{\"notice\":\"Theoretically supposed to pay fees and move money between margin accounts to make sure they reflect the NAV of the contract. However, this functionality doesn't apply to this contract.\"},\"requestTransferPosition()\":{\"notice\":\"Requests to transfer ownership of the caller's current position to a new sponsor address. Once the request liveness is passed, the sponsor can execute the transfer and specify the new sponsor.\"},\"requestWithdrawal((uint256))\":{\"notice\":\"Starts a withdrawal request that, if passed, allows the sponsor to withdraw` from their position.\"},\"setCurrentTime(uint256)\":{\"notice\":\"Sets the current time.\"},\"settleExpired()\":{\"notice\":\"After a contract has passed expiry all token holders can redeem their tokens for underlying at the prevailing price defined by the DVM from the `expire` function.\"},\"totalPositionCollateral()\":{\"notice\":\"Accessor method for the total collateral stored within the PricelessPositionManager.\"},\"transferPositionPassedRequest(address)\":{\"notice\":\"After a passed transfer position request (i.e., by a call to `requestTransferPosition` and waiting `withdrawalLiveness`), transfers ownership of the caller's current position to `newSponsorAddress`.\"},\"trimExcess(address)\":{\"notice\":\"Drains any excess balance of the provided ERC20 token to a pre-selected beneficiary.\"},\"withdraw((uint256))\":{\"notice\":\"Transfers `collateralAmount` of `collateralCurrency` from the sponsor's position to the sponsor.\"},\"withdrawLiquidation(uint256,address)\":{\"notice\":\"After a dispute has settled or after a non-disputed liquidation has expired, the sponsor, liquidator, and/or disputer can call this method to receive payments.\"},\"withdrawPassedRequest()\":{\"notice\":\"After a passed withdrawal request (i.e., by a call to `requestWithdrawal` and waiting `withdrawalLiveness`), withdraws `positionData.withdrawalRequestAmount` of collateral currency.\"}},\"notice\":\"Convenient wrapper for Liquidatable.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/circleci/protocol/packages/core/contracts/financial-templates/expiring-multiparty/ExpiringMultiParty.sol\":\"ExpiringMultiParty\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":199},\"remappings\":[]},\"sources\":{\"/home/circleci/protocol/packages/core/contracts/common/implementation/ExpandedERC20.sol\":{\"keccak256\":\"0x24cca39fcaab3e759d15b90a62aaf5c20343318593f598e9d652d3e9e57de191\",\"urls\":[\"bzz-raw://a236292c9c9a00f524c80f61f43e4b795e849531dcb0b5ef868d942e06ccc10c\",\"dweb:/ipfs/Qma9ssE3jQsgijsaSMrfxzzzKY9q79HyA9giqZ8gzjhY5F\"]},\"/home/circleci/protocol/packages/core/contracts/common/implementation/FixedPoint.sol\":{\"keccak256\":\"0xeaa0bef7c35ff2902ef852864d217d75071da9cc96e9cdf5dcb77d54f4e4fefa\",\"urls\":[\"bzz-raw://9c5b1224f4bb7d8d992a1c71b8e2f8c2c8e655af30eb468058dd0eade3218d13\",\"dweb:/ipfs/QmYQ1WUhRwHgfPL5v1MVjCL7AvSVPEdPJt53Q2L5R6zwJU\"]},\"/home/circleci/protocol/packages/core/contracts/common/implementation/Lockable.sol\":{\"keccak256\":\"0xfe828b4a29f9f4610081793374ace7d88d9cb3a3d6fe13fa28097a04de879406\",\"urls\":[\"bzz-raw://6eedeeeb92e1be8721def0edf794b05d5e279a03eb489da05050de765ca04397\",\"dweb:/ipfs/QmXkp7HvFbCkugbhnUDi1MNMNuvkuPPX4odUphgSGKUGAe\"]},\"/home/circleci/protocol/packages/core/contracts/common/implementation/MultiRole.sol\":{\"keccak256\":\"0x93b7932a9bf98defef8cd3dedfd7a11d8054107f123014cfd98970f491e96ed4\",\"urls\":[\"bzz-raw://f4d0201fe3e21a78bb805b9add2d0184be86a0bb706fdfcfd75ac95f8ac4aab9\",\"dweb:/ipfs/QmXjFT3zUMZ1T1omL8d8RTr7MDhCoLuAqFpCKJs3D6tJmy\"]},\"/home/circleci/protocol/packages/core/contracts/common/implementation/Testable.sol\":{\"keccak256\":\"0x15b3f57e51e6e1d5f11b09cefd1cc60550e72fb827bf7cf8ff67b208368c7ec0\",\"urls\":[\"bzz-raw://8bdd28e1cb12662124354cc330acd14733dfbb786daf6401b1f5969a1e11b14d\",\"dweb:/ipfs/QmWY8kEXEALJ55CgHSCPZgAA4b39Ef2YdKshhnvqkyWEcm\"]},\"/home/circleci/protocol/packages/core/contracts/common/implementation/Timer.sol\":{\"keccak256\":\"0x1db17ce4c028ed96713c3fddda6d34155281e104a47b2c65283fd0f8293d78b1\",\"urls\":[\"bzz-raw://8f306faba8d5190f36c87a8f47cce3bd7894bc5540599819aea2dd5b8ffa9413\",\"dweb:/ipfs/Qmeg4wuF1Dw5DAuoxyfnrmMZ5MK6af226hEHxCJgWKgrch\"]},\"/home/circleci/protocol/packages/core/contracts/common/interfaces/ExpandedIERC20.sol\":{\"keccak256\":\"0xdde1eb1c04fb1733219a7946c04ba5e2a763dc7c5e64b71240c2deaab1e811d5\",\"urls\":[\"bzz-raw://e5997f5c5cfb0a76cdcce36e937971b32707d70e7f37bb8cf9722c3c98a3dc63\",\"dweb:/ipfs/QmXtGBrJDk87Rot81L2T1YFyEtivBHMiuaXrgZYnFAsciH\"]},\"/home/circleci/protocol/packages/core/contracts/financial-templates/common/FeePayer.sol\":{\"keccak256\":\"0xba9e84a4241311cf2224f629c1d11269eac6f645c519ecb634c6d985340f1426\",\"urls\":[\"bzz-raw://964b2d18f16ed8aab2b4b084a4f932ea0a6bf26f85b1b1afc732bc19b8da34c9\",\"dweb:/ipfs/QmeRahmU9JKour9fW4DePaJSzWyFvMtL42ETQAd6yP43gh\"]},\"/home/circleci/protocol/packages/core/contracts/financial-templates/common/SyntheticToken.sol\":{\"keccak256\":\"0x750b0eb91030fc42c6bf1cd9029b163a2b156f9c7d193b42b8256f7fc169d196\",\"urls\":[\"bzz-raw://e7b1fde83d251cedcbaeaffd7b3d21ed9b0d47a8dcc6778e0acfe97b03180bda\",\"dweb:/ipfs/QmfUPMfcKd9iYtoNmyAERK5sR8GrEYTyi1robnVxcqD3tD\"]},\"/home/circleci/protocol/packages/core/contracts/financial-templates/common/TokenFactory.sol\":{\"keccak256\":\"0x1c6090fcdb8373afdd4870ca954ddbae55cae1c5d366bbc568d335c52207ef08\",\"urls\":[\"bzz-raw://415fe9d7205a6718db3415b99bd396124498b716b1e80a05681c69b3cadbf1ea\",\"dweb:/ipfs/QmSqvhchN9x7vMPELK2nZpgzEh5HkToGy17FvdBPqFCsjP\"]},\"/home/circleci/protocol/packages/core/contracts/financial-templates/expiring-multiparty/ExpiringMultiParty.sol\":{\"keccak256\":\"0x981d251d3e5ee6600c8df680e68acbe4f0a5345d6ada637d78608cd9ab5d7871\",\"urls\":[\"bzz-raw://775d0c6550c6d0f137eb8ad64f8a87e7b92ab1324302925eb86ba6a23f87ed5a\",\"dweb:/ipfs/QmauuepiuNHuNSR8rK63hqrPrt7MVQxqRxKW2RC4NP9b53\"]},\"/home/circleci/protocol/packages/core/contracts/financial-templates/expiring-multiparty/Liquidatable.sol\":{\"keccak256\":\"0x1f5123dd6b4c479583cc83f7cb106e7403c03a07b5d0ba0920ca0d99f36b4196\",\"urls\":[\"bzz-raw://560c196ade70b6754ab9886793a26819be8bf3a5c8588bf44b2120bba30e761b\",\"dweb:/ipfs/QmPjFZX6HnSt5crH33gHXfQ7gG5T8rZHNm4VoTS5rZkoQ8\"]},\"/home/circleci/protocol/packages/core/contracts/financial-templates/expiring-multiparty/PricelessPositionManager.sol\":{\"keccak256\":\"0x2f10b5de874fdebea0ca59b008b271371704edfc43f1d1f0b7df3e857fc48cdb\",\"urls\":[\"bzz-raw://a5e9042fe349e01d30e1ca9c38a33be79399b8d971f3d8385eb827e044eb9485\",\"dweb:/ipfs/QmSwXLhR6r1UiQnpH95T4raKpWwbGUgW3z123J5JHeAAz7\"]},\"/home/circleci/protocol/packages/core/contracts/oracle/implementation/Constants.sol\":{\"keccak256\":\"0xfa5379e18f31da723268d949acf3ecd8b76593467210032e91e2ac47201e9c80\",\"urls\":[\"bzz-raw://c15222ccf0c0e418ebe2915e59b8765db4335f11a83f5db44436719da02da51a\",\"dweb:/ipfs/QmQfj8ADqa5s7EpeqNmnt1g5YUid9Yc49DQvtufrpL1Npq\"]},\"/home/circleci/protocol/packages/core/contracts/oracle/interfaces/AdministrateeInterface.sol\":{\"keccak256\":\"0xfa1232ab562e3c279e5665745804f4ba9e62758e34d63b71b65dc92bfdd7cac9\",\"urls\":[\"bzz-raw://cc16bafaf3b1ec0a8064946c09fb918db68beaf219d6d1a431beb1b3ef01ede5\",\"dweb:/ipfs/QmZg7BxqNE82CxVm1pYViL3abRRbJgGXp5iAjvVWefzdiJ\"]},\"/home/circleci/protocol/packages/core/contracts/oracle/interfaces/FinderInterface.sol\":{\"keccak256\":\"0x266903a280400446041bbc9c839c2be8805bbde710a42c5cad36d6eb2d932a17\",\"urls\":[\"bzz-raw://16bb92ad84fcec107a09ea6a5b3987f8217842e1c5e676b64fc0c3191f32ed91\",\"dweb:/ipfs/QmVjLDHUuqN527VSrzQAy8ox1infQro6kTaZQ7ezX9weeA\"]},\"/home/circleci/protocol/packages/core/contracts/oracle/interfaces/IdentifierWhitelistInterface.sol\":{\"keccak256\":\"0x0b1eef7b2b24bafb30c446bc99fa826352bb5e8c12b56f0a1867bdcee8583789\",\"urls\":[\"bzz-raw://8c03cc413725a68b581c9ecc363bdc67b1a0263893651836a6f012a1924b621c\",\"dweb:/ipfs/QmYz1wQJHtpoEutko6J4BSKb2bAw8ARQvyviSLN5Pqkr38\"]},\"/home/circleci/protocol/packages/core/contracts/oracle/interfaces/OracleInterface.sol\":{\"keccak256\":\"0xcf0a9487f059626ddfb4555fcc4ea4c1223c68267aaaf342541ebf38d1c37527\",\"urls\":[\"bzz-raw://dc27e5ca23a9d7711ce0d819ac096b4c5609014fad6ccc7bb8a724f761987d5e\",\"dweb:/ipfs/QmZnaKgBefrkis9V5UUfkWKagKAX3dEcYK6WgTRSZhBeRp\"]},\"/home/circleci/protocol/packages/core/contracts/oracle/interfaces/StoreInterface.sol\":{\"keccak256\":\"0x3d885e5bd438f0944d0acd5e87b77cb5030cbf5c88aca9b8d53738eedbf9c194\",\"urls\":[\"bzz-raw://24c9b213a7c87a2bdf62fbeeb6b0051dd4379ea060ada498760a281dda886fa3\",\"dweb:/ipfs/QmZgHZkyG6cQujfJ56hjFHjM2215hCevFusVcvUuss2tgf\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x0de74dfa6b37943c1b834cbd8fb7a8d052e5ff80c7adb33692102dd6cd2985e9\",\"urls\":[\"bzz-raw://9d2d827fcf4a838f5821732c0acd6a40d21c2a5a2cfe2563feec91465f47bb60\",\"dweb:/ipfs/Qmex3wMKf5Sghbfvr288RUg1kP2uAyTMf11w83WbMbpQQc\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x04d34b3cd5677bea25f8dfceb6dec0eaa071d4d4b789a43f13fe0c415ba4c296\",\"urls\":[\"bzz-raw://e7e8b526a6839e5ba14f0d23a830387fec47f7043ce01d42c9f285b709a9d080\",\"dweb:/ipfs/QmXmhhFmX5gcAvVzNiDPAGA35iHMPNaYtQkACswRHBVTNw\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x3211de52f707a62a356a34fdea9d6a7bed46402d5ce45f1891a16fe2132fbb47\",\"urls\":[\"bzz-raw://45dfe794ad43a3674fab38a378c57eb6ed3353949f6529ccad4a4cbc91d45fc5\",\"dweb:/ipfs/QmReFGciE9fgsb6Nas1Fx593pzKWMjaDa1VQg4CEJQaD6U\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x6cc1cb934a3ac2137a7dcaed018af9e235392236ceecfd3687259702b9c767ad\",\"urls\":[\"bzz-raw://0055fa88138cd1c3c6440370f8580f85857f8fe9dec41c99af9eafbeb8d9c3ce\",\"dweb:/ipfs/QmX1xDh8vwGLLCH8ti45eXjQ7Wcxv1FEGTR3jkFnd5Nv6F\"]},\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xa27d8d0bf389702f2b124fff3d86238b17ec0abd47d1401e81dc48a1509dbb9a\",\"urls\":[\"bzz-raw://899c25b79e783c1e4ccdd06928e332e2b37f3ecaa487f49ef68ef9fde6b18f82\",\"dweb:/ipfs/QmV3rZDWabetVSmZ2iviS5tajKzvR3AEwsicKZao4ptTg2\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x5f7da58ee3d9faa9b8999a93d49c8ff978f1afc88ae9bcfc6f9cbb44da011c2b\",\"urls\":[\"bzz-raw://4f089d954b3ecaa26949412fe63e9a184b056562c6c13dd4a0529a5d9a2e685a\",\"dweb:/ipfs/QmVK5iCNAMcEJQxT59bsC5E53JQASDQPU6khHox3d5ZXCn\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "immutableReferences": {},
  "sourceMap": "178:518:30:-:0;;;505:189;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7380:26:33;;7420:25;;;;7459:24;;;;7497:20;;;;7531:26;;;;7571:20;;;;7605:22;;;;7641:26;;;;7681:23;;;;7718:19;;;;7751:29;;;;7380:26;702:28:6;;-1:-1:-1;;;;;;;;;702:28:6;;;-1:-1:-1;;;;;702:28:6;;;-1:-1:-1;;;;864:18:4;;;;7380:26:33;;;7420:25;7459:24;7497:20;7531:26;7571:20;7605:22;7641:26;7681:23;7718:19;7459:24;7497:20;7718:19;1298::4::1;:17;:19::i;:::-;1327:17;:15;:17::i;:::-;3078:18:25::2;:47:::0;;-1:-1:-1;;;;;3078:47:25;;::::2;-1:-1:-1::0;;;;;;3078:47:25;;::::2;;::::0;;;3135:6:::2;:40:::0;;;;::::2;::::0;;;::::2;::::0;;;::::2;::::0;;3203:16:::2;:14;:16::i;:::-;3185:15;:34;;;;3255:30;3283:1;3255:27;;;;;:30;;:::i;:::-;3229:56:::0;:23:::2;:56:::0;1365:20:4::1;:18;:20::i;:::-;-1:-1:-1::0;1298:19:4::1;::::0;-1:-1:-1;;1298:17:4::1;:19::i;:::-;1327:17;:15;:17::i;:::-;8298:16:34::2;:14;:16::i;:::-;8275:20;:39;8267:80;;;::::0;-1:-1:-1;;;8267:80:34;;::::2;::::0;::::2;;;:::i;:::-;;;;;;;;;8365:25;:23;:25::i;:::-;:65;::::0;-1:-1:-1;;;8365:65:34;;-1:-1:-1;;;;;8365:47:34;;;::::2;::::0;::::2;::::0;:65:::2;::::0;8413:16;;8365:65:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8357:106;;;::::0;-1:-1:-1;;;8357:106:34;;::::2;::::0;::::2;;;:::i;:::-;8474:19;:42:::0;;;8526:18:::2;:40:::0;;;8654:52:::2;::::0;-1:-1:-1;;;8654:52:34;;8607:20;;-1:-1:-1;;;;;8654:14:34;::::2;::::0;-1:-1:-1;;8654:52:34::2;::::0;8669:14;;8685:16;;8703:2:::2;::::0;8654:52:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8638:13;:68:::0;;-1:-1:-1;;;;;;8638:68:34;;::::2;-1:-1:-1::0;;;;;8638:68:34;;::::2;;::::0;;;8716:36;;:16:::2;:36:::0;8762:15:::2;:34:::0;;;8806:22:::2;:48:::0;;;;::::2;::::0;;::::2;::::0;;;::::2;::::0;;-1:-1:-1;1365:20:4::1;:18;:20::i;:::-;7738:1123:34::0;;;;;;;;;;;1298:19:4::1;:17;;;:19;;:::i;:::-;1327:17;:15;:17::i;:::-;7836:45:33::2;7879:1;7836:6;:28;;;:42;;;;;;:45;;;;:::i;:::-;7828:78;;;::::0;-1:-1:-1;;;7828:78:33;;::::2;::::0;::::2;;;:::i;:::-;7937:81;8016:1;7937:67;7972:6;:31;;;7937:6;:30;;;:34;;;;;;:67;;;;:::i;:::-;:78;;;;;;:81;;;;:::i;:::-;7916:154;;;::::0;-1:-1:-1;;;7916:154:33;;::::2;::::0;::::2;;;:::i;:::-;8151:26;::::0;::::2;::::0;8129:19:::2;:48:::0;8211:28:::2;::::0;::::2;::::0;8187:52;:21:::2;:52:::0;8266:21:::2;::::0;::::2;::::0;8249:38;:14:::2;:38:::0;8323:30:::2;::::0;::::2;::::0;8297:56;:23:::2;:56:::0;8390:31:::2;::::0;::::2;::::0;8363:58;:24:::2;:58:::0;1365:20:4::1;:18;:20::i;:::-;7274:1154:33::0;505:189:30;178:518;;2117:186:4;2249:11;;-1:-1:-1;;;2249:11:4;;;;2241:55;;;;-1:-1:-1;;;2241:55:4;;;;;;;:::i;:::-;2117:186::o;2309:136::-;2433:5;2419:19;;-1:-1:-1;;;;2419:19:4;;;2309:136::o;1431:256:6:-;1478:7;1501:12;;-1:-1:-1;;;;;1501:12:6;:28;1497:184;;1558:12;;1552:36;;;-1:-1:-1;;;1552:36:6;;;;-1:-1:-1;;;;;1558:12:6;;;;1552:34;;:36;;;;;;;;;;;;;;;1558:12;1552:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1545:43;;;;1497:184;-1:-1:-1;1626:3:6;1497:184;1431:256;:::o;722:135:3:-;782:15;;:::i;:::-;816:34;;;;;;;;825:24;436:6;825:1;:5;;;;;;:24;;;;:::i;:::-;816:34;;809:41;722:135;-1:-1:-1;;722:135:3:o;2451:206:4:-;2632:11;:18;;-1:-1:-1;;;;2632:18:4;-1:-1:-1;;;2632:18:4;;;2451:206::o;36631:211:34:-;36765:6;;:69;;-1:-1:-1;;;36765:69:34;;36689:28;;-1:-1:-1;;;;;36765:6:34;;:31;;:69;;-1:-1:-1;;;36797:36:34;36765:69;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;36729:106;;36631:211;:::o;1938:147:3:-;2014:4;2050:19;2067:1;2050:16;:19::i;:::-;:28;2037:10;;:41;;-1:-1:-1;1938:147:3;;;;;:::o;6123:151::-;6197:15;;:::i;:::-;6231:36;;;;;;;;6240:26;6255:1;:10;;;6240:1;:10;;;:14;;;;;;:26;;;;:::i;:::-;6231:36;;6224:43;6123:151;-1:-1:-1;;;6123:151:3:o;3874:144::-;3947:4;3983:19;4000:1;3983:16;:19::i;:::-;:28;3970:10;;:41;;-1:-1:-1;3874:144:3;;;;:::o;2119:459:70:-;2177:7;2418:6;2414:45;;-1:-1:-1;2447:1:70;2440:8;;2414:45;2481:5;;;2485:1;2481;:5;:1;2504:5;;;;;:10;2496:56;;;;-1:-1:-1;;;2496:56:70;;;;;;;:::i;:::-;2570:1;2119:459;-1:-1:-1;;;2119:459:70:o;834:176::-;892:7;923:5;;;946:6;;;;938:46;;;;-1:-1:-1;;;938:46:70;;;;;;;:::i;178:518:30:-;;;;;;;;;;;;;;:::o;5:134:-1:-;83:13;;101:33;83:13;101:33;:::i;610:444::-;;723:3;716:4;708:6;704:17;700:27;690:2;;-1:-1;;731:12;690:2;765:13;;-1:-1;13658:30;;13655:2;;;-1:-1;;13691:12;13655:2;793:65;13832:4;-1:-1;;13764:9;13745:17;;13741:33;13822:15;793:65;:::i;:::-;784:74;;878:6;871:5;864:21;982:3;13832:4;973:6;906;964:16;;961:25;958:2;;;999:1;;989:12;958:2;1009:39;1041:6;13832:4;940:5;936:16;13832:4;906:6;902:17;1009:39;:::i;:::-;;683:371;;;;:::o;4381:349::-;;4506:4;4494:9;4489:3;4485:19;4481:30;4478:2;;;-1:-1;;4514:12;4478:2;4542:20;4506:4;4542:20;:::i;:::-;4815:13;;4623:86;;-1:-1;4533:29;4472:258;-1:-1;4472:258::o;4878:263::-;;4993:2;4981:9;4972:7;4968:23;4964:32;4961:2;;;-1:-1;;4999:12;4961:2;89:6;83:13;101:33;128:5;101:33;:::i;5148:257::-;;5260:2;5248:9;5239:7;5235:23;5231:32;5228:2;;;-1:-1;;5266:12;5228:2;227:6;221:13;15547:5;14319:13;14312:21;15525:5;15522:32;15512:2;;-1:-1;;15558:12;5728:412;;5878:2;5866:9;5857:7;5853:23;5849:32;5846:2;;;-1:-1;;5884:12;5846:2;5929:24;;-1:-1;5962:30;;;5959:2;;;-1:-1;;5995:12;5959:2;6107:6;6096:9;6092:22;;;1241:6;;1229:9;1224:3;1220:19;1216:32;1213:2;;;-1:-1;;1251:12;1213:2;1279:22;1241:6;1279:22;:::i;:::-;1270:31;;1430:22;4815:13;1380:16;1373:86;5878:2;1603:9;1599:22;4815:13;5878:2;1553:5;1549:16;1542:86;1735:60;1791:3;1702:2;1771:9;1767:22;1735:60;:::i;:::-;1702:2;1721:5;1717:16;1710:86;1899:60;1955:3;1866:2;1935:9;1931:22;1899:60;:::i;:::-;1866:2;1885:5;1881:16;1874:86;2070:60;2126:3;2036;2106:9;2102:22;2070:60;:::i;:::-;2036:3;2056:5;2052:16;2045:86;2234:60;2290:3;2200;2270:9;2266:22;2234:60;:::i;:::-;2200:3;2220:5;2216:16;2209:86;2408:60;2464:3;2374;2444:9;2440:22;2408:60;:::i;:::-;2374:3;2394:5;2390:16;2383:86;2545:3;2615:9;2611:22;359:13;2545:3;2565:5;2561:16;2554:86;2731:3;;2720:9;2716:19;2710:26;5973:18;2748:6;2745:30;2742:2;;;-1:-1;;2778:12;2742:2;2825:70;2891:3;2882:6;2871:9;2867:22;2825:70;:::i;:::-;2731:3;2809:5;2805:18;2798:98;;;2989:3;;2978:9;2974:19;2968:26;5973:18;3006:6;3003:30;3000:2;;;-1:-1;;3036:12;3000:2;3083:70;3149:3;3140:6;3129:9;3125:22;3083:70;:::i;:::-;2989:3;3067:5;3063:18;3056:98;;;3227:3;;;3263:85;3344:3;3227;3324:9;3320:22;3263:85;:::i;:::-;3227:3;3247:5;3243:18;3236:113;3425:3;;;;3497:9;3493:22;4815:13;3425:3;3445:5;3441:18;3434:88;3600:3;;;3636:85;3717:3;3600;3697:9;3693:22;3636:85;:::i;:::-;3600:3;3620:5;3616:18;3609:113;3793:3;;;3829:85;3910:3;3793;3890:9;3886:22;3829:85;:::i;:::-;3793:3;3813:5;3809:18;3802:113;3995:3;;;4031:85;4112:3;3995;4092:9;4088:22;4031:85;:::i;:::-;3995:3;4015:5;4011:18;4004:113;4198:3;;;4234:85;4315:3;4198;4295:9;4291:22;4234:85;:::i;:::-;4214:18;;;4207:113;;;;4218:5;5840:300;-1:-1;;;;5840:300::o;6147:263::-;;6262:2;6250:9;6241:7;6237:23;6233:32;6230:2;;;-1:-1;;6268:12;6230:2;-1:-1;4815:13;;6224:186;-1:-1;6224:186::o;6684:347::-;;6829:5;13942:12;14099:6;14094:3;14087:19;6923:52;6968:6;14136:4;14131:3;14127:14;14136:4;6949:5;6945:16;6923:52;:::i;:::-;13764:9;15305:14;-1:-1;;15301:28;6987:39;;;;14136:4;6987:39;;6776:255;-1:-1;;6776:255::o;9431:222::-;6488:37;;;9558:2;9543:18;;9529:124::o;9660:634::-;;9890:2;9911:17;9904:47;9965:78;9890:2;9879:9;9875:18;10029:6;9965:78;:::i;:::-;10091:9;10085:4;10081:20;10076:2;10065:9;10061:18;10054:48;10116:78;10189:4;10180:6;10116:78;:::i;:::-;10108:86;;;14823:4;6665:5;14812:16;10280:2;10269:9;10265:18;6615:57;9861:433;;;;;;:::o;10301:416::-;10501:2;10515:47;;;7263:2;10486:18;;;14087:19;7299:29;14127:14;;;7279:50;7348:12;;;10472:245::o;10724:416::-;10924:2;10938:47;;;7599:2;10909:18;;;14087:19;7635:28;14127:14;;;7615:49;7683:12;;;10895:245::o;11147:416::-;11347:2;11361:47;;;7934:2;11332:18;;;14087:19;7970:30;14127:14;;;7950:51;8020:12;;;11318:245::o;11570:416::-;11770:2;11784:47;;;8271:2;11755:18;;;14087:19;-1:-1;;;14127:14;;;8287:43;8349:12;;;11741:245::o;11993:416::-;12193:2;12207:47;;;8600:2;12178:18;;;14087:19;8636:34;14127:14;;;8616:55;-1:-1;;;8691:12;;;8684:25;8728:12;;;12164:245::o;12416:416::-;12616:2;12630:47;;;8979:2;12601:18;;;14087:19;9015:30;14127:14;;;8995:51;9065:12;;;12587:245::o;12839:416::-;13039:2;13053:47;;;9316:2;13024:18;;;14087:19;9352:33;14127:14;;;9332:54;9405:12;;;13010:245::o;13262:256::-;13324:2;13318:9;13350:17;;;13446:22;;;-1:-1;13410:34;;13407:62;13404:2;;;13482:1;;13472:12;13404:2;13324;13491:22;13302:216;;-1:-1;13302:216::o;14961:268::-;15026:1;15033:101;15047:6;15044:1;15041:13;15033:101;;;15114:11;;;15108:18;15095:11;;;15088:39;15069:2;15062:10;15033:101;;;15149:6;15146:1;15143:13;15140:2;;;15026:1;15205:6;15200:3;15196:16;15189:27;15140:2;;15010:219;;;:::o;15342:117::-;-1:-1;;;;;14607:54;;15401:35;;15391:2;;15450:1;;15440:12;15391:2;15385:74;:::o;:::-;178:518:30;;;;;;",
  "deployedSourceMap": "178:518:30:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2791:49:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1095:32:25;;;:::i;:::-;;;;;;;:::i;12455:738:34:-;;;;;;:::i;:::-;;:::i;:::-;;356:27:6;;;:::i;4295:37:34:-;;;:::i;19028:469::-;;;:::i;1071:115:6:-;;;;;;:::i;:::-;;:::i;31434:725:34:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;9827:6645:33:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;1431:256:6:-;;;:::i;4727:34:33:-;;;:::i;17407:1546:34:-;;;:::i;29858:691::-;;;:::i;19538:5726:33:-;;;;;;:::i;:::-;;:::i;9310:677:34:-;;;:::i;5102:41:33:-;;;:::i;4201:2279:25:-;;;:::i;14342:1252:34:-;;;;;;:::i;:::-;;:::i;33067:234::-;;;:::i;4865:48:33:-;;;:::i;4007:57::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;4111:51::-;;;:::i;2559:49:34:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;10421:1065::-;;;;;;:::i;:::-;;:::i;5512:51:33:-;;;:::i;22495:1995:34:-;;;;;;:::i;:::-;;:::i;20128:1808::-;;;;;;:::i;:::-;;:::i;3161:35::-;;;:::i;28813:404::-;;;:::i;6951:113:25:-;;;:::i;1491:34:34:-;;;:::i;:::-;;;;;;;:::i;3052:53::-;;;:::i;4077:43::-;;;:::i;3255:30::-;;;:::i;32536:311::-;;;;;;:::i;:::-;;:::i;3404:34::-;;;:::i;3980:33::-;;;:::i;25517:207:33:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;17235:1610::-;;;;;;:::i;:::-;;:::i;11568:415:34:-;;;:::i;1209:29:25:-;;;:::i;15918:993:34:-;;;;;;:::i;:::-;;:::i;31013:96::-;;;:::i;5302:50:33:-;;;:::i;13594:221:34:-;;;;;;:::i;:::-;;:::i;1873:50:25:-;;;:::i;4172:38:34:-;;;:::i;25116:3363::-;;;:::i;2791:49::-;;;;:::o;1095:32:25:-;;;-1:-1:-1;;;;;1095:32:25;;:::o;12455:738:34:-;5977:20;:18;:20::i;:::-;12607:7:::1;6526:40;6558:7;6526:31;:40::i;:::-;2409:16:25::2;:14;:16::i;:::-;;1298:19:4::3;:17;:19::i;:::-;1327:17;:15;:17::i;:::-;12676:33:34::4;:16:::0;12707:1:::4;12676:30;:33::i;:::-;12668:71;;;::::0;-1:-1:-1;;;12668:71:34;;::::4;::::0;::::4;;;:::i;:::-;;;;;;;;;12749:33;12785:25;12802:7;12785:16;:25::i;:::-;12749:61;;12906:60;12935:12;12949:16;12906:28;:60::i;:::-;-1:-1:-1::0;12999:25:34;;12982:43:::4;::::0;-1:-1:-1;;;;;12982:43:34;::::4;::::0;::::4;::::0;12999:25:::4;::::0;12982:43:::4;13160:25:::0;;13097:18:::4;::::0;:89:::4;::::0;-1:-1:-1;;;;;13097:18:34;;::::4;::::0;13133:10:::4;::::0;13153:4:::4;::::0;13097:35:::4;:89::i;:::-;1354:1:4;1365:20:::3;:18;:20::i;:::-;6007:1:34::1;12455:738:::0;;:::o;356:27:6:-;;;-1:-1:-1;;;;;356:27:6;;:::o;4295:37:34:-;;;-1:-1:-1;;;;;4295:37:34;;:::o;19028:469::-;1298:19:4;:17;:19::i;:::-;1327:17;:15;:17::i;:::-;19090:33:34::1;19126:28;19143:10;19126:16;:28::i;:::-;19090:64;;19172:12;:43;;;19219:1;19172:48;;19164:82;;;::::0;-1:-1:-1;;;19164:82:34;;::::1;::::0;::::1;;;:::i;:::-;19300:36;::::0;::::1;:45:::0;19262:84:::1;::::0;19288:10:::1;::::0;19262:84:::1;::::0;19300:45:::1;::::0;19262:84:::1;19453:37;19477:12;19453:23;:37::i;:::-;1354:1:4;1365:20:::0;:18;:20::i;:::-;19028:469:34:o;1071:115:6:-;873:3;849:12;-1:-1:-1;;;;;849:12:6;841:37;;;;;;1145:12:::1;::::0;1139:40:::1;::::0;-1:-1:-1;;;1139:40:6;;-1:-1:-1;;;;;1145:12:6;;::::1;::::0;1139:34:::1;::::0;:40:::1;::::0;1174:4;;1139:40:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1071:115:::0;:::o;31434:725:34:-;31508:33;;:::i;:::-;2409:16:25;:14;:16::i;:::-;;1298:19:4::1;:17;:19::i;:::-;1327:17;:15;:17::i;:::-;31553:34:34::2;;:::i;:::-;31590:51;::::0;;::::2;::::0;::::2;::::0;;;;-1:-1:-1;;;31610:30:34;;;31590:51;-1:-1:-1;;;;;31610:15:34;::::2;-1:-1:-1::0;31610:30:34::2;31634:4;31610:30:::0;;;::::2;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;31590:51:::0;;31682:18:::2;::::0;31553:88;;-1:-1:-1;;;;;;31656:45:34;;::::2;31682:18:::0;::::2;31656:45;31652:432;;;31930:19;31942:6;:4;:6::i;:::-;31930:7:::0;;:11:::2;:19::i;:::-;31921:28;;31652:432;;;32066:7;32057:16;;31652:432;32112:22;::::0;32136:15;;32093:59:::2;::::0;-1:-1:-1;;;;;32093:18:34;;::::2;::::0;32112:22;::::2;::::0;32093:18:::2;:59::i;:::-;1354:1:4;1365:20:::1;:18;:20::i;:::-;31434:725:34::0;;;:::o;9827:6645:33:-;10203:21;10238:43;;:::i;:::-;10295:39;;:::i;:::-;2409:16:25;:14;:16::i;:::-;;5977:20:34::1;:18;:20::i;:::-;1298:19:4::2;:17;:19::i;:::-;1327:17;:15;:17::i;:::-;10450:8:33::3;10430:16;:14;:16::i;:::-;:28;;10422:61;;;::::0;-1:-1:-1;;;10422:61:33;;::::3;::::0;::::3;;;:::i;:::-;10540:40;10583:25;10600:7;10583:16;:25::i;:::-;10540:68:::0;-1:-1:-1;10638:75:33::3;;;::::0;;::::3;::::0;::::3;10653:20:::0;10638:75:::3;:::i;:::-;;::::0;;::::3;::::0;::::3;::::0;;;;;;;:14:::3;:75::i;:::-;10619:94;;10941:42;;:::i;:::-;10986:60;::::0;;::::3;::::0;::::3;::::0;;;11012:33:::3;::::0;::::3;10986:60:::0;;;::::3;::::0;:25:::3;:60::i;:::-;10941:105;;11056:57;;:::i;:::-;11116:30;11144:1;11116:27;:30::i;:::-;11160:61;::::0;;::::3;::::0;::::3;::::0;;;:43:::3;::::0;::::3;:61:::0;;;11056:90;;-1:-1:-1;11160:78:33::3;::::0;11222:15;11160:61:::3;:78::i;:::-;11156:206;;;11287:64;::::0;;::::3;::::0;::::3;::::0;;;11307:43:::3;::::0;::::3;11287:64:::0;;;::::3;::::0;:15;;:19:::3;:64::i;:::-;11254:97;;11156:206;11443:38;;:::i;:::-;-1:-1:-1::0;11443:78:33::3;::::0;;::::3;::::0;::::3;::::0;;;;;;;11765:91:::3;11825:30:::0;11765:38:::3;11443:78:::0;11765:25:::3;;::::0;;::::3;::::0;::::3;:21:::0;:25:::3;:::i;:::-;::::0;::::3;:38::i;:::-;:59:::0;::::3;:91::i;:::-;11740:180;;;::::0;-1:-1:-1;;;11740:180:33;;::::3;::::0;::::3;;;:::i;:::-;12045:88;12102:30;12045:38;12071:11;12045:21;:25;;;;;;;;;;:::i;:38::-;:56:::0;::::3;:88::i;:::-;12020:177;;;::::0;-1:-1:-1;;;12020:177:33;;::::3;::::0;::::3;;;:::i;:::-;1354:1:4;12286:19:33;:17;:19::i;:::-;12271:34;;12375:43;;:::i;:::-;12428:47;;:::i;:::-;12557:32;;:::i;:::-;12592:59;::::0;;::::3;::::0;::::3;::::0;;;;;;;::::3;::::0;:16;;:20:::3;:59::i;:::-;12557:94:::0;-1:-1:-1;12768:26:33::3;:15:::0;12557:94;12768:19:::3;:26::i;:::-;12749:45:::0;-1:-1:-1;12989:41:33::3;:30:::0;13024:5;12989:34:::3;:41::i;:::-;12966:64;;13200:51;;:::i;:::-;13254:47;::::0;;::::3;::::0;::::3;::::0;;;:43:::3;::::0;::::3;:47:::0;;;:84:::3;::::0;13319:5;13254:47:::3;:84::i;:::-;13200:138;;13352:93;13375:7;13384:16;13402;13420:24;13352:22;:93::i;:::-;-1:-1:-1::0;13525:76:33::3;::::0;-1:-1:-1;13540:24:33::3;13566:34;:16:::0;13587:12;13566:20:::3;:34::i;:::-;13525:14;:76::i;:::-;-1:-1:-1::0;;;;;;13908:21:33;::::3;;::::0;;;:12:::3;:21;::::0;;;;;;;;:28;;13986:598;;::::3;::::0;::::3;::::0;;;;;14066:10:::3;13986:598:::0;;::::3;::::0;;;;-1:-1:-1;13986:598:33;;;;;;;13908:28;-1:-1:-1;13908:21:33;13986:598;;;14153:16:::3;:14;:16::i;:::-;13986:598;;;;14206:16;13986:598;;;;14258:16;13986:598;;;;14314:20;13986:598;;;;14371:55;14395:30;14423:1;14395:27;:30::i;:::-;14371:23;:55::i;:::-;13986:598:::0;;14462:1:::3;13986:598;::::0;::::3;::::0;;;;;;;;14499:30:::3;::::0;:27:::3;:30::i;:::-;13986:598:::0;;::::3;::::0;;::::3;::::0;;;13946:648;;::::3;::::0;;::::3;::::0;;-1:-1:-1;13946:648:33;;;;;;;;;::::3;::::0;;::::3;;::::0;;-1:-1:-1;;;;;;13946:648:33;;::::3;-1:-1:-1::0;;;;;13946:648:33;;::::3;;::::0;;;;::::3;::::0;;;::::3;::::0;;;;::::3;::::0;;;::::3;::::0;;;::::3;::::0;;;::::3;::::0;::::3;::::0;;;;;;-1:-1:-1;;;;13946:648:33::3;-1:-1:-1::0;;;13946:648:33;::::3;::::0;::::3;;;;;;;;::::0;;-1:-1:-1;13946:648:33::3;::::0;::::3;::::0;::::3;::::0;::::3;::::0;::::3;::::0;::::3;::::0;;::::3;::::0;::::3;::::0;::::3;::::0;::::3;::::0;;::::3;::::0;::::3;::::0;::::3;::::0;::::3;::::0;;::::3;::::0;::::3;::::0;::::3;::::0;::::3;::::0;;::::3;::::0;::::3;::::0;::::3;::::0;::::3;::::0;::::3;::::0;::::3;::::0;;-1:-1:-1;;;;;;13946:648:33::3;-1:-1:-1::0;;;;;13946:648:33;;::::3;::::0;;;::::3;::::0;;::::3;::::0;::::3;::::0;;::::3;::::0;::::3;::::0;::::3;::::0;;::::3;::::0;;::::3;::::0;;::::3;::::0;15296:44:::3;;:::i;:::-;-1:-1:-1::0;15296:63:33::3;::::0;;::::3;::::0;::::3;::::0;;;15343:16:::3;15296:63:::0;;;15386:50:::3;::::0;::::3;::::0;:54;;;;:189:::3;;;15559:16;:14;:16::i;:::-;15505:19;:50;;;:70;;15386:189;:305;;;;-1:-1:-1::0;15635:56:33::3;:16:::0;15673:17;15635:37:::3;:56::i;:::-;15369:515;;;15832:41;15853:19;;15832:16;:14;:16::i;:::-;:20:::0;::::3;:41::i;:::-;15779:50;::::0;::::3;:94:::0;15369:515:::3;15976:13;15952:10;-1:-1:-1::0;;;;;15899:251:33::3;15931:7;-1:-1:-1::0;;;;;15899:251:33::3;;16003:16;:25;;;16042:16;:25;;;16081:20;:29;;;16124:16;:14;:16::i;:::-;15899:251;;;;;;;;;:::i;:::-;;;;;;;;16245:25:::0;;16187:13:::3;::::0;:84:::3;::::0;-1:-1:-1;;;;;16187:13:33;;::::3;::::0;16218:10:::3;::::0;16238:4:::3;::::0;16187:30:::3;:84::i;:::-;16281:13;::::0;16300:25;;16281:45:::3;::::0;-1:-1:-1;;;16281:45:33;;-1:-1:-1;;;;;16281:13:33;;::::3;::::0;:18:::3;::::0;:45:::3;::::0;::::3;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;-1:-1:-1::0;;16443:21:33;;16380:18:::3;::::0;:85:::3;::::0;-1:-1:-1;;;;;;16380:18:33::3;::::0;-1:-1:-1;16416:10:33::3;::::0;16436:4:::3;::::0;16380:35:::3;:85::i;:::-;1354:1:4;;;;;;1365:20:::2;:18;:20::i;:::-;9827:6645:33::0;;;;;;;;;:::o;1431:256:6:-;1478:7;1501:12;;-1:-1:-1;;;;;1501:12:6;:28;1497:184;;1558:12;;1552:36;;;-1:-1:-1;;;1552:36:6;;;;-1:-1:-1;;;;;1558:12:6;;;;1552:34;;:36;;;;;;;;;;;;;;;1558:12;1552:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1545:43;;;;1497:184;-1:-1:-1;1626:3:6;1497:184;1431:256;:::o;4727:34:33:-;;;;:::o;17407:1546:34:-;17540:42;;:::i;:::-;5977:20;:18;:20::i;:::-;2409:16:25::1;:14;:16::i;:::-;;1298:19:4::2;:17;:19::i;:::-;1327:17;:15;:17::i;:::-;17598:33:34::3;17634:28;17651:10;17634:16;:28::i;:::-;17598:64;;17693:12;:43;;;17740:1;17693:48;;:131;;;;;17808:16;:14;:16::i;:::-;17761:12;:43;;;:63;;17693:131;17672:202;;;::::0;-1:-1:-1;;;17672:202:34;;::::3;::::0;::::3;;;:::i;:::-;18098:43;;:::i;:::-;-1:-1:-1::0;18098:82:34::3;::::0;;::::3;::::0;;::::3;::::0;;18144:36:::3;::::0;::::3;18098:82:::0;;;18245:53;;;;::::3;::::0;;;18271:26:::3;::::0;::::3;18245:53:::0;;;18098:82;18194:105:::3;::::0;18245:53:::3;::::0;:25:::3;:53::i;:::-;18194:50;::::0;;::::3;::::0;::::3;::::0;;;:36:::3;::::0;::::3;:50:::0;;;;::::3;:105::i;:::-;18190:208;;;18334:53;::::0;;::::3;::::0;::::3;::::0;;;18360:26:::3;::::0;::::3;18334:53:::0;;;::::3;::::0;:25:::3;:53::i;:::-;18315:72;;18190:208;18503:60;18532:12;18546:16;18503:28;:60::i;:::-;18485:78;;18670:37;18694:12;18670:23;:37::i;:::-;18842:24:::0;;18798:18:::3;::::0;:69:::3;::::0;-1:-1:-1;;;;;18798:18:34;;::::3;::::0;18830:10:::3;::::0;18798:31:::3;:69::i;:::-;18921:24:::0;;18883:63:::3;::::0;18909:10:::3;::::0;18883:63:::3;::::0;18921:24:::3;::::0;18883:63:::3;1354:1:4;;1365:20:::2;:18;:20::i;29858:691:34:-:0;5977:20;:18;:20::i;:::-;6430:16:::1;:14;:16::i;:::-;1298:19:4::2;:17;:19::i;:::-;1327:17;:15;:17::i;:::-;29988:36:34::3;:34;:36::i;:::-;-1:-1:-1::0;;;;;29974:50:34::3;:10;:50;29966:82;;;::::0;-1:-1:-1;;;29966:82:34;;::::3;::::0;::::3;;;:::i;:::-;30059:13;:51:::0;;-1:-1:-1;;30059:51:34::3;30075:35;30059:51;::::0;;30335:19:::3;::::0;30386:16:::3;:14;:16::i;:::-;30364:19;:38:::0;;;30412:40:::3;::::0;:19:::3;:40::i;:::-;30522:19;::::0;30468:74:::3;::::0;30486:10:::3;::::0;30468:74:::3;::::0;::::3;::::0;30498:22;;30468:74:::3;:::i;:::-;;;;;;;;1354:1:4;1365:20:::2;:18;:20::i;19538:5726:33:-:0;19722:42;;:::i;:::-;19643:13;19658:7;6942:37;6956:13;6971:7;6942:13;:37::i;:::-;2409:16:25::1;:14;:16::i;:::-;;1298:19:4::2;:17;:19::i;:::-;1327:17;:15;:17::i;:::-;19780:35:33::3;19818:43;19838:7;19847:13;19818:19;:43::i;:::-;19907:20;::::0;::::3;::::0;;;-1:-1:-1;;;;;;19907:20:33::3;19893:10;:34;::::0;19892:94:::3;;-1:-1:-1::0;19963:22:33::3;::::0;::::3;::::0;-1:-1:-1;;;;;19963:22:33::3;19949:10;:36;19892:94;:149;;;-1:-1:-1::0;20021:19:33;;-1:-1:-1;;;;;20021:19:33::3;20007:10;:33;19892:149;19871:226;;;::::0;-1:-1:-1;;;19871:226:33;;::::3;::::0;::::3;;;:::i;:::-;20214:31;20222:13;20237:7;20214;:31::i;:::-;20426:41;;:::i;:::-;20470:56;::::0;;::::3;::::0;::::3;::::0;;;20496:29:::3;::::0;::::3;20470:56:::0;;;::::3;::::0;:25:::3;:56::i;:::-;20426:100;;20536:42;;:::i;:::-;-1:-1:-1::0;20536:72:33::3;::::0;;::::3;::::0;::::3;::::0;;;20581:27:::3;::::0;::::3;20536:72:::0;;;20618:47:::3;;:::i;:::-;20668:33;::::0;;::::3;::::0;::::3;::::0;;;:29:::3;::::0;::::3;:33:::0;;;:92:::3;::::0;20736:14;;20668:50:::3;::::0;20702:15;20668:33:::3;:50::i;:92::-;20618:142;;20770:37;;:::i;:::-;20810:32;::::0;;::::3;::::0;::::3;::::0;;;:28:::3;::::0;::::3;:32:::0;;;:48:::3;::::0;20843:14;20810:32:::3;:48::i;:::-;20770:88;;20868:48;;:::i;:::-;20919:28;::::0;;::::3;::::0;::::3;::::0;;;:24:::3;:28:::0;;;:50:::3;::::0;20948:20;20919:28:::3;:50::i;:::-;20868:101;;20979:47;;:::i;:::-;21029:27;::::0;;::::3;::::0;::::3;::::0;;;:23:::3;:27:::0;;;:49:::3;::::0;21057:20;21029:27:::3;:49::i;:::-;20979:99;;21088:44;;:::i;:::-;21135:30;::::0;;::::3;::::0;::::3;::::0;;;21150:14:::3;21135:30:::0;;;::::3;::::0;:10;;:14:::3;:30::i;:::-;21088:77;;21175:35;;:::i;:::-;21213:24;::::0;;::::3;::::0;::::3;::::0;;;:20:::3;::::0;::::3;:24:::0;;;:40:::3;::::0;21238:14;21213:24:::3;:40::i;:::-;21175:78;;21633:43;;:::i;:::-;21679:30;21707:1;21679:27;:30::i;:::-;21633:76:::0;-1:-1:-1;21744:23:33::3;21723:17;::::0;::::3;::::0;-1:-1:-1;;;21723:17:33;::::3;;;:44;::::0;::::3;;;;;;;21719:2978;;;21898:20;::::0;::::3;::::0;-1:-1:-1;;;;;21898:20:33::3;21884:10;:34;21880:376;;;22023:40;;:::i;:::-;22066:58;22115:8:::0;22066:44:::3;:21:::0;22092:17;22066:25:::3;:44::i;:::-;:48:::0;::::3;:58::i;:::-;22023:101:::0;-1:-1:-1;22161:35:33::3;:16:::0;22023:101;22161:20:::3;:35::i;:::-;22221:20;::::0;::::3;22214:27:::0;;-1:-1:-1;;;;;;22214:27:33::3;::::0;;22142:54;-1:-1:-1;;21880:376:33::3;22288:19:::0;;-1:-1:-1;;;;;22288:19:33::3;22274:10;:33;22270:466;;;22416:46;;:::i;:::-;22465:36;:10:::0;22480:20;22465:14:::3;:36::i;:::-;22416:85;;22519:39;;:::i;:::-;22561:45;:20:::0;22586:19;22561:24:::3;:45::i;:::-;22519:87:::0;-1:-1:-1;22643:34:33::3;:16:::0;22519:87;22643:20:::3;:34::i;:::-;22695:26:::0;;-1:-1:-1;;;;;;22695:26:33::3;::::0;;22624:53;-1:-1:-1;;;22270:466:33::3;22768:22;::::0;::::3;::::0;-1:-1:-1;;;;;22768:22:33::3;22754:10;:36;22750:686;;;23144:42;;:::i;:::-;23189:111;23261:21:::0;23189:46:::3;:20:::0;23214;23189:24:::3;:46::i;:::-;:50:::0;::::3;:111::i;:::-;23144:156:::0;-1:-1:-1;23337:37:33::3;:16:::0;23144:156;23337:20:::3;:37::i;:::-;23399:22;::::0;::::3;23392:29:::0;;-1:-1:-1;;;;;;23392:29:33::3;::::0;;23318:56;-1:-1:-1;;22750:686:33::3;23584:20;::::0;::::3;::::0;-1:-1:-1;;;;;23584:20:33::3;:34:::0;:87;::::3;;;-1:-1:-1::0;23638:19:33;;-1:-1:-1;;;;;23638:19:33::3;:33:::0;23584:87:::3;:143;;;;-1:-1:-1::0;23691:22:33::3;::::0;::::3;::::0;-1:-1:-1;;;;;23691:22:33::3;:36:::0;23584:143:::3;23563:255;;;23767:12;:21;23780:7;-1:-1:-1::0;;;;;23767:21:33::3;-1:-1:-1::0;;;;;23767:21:33::3;;;;;;;;;;;;23789:13;23767:36;;;;;;;;;::::0;;;::::3;::::0;;::::3;::::0;;;::::3;;23760:43:::0;;-1:-1:-1;;;;;;23760:43:33;;::::3;::::0;;-1:-1:-1;23760:43:33;::::3;::::0;;-1:-1:-1;;;;;;23760:43:33;;;::::3;::::0;::::3;::::0;;;::::3;::::0;::::3;::::0;;;::::3;::::0;::::3;::::0;;;::::3;::::0;::::3;::::0;;;::::3;::::0;::::3;::::0;;;::::3;::::0;::::3;::::0;;;;::::3;::::0;;::::3;::::0;::::3;::::0;;;::::3;;::::0;23563:255:::3;21719:2978;;;23940:20;23919:17;::::0;::::3;::::0;-1:-1:-1;;;23919:17:33;::::3;;;:41;::::0;::::3;;;;;;;:81;;;;-1:-1:-1::0;23978:22:33::3;::::0;::::3;::::0;-1:-1:-1;;;;;23978:22:33::3;23964:10;:36;23919:81;23915:782;;;24113:47;24151:8:::0;24113:33:::3;:10:::0;24128:17;24113:14:::3;:33::i;:47::-;24094:66;;24181:12;:21;24194:7;-1:-1:-1::0;;;;;24181:21:33::3;-1:-1:-1::0;;;;;24181:21:33::3;;;;;;;;;;;;24203:13;24181:36;;;;;;;23915:782;24450:17;24429::::0;;::::3;::::0;-1:-1:-1;;;24429:17:33;::::3;;;:38;::::0;::::3;;;;;;;:78;;;;-1:-1:-1::0;24485:22:33::3;::::0;::::3;::::0;-1:-1:-1;;;;;24485:22:33::3;24471:10;:36;24429:78;24425:272;;;24605:24;:10:::0;24620:8;24605:14:::3;:24::i;:::-;24586:43;;24650:12;:21;24663:7;-1:-1:-1::0;;;;;24650:21:33::3;-1:-1:-1::0;;;;;24650:21:33::3;;;;;;;;;;;;24672:13;24650:36;;;;;;;;;::::0;;;::::3;::::0;;::::3;::::0;;;::::3;;24643:43:::0;;-1:-1:-1;;;;;;24643:43:33;;::::3;::::0;;-1:-1:-1;24643:43:33;::::3;::::0;;-1:-1:-1;;;;;;24643:43:33;;;::::3;::::0;::::3;::::0;;;::::3;::::0;::::3;::::0;;;::::3;::::0;::::3;::::0;;;::::3;::::0;::::3;::::0;;;::::3;::::0;::::3;::::0;;;::::3;::::0;::::3;::::0;;;;::::3;::::0;;::::3;::::0;::::3;::::0;;;::::3;;::::0;24425:272:::3;24714:33;:16:::0;24745:1:::3;24714:30;:33::i;:::-;24706:71;;;::::0;-1:-1:-1;;;24706:71:33;;::::3;::::0;::::3;;;:::i;:::-;24893:61;24911:24;24937:16;24893:17;:61::i;:::-;25029:17;::::0;::::3;::::0;24875:79;;-1:-1:-1;;;;25029:17:33;::::3;;;24970:103;::::0;::::3;;;;;;25003:24:::0;;25048;;24970:103:::3;::::0;24991:10:::3;::::0;24970:103:::3;::::0;::::3;::::0;::::3;:::i;:::-;;;;;;;;25199:24:::0;;25155:18:::3;::::0;:69:::3;::::0;-1:-1:-1;;;;;25155:18:33;;::::3;::::0;25187:10:::3;::::0;25155:31:::3;:69::i;:::-;25235:22;;;;;;;;;;1365:20:4::2;:18;:20::i;:::-;19538:5726:33::0;;;;;;:::o;9310:677:34:-;5977:20;:18;:20::i;:::-;1298:19:4::1;:17;:19::i;:::-;1327:17;:15;:17::i;:::-;9397:33:34::2;9433:28;9450:10;9433:16;:28::i;:::-;9397:64;;9479:12;:49;;;9532:1;9479:54;9471:83;;;::::0;-1:-1:-1;;;9471:83:34;;::::2;::::0;::::2;;;:::i;:::-;9646:23;9672:40;9693:18;;9672:16;:14;:16::i;:40::-;9646:66;;9748:19;;9730:15;:37;9722:77;;;::::0;-1:-1:-1;;;9722:77:34;;::::2;::::0;::::2;;;:::i;:::-;9862:49;::::0;::::2;:67:::0;;;9945:35:::2;::::0;9969:10:::2;::::0;9945:35:::2;::::0;;;::::2;1354:1:4;;1365:20:::1;:18;:20::i;5102:41:33:-:0;;;;:::o;4201:2279:25:-;4258:36;;:::i;:::-;1298:19:4;:17;:19::i;:::-;1327:17;:15;:17::i;:::-;4306:20:25::1;4329:11;:9;:11::i;:::-;4306:34;;4350:12;4365:16;:14;:16::i;:::-;4350:31;;4391:41;;:::i;:::-;4435:6;:4;:6::i;:::-;4391:50:::0;-1:-1:-1;4528:25:25::1;4391:50:::0;4551:1:::1;4528:22;:25::i;:::-;4524:72;;;4569:16;;;;;4524:72;4696:4;4677:15;;:23;4673:70;;;4716:16;;;;;4673:70;4754:37;;:::i;:::-;4793:38;;:::i;:::-;4872:15;::::0;4835:108:::1;::::0;-1:-1:-1;;;4835:108:25;;-1:-1:-1;;;;;4835:23:25;::::1;::::0;-1:-1:-1;;4835:108:25::1;::::0;4872:15;4901:4;;4919:14;;4835:108:::1;;;:::i;:::-;;::::0;::::1;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4953:15;:22:::0;;;4753:190;;-1:-1:-1;4753:190:25;-1:-1:-1;4998:27:25::1;4753:190:::0;;4998:14:::1;:27::i;:::-;4986:39:::0;-1:-1:-1;5039:20:25::1;4986:39:::0;5057:1:::1;5039:17;:20::i;:::-;5035:67;;;5075:16;;;;;;;5035:67;5476:39;:9:::0;5500:14;5476:23:::1;:39::i;:::-;5472:476;;;5531:34;;:::i;:::-;5568:29;:9:::0;5582:14;5568:13:::1;:29::i;:::-;5531:66;;5611:47;;:::i;:::-;5661:36;5676:11;5689:7;5661:14;:36::i;:::-;5611:86:::0;-1:-1:-1;5725:37:25::1;:11:::0;5611:86;5725:15:::1;:37::i;:::-;5711:51:::0;-1:-1:-1;5786:33:25::1;:7:::0;5798:20;5786:11:::1;:33::i;:::-;5776:43;;5846:51;5861:35;5876:10;5888:7;5861:14;:35::i;:::-;5846:10:::0;;:14:::1;:51::i;:::-;5833:64;;5923:14;5911:26;;5472:476;;;6000:20:::0;;5979:19;;5963:58:::1;::::0;::::1;::::0;6000:20:::1;::::0;5963:58:::1;6032:57;6063:9;6074:14;6032:30;:57::i;:::-;6104:27;:10:::0;6129:1:::1;6104:24;:27::i;:::-;6100:214;;;6204:19:::0;;6147:18:::1;::::0;:77:::1;::::0;-1:-1:-1;;;;;6147:18:25;;::::1;::::0;6196:5;;6147:40:::1;:77::i;:::-;6271:18;::::0;6238:65:::1;::::0;-1:-1:-1;;;6238:65:25;;-1:-1:-1;;;;;6238:24:25;;::::1;::::0;::::1;::::0;:65:::1;::::0;6271:18;;::::1;::::0;6292:10;;6238:65:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;6100:214;6328:28;:11:::0;6354:1:::1;6328:25;:28::i;:::-;6324:124;;;6416:20:::0;;6372:18:::1;::::0;:65:::1;::::0;-1:-1:-1;;;;;6372:18:25;;::::1;::::0;6404:10:::1;::::0;6372:31:::1;:65::i;:::-;6457:16;;;;;1354:1:4;1365:20:::0;:18;:20::i;14342:1252:34:-;14543:42;;:::i;:::-;5977:20;:18;:20::i;:::-;14476:10:::1;6526:40;6558:7;6526:31;:40::i;:::-;2409:16:25::2;:14;:16::i;:::-;;1298:19:4::3;:17;:19::i;:::-;1327:17;:15;:17::i;:::-;14601:33:34::4;14637:28;14654:10;14637:16;:28::i;:::-;14601:64:::0;-1:-1:-1;14683:33:34::4;:16:::0;14714:1:::4;14683:30;:33::i;:::-;14675:71;;;::::0;-1:-1:-1;;;14675:71:34;;::::4;::::0;::::4;;;:::i;:::-;15015:68;15052:12;15066:16;15015:36;:68::i;:::-;15122:24:::0;;15099:48:::4;::::0;14997:86;;-1:-1:-1;15122:24:34;15110:10:::4;::::0;15099:48:::4;::::0;15122:24:::4;::::0;15099:48:::4;15562:24:::0;;15518:18:::4;::::0;:69:::4;::::0;-1:-1:-1;;;;;15518:18:34;;::::4;::::0;15550:10:::4;::::0;15518:31:::4;:69::i;:::-;1354:1:4;1365:20:::3;:18;:20::i;:::-;6007:1:34::1;14342:1252:::0;;;:::o;33067:234::-;33176:42;;:::i;:::-;1584:19:4;:17;:19::i;:::-;33241:53:34::1;::::0;;::::1;::::0;::::1;::::0;;;33267:26:::1;33241:53:::0;;;::::1;::::0;:25:::1;:53::i;:::-;33234:60;;33067:234:::0;:::o;4865:48:33:-;;;;:::o;4007:57::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4007:57:33;;;;-1:-1:-1;4007:57:33;;;;-1:-1:-1;;;;4007:57:33;;;;;;;;;;;;;;;;;;;;;;:::o;4111:51::-;;;;:::o;2559:49:34:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;10421:1065::-;5977:20;:18;:20::i;:::-;10558:10:::1;6526:40;6558:7;6526:31;:40::i;:::-;1298:19:4::2;:17;:19::i;:::-;1327:17;:15;:17::i;:::-;10628:139:34::3;10723:30;10751:1;10723:27;:30::i;:::-;-1:-1:-1::0;;;;;10654:28:34;::::3;;::::0;;;:9:::3;:28;::::0;;;;;;;;10628:69;;;;::::3;::::0;;;10654:42:::3;::::0;;::::3;10628:69:::0;;;::::3;::::0;:25:::3;:69::i;:::-;:77:::0;::::3;:139::i;:::-;10607:214;;;::::0;-1:-1:-1;;;10607:214:34;;::::3;::::0;::::3;;;:::i;:::-;10831:33;10867:28;10884:10;10867:16;:28::i;:::-;10831:64;;10926:12;:49;;;10979:1;10926:54;;:143;;;;;11053:16;:14;:16::i;:::-;11000:12;:49;;;:69;;10926:143;10905:214;;;::::0;-1:-1:-1;;;10905:214:34;;::::3;::::0;::::3;;;:::i;:::-;11217:1;11165:49;::::0;;::::3;:53:::0;;;-1:-1:-1;;;;;11229:28:34;::::3;::::0;;;:9:::3;:28;::::0;;;;;:43;;;;-1:-1:-1;11229:43:34;;::::3;::::0;;;::::3;::::0;::::3;::::0;;::::3;::::0;;;::::3;::::0;::::3;::::0;;::::3;::::0;;;::::3;::::0;;;;;::::3;::::0;;;;11299:10:::3;11289:21:::0;;;;;;11282:28;;;;;::::3;::::0;;;;;::::3;::::0;;;;;::::3;::::0;;;;;;::::3;::::0;;;11326:62;;11229:28;;11299:10;;11326:62:::3;::::0;11217:1;11326:62:::3;11403:29;::::0;-1:-1:-1;;;;;11403:29:34;::::3;::::0;::::3;::::0;;;::::3;11447:32;::::0;11468:10:::3;::::0;11447:32:::3;::::0;;;::::3;1354:1:4;1365:20:::2;:18;:20::i;:::-;6007:1:34::1;10421:1065:::0;:::o;5512:51:33:-;;;;:::o;22495:1995:34:-;22659:42;;:::i;:::-;22592:10;6526:40;6558:7;6526:31;:40::i;:::-;2409:16:25::1;:14;:16::i;:::-;;1298:19:4::2;:17;:19::i;:::-;1327:17;:15;:17::i;:::-;22717:33:34::3;22753:28;22770:10;22753:16;:28::i;:::-;22800:55;::::0;;::::3;::::0;::::3;::::0;;;;;;;22717:64;;-1:-1:-1;22800:55:34::3;::::0;:9;;:23:::3;:55::i;:::-;22799:56;22791:89;;;::::0;-1:-1:-1;;;22791:89:34;;::::3;::::0;::::3;;;:::i;:::-;22891:43;;:::i;:::-;22937:45;::::0;;::::3;::::0;::::3;::::0;;;;;;;::::3;::::0;:9;;:13:::3;:45::i;:::-;22891:91;;22992:45;;:::i;:::-;23074:53;::::0;;::::3;::::0;::::3;::::0;;;23100:26:::3;::::0;::::3;23074:53:::0;;;23040:97:::3;::::0;23074:53:::3;::::0;:25:::3;:53::i;:::-;23040:16:::0;;:20:::3;:97::i;:::-;23263:38;::::0;;::::3;::::0;::::3;::::0;;;;;;;22992:145;;-1:-1:-1;23263:49:34::3;::::0;23302:9;23263:38:::3;:49::i;:::-;23259:840;;;23346:34;23369:10;23346:22;:34::i;:::-;23328:52;;23259:840;;;23510:62;23539:12;23553:18;23510:28;:62::i;:::-;23492:80;;23687:40;;:::i;:::-;23730:34;::::0;;::::3;::::0;::::3;::::0;;;;;;;:45:::3;::::0;23765:9;23730:34:::3;:45::i;:::-;23797:52;::::0;;::::3;::::0;::::3;::::0;;;23832:16:::3;23797:52:::0;;;23687:88;;-1:-1:-1;23797:52:34::3;::::0;23687:88;;23797:34:::3;:52::i;:::-;23789:95;;;::::0;-1:-1:-1;;;23789:95:34;;::::3;::::0;::::3;;;:::i;:::-;23898:46:::0;;;;24051:26:::3;::::0;;::::3;::::0;::::3;::::0;;;:22:::3;:26:::0;;;:37:::3;::::0;24078:9;24051:26:::3;:37::i;:::-;24026:62:::0;:22:::3;:62:::0;-1:-1:-1;23259:840:34::3;24159:18:::0;;24133:24;;24114:64:::3;::::0;24121:10:::3;::::0;24114:64:::3;::::0;24159:18:::3;::::0;24114:64:::3;24323:24:::0;;24279:18:::3;::::0;:69:::3;::::0;-1:-1:-1;;;;;24279:18:34;;::::3;::::0;24311:10:::3;::::0;24279:31:::3;:69::i;:::-;24416:18:::0;;24358:13:::3;::::0;:77:::3;::::0;-1:-1:-1;;;;;24358:13:34;;::::3;::::0;24389:10:::3;::::0;24409:4:::3;::::0;24358:30:::3;:77::i;:::-;24445:13;::::0;24464:18;;24445:38:::3;::::0;-1:-1:-1;;;24445:38:34;;-1:-1:-1;;;;;24445:13:34;;::::3;::::0;:18:::3;::::0;:38:::3;::::0;::::3;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;;;;;1354:1:4;;;1365:20:::2;:18;:20::i;20128:1808:34:-:0;5977:20;:18;:20::i;:::-;2409:16:25::1;:14;:16::i;:::-;;1298:19:4::2;:17;:19::i;:::-;1327:17;:15;:17::i;:::-;20368:10:34::3;20322:33;20358:21:::0;;;:9:::3;:21;::::0;;;;;;;;20552:53;;;;::::3;::::0;;;20578:26:::3;::::0;::::3;20552:53:::0;;;20511:193:::3;::::0;20552:75:::3;::::0;20610:16;;20552:53:::3;::::0;:25:::3;:53::i;:75::-;20645:34;::::0;;::::3;::::0;::::3;::::0;;;;;;;:45:::3;::::0;20680:9;20645:34:::3;:45::i;:::-;20511:23;:193::i;:::-;:249;;;;20708:52;20732:16;20750:9;20708:23;:52::i;:::-;20489:321;;;::::0;-1:-1:-1;;;20489:321:34;;::::3;::::0;::::3;;;:::i;:::-;20829:43;::::0;::::3;::::0;:48;20821:79:::3;;;::::0;-1:-1:-1;;;20821:79:34;;::::3;::::0;::::3;;;:::i;:::-;20914:38;::::0;;::::3;::::0;::::3;::::0;;;;;;;:41:::3;::::0;20953:1:::3;20914:38;:41::i;:::-;20910:204;;;20979:48;::::0;;::::3;::::0;::::3;::::0;;;21010:16:::3;20979:48:::0;;;::::3;::::0;:9;;:30:::3;:48::i;:::-;20971:91;;;::::0;-1:-1:-1;;;20971:91:34;;::::3;::::0;::::3;;;:::i;:::-;21081:22;::::0;21092:10:::3;::::0;21081:22:::3;::::0;;;::::3;20910:204;21209:60;21238:12;21252:16;21209:28;:60::i;:::-;-1:-1:-1::0;21395:34:34::3;::::0;;::::3;::::0;::::3;::::0;;;;;;;:45:::3;::::0;21430:9;21395:34:::3;:45::i;:::-;21362:78:::0;;;21476:26:::3;::::0;;::::3;::::0;::::3;::::0;;;:22:::3;:26:::0;;;:37:::3;::::0;21503:9;21476:26:::3;:37::i;:::-;21451:62:::0;:22:::3;:62:::0;21584:18;;21557:25;;21529:74:::3;::::0;21545:10:::3;::::0;21529:74:::3;::::0;21451:62:::3;::::0;21529:74:::3;21799:25:::0;;21736:18:::3;::::0;:89:::3;::::0;-1:-1:-1;;;;;21736:18:34;;::::3;::::0;21772:10:::3;::::0;21792:4:::3;::::0;21736:35:::3;:89::i;:::-;21843:13;::::0;21874:18;;21843:50:::3;::::0;-1:-1:-1;;;21843:50:34;;-1:-1:-1;;;;;21843:13:34;;::::3;::::0;-1:-1:-1;;21843:50:34::3;::::0;21862:10:::3;::::0;21874:18;21843:50:::3;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;21835:94;;;::::0;-1:-1:-1;;;21835:94:34;;::::3;::::0;::::3;;;:::i;:::-;1354:1:4;1365:20:::2;:18;:20::i;3161:35:34:-:0;;;-1:-1:-1;;;;;3161:35:34;;:::o;28813:404::-;6061:21;:19;:21::i;:::-;6430:16:::1;:14;:16::i;:::-;2409::25::2;:14;:16::i;:::-;;1298:19:4::3;:17;:19::i;:::-;1327:17;:15;:17::i;:::-;28909:13:34::4;:51:::0;;-1:-1:-1;;28909:51:34::4;28925:35;28909:51;::::0;;29068:49:::4;29090:4;29097:19;:17;:19::i;:::-;29068:13;:49::i;:::-;29127:40;29147:19;;29127;:40::i;:::-;29183:27;::::0;29199:10:::4;::::0;29183:27:::4;::::0;;;::::4;1365:20:4::3;:18;:20::i;6951:113:25:-:0;7006:26;;:::i;:::-;1584:19:4;:17;:19::i;:::-;7051:6:25::1;:4;:6::i;1491:34:34:-:0;;;;;;:::o;3052:53::-;;;;:::o;4077:43::-;;;;:::o;3255:30::-;;;;:::o;32536:311::-;32650:43;;:::i;:::-;1584:19:4;:17;:19::i;:::-;-1:-1:-1;;;;;32807:18:34;::::1;;::::0;;;:9:::1;:18;::::0;;;;;;;;32781:59;;;;::::1;::::0;;;32807:32:::1;::::0;;::::1;32781:59:::0;;;::::1;::::0;:25:::1;:59::i;:::-;32774:66:::0;32536:311;-1:-1:-1;;32536:311:34:o;3404:34::-;;;;:::o;3980:33::-;;;;:::o;25517:207:33:-;25633:40;1584:19:4;:17;:19::i;:::-;-1:-1:-1;;;;;25696:21:33;::::1;;::::0;;;:12:::1;:21;::::0;;;;;;;25689:28;;;;;;::::1;::::0;;;;;;;;;;;;25696:21;;25689:28;::::1;;;;;;;;;::::0;;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;;;25689:28:33;;::::1;::::0;;-1:-1:-1;25689:28:33;::::1;::::0;;;::::1;::::0;;::::1;::::0;;;;;;;;;;-1:-1:-1;;;25689:28:33;::::1;;;;::::0;::::1;;;;;;;;;;;;;;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;;;;;;;;;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;;;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;;;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;;;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;::::1;::::0;::::1;::::0;-1:-1:-1;;;;;25689:28:33::1;::::0;;;;;;;;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;;;::::1;::::0;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;;;;;;;;-1:-1:-1;25689:28:33;;;::::1;::::0;::::1;;;;;;;;;;25517:207:::0;;;:::o;17235:1610::-;17407:36;;:::i;:::-;17328:13;17343:7;6811:35;6823:13;6838:7;6811:11;:35::i;:::-;2409:16:25::1;:14;:16::i;:::-;;1298:19:4::2;:17;:19::i;:::-;1327:17;:15;:17::i;:::-;17459:43:33::3;17505;17525:7;17534:13;17505:19;:43::i;:::-;17459:89;;17675:44;;:::i;:::-;17796:64;::::0;;::::3;::::0;::::3;::::0;;;17822:37:::3;::::0;::::3;17796:64:::0;;;17722:148:::3;::::0;17796:64:::3;::::0;:25:::3;:64::i;:::-;17722:56;::::0;;::::3;::::0;;::::3;::::0;;17763:14:::3;17722:56:::0;;;:40;;;;::::3;::::0;;;:36:::3;::::0;::::3;:40:::0;;;:56:::3;::::0;:40;::::3;:56::i;:148::-;17675:195;;17880:59;17895:24;17921:17;17880:14;:59::i;:::-;-1:-1:-1::0;18045:25:33::3;::::0;::::3;:49:::0;;-1:-1:-1;;;;18045:49:33::3;-1:-1:-1::0;;;18045:49:33::3;::::0;;18104:28:::3;::::0;::::3;:41:::0;;-1:-1:-1;;;;;;18104:41:33::3;18135:10;18104:41;::::0;;18073:21:::3;18219:35:::0;::::3;::::0;18199:56:::3;::::0;:19:::3;:56::i;:::-;18325:30;::::0;::::3;::::0;18420:26;;18271:185:::3;::::0;18369:10:::3;::::0;-1:-1:-1;;;;;18325:30:33;;::::3;::::0;18271:185;;::::3;::::0;::::3;::::0;::::3;::::0;18393:13;;18420:26;18271:185:::3;:::i;:::-;;;;;;;;18478:51;::::0;;::::3;::::0;::::3;::::0;;;18500:28:::3;::::0;::::3;18478:51:::0;;;::::3;::::0;:17;;:21:::3;:51::i;:::-;18604:55;::::0;;::::3;::::0;::::3;::::0;;;18630:28:::3;::::0;::::3;18604:55:::0;;;18466:63;;-1:-1:-1;18604:55:33::3;::::0;18618:10:::3;::::0;18604:13:::3;:55::i;:::-;18811:26:::0;;18748:18:::3;::::0;:90:::3;::::0;-1:-1:-1;;;;;18748:18:33;;::::3;::::0;18784:10:::3;::::0;18804:4:::3;::::0;18748:35:::3;:90::i;:::-;1354:1:4;;1365:20:::2;:18;:20::i;11568:415:34:-:0;5977:20;:18;:20::i;:::-;1298:19:4::1;:17;:19::i;:::-;1327:17;:15;:17::i;:::-;11656:33:34::2;11692:28;11709:10;11692:16;:28::i;:::-;11656:64;;11738:12;:49;;;11791:1;11738:54;;11730:86;;;::::0;-1:-1:-1;;;11730:86:34;;::::2;::::0;::::2;;;:::i;:::-;11832:43;::::0;11864:10:::2;::::0;11832:43:::2;::::0;;;::::2;11975:1;11923:49;::::0;;::::2;:53:::0;1365:20:4::1;:18;:20::i;1209:29:25:-:0;;;-1:-1:-1;;;;;1209:29:25;;:::o;15918:993:34:-;5977:20;:18;:20::i;:::-;16061:10:::1;6526:40;6558:7;6526:31;:40::i;:::-;1298:19:4::2;:17;:19::i;:::-;1327:17;:15;:17::i;:::-;16110:33:34::3;16146:28;16163:10;16146:16;:28::i;:::-;16110:64:::0;-1:-1:-1;16205:33:34::3;:16:::0;16236:1:::3;16205:30;:33::i;:::-;:142;;;;-1:-1:-1::0;16293:53:34::3;::::0;;::::3;::::0;::::3;::::0;;;16319:26:::3;::::0;::::3;16293:53:::0;;;16258:89:::3;::::0;16293:53:::3;::::0;:25:::3;:53::i;:::-;16258:16:::0;;:34:::3;:89::i;:::-;16184:214;;;::::0;-1:-1:-1;;;16184:214:34;;::::3;::::0;::::3;;;:::i;:::-;16490:23;16516:40;16537:18;;16516:16;:14;:16::i;:40::-;16490:66;;16592:19;;16574:15;:37;16566:77;;;::::0;-1:-1:-1;;;16566:77:34;;::::3;::::0;::::3;;;:::i;:::-;16706:43;::::0;::::3;:61:::0;;;16777:55;;:36:::3;::::0;::::3;:55:::0;;;16848:56:::3;::::0;16866:10:::3;::::0;16848:56:::3;::::0;16777:55:::3;::::0;16848:56:::3;1354:1:4;;1365:20:::2;:18;:20::i;31013:96:34:-:0;5977:20;:18;:20::i;:::-;1298:19:4::1;:17;:19::i;:::-;1327:17;:15;:17::i;:::-;1365:20;:18;:20::i;5302:50:33:-:0;;;;:::o;13594:221:34:-;13769:39;13779:10;13791:16;13769:9;:39::i;:::-;13594:221;:::o;1873:50:25:-;;;;:::o;4172:38:34:-;;;;:::o;25116:3363::-;25242:42;;:::i;:::-;6061:21;:19;:21::i;:::-;2409:16:25::1;:14;:16::i;:::-;;1298:19:4::2;:17;:19::i;:::-;1327:17;:15;:17::i;:::-;25437:18:34::3;25420:13;::::0;::::3;;:35;::::0;::::3;;;;;;;;25412:66;;;::::0;-1:-1:-1;;;25412:66:34;;::::3;::::0;::::3;;;:::i;:::-;25603:34;25586:13;::::0;::::3;;:51;::::0;::::3;;;;;;;25582:196;;25667:36;25683:19;;25667:15;:36::i;:::-;25653:50:::0;:11:::3;:50:::0;25717:13:::3;:50:::0;;-1:-1:-1;;25717:50:34::3;25733:34;25717:50;::::0;;25582:196:::3;25880:41;;:::i;:::-;25924:56;::::0;;::::3;::::0;::::3;::::0;;;;25944:13:::3;::::0;-1:-1:-1;;;25944:35:34;;;25924:56;;;-1:-1:-1;;;;;25944:13:34::3;-1:-1:-1::0;25944:35:34::3;25968:10;25944:35:::0;;;::::3;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25924:56:::0;;25880:100;-1:-1:-1;25990:52:34::3;;:::i;:::-;26045:31;::::0;;::::3;::::0;::::3;::::0;;;26064:11:::3;26045:31:::0;;;::::3;::::0;:14;;:18:::3;:31::i;:::-;26267:10;26221:33;26257:21:::0;;;:9:::3;:21;::::0;;;;;;;26292:53;;;;::::3;::::0;;;26318:26:::3;::::0;::::3;26292:53:::0;;;25990:86;;-1:-1:-1;26292:70:34::3;::::0;26221:33;26292:53:::3;::::0;:25:::3;:53::i;:::-;:67:::0;::::3;:70::i;:::-;26288:1190;;;26488:53;;:::i;:::-;26544:47;::::0;;::::3;::::0;;::::3;::::0;;26579:11:::3;26544:47:::0;;;:34;;;;::::3;::::0;;;;;;;:47:::3;::::0;:34;::::3;:47::i;:::-;26488:103;;26605:45;;:::i;:::-;26653:53;::::0;;::::3;::::0;::::3;::::0;;;26679:26:::3;::::0;::::3;26653:53:::0;;;::::3;::::0;:25:::3;:53::i;:::-;26605:101;;26819:55;;:::i;:::-;26877:87;:26:::0;26932:18;26877:37:::3;:87::i;:::-;:197;;27052:22;;;;;;;;27072:1;27052:22;;::::0;26877:197:::3;;;26983:50;:18:::0;27006:26;26983:22:::3;:50::i;:::-;26819:255:::0;-1:-1:-1;27222:59:34::3;:25:::0;26819:255;27222:29:::3;:59::i;:::-;27405:10;27395:21;::::0;;;:9:::3;:21;::::0;;;;;27388:28;;;::::3;::::0;::::3;::::0;;;::::3;::::0;::::3;::::0;;;::::3;::::0;::::3;::::0;;;::::3;;::::0;;;27435:32;27194:87;;-1:-1:-1;27405:10:34;;27435:32:::3;::::0;27395:21;27435:32:::3;26288:1190;;;;27683:33;;:::i;:::-;27747:53;::::0;;::::3;::::0;::::3;::::0;;;27773:26:::3;27747:53:::0;;;27719:130:::3;::::0;27747:53:::3;::::0;:25:::3;:53::i;:::-;27814:25;27719:14;:130::i;:::-;27683:166;;27947:53;27965:26;27993:6;27947:17;:53::i;:::-;28035:26;::::0;;::::3;::::0;::::3;::::0;;;:22:::3;:26:::0;;;27929:71;;-1:-1:-1;28035:42:34::3;::::0;28062:14;28035:26:::3;:42::i;:::-;28010:67:::0;:22:::3;:67:::0;28153:23;;28127:24;;28093:84:::3;::::0;28115:10:::3;::::0;28093:84:::3;::::0;28010:67:::3;::::0;28093:84:::3;28302:24:::0;;28258:18:::3;::::0;:69:::3;::::0;-1:-1:-1;;;;;28258:18:34;;::::3;::::0;28290:10:::3;::::0;28258:31:::3;:69::i;:::-;28395:23:::0;;28337:13:::3;::::0;:82:::3;::::0;-1:-1:-1;;;;;28337:13:34;;::::3;::::0;28368:10:::3;::::0;28388:4:::3;::::0;28337:30:::3;:82::i;:::-;28429:13;::::0;28448:23;;28429:43:::3;::::0;-1:-1:-1;;;28429:43:34;;-1:-1:-1;;;;;28429:13:34;;::::3;::::0;:18:::3;::::0;:43:::3;::::0;::::3;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;;;;;1354:1:4;;;;1365:20:::2;:18;:20::i;722:135:3:-:0;782:15;;:::i;:::-;816:34;;;;;;;;;;825:24;:1;436:6;825:5;:24::i;:::-;816:34;;809:41;722:135;-1:-1:-1;;722:135:3:o;1938:147::-;2014:4;2050:19;2067:1;2050:16;:19::i;:::-;:28;2037:10;;:41;;-1:-1:-1;1938:147:3;;;;:::o;6123:151::-;6197:15;;:::i;:::-;6231:36;;;;;;;;;6255:10;;6240;;6231:36;;6240:26;;:10;:14;:26::i;:::-;6231:36;;6224:43;6123:151;-1:-1:-1;;;6123:151:3:o;3874:144::-;3947:4;3983:19;4000:1;3983:16;:19::i;:::-;:28;3970:10;;:41;;-1:-1:-1;3874:144:3;;;;:::o;2119:459:70:-;2177:7;2418:6;2414:45;;-1:-1:-1;2447:1:70;2440:8;;2414:45;2481:5;;;2485:1;2481;:5;:1;2504:5;;;;;:10;2496:56;;;;-1:-1:-1;;;2496:56:70;;;;;;;:::i;:::-;2570:1;2119:459;-1:-1:-1;;;2119:459:70:o;834:176::-;892:7;923:5;;;946:6;;;;938:46;;;;-1:-1:-1;;;938:46:70;;;;;;;:::i;41016:136:34:-;41097:19;;41078:16;:14;:16::i;:::-;:38;41070:75;;;;-1:-1:-1;;;41070:75:34;;;;;;;:::i;41891:181::-;41981:25;41998:7;41981:16;:25::i;:::-;:56;;;:61;41973:92;;;;-1:-1:-1;;;41973:92:34;;;;;;;:::i;2117:186:4:-;2249:11;;-1:-1:-1;;;2249:11:4;;;;2241:55;;;;-1:-1:-1;;;2241:55:4;;;;;;;:::i;2309:136::-;2433:5;2419:19;;-1:-1:-1;;;;2419:19:4;;;2309:136::o;36423:202:34:-;36557:20;36531:7;6169:36;6197:7;6169:27;:36::i;:::-;-1:-1:-1;;;;;;;36600:18:34::1;;::::0;;;:9:::1;:18;::::0;;;;;36423:202::o;38649:340::-;38807:26;;:::i;:::-;38845:60;38860:12;:26;;38888:16;38845:14;:60::i;:::-;;38922;38937:26;38965:16;38922:14;:60::i;843:203:74:-;943:96;963:5;993:27;;;1022:4;1028:2;1032:5;970:68;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;970:68:74;;;;;;;;;;;;;;-1:-1:-1;;;;;970:68:74;-1:-1:-1;;;;;;970:68:74;;;;;;;;;;;943:19;:96::i;:::-;843:203;;;;:::o;2451:206:4:-;2632:11;:18;;-1:-1:-1;;;;2632:18:4;-1:-1:-1;;;2632:18:4;;;2451:206::o;38302:220:34:-;38428:30;38456:1;38428:27;:30::i;:::-;38389:69;:36;;;:69;;38468:43;;;;:47;38302:220::o;27813:169:33:-;27861:26;;:::i;:::-;27923:51;;;;;;;;;27949:24;27923:51;;;27906:69;;27923:51;;:25;:51::i;:::-;27906:12;:10;:12::i;6797:151:3:-;6871:15;;:::i;:::-;6905:36;;;;;;;;;6929:10;;6914;;6905:36;;6914:26;;:10;:14;:26::i;662:175:74:-;744:86;764:5;794:23;;;819:2;823:5;771:58;;;;;;;;;:::i;5482:146:3:-;5556:15;;:::i;:::-;5603:10;;5590;;:23;:31;;5620:1;5590:31;;;-1:-1:-1;5616:1:3;;5482:146;-1:-1:-1;5482:146:3:o;9283:233:25:-;9407:37;;:::i;:::-;9467:42;;;;;;;;;9485:23;9467:42;;;;;:13;;:17;:42::i;4510:142:3:-;4635:10;4621;;:24;;;4510:142::o;7876:650::-;7950:15;;:::i;:::-;8463:56;;;;;;;;;8487:10;;8472;;8463:56;;436:6;;8472:26;;:14;:26::i;:::-;:46;;;;;;8463:56;;8456:63;7876:650;-1:-1:-1;;;7876:650:3:o;2586:145::-;2714:10;2700;;:24;;;2586:145::o;8809:208:25:-;8861:36;;:::i;:::-;8909:20;8932:11;:9;:11::i;:::-;8990:18;;8960:50;;-1:-1:-1;;;8960:50:25;;8909:34;;-1:-1:-1;;;;;;8960:21:25;;;;-1:-1:-1;;8960:50:25;;8990:18;;8960:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8953:57;;;8809:208;:::o;10292:634:3:-;10366:15;;:::i;:::-;10860:59;;;;;;;;;10907:10;;10869;;10860:59;;10869:49;;:33;;436:6;10869:14;:33::i;:::-;:37;;:49::i;33655:1480:34:-;33904:33;33940:25;33957:7;33940:16;:25::i;:::-;34064:54;;;;;;;;;;;;;33904:61;;-1:-1:-1;34064:54:34;;:14;;:22;:54::i;:::-;:151;;;;-1:-1:-1;34134:53:34;;;;;;;;;34160:26;;;34134:53;;;:81;;34196:18;;34134:53;;:25;:53::i;:81::-;34047:255;;;34240:31;34263:7;34240:22;:31::i;:::-;;34285:7;;;34047:255;34389:62;34418:12;34432:18;34389:28;:62::i;:::-;;34550:40;;:::i;:::-;34593:34;;;;;;;;;;;;;:50;;34628:14;34593:34;:50::i;:::-;34661:52;;;;;;;;;34696:16;34661:52;;;34550:93;;-1:-1:-1;34661:52:34;;34550:93;;34661:34;:52::i;:::-;34653:95;;;;-1:-1:-1;;;34653:95:34;;;;;;;:::i;:::-;34758:46;;;;34909:40;;;;;;;;;:36;;;:40;;;:66;;34950:24;34909:40;:66::i;:::-;34870:105;:36;;;:105;35086:26;;;;;;;;;:22;:26;;;:42;;35113:14;35086:26;:42::i;:::-;35061:67;:22;:67;-1:-1:-1;;33655:1480:34;;;;:::o;11952:561:25:-;12097:42;;:::i;:::-;12155:41;;:::i;:::-;12199:40;;;;;;;;;;;;;;;:25;:40::i;:::-;12155:84;;12249:45;;:::i;:::-;12297:40;12321:15;12297:23;:40::i;:::-;12372:17;;;;;;;;;;;;;12249:88;;-1:-1:-1;12372:37:25;;12249:88;12372:17;:37::i;:::-;:46;12347:71;;;12446:40;;;;;;;;;;;;:60;;12491:14;;12446:40;;:25;:40::i;:60::-;12428:78;11952:561;-1:-1:-1;;;;;11952:561:25:o;9760:228::-;9879:40;;:::i;:::-;9942:39;;;;;;;;;9957:23;9942:39;;;;;:10;;:14;:39::i;1632:137:3:-;1752:10;1739;;:23;;1632:137::o;39455:346:34:-;39613:26;;:::i;:::-;39651:63;39669:12;:26;;39697:16;39651:17;:63::i;:::-;;39731;39749:26;39777:16;39731:17;:63::i;40879:131::-;40954:18;40937:13;;;;:35;;;;;;;;;40929:74;;;;-1:-1:-1;;;40929:74:34;;;;;;;:::i;37013:175::-;37108:6;;:73;;-1:-1:-1;;;37108:73:34;;37082:7;;-1:-1:-1;;;;;37108:6:34;;:31;;:73;;-1:-1:-1;;;;37108:73:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;37276:176::-;37347:22;37372:12;:10;:12::i;:::-;37414:15;;37394:51;;-1:-1:-1;;;37394:51:34;;37347:37;;-1:-1:-1;;;;;;37394:19:34;;;-1:-1:-1;;37394:51:34;;37431:13;;37394:51;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;37276:176;;:::o;29442:506:33:-;29529:35;29567:43;29587:7;29596:13;29567:19;:43::i;:::-;29635:17;;;;;;;-1:-1:-1;;;;29635:17:33;;;;;;29751:5;:25;;;;;;;;;29750:137;;;;29837:16;:14;:16::i;:::-;29799:34;29821:11;29799:21;:34::i;:::-;:54;;29798:88;;;;-1:-1:-1;29868:17:33;29859:5;:26;;;;;;;;;29798:88;29729:212;;;;-1:-1:-1;;;29729:212:33;;;;;;;:::i;27988:631::-;-1:-1:-1;;;;;28200:21:33;;28104:35;28200:21;;;:12;:21;;;;;28428:23;;28412:39;;:104;;;;-1:-1:-1;28496:20:33;28455:16;28472:13;28455:31;;;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;:61;;;;;;;;;;28412:104;28391:173;;;;-1:-1:-1;;;28391:173:33;;;;;;;:::i;:::-;28581:16;28598:13;28581:31;;;;;;;;;;;;;;;;;;28574:38;;;27988:631;;;;:::o;26084:1723::-;26160:35;26198:43;26218:7;26227:13;26198:19;:43::i;:::-;26160:81;-1:-1:-1;26482:21:33;26461:17;;;;-1:-1:-1;;;26461:17:33;;;;:42;;;;;;;;;26457:79;;26519:7;;;26457:79;26669:44;26685:11;:27;;;26669:15;:44::i;:::-;26639:74;:27;;;:74;26794:47;;:::i;:::-;26844:84;;;;;;;;;26891:27;;;26844:84;;;:33;;;;;;;;:29;;;:33;;;:84;;:33;;:84::i;:::-;26794:134;;27044:45;;:::i;:::-;27092:47;;;;;;;;;27117:21;27092:47;;;;;:20;;:24;:47::i;:::-;27420:53;;;;;;;;;:32;;;:53;;;27044:95;;-1:-1:-1;27396:21:33;;27420:73;;27044:95;27420:53;:73::i;:::-;27396:97;;27523:16;:65;;27568:20;27523:65;;;27542:23;27523:65;27503:17;;;:85;;-1:-1:-1;;;;27503:85:33;-1:-1:-1;;;27503:85:33;;;;;;;;;;;;;-1:-1:-1;27677:22:33;;;;27713:20;;;;27604:196;;-1:-1:-1;;;;;27677:22:33;;;;27604:196;;;;27632:10;;27604:196;;;;27713:20;;27747:13;;27774:16;;27604:196;:::i;:::-;;;;;;;;26084:1723;;;;;;:::o;10568:574:25:-;10719:44;;:::i;:::-;10779:41;;:::i;:::-;10823:40;;;;;;;;;;;;;;;:25;:40::i;:::-;10779:84;;10873:45;;:::i;:::-;10921:43;10945:18;10921:23;:43::i;:::-;10999:17;;;;;;;;;;;;;10873:91;;-1:-1:-1;10999:37:25;;10873:91;10999:17;:37::i;:::-;:46;10974:71;;;11094:40;;;;;;;;;;;;11075:60;;11094:40;;:25;:40::i;:::-;11075:14;;:18;:60::i;8648:155::-;8740:6;;:55;;-1:-1:-1;;;8740:55:25;;8692:14;;-1:-1:-1;;;;;8740:6:25;;:31;;:55;;-1:-1:-1;;;;8740:55:25;;;:::i;1020:142:3:-;1090:4;1127:19;1144:1;1127:16;:19::i;:::-;:28;1113:10;;:42;;-1:-1:-1;1020:142:3;;;;:::o;12623:333:25:-;12768:39;;:::i;:::-;12810:26;:6;12825:10;12810:14;:26::i;:::-;12768:68;;12872:77;12900:48;12935:12;12900:30;12928:1;12900:27;:30::i;:48::-;12872:27;;;;;;;;;:23;:27;;;;;:77::i;:::-;12846:103;:23;:103;-1:-1:-1;;;12623:333:25:o;1671:283:74:-;1790:39;;-1:-1:-1;;;1790:39:74;;1767:20;;1790:50;;1834:5;;-1:-1:-1;;;;;1790:15:74;;;;;:39;;1814:4;;1821:7;;1790:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:50::-;1767:73;;1850:97;1870:5;1900:22;;;1924:7;1933:12;1877:69;;;;;;;;;:::i;40165:434:34:-;40331:26;;:::i;:::-;40369:63;40387:12;:26;;40415:16;40369:17;:63::i;:::-;;40450:45;40482:12;40450:31;:45::i;:::-;40442:70;;;;-1:-1:-1;;;40442:70:34;;;;;;;:::i;:::-;40529:63;40547:26;40575:16;40529:17;:63::i;1328:132:3:-;1443:10;1429;;:24;;1328:132::o;35244:1006:34:-;35311:26;;:::i;:::-;35349:40;35392:25;35409:7;35392:16;:25::i;:::-;35349:68;;35428:51;;:::i;:::-;35482:53;;;;;;;;;35508:26;35482:53;;;;;:25;:53::i;:::-;35428:107;;35628:49;;:::i;:::-;-1:-1:-1;35628:85:34;;;;;;;;;35680:33;;;35628:85;;;35752:30;;;;;;;;:26;:30;;;35628:85;35752:54;;35628:85;35752:30;:54::i;:::-;35723:83;:26;:83;35841:65;;;;;;;;;;;;;:26;;;;;;;;:22;:26;;;:65;;:26;;:65::i;:::-;35816:90;:22;:90;-1:-1:-1;;;;;36004:18:34;;35816:90;36004:18;;;:9;:18;;;;;;35997:25;;;-1:-1:-1;35997:25:34;;;;;;;;;;;;;;;;;;;;;;36038:29;;;35816:90;36038:29;36189:53;;;;;;;;;36215:26;36189:53;;;36160:83;;36189:53;;:25;:53::i;42663:507::-;42819:4;42839:33;;:::i;:::-;42915:53;;;;;;;;;42941:26;42915:53;;;42875:139;;42915:53;;:25;:53::i;:::-;42875:139;;;;;;;;;42982:22;42875:139;;;:26;:139::i;:::-;42839:175;;43024:37;;:::i;:::-;43064:49;43091:10;43103:9;43064:26;:49::i;:::-;43024:89;-1:-1:-1;43131:32:34;:6;43024:89;43131:20;:32::i;:::-;43130:33;;42663:507;-1:-1:-1;;;;;42663:507:34:o;41158:139::-;41241:19;;41221:16;:14;:16::i;:::-;:39;;41213:77;;;;-1:-1:-1;;;41213:77:34;;;;;;;:::i;7511:1050:25:-;7607:17;:6;7622:1;7607:14;:17::i;:::-;7603:54;;;7640:7;;7603:54;7688:4;-1:-1:-1;;;;;7671:22:25;;;7667:643;;7851:15;;7793:18;;:74;;-1:-1:-1;;;;;7793:18:25;;;;7829:5;;7844:4;;7793:35;:74::i;:::-;7667:643;;;7993:41;;:::i;:::-;8037:6;:4;:6::i;:::-;7993:50;-1:-1:-1;8163:36:25;7993:50;8192:6;8163:28;:36::i;:::-;8155:75;;;;-1:-1:-1;;;8155:75:25;;;;;;;:::i;:::-;8245:54;8276:6;8284:14;8245:30;:54::i;:::-;7667:643;;8339:15;;8325:30;;;;8339:15;;8325:30;8366:20;8389:11;:9;:11::i;:::-;8467:15;;8410:18;;8366:34;;-1:-1:-1;8410:73:25;;-1:-1:-1;;;;;8410:18:25;;8366:34;;8410:40;:73::i;:::-;8526:18;;8493:61;;-1:-1:-1;;;8493:61:25;;-1:-1:-1;;;;;8493:24:25;;;;;;:61;;8526:18;;;;8547:6;;8493:61;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7511:1050;;;:::o;29081:355:33:-;29166:35;29204:43;29224:7;29233:13;29204:19;:43::i;:::-;29166:81;;29298:34;29320:11;29298:21;:34::i;:::-;29279:16;:14;:16::i;:::-;:53;29278:99;;;;-1:-1:-1;29359:17:33;29338;;;;-1:-1:-1;;;29338:17:33;;;;:38;;;;;;;;;29278:99;29257:172;;;;-1:-1:-1;;;29257:172:33;;;;;;;:::i;37570:629:34:-;37641:26;;:::i;:::-;37779:22;37804:12;:10;:12::i;:::-;37850:15;;37834:47;;-1:-1:-1;;;37834:47:34;;37779:37;;-1:-1:-1;;;;;;37834:15:34;;;;;:47;;37867:13;;37834:47;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;37826:83;;;;-1:-1:-1;;;37826:83:34;;;;;;;:::i;:::-;37956:15;;37940:47;;-1:-1:-1;;;37940:47:34;;37919:18;;-1:-1:-1;;;;;37940:15:34;;;;;:47;;37973:13;;37940:47;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;37919:68;;38092:1;38078:11;:15;38074:61;;;-1:-1:-1;38123:1:34;38074:61;38151:41;;;;;;;;;;;;;37570:629;-1:-1:-1;;;37570:629:34:o;3574:134:3:-;3691:10;3678;;:23;;3574:134::o;41303:234:34:-;-1:-1:-1;;;;;41428:18:34;;41476:1;41428:18;;;:9;:18;;;;;;;;41402:59;;;;;;;;41428:32;;41402:59;;;:76;;41476:1;41402:59;;:25;:59::i;:76::-;41381:149;;;;-1:-1:-1;;;41381:149:34;;;;;;;:::i;2671:1096:74:-;3267:27;-1:-1:-1;;;;;3267:25:74;;;:27::i;:::-;3259:71;;;;-1:-1:-1;;;3259:71:74;;;;;;;:::i;:::-;3442:25;;3401:12;;3415:23;;-1:-1:-1;;;;;3442:19:74;;;:25;;3462:4;;3442:25;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3400:67;;;;3485:7;3477:52;;;;-1:-1:-1;;;3477:52:74;;;;;;;:::i;:::-;3544:17;;:21;3540:221;;3684:10;3673:30;;;;;;;;;;;;:::i;:::-;3665:85;;;;-1:-1:-1;;;3665:85:74;;;;;;;:::i;36256:161:34:-;36312:26;;:::i;1274:134:70:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;3033:130::-;3091:7;3117:39;3121:1;3124;3117:39;;;;;;;;;;;;;;;;;:3;:39::i;36848:159:34:-;36943:6;;:56;;-1:-1:-1;;;36943:56:34;;36893:15;;-1:-1:-1;;;;;36943:6:34;;:31;;:56;;-1:-1:-1;;;;36943:56:34;;;:::i;28625:176:33:-;28716:7;28742:52;28774:19;;28742:11;:27;;;:31;;:52;;;;:::i;12067:398:3:-;12145:15;;:::i;:::-;12190:10;;12172:15;;12190:33;;436:6;12190:14;:33::i;:::-;12264:10;;12172:51;;-1:-1:-1;12233:16:3;;12252:23;;12172:51;;12252:11;:23::i;:::-;12311:10;;12233:42;;-1:-1:-1;12285:11:3;;12299:23;;:7;;:11;:23::i;:::-;12285:37;-1:-1:-1;12336:8:3;;12332:127;;12367:25;;;;;;;;;;12376:15;:8;12389:1;12376:12;:15::i;:::-;12367:25;;;12360:32;;;;;;;12332:127;12430:18;;;;;;;;12439:8;12430:18;;;12423:25;;;;;;;42217:296:34;42391:53;;;;;;;;;42417:26;;;42391:53;;;42315:4;;42350:156;;42391:53;;:25;:53::i;:::-;42350:156;;;;;;;;;;;;;:23;:156::i;43176:371::-;43335:32;;:::i;:::-;43388:26;:9;43412:1;43388:23;:26::i;:::-;43383:158;;43437:30;43465:1;43437:27;:30::i;:::-;43430:37;;;;43383:158;43505:25;:10;43520:9;43505:14;:25::i;685:610:75:-;745:4;1206:20;;1051:66;1245:23;;;;;;:42;;-1:-1:-1;1272:15:75;;;1245:42;1237:51;685:610;-1:-1:-1;;;;685:610:75:o;1692:187:70:-;1778:7;1813:12;1805:6;;;;1797:29;;;;-1:-1:-1;;;1797:29:70;;;;;;;;:::i;:::-;-1:-1:-1;;;1848:5:70;;;1692:187::o;3638:338::-;3724:7;3824:12;3817:5;3809:28;;;;-1:-1:-1;;;3809:28:70;;;;;;;;:::i;:::-;;3847:9;3863:1;3859;:5;;;;;;;3638:338;-1:-1:-1;;;;;3638:338:70:o;4420:128::-;4478:7;4504:37;4508:1;4511;4504:37;;;;;;;;;;;;;;;;;5098:7;5133:12;5125:6;5117:29;;;;-1:-1:-1;;;5117:29:70;;;;;;;;:::i;:::-;;5167:1;5163;:5;;;;;;;5012:163;-1:-1:-1;;;;5012:163:70:o;-1:-1:-1:-;;;;;;;;;;;;;;:::o;761:158::-;;872:2;863:6;858:3;854:16;850:25;847:2;;;-1:-1;;878:12;959:327;;1073:4;1061:9;1056:3;1052:19;1048:30;1045:2;;;-1:-1;;1081:12;1045:2;1109:20;1073:4;1109:20;:::i;:::-;1749;;1190:75;;-1:-1;1100:29;1039:247;-1:-1;1039:247::o;1326:349::-;;1451:4;1439:9;1434:3;1430:19;1426:30;1423:2;;;-1:-1;;1459:12;1423:2;1487:20;1451:4;1487:20;:::i;:::-;1897:13;;1568:86;;-1:-1;1478:29;1417:258;-1:-1;1417:258::o;1960:241::-;;2064:2;2052:9;2043:7;2039:23;2035:32;2032:2;;;-1:-1;;2070:12;2032:2;85:6;72:20;97:33;124:5;97:33;:::i;2208:263::-;;2323:2;2311:9;2302:7;2298:23;2294:32;2291:2;;;-1:-1;;2329:12;2291:2;226:6;220:13;238:33;265:5;238:33;:::i;2478:905::-;;;;;;2731:3;2719:9;2710:7;2706:23;2702:33;2699:2;;;-1:-1;;2738:12;2699:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;2790:63;-1:-1;2908:80;2980:7;2890:2;2956:22;;2908:80;:::i;:::-;2898:90;;3043:80;3115:7;3025:2;3095:9;3091:22;3043:80;:::i;:::-;3033:90;;3178:80;3250:7;3160:2;3230:9;3226:22;3178:80;:::i;:::-;2693:690;;;;-1:-1;2693:690;;3295:3;3335:22;1749:20;;2693:690;-1:-1;;2693:690::o;3390:416::-;;;3536:2;3524:9;3515:7;3511:23;3507:32;3504:2;;;-1:-1;;3542:12;3504:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;3594:63;-1:-1;3712:78;3782:7;3694:2;3758:22;;3712:78;:::i;:::-;3702:88;;3498:308;;;;;:::o;3813:366::-;;;3934:2;3922:9;3913:7;3909:23;3905:32;3902:2;;;-1:-1;;3940:12;3902:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;3992:63;4092:2;4131:22;;;;1749:20;;-1:-1;;;3896:283::o;4186:257::-;;4298:2;4286:9;4277:7;4273:23;4269:32;4266:2;;;-1:-1;;4304:12;4266:2;364:6;358:13;58008:5;54824:13;54817:21;57986:5;57983:32;57973:2;;-1:-1;;58019:12;4730:261;;4844:2;4832:9;4823:7;4819:23;4815:32;4812:2;;;-1:-1;;4850:12;4812:2;-1:-1;664:13;;4806:185;-1:-1;4806:185::o;4998:291::-;;5127:2;5115:9;5106:7;5102:23;5098:32;5095:2;;;-1:-1;;5133:12;5095:2;5195:78;5265:7;5241:22;5195:78;:::i;5296:313::-;;5436:2;5424:9;5415:7;5411:23;5407:32;5404:2;;;-1:-1;;5442:12;5404:2;5504:89;5585:7;5561:22;5504:89;:::i;5616:466::-;;;5787:2;5775:9;5766:7;5762:23;5758:32;5755:2;;;-1:-1;;5793:12;5755:2;5855:78;5925:7;5901:22;5855:78;:::i;6089:499::-;;;6271:2;6259:9;6250:7;6246:23;6242:32;6239:2;;;-1:-1;;6277:12;6239:2;6339:89;6420:7;6396:22;6339:89;:::i;:::-;6329:99;;6483:89;6564:7;6465:2;6544:9;6540:22;6483:89;:::i;6595:241::-;;6699:2;6687:9;6678:7;6674:23;6670:32;6667:2;;;-1:-1;;6705:12;6667:2;-1:-1;1749:20;;6661:175;-1:-1;6661:175::o;7113:366::-;;;7234:2;7222:9;7213:7;7209:23;7205:32;7202:2;;;-1:-1;;7240:12;7202:2;1762:6;1749:20;7292:63;;7392:2;7435:9;7431:22;72:20;97:33;124:5;97:33;:::i;:::-;7400:63;;;;7196:283;;;;;:::o;7951:103::-;-1:-1;;;;;55467:54;8012:37;;8006:48::o;10516:134::-;57774:1;57767:5;57764:12;57754:2;;57780:9;57754:2;10586:59;;10580:70::o;25708:316::-;25911:23;9412:37;;25814:210::o;26657:271::-;;9621:5;53669:12;9732:52;9777:6;9772:3;9765:4;9758:5;9754:16;9732:52;:::i;:::-;9796:16;;;;;26791:137;-1:-1;;26791:137::o;26935:222::-;-1:-1;;;;;55467:54;;;;8012:37;;27062:2;27047:18;;27033:124::o;27409:349::-;-1:-1;;;;;55467:54;;;;7881:58;;27744:2;27729:18;;9412:37;27572:2;27557:18;;27543:215::o;27765:333::-;-1:-1;;;;;55467:54;;;8012:37;;55467:54;;28084:2;28069:18;;8012:37;27920:2;27905:18;;27891:207::o;28105:1960::-;-1:-1;;;;;55467:54;;;8012:37;;55467:54;;28987:2;28972:18;;8012:37;28822:3;28807:19;;57774:1;57764:12;;57754:2;;57780:9;57754:2;56906:35;29079:2;29068:9;29064:18;10586:59;9442:5;29162:2;29151:9;29147:18;9412:37;25917:16;25911:23;29295:3;29284:9;29280:19;9412:37;25917:16;25911:23;29429:3;29418:9;29414:19;9412:37;25917:16;25911:23;29563:3;29552:9;29548:19;9412:37;25917:16;25911:23;29697:3;29686:9;29682:19;9412:37;29713:73;29781:3;29770:9;29766:19;29757:6;29713:73;:::i;:::-;29797:123;29915:3;29904:9;29900:19;29891:6;29797:123;:::i;:::-;29931:124;30050:3;30039:9;30035:19;30025:7;29931:124;:::i;:::-;28793:1272;;;;;;;;;;;;;;:::o;30072:444::-;-1:-1;;;;;55467:54;;;8012:37;;55467:54;;;;30419:2;30404:18;;8012:37;30502:2;30487:18;;9412:37;;;;30255:2;30240:18;;30226:290::o;30523:433::-;-1:-1;;;;;55467:54;;;;8012:37;;25911:23;30942:2;30927:18;;9412:37;30728:2;30713:18;;30699:257::o;31303:432::-;-1:-1;;;;;55467:54;;;;8012:37;;31644:2;31629:18;;9412:37;;;;54824:13;54817:21;31721:2;31706:18;;9295:34;31480:2;31465:18;;31451:284::o;31742:502::-;31985:2;31999:47;;;53669:12;;31970:18;;;54267:19;;;31742:502;;31985:2;54307:14;;;;;;53490;;;31742:502;8841:359;8866:6;8863:1;8860:13;8841:359;;;8933:6;8927:13;23602:63;23650:14;23579:16;23573:23;23602:63;:::i;:::-;31985:2;23743:5;23739:16;23733:23;23762:63;31985:2;23814:3;23810:14;23796:12;23762:63;:::i;:::-;;54307:14;23898:5;23894:16;23888:23;23917:72;54307:14;23978:3;23974:14;23960:12;23917:72;:::i;:::-;-1:-1;24079:4;24068:16;;;24062:23;24139:14;;;9412:37;24246:4;24235:16;;;24229:23;24258:113;24356:14;;;24229:23;24258:113;:::i;:::-;;;24462:4;;24455:5;24451:16;24445:23;24474:113;24462:4;24576:3;24572:14;24558:12;24474:113;:::i;:::-;;;24682:4;;24675:5;24671:16;24665:23;24694:113;24682:4;24796:3;24792:14;24778:12;24694:113;:::i;:::-;;;24899:4;;24892:5;24888:16;24882:23;24911:113;24899:4;25013:3;25009:14;24995:12;24911:113;:::i;:::-;;;25107:6;;25100:5;25096:18;25090:25;25121:65;25107:6;25173:3;25169:16;25155:12;25121:65;:::i;:::-;;;25276:6;;25269:5;25265:18;25259:25;25290:115;25276:6;25392:3;25388:16;25374:12;25290:115;:::i;:::-;-1:-1;;25488:6;25477:18;;;25471:25;;25502:115;25600:16;;;25471:25;25502:115;:::i;:::-;-1:-1;;7781:6;7772:16;;;;;54089:14;;;;8888:1;8881:9;8841:359;;;-1:-1;32052:182;;31956:288;-1:-1;;;;;;;31956:288::o;32251:222::-;9412:37;;;32378:2;32363:18;;32349:124::o;32480:333::-;9412:37;;;32799:2;32784:18;;9412:37;32635:2;32620:18;;32606:207::o;33635:254::-;33778:2;33763:18;;57665:1;57655:12;;57645:2;;57671:9;57645:2;10438:66;;;33749:140;:::o;33896:310::-;;34043:2;34064:17;34057:47;10953:5;53669:12;54279:6;34043:2;34032:9;34028:18;54267:19;11047:52;11092:6;54307:14;34032:9;54307:14;34043:2;11073:5;11069:16;11047:52;:::i;:::-;57557:7;57541:14;-1:-1;;57537:28;11111:39;;;;54307:14;11111:39;;34014:192;-1:-1;;34014:192::o;34213:416::-;34413:2;34427:47;;;11387:2;34398:18;;;54267:19;11423:27;54307:14;;;11403:48;11470:12;;;34384:245::o;34636:416::-;34836:2;34850:47;;;11721:2;34821:18;;;54267:19;11757:30;54307:14;;;11737:51;11807:12;;;34807:245::o;35059:416::-;35259:2;35273:47;;;12058:2;35244:18;;;54267:19;12094:32;54307:14;;;12074:53;12146:12;;;35230:245::o;35482:416::-;35682:2;35696:47;;;12397:2;35667:18;;;54267:19;12433:29;54307:14;;;12413:50;12482:12;;;35653:245::o;35905:416::-;36105:2;36119:47;;;12733:2;36090:18;;;54267:19;-1:-1;;;54307:14;;;12749:42;12810:12;;;36076:245::o;36328:416::-;36528:2;36542:47;;;13061:2;36513:18;;;54267:19;-1:-1;;;54307:14;;;13077:43;-1:-1;13139:12;;36499:245::o;36751:416::-;36951:2;36965:47;;;36936:18;;;54267:19;13426:34;54307:14;;;13406:55;13480:12;;;36922:245::o;37174:416::-;37374:2;37388:47;;;13731:2;37359:18;;;54267:19;-1:-1;;;54307:14;;;13747:43;13809:12;;;37345:245::o;37597:416::-;37797:2;37811:47;;;14060:2;37782:18;;;54267:19;14096:28;54307:14;;;14076:49;14144:12;;;37768:245::o;38020:416::-;38220:2;38234:47;;;14395:2;38205:18;;;54267:19;-1:-1;;;54307:14;;;14411:46;14476:12;;;38191:245::o;38443:416::-;38643:2;38657:47;;;14727:2;38628:18;;;54267:19;14763:32;54307:14;;;14743:53;14815:12;;;38614:245::o;38866:416::-;39066:2;39080:47;;;15066:2;39051:18;;;54267:19;-1:-1;;;54307:14;;;15082:45;15146:12;;;39037:245::o;39289:416::-;39489:2;39503:47;;;15397:2;39474:18;;;54267:19;15433:27;54307:14;;;15413:48;15480:12;;;39460:245::o;39712:416::-;39912:2;39926:47;;;15731:2;39897:18;;;54267:19;15767:28;54307:14;;;15747:49;15815:12;;;39883:245::o;40135:416::-;40335:2;40349:47;;;16066:2;40320:18;;;54267:19;16102:28;54307:14;;;16082:49;16150:12;;;40306:245::o;40558:416::-;40758:2;40772:47;;;16401:2;40743:18;;;54267:19;16437:34;54307:14;;;16417:55;-1:-1;;;16492:12;;;16485:25;16529:12;;;40729:245::o;40981:416::-;41181:2;41195:47;;;16780:2;41166:18;;;54267:19;-1:-1;;;54307:14;;;16796:41;16856:12;;;41152:245::o;41404:416::-;41604:2;41618:47;;;17107:2;41589:18;;;54267:19;17143:26;54307:14;;;17123:47;17189:12;;;41575:245::o;41827:416::-;42027:2;42041:47;;;17440:2;42012:18;;;54267:19;17476:26;54307:14;;;17456:47;17522:12;;;41998:245::o;42250:416::-;42450:2;42464:47;;;17773:2;42435:18;;;54267:19;-1:-1;;;54307:14;;;17789:42;17850:12;;;42421:245::o;42673:416::-;42873:2;42887:47;;;18101:2;42858:18;;;54267:19;18137:33;54307:14;;;18117:54;18190:12;;;42844:245::o;43096:416::-;43296:2;43310:47;;;18441:2;43281:18;;;54267:19;18477:32;54307:14;;;18457:53;18529:12;;;43267:245::o;43519:416::-;43719:2;43733:47;;;18780:2;43704:18;;;54267:19;-1:-1;;;54307:14;;;18796:35;18850:12;;;43690:245::o;43942:416::-;44142:2;44156:47;;;19101:2;44127:18;;;54267:19;-1:-1;;;54307:14;;;19117:46;19182:12;;;44113:245::o;44365:416::-;44565:2;44579:47;;;19433:2;44550:18;;;54267:19;19469:30;54307:14;;;19449:51;19519:12;;;44536:245::o;44788:416::-;44988:2;45002:47;;;19770:2;44973:18;;;54267:19;19806:26;54307:14;;;19786:47;19852:12;;;44959:245::o;45211:416::-;45411:2;45425:47;;;20103:2;45396:18;;;54267:19;20139:27;54307:14;;;20119:48;20186:12;;;45382:245::o;45634:416::-;45834:2;45848:47;;;20437:2;45819:18;;;54267:19;20473:29;54307:14;;;20453:50;20522:12;;;45805:245::o;46057:416::-;46257:2;46271:47;;;20773:2;46242:18;;;54267:19;20809:32;54307:14;;;20789:53;20861:12;;;46228:245::o;46480:416::-;46680:2;46694:47;;;21112:2;46665:18;;;54267:19;21148:34;54307:14;;;21128:55;-1:-1;;;21203:12;;;21196:34;21249:12;;;46651:245::o;46903:416::-;47103:2;47117:47;;;21500:2;47088:18;;;54267:19;21536:33;54307:14;;;21516:54;21589:12;;;47074:245::o;47326:416::-;47526:2;47540:47;;;21840:2;47511:18;;;54267:19;-1:-1;;;54307:14;;;21856:41;21916:12;;;47497:245::o;47749:416::-;47949:2;47963:47;;;22167:2;47934:18;;;54267:19;-1:-1;;;54307:14;;;22183:39;22241:12;;;47920:245::o;48172:416::-;48372:2;48386:47;;;22492:2;48357:18;;;54267:19;22528:33;54307:14;;;22508:54;22581:12;;;48343:245::o;48595:416::-;48795:2;48809:47;;;22832:2;48780:18;;;54267:19;22868:28;54307:14;;;22848:49;22916:12;;;48766:245::o;49018:416::-;49218:2;49232:47;;;23167:2;49203:18;;;54267:19;-1:-1;;;54307:14;;;23183:44;23246:12;;;49189:245::o;49441:322::-;25911:23;;9412:37;;49618:2;49603:18;;49589:174::o;49770:968::-;25911:23;;9412:37;;50374:2;50359:18;;9412:37;;;;25911:23;;50507:2;50492:18;;9412:37;25911:23;50640:2;50625:18;;9412:37;50723:3;50708:19;;9412:37;50159:3;50144:19;;50130:608::o;50974:644::-;9412:37;;;25911:23;;51471:2;51456:18;;9412:37;25911:23;51604:2;51589:18;;9412:37;51257:2;51242:18;;51228:390::o;51965:544::-;9412:37;;;52362:2;52347:18;;9412:37;;;;25911:23;52495:2;52480:18;;9412:37;52198:2;52183:18;;52169:340::o;52516:556::-;9412:37;;;52892:2;52877:18;;9412:37;;;;52975:2;52960:18;;9412:37;53058:2;53043:18;;9412:37;52727:3;52712:19;;52698:374::o;53079:256::-;53141:2;53135:9;53167:17;;;53242:18;53227:34;;53263:22;;;53224:62;53221:2;;;53299:1;;53289:12;53221:2;53141;53308:22;53119:216;;-1:-1;53119:216::o;57197:268::-;57262:1;57269:101;57283:6;57280:1;57277:13;57269:101;;;57350:11;;;57344:18;57331:11;;;57324:39;57305:2;57298:10;57269:101;;;57385:6;57382:1;57379:13;57376:2;;;-1:-1;;57262:1;57432:16;;57425:27;57246:219::o;57803:117::-;-1:-1;;;;;55467:54;;57862:35;;57852:2;;57911:1;;57901:12",
  "source": "pragma solidity ^0.6.0;\npragma experimental ABIEncoderV2;\n\nimport \"./Liquidatable.sol\";\n\n\n/**\n * @title Expiring Multi Party.\n * @notice Convenient wrapper for Liquidatable.\n */\ncontract ExpiringMultiParty is Liquidatable {\n    /**\n     * @notice Constructs the ExpiringMultiParty contract.\n     * @param params struct to define input parameters for construction of Liquidatable. Some params\n     * are fed directly into the PricelessPositionManager's constructor within the inheritance tree.\n     */\n    constructor(ConstructorParams memory params)\n        public\n        Liquidatable(params)\n    // Note: since there is no logic here, there is no need to add a re-entrancy guard.\n    {\n\n    }\n}\n",
  "sourcePath": "/home/circleci/protocol/packages/core/contracts/financial-templates/expiring-multiparty/ExpiringMultiParty.sol",
  "ast": {
    "absolutePath": "/home/circleci/protocol/packages/core/contracts/financial-templates/expiring-multiparty/ExpiringMultiParty.sol",
    "exportedSymbols": {
      "ExpiringMultiParty": [
        5124
      ]
    },
    "id": 5125,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5108,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:30"
      },
      {
        "id": 5109,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:30"
      },
      {
        "absolutePath": "/home/circleci/protocol/packages/core/contracts/financial-templates/expiring-multiparty/Liquidatable.sol",
        "file": "./Liquidatable.sol",
        "id": 5110,
        "nodeType": "ImportDirective",
        "scope": 5125,
        "sourceUnit": 6746,
        "src": "59:28:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5112,
              "name": "Liquidatable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6745,
              "src": "209:12:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Liquidatable_$6745",
                "typeString": "contract Liquidatable"
              }
            },
            "id": 5113,
            "nodeType": "InheritanceSpecifier",
            "src": "209:12:30"
          }
        ],
        "contractDependencies": [
          1164,
          1844,
          3930,
          6745,
          8691,
          15237
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 5111,
          "nodeType": "StructuredDocumentation",
          "src": "90:87:30",
          "text": " @title Expiring Multi Party.\n @notice Convenient wrapper for Liquidatable."
        },
        "fullyImplemented": true,
        "id": 5124,
        "linearizedBaseContracts": [
          5124,
          6745,
          8691,
          15237,
          3930,
          1164,
          1844
        ],
        "name": "ExpiringMultiParty",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 5122,
              "nodeType": "Block",
              "src": "686:8:30",
              "statements": []
            },
            "documentation": {
              "id": 5114,
              "nodeType": "StructuredDocumentation",
              "src": "228:272:30",
              "text": " @notice Constructs the ExpiringMultiParty contract.\n @param params struct to define input parameters for construction of Liquidatable. Some params\n are fed directly into the PricelessPositionManager's constructor within the inheritance tree."
            },
            "id": 5123,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 5119,
                    "name": "params",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5116,
                    "src": "586:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ConstructorParams_$5552_memory_ptr",
                      "typeString": "struct Liquidatable.ConstructorParams memory"
                    }
                  }
                ],
                "id": 5120,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 5118,
                  "name": "Liquidatable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6745,
                  "src": "573:12:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Liquidatable_$6745_$",
                    "typeString": "type(contract Liquidatable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "573:20:30"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5116,
                  "mutability": "mutable",
                  "name": "params",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5123,
                  "src": "517:31:30",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ConstructorParams_$5552_memory_ptr",
                    "typeString": "struct Liquidatable.ConstructorParams"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 5115,
                    "name": "ConstructorParams",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5552,
                    "src": "517:17:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ConstructorParams_$5552_storage_ptr",
                      "typeString": "struct Liquidatable.ConstructorParams"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "516:33:30"
            },
            "returnParameters": {
              "id": 5121,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "686:0:30"
            },
            "scope": 5124,
            "src": "505:189:30",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 5125,
        "src": "178:518:30"
      }
    ],
    "src": "0:697:30"
  },
  "legacyAST": {
    "absolutePath": "/home/circleci/protocol/packages/core/contracts/financial-templates/expiring-multiparty/ExpiringMultiParty.sol",
    "exportedSymbols": {
      "ExpiringMultiParty": [
        5124
      ]
    },
    "id": 5125,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5108,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:30"
      },
      {
        "id": 5109,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:30"
      },
      {
        "absolutePath": "/home/circleci/protocol/packages/core/contracts/financial-templates/expiring-multiparty/Liquidatable.sol",
        "file": "./Liquidatable.sol",
        "id": 5110,
        "nodeType": "ImportDirective",
        "scope": 5125,
        "sourceUnit": 6746,
        "src": "59:28:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5112,
              "name": "Liquidatable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6745,
              "src": "209:12:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Liquidatable_$6745",
                "typeString": "contract Liquidatable"
              }
            },
            "id": 5113,
            "nodeType": "InheritanceSpecifier",
            "src": "209:12:30"
          }
        ],
        "contractDependencies": [
          1164,
          1844,
          3930,
          6745,
          8691,
          15237
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 5111,
          "nodeType": "StructuredDocumentation",
          "src": "90:87:30",
          "text": " @title Expiring Multi Party.\n @notice Convenient wrapper for Liquidatable."
        },
        "fullyImplemented": true,
        "id": 5124,
        "linearizedBaseContracts": [
          5124,
          6745,
          8691,
          15237,
          3930,
          1164,
          1844
        ],
        "name": "ExpiringMultiParty",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 5122,
              "nodeType": "Block",
              "src": "686:8:30",
              "statements": []
            },
            "documentation": {
              "id": 5114,
              "nodeType": "StructuredDocumentation",
              "src": "228:272:30",
              "text": " @notice Constructs the ExpiringMultiParty contract.\n @param params struct to define input parameters for construction of Liquidatable. Some params\n are fed directly into the PricelessPositionManager's constructor within the inheritance tree."
            },
            "id": 5123,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 5119,
                    "name": "params",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5116,
                    "src": "586:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ConstructorParams_$5552_memory_ptr",
                      "typeString": "struct Liquidatable.ConstructorParams memory"
                    }
                  }
                ],
                "id": 5120,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 5118,
                  "name": "Liquidatable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 6745,
                  "src": "573:12:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Liquidatable_$6745_$",
                    "typeString": "type(contract Liquidatable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "573:20:30"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5117,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5116,
                  "mutability": "mutable",
                  "name": "params",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5123,
                  "src": "517:31:30",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ConstructorParams_$5552_memory_ptr",
                    "typeString": "struct Liquidatable.ConstructorParams"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 5115,
                    "name": "ConstructorParams",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 5552,
                    "src": "517:17:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ConstructorParams_$5552_storage_ptr",
                      "typeString": "struct Liquidatable.ConstructorParams"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "516:33:30"
            },
            "returnParameters": {
              "id": 5121,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "686:0:30"
            },
            "scope": 5124,
            "src": "505:189:30",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 5125,
        "src": "178:518:30"
      }
    ],
    "src": "0:697:30"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2020-10-06T21:03:39.037Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "constructor": {
        "params": {
          "params": "struct to define input parameters for construction of Liquidatable. Some params are fed directly into the PricelessPositionManager's constructor within the inheritance tree."
        }
      },
      "create((uint256),(uint256))": {
        "details": "Reverts if minting these tokens would put the position's collateralization ratio below the global collateralization ratio. This contract must be approved to spend at least `collateralAmount` of `collateralCurrency`.",
        "params": {
          "collateralAmount": "is the number of collateral tokens to collateralize the position with",
          "numTokens": "is the number of tokens to mint from the position."
        }
      },
      "createLiquidation(address,(uint256),(uint256),(uint256),uint256)": {
        "details": "This method generates an ID that will uniquely identify liquidation for the sponsor. This contract must be approved to spend at least `tokensLiquidated` of `tokenCurrency` and at least `finalFeeBond` of `collateralCurrency`.",
        "params": {
          "deadline": "abort the liquidation if the transaction is mined after this timestamp.",
          "maxCollateralPerToken": "abort the liquidation if the position's collateral per token exceeds this value.",
          "maxTokensToLiquidate": "max number of tokens to liquidate.",
          "minCollateralPerToken": "abort the liquidation if the position's collateral per token is below this value.",
          "sponsor": "address of the sponsor to liquidate."
        },
        "returns": {
          "finalFeeBond": "amount of collateral to be posted by liquidator and returned if not disputed successfully.",
          "liquidationId": "ID of the newly created liquidation.",
          "tokensLiquidated": "amount of synthetic tokens removed and liquidated from the `sponsor`'s position."
        }
      },
      "deposit((uint256))": {
        "details": "Increases the collateralization level of a position after creation. This contract must be approved to spend at least `collateralAmount` of `collateralCurrency`.",
        "params": {
          "collateralAmount": "total amount of collateral tokens to be sent to the sponsor's position."
        }
      },
      "depositTo(address,(uint256))": {
        "details": "Increases the collateralization level of a position after creation. This contract must be approved to spend at least `collateralAmount` of `collateralCurrency`.",
        "params": {
          "collateralAmount": "total amount of collateral tokens to be sent to the sponsor's position.",
          "sponsor": "the sponsor to credit the deposit to."
        }
      },
      "dispute(uint256,address)": {
        "details": "Can only dispute a liquidation before the liquidation expires and if there are no other pending disputes. This contract must be approved to spend at least the dispute bond amount of `collateralCurrency`. This dispute bond amount is calculated from `disputeBondPct` times the collateral in the liquidation.",
        "params": {
          "liquidationId": "of the disputed liquidation.",
          "sponsor": "the address of the sponsor whose liquidation is being disputed."
        },
        "returns": {
          "totalPaid": "amount of collateral charged to disputer (i.e. final fee bond + dispute bond)."
        }
      },
      "emergencyShutdown()": {
        "details": "Only the governor can call this function as they are permissioned within the `FinancialContractAdmin`. Upon emergency shutdown, the contract settlement time is set to the shutdown time. This enables withdrawal to occur via the standard `settleExpired` function. Contract state is set to `ExpiredPriceRequested` which prevents re-entry into this function or the `expire` function. No fees are paid when calling `emergencyShutdown` as the governor who would call the function would also receive the fees."
      },
      "expire()": {
        "details": "this function can only be called once the contract is expired and can't be re-called."
      },
      "getCollateral(address)": {
        "details": "This is necessary because the struct returned by the positions() method shows rawCollateral, which isn't a user-readable value.",
        "params": {
          "sponsor": "address whose collateral amount is retrieved."
        },
        "returns": {
          "collateralAmount": "amount of collateral within a sponsors position."
        }
      },
      "getCurrentTime()": {
        "returns": {
          "_0": "uint for the current Testable timestamp."
        }
      },
      "getLiquidations(address)": {
        "params": {
          "sponsor": "address of the position sponsor."
        },
        "returns": {
          "liquidationData": "array of all liquidation information for the given sponsor address."
        }
      },
      "payRegularFees()": {
        "details": "These must be paid periodically for the life of the contract. If the contract has not paid its regular fee in a week or more then a late penalty is applied which is sent to the caller. If the amount of fees owed are greater than the pfc, then this will pay as much as possible from the available collateral. An event is only fired if the fees charged are greater than 0.",
        "returns": {
          "totalPaid": "Amount of collateral that the contract paid (sum of the amount paid to the Store and caller). This returns 0 and exit early if there is no pfc, fees were already paid during the current block, or the fee rate is 0."
        }
      },
      "pfc()": {
        "details": "This is equivalent to the collateral pool available from which to pay fees. Therefore, derived contracts are expected to implement this so that pay-fee methods can correctly compute the owed fees as a % of PfC.",
        "returns": {
          "_0": "pfc value for equal to the current profit from corruption denominated in collateral currency."
        }
      },
      "redeem((uint256))": {
        "details": "Can only be called by a token sponsor. Might not redeem the full proportional amount of collateral in order to account for precision loss. This contract must be approved to spend at least `numTokens` of `tokenCurrency`.",
        "params": {
          "numTokens": "is the number of tokens to be burnt for a commensurate amount of collateral."
        },
        "returns": {
          "amountWithdrawn": "The actual amount of collateral withdrawn."
        }
      },
      "remargin()": {
        "details": "This is supposed to be implemented by any contract that inherits `AdministrateeInterface` and callable only by the Governor contract. This method is therefore minimally implemented in this contract and does nothing."
      },
      "requestTransferPosition()": {
        "details": "The liveness length is the same as the withdrawal liveness."
      },
      "requestWithdrawal((uint256))": {
        "details": "The request will be pending for `withdrawalLiveness`, during which the position can be liquidated.",
        "params": {
          "collateralAmount": "the amount of collateral requested to withdraw"
        }
      },
      "setCurrentTime(uint256)": {
        "details": "Will revert if not running in test mode.",
        "params": {
          "time": "timestamp to set current Testable time to."
        }
      },
      "settleExpired()": {
        "details": "This burns all tokens from the caller of `tokenCurrency` and sends back the proportional amount of `collateralCurrency`. Might not redeem the full proportional amount of collateral in order to account for precision loss. This contract must be approved to spend `tokenCurrency` at least up to the caller's full balance.",
        "returns": {
          "amountWithdrawn": "The actual amount of collateral withdrawn."
        }
      },
      "totalPositionCollateral()": {
        "returns": {
          "totalCollateral": "amount of all collateral within the Expiring Multi Party Contract."
        }
      },
      "transferPositionPassedRequest(address)": {
        "details": "Transferring positions can only occur if the recipient does not already have a position.",
        "params": {
          "newSponsorAddress": "is the address to which the position will be transferred."
        }
      },
      "trimExcess(address)": {
        "details": "This will drain down to the amount of tracked collateral and drain the full balance of any other token.",
        "params": {
          "token": "address of the ERC20 token whose excess balance should be drained."
        }
      },
      "withdraw((uint256))": {
        "details": "Reverts if the withdrawal puts this position's collateralization ratio below the global collateralization ratio. In that case, use `requestWithdrawal`. Might not withdraw the full requested amount to account for precision loss.",
        "params": {
          "collateralAmount": "is the amount of collateral to withdraw."
        },
        "returns": {
          "amountWithdrawn": "The actual amount of collateral withdrawn."
        }
      },
      "withdrawLiquidation(uint256,address)": {
        "details": "If the dispute SUCCEEDED: the sponsor, liquidator, and disputer are eligible for payment. If the dispute FAILED: only the liquidator can receive payment. Once all collateral is withdrawn, delete the liquidation data.",
        "params": {
          "liquidationId": "uniquely identifies the sponsor's liquidation.",
          "sponsor": "address of the sponsor associated with the liquidation."
        },
        "returns": {
          "amountWithdrawn": "the total amount of underlying returned from the liquidation."
        }
      },
      "withdrawPassedRequest()": {
        "details": "Might not withdraw the full requested amount in order to account for precision loss or if the full requested amount exceeds the collateral in the position (due to paying fees).",
        "returns": {
          "amountWithdrawn": "The actual amount of collateral withdrawn."
        }
      }
    },
    "title": "Expiring Multi Party.",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "cancelTransferPosition()": {
        "notice": "Cancels a pending transfer position request."
      },
      "cancelWithdrawal()": {
        "notice": "Cancels a pending withdrawal request."
      },
      "constructor": "Constructs the ExpiringMultiParty contract.",
      "create((uint256),(uint256))": {
        "notice": "Creates tokens by creating a new position or by augmenting an existing position. Pulls `collateralAmount` into the sponsor's position and mints `numTokens` of `tokenCurrency`."
      },
      "createLiquidation(address,(uint256),(uint256),(uint256),uint256)": {
        "notice": "Liquidates the sponsor's position if the caller has enough synthetic tokens to retire the position's outstanding tokens. Liquidations above a minimum size also reset an ongoing \"slow withdrawal\"'s liveness."
      },
      "deposit((uint256))": {
        "notice": "Transfers `collateralAmount` of `collateralCurrency` into the caller's position."
      },
      "depositTo(address,(uint256))": {
        "notice": "Transfers `collateralAmount` of `collateralCurrency` into the specified sponsor's position."
      },
      "dispute(uint256,address)": {
        "notice": "Disputes a liquidation, if the caller has enough collateral to post a dispute bond and pay a fixed final fee charged on each price request."
      },
      "emergencyShutdown()": {
        "notice": "Premature contract settlement under emergency circumstances."
      },
      "expire()": {
        "notice": "Locks contract state in expired and requests oracle price."
      },
      "getCollateral(address)": {
        "notice": "Accessor method for a sponsor's collateral."
      },
      "getCurrentTime()": {
        "notice": "Gets the current time. Will return the last time set in `setCurrentTime` if running in test mode. Otherwise, it will return the block timestamp."
      },
      "getLiquidations(address)": {
        "notice": "Gets all liquidation information for a given sponsor address."
      },
      "payRegularFees()": {
        "notice": "Pays UMA DVM regular fees (as a % of the collateral pool) to the Store contract."
      },
      "pfc()": {
        "notice": "Gets the current profit from corruption for this contract in terms of the collateral currency."
      },
      "redeem((uint256))": {
        "notice": "Burns `numTokens` of `tokenCurrency` and sends back the proportional amount of `collateralCurrency`."
      },
      "remargin()": {
        "notice": "Theoretically supposed to pay fees and move money between margin accounts to make sure they reflect the NAV of the contract. However, this functionality doesn't apply to this contract."
      },
      "requestTransferPosition()": {
        "notice": "Requests to transfer ownership of the caller's current position to a new sponsor address. Once the request liveness is passed, the sponsor can execute the transfer and specify the new sponsor."
      },
      "requestWithdrawal((uint256))": {
        "notice": "Starts a withdrawal request that, if passed, allows the sponsor to withdraw` from their position."
      },
      "setCurrentTime(uint256)": {
        "notice": "Sets the current time."
      },
      "settleExpired()": {
        "notice": "After a contract has passed expiry all token holders can redeem their tokens for underlying at the prevailing price defined by the DVM from the `expire` function."
      },
      "totalPositionCollateral()": {
        "notice": "Accessor method for the total collateral stored within the PricelessPositionManager."
      },
      "transferPositionPassedRequest(address)": {
        "notice": "After a passed transfer position request (i.e., by a call to `requestTransferPosition` and waiting `withdrawalLiveness`), transfers ownership of the caller's current position to `newSponsorAddress`."
      },
      "trimExcess(address)": {
        "notice": "Drains any excess balance of the provided ERC20 token to a pre-selected beneficiary."
      },
      "withdraw((uint256))": {
        "notice": "Transfers `collateralAmount` of `collateralCurrency` from the sponsor's position to the sponsor."
      },
      "withdrawLiquidation(uint256,address)": {
        "notice": "After a dispute has settled or after a non-disputed liquidation has expired, the sponsor, liquidator, and/or disputer can call this method to receive payments."
      },
      "withdrawPassedRequest()": {
        "notice": "After a passed withdrawal request (i.e., by a call to `requestWithdrawal` and waiting `withdrawalLiveness`), withdraws `positionData.withdrawalRequestAmount` of collateral currency."
      }
    },
    "notice": "Convenient wrapper for Liquidatable.",
    "version": 1
  }
}