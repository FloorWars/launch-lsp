{
  "contractName": "VotingInterface",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        }
      ],
      "name": "commitVote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "identifier",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "time",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "hash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "encryptedVote",
              "type": "bytes"
            }
          ],
          "internalType": "struct VotingInterface.Commitment[]",
          "name": "commits",
          "type": "tuple[]"
        }
      ],
      "name": "batchCommit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "snapshotCurrentRound",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        },
        {
          "internalType": "int256",
          "name": "price",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "salt",
          "type": "int256"
        }
      ],
      "name": "revealVote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "identifier",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "time",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "price",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "salt",
              "type": "int256"
            }
          ],
          "internalType": "struct VotingInterface.Reveal[]",
          "name": "reveals",
          "type": "tuple[]"
        }
      ],
      "name": "batchReveal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPendingRequests",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "identifier",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "time",
              "type": "uint256"
            }
          ],
          "internalType": "struct VotingInterface.PendingRequest[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVotePhase",
      "outputs": [
        {
          "internalType": "enum VotingInterface.Phase",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentRoundId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "voterAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "roundId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "identifier",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "time",
              "type": "uint256"
            }
          ],
          "internalType": "struct VotingInterface.PendingRequest[]",
          "name": "toRetrieve",
          "type": "tuple[]"
        }
      ],
      "name": "retrieveRewards",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"encryptedVote\",\"type\":\"bytes\"}],\"internalType\":\"struct VotingInterface.Commitment[]\",\"name\":\"commits\",\"type\":\"tuple[]\"}],\"name\":\"batchCommit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"price\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"salt\",\"type\":\"int256\"}],\"internalType\":\"struct VotingInterface.Reveal[]\",\"name\":\"reveals\",\"type\":\"tuple[]\"}],\"name\":\"batchReveal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"commitVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentRoundId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPendingRequests\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"internalType\":\"struct VotingInterface.PendingRequest[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVotePhase\",\"outputs\":[{\"internalType\":\"enum VotingInterface.Phase\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"voterAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"internalType\":\"struct VotingInterface.PendingRequest[]\",\"name\":\"toRetrieve\",\"type\":\"tuple[]\"}],\"name\":\"retrieveRewards\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"price\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"salt\",\"type\":\"int256\"}],\"name\":\"revealVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"snapshotCurrentRound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"batchCommit((bytes32,uint256,bytes32,bytes)[])\":{\"details\":\"Using `encryptedVote` is optional. If included then commitment is stored on chain. Look at `project-root/common/Constants.js` for the tested maximum number of commitments that can fit in one transaction.\",\"params\":{\"commits\":\"array of structs that encapsulate an `identifier`, `time`, `hash` and optional `encryptedVote`.\"}},\"batchReveal((bytes32,uint256,int256,int256)[])\":{\"details\":\"For more information on reveals, review the comment for `revealVote`.\",\"params\":{\"reveals\":\"array of the Reveal struct which contains an identifier, time, price and salt.\"}},\"commitVote(bytes32,uint256,bytes32)\":{\"details\":\"`identifier`, `time` must correspond to a price request that's currently in the commit phase. Commits can be changed.Since transaction data is public, the salt will be revealed with the vote. While this is the system\\u2019s expected behavior, voters should never reuse salts. If someone else is able to guess the voted price and knows that a salt will be reused, then they can determine the vote pre-reveal.\",\"params\":{\"hash\":\"keccak256 hash of the `price`, `salt`, voter `address`, `time`, current `roundId`, and `identifier`.\",\"identifier\":\"uniquely identifies the committed vote. EG BTC/USD price pair.\",\"time\":\"unix timestamp of the price being voted on.\"}},\"getCurrentRoundId()\":{\"returns\":{\"_0\":\"uint256 representing the unique round ID.\"}},\"getPendingRequests()\":{\"returns\":{\"_0\":\"pendingRequests `PendingRequest` array containing identifiers and timestamps for all pending requests.\"}},\"getVotePhase()\":{\"returns\":{\"_0\":\"Phase to indicate the current phase. Either { Commit, Reveal, NUM_PHASES_PLACEHOLDER }.\"}},\"retrieveRewards(address,uint256,(bytes32,uint256)[])\":{\"details\":\"Can only retrieve rewards if calling for a valid round and if the call is done within the timeout threshold (not expired).\",\"params\":{\"roundId\":\"the round from which voting rewards will be retrieved from.\",\"toRetrieve\":\"array of PendingRequests which rewards are retrieved from.\",\"voterAddress\":\"voter for which rewards will be retrieved. Does not have to be the caller.\"},\"returns\":{\"_0\":\"total amount of rewards returned to the voter.\"}},\"revealVote(bytes32,uint256,int256,int256)\":{\"details\":\"The revealed `price`, `salt`, `address`, `time`, `roundId`, and `identifier`, must hash to the latest `hash` that `commitVote()` was called with. Only the committer can reveal their vote.\",\"params\":{\"identifier\":\"voted on in the commit phase. EG BTC/USD price pair.\",\"price\":\"voted on during the commit phase.\",\"salt\":\"value used to hide the commitment price during the commit phase.\",\"time\":\"specifies the unix timestamp of the price is being voted on.\"}},\"snapshotCurrentRound(bytes)\":{\"details\":\"This function can be called multiple times but each round will only every have one snapshot at the time of calling `_freezeRoundVariables`.\",\"params\":{\"signature\":\"signature required to prove caller is an EOA to prevent flash loans from being included in the snapshot.\"}}},\"title\":\"Interface that voters must use to Vote on price request resolutions.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"batchCommit((bytes32,uint256,bytes32,bytes)[])\":{\"notice\":\"Submit a batch of commits in a single transaction.\"},\"batchReveal((bytes32,uint256,int256,int256)[])\":{\"notice\":\"Reveal multiple votes in a single transaction. Look at `project-root/common/Constants.js` for the tested maximum number of reveals. that can fit in one transaction.\"},\"commitVote(bytes32,uint256,bytes32)\":{\"notice\":\"Commit a vote for a price request for `identifier` at `time`.\"},\"getCurrentRoundId()\":{\"notice\":\"Returns the current round ID, as a function of the current time.\"},\"getPendingRequests()\":{\"notice\":\"Gets the queries that are being voted on this round.\"},\"getVotePhase()\":{\"notice\":\"Returns the current voting phase, as a function of the current time.\"},\"retrieveRewards(address,uint256,(bytes32,uint256)[])\":{\"notice\":\"Retrieves rewards owed for a set of resolved price requests.\"},\"revealVote(bytes32,uint256,int256,int256)\":{\"notice\":\"Reveal a previously committed vote for `identifier` at `time`.\"},\"snapshotCurrentRound(bytes)\":{\"notice\":\"snapshot the current round's token balances and lock in the inflation rate and GAT.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/circleci/protocol/packages/core/contracts/oracle/interfaces/VotingInterface.sol\":\"VotingInterface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":199},\"remappings\":[]},\"sources\":{\"/home/circleci/protocol/packages/core/contracts/common/implementation/FixedPoint.sol\":{\"keccak256\":\"0xeaa0bef7c35ff2902ef852864d217d75071da9cc96e9cdf5dcb77d54f4e4fefa\",\"urls\":[\"bzz-raw://9c5b1224f4bb7d8d992a1c71b8e2f8c2c8e655af30eb468058dd0eade3218d13\",\"dweb:/ipfs/QmYQ1WUhRwHgfPL5v1MVjCL7AvSVPEdPJt53Q2L5R6zwJU\"]},\"/home/circleci/protocol/packages/core/contracts/oracle/interfaces/VotingInterface.sol\":{\"keccak256\":\"0xd2c1deaa9272918b57a367ea8ff0fe5d6e93f4384eaabf720d0b23f2c19bf6fb\",\"urls\":[\"bzz-raw://7b7de6eb7675b19a46bb4538e9910a86850022a6223de150d91ea62fd5db8ba8\",\"dweb:/ipfs/QmfZLEcCPJ58aPBDQfoooE2oywPhm6FT7AkyhLzAFDBPgk\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x04d34b3cd5677bea25f8dfceb6dec0eaa071d4d4b789a43f13fe0c415ba4c296\",\"urls\":[\"bzz-raw://e7e8b526a6839e5ba14f0d23a830387fec47f7043ce01d42c9f285b709a9d080\",\"dweb:/ipfs/QmXmhhFmX5gcAvVzNiDPAGA35iHMPNaYtQkACswRHBVTNw\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity ^0.6.0;\n\npragma experimental ABIEncoderV2;\n\nimport \"../../common/implementation/FixedPoint.sol\";\n\n\n/**\n * @title Interface that voters must use to Vote on price request resolutions.\n */\nabstract contract VotingInterface {\n    struct PendingRequest {\n        bytes32 identifier;\n        uint256 time;\n    }\n\n    // Captures the necessary data for making a commitment.\n    // Used as a parameter when making batch commitments.\n    // Not used as a data structure for storage.\n    struct Commitment {\n        bytes32 identifier;\n        uint256 time;\n        bytes32 hash;\n        bytes encryptedVote;\n    }\n\n    // Captures the necessary data for revealing a vote.\n    // Used as a parameter when making batch reveals.\n    // Not used as a data structure for storage.\n    struct Reveal {\n        bytes32 identifier;\n        uint256 time;\n        int256 price;\n        int256 salt;\n    }\n\n    // Note: the phases must be in order. Meaning the first enum value must be the first phase, etc.\n    // `NUM_PHASES_PLACEHOLDER` is to get the number of phases. It isn't an actual phase, and it should always be last.\n    enum Phase { Commit, Reveal, NUM_PHASES_PLACEHOLDER }\n\n    /**\n     * @notice Commit a vote for a price request for `identifier` at `time`.\n     * @dev `identifier`, `time` must correspond to a price request that's currently in the commit phase.\n     * Commits can be changed.\n     * @dev Since transaction data is public, the salt will be revealed with the vote. While this is the system’s expected behavior,\n     * voters should never reuse salts. If someone else is able to guess the voted price and knows that a salt will be reused, then\n     * they can determine the vote pre-reveal.\n     * @param identifier uniquely identifies the committed vote. EG BTC/USD price pair.\n     * @param time unix timestamp of the price being voted on.\n     * @param hash keccak256 hash of the `price`, `salt`, voter `address`, `time`, current `roundId`, and `identifier`.\n     */\n    function commitVote(\n        bytes32 identifier,\n        uint256 time,\n        bytes32 hash\n    ) external virtual;\n\n    /**\n     * @notice Submit a batch of commits in a single transaction.\n     * @dev Using `encryptedVote` is optional. If included then commitment is stored on chain.\n     * Look at `project-root/common/Constants.js` for the tested maximum number of\n     * commitments that can fit in one transaction.\n     * @param commits array of structs that encapsulate an `identifier`, `time`, `hash` and optional `encryptedVote`.\n     */\n    function batchCommit(Commitment[] calldata commits) external virtual;\n\n    /**\n     * @notice snapshot the current round's token balances and lock in the inflation rate and GAT.\n     * @dev This function can be called multiple times but each round will only every have one snapshot at the\n     * time of calling `_freezeRoundVariables`.\n     * @param signature  signature required to prove caller is an EOA to prevent flash loans from being included in the\n     * snapshot.\n     */\n    function snapshotCurrentRound(bytes calldata signature) external virtual;\n\n    /**\n     * @notice Reveal a previously committed vote for `identifier` at `time`.\n     * @dev The revealed `price`, `salt`, `address`, `time`, `roundId`, and `identifier`, must hash to the latest `hash`\n     * that `commitVote()` was called with. Only the committer can reveal their vote.\n     * @param identifier voted on in the commit phase. EG BTC/USD price pair.\n     * @param time specifies the unix timestamp of the price is being voted on.\n     * @param price voted on during the commit phase.\n     * @param salt value used to hide the commitment price during the commit phase.\n     */\n    function revealVote(\n        bytes32 identifier,\n        uint256 time,\n        int256 price,\n        int256 salt\n    ) external virtual;\n\n    /**\n     * @notice Reveal multiple votes in a single transaction.\n     * Look at `project-root/common/Constants.js` for the tested maximum number of reveals.\n     * that can fit in one transaction.\n     * @dev For more information on reveals, review the comment for `revealVote`.\n     * @param reveals array of the Reveal struct which contains an identifier, time, price and salt.\n     */\n    function batchReveal(Reveal[] calldata reveals) external virtual;\n\n    /**\n     * @notice Gets the queries that are being voted on this round.\n     * @return pendingRequests `PendingRequest` array containing identifiers\n     * and timestamps for all pending requests.\n     */\n    function getPendingRequests() external virtual view returns (PendingRequest[] memory);\n\n    /**\n     * @notice Returns the current voting phase, as a function of the current time.\n     * @return Phase to indicate the current phase. Either { Commit, Reveal, NUM_PHASES_PLACEHOLDER }.\n     */\n    function getVotePhase() external virtual view returns (Phase);\n\n    /**\n     * @notice Returns the current round ID, as a function of the current time.\n     * @return uint256 representing the unique round ID.\n     */\n    function getCurrentRoundId() external virtual view returns (uint256);\n\n    /**\n     * @notice Retrieves rewards owed for a set of resolved price requests.\n     * @dev Can only retrieve rewards if calling for a valid round and if the\n     * call is done within the timeout threshold (not expired).\n     * @param voterAddress voter for which rewards will be retrieved. Does not have to be the caller.\n     * @param roundId the round from which voting rewards will be retrieved from.\n     * @param toRetrieve array of PendingRequests which rewards are retrieved from.\n     * @return total amount of rewards returned to the voter.\n     */\n    function retrieveRewards(\n        address voterAddress,\n        uint256 roundId,\n        PendingRequest[] memory toRetrieve\n    ) public virtual returns (FixedPoint.Unsigned memory);\n}\n",
  "sourcePath": "/home/circleci/protocol/packages/core/contracts/oracle/interfaces/VotingInterface.sol",
  "ast": {
    "absolutePath": "/home/circleci/protocol/packages/core/contracts/oracle/interfaces/VotingInterface.sol",
    "exportedSymbols": {
      "VotingInterface": [
        15522
      ]
    },
    "id": 15523,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 15417,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:62"
      },
      {
        "id": 15418,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "25:33:62"
      },
      {
        "absolutePath": "/home/circleci/protocol/packages/core/contracts/common/implementation/FixedPoint.sol",
        "file": "../../common/implementation/FixedPoint.sol",
        "id": 15419,
        "nodeType": "ImportDirective",
        "scope": 15523,
        "sourceUnit": 1104,
        "src": "60:52:62",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 15420,
          "nodeType": "StructuredDocumentation",
          "src": "115:86:62",
          "text": " @title Interface that voters must use to Vote on price request resolutions."
        },
        "fullyImplemented": false,
        "id": 15522,
        "linearizedBaseContracts": [
          15522
        ],
        "name": "VotingInterface",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "VotingInterface.PendingRequest",
            "id": 15425,
            "members": [
              {
                "constant": false,
                "id": 15422,
                "mutability": "mutable",
                "name": "identifier",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 15425,
                "src": "274:18:62",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 15421,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "274:7:62",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15424,
                "mutability": "mutable",
                "name": "time",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 15425,
                "src": "302:12:62",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 15423,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "302:7:62",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "PendingRequest",
            "nodeType": "StructDefinition",
            "scope": 15522,
            "src": "242:79:62",
            "visibility": "public"
          },
          {
            "canonicalName": "VotingInterface.Commitment",
            "id": 15434,
            "members": [
              {
                "constant": false,
                "id": 15427,
                "mutability": "mutable",
                "name": "identifier",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 15434,
                "src": "522:18:62",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 15426,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "522:7:62",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15429,
                "mutability": "mutable",
                "name": "time",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 15434,
                "src": "550:12:62",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 15428,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "550:7:62",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15431,
                "mutability": "mutable",
                "name": "hash",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 15434,
                "src": "572:12:62",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 15430,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "572:7:62",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15433,
                "mutability": "mutable",
                "name": "encryptedVote",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 15434,
                "src": "594:19:62",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 15432,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "594:5:62",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Commitment",
            "nodeType": "StructDefinition",
            "scope": 15522,
            "src": "494:126:62",
            "visibility": "public"
          },
          {
            "canonicalName": "VotingInterface.Reveal",
            "id": 15443,
            "members": [
              {
                "constant": false,
                "id": 15436,
                "mutability": "mutable",
                "name": "identifier",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 15443,
                "src": "810:18:62",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 15435,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "810:7:62",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15438,
                "mutability": "mutable",
                "name": "time",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 15443,
                "src": "838:12:62",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 15437,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "838:7:62",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15440,
                "mutability": "mutable",
                "name": "price",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 15443,
                "src": "860:12:62",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_int256",
                  "typeString": "int256"
                },
                "typeName": {
                  "id": 15439,
                  "name": "int256",
                  "nodeType": "ElementaryTypeName",
                  "src": "860:6:62",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15442,
                "mutability": "mutable",
                "name": "salt",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 15443,
                "src": "882:11:62",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_int256",
                  "typeString": "int256"
                },
                "typeName": {
                  "id": 15441,
                  "name": "int256",
                  "nodeType": "ElementaryTypeName",
                  "src": "882:6:62",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Reveal",
            "nodeType": "StructDefinition",
            "scope": 15522,
            "src": "786:114:62",
            "visibility": "public"
          },
          {
            "canonicalName": "VotingInterface.Phase",
            "id": 15447,
            "members": [
              {
                "id": 15444,
                "name": "Commit",
                "nodeType": "EnumValue",
                "src": "1140:6:62"
              },
              {
                "id": 15445,
                "name": "Reveal",
                "nodeType": "EnumValue",
                "src": "1148:6:62"
              },
              {
                "id": 15446,
                "name": "NUM_PHASES_PLACEHOLDER",
                "nodeType": "EnumValue",
                "src": "1156:22:62"
              }
            ],
            "name": "Phase",
            "nodeType": "EnumDefinition",
            "src": "1127:53:62"
          },
          {
            "body": null,
            "documentation": {
              "id": 15448,
              "nodeType": "StructuredDocumentation",
              "src": "1186:810:62",
              "text": " @notice Commit a vote for a price request for `identifier` at `time`.\n @dev `identifier`, `time` must correspond to a price request that's currently in the commit phase.\n Commits can be changed.\n @dev Since transaction data is public, the salt will be revealed with the vote. While this is the system’s expected behavior,\n voters should never reuse salts. If someone else is able to guess the voted price and knows that a salt will be reused, then\n they can determine the vote pre-reveal.\n @param identifier uniquely identifies the committed vote. EG BTC/USD price pair.\n @param time unix timestamp of the price being voted on.\n @param hash keccak256 hash of the `price`, `salt`, voter `address`, `time`, current `roundId`, and `identifier`."
            },
            "functionSelector": "d8651ad0",
            "id": 15457,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "commitVote",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 15455,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15450,
                  "mutability": "mutable",
                  "name": "identifier",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15457,
                  "src": "2030:18:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 15449,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2030:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15452,
                  "mutability": "mutable",
                  "name": "time",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15457,
                  "src": "2058:12:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15451,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2058:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15454,
                  "mutability": "mutable",
                  "name": "hash",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15457,
                  "src": "2080:12:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 15453,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2080:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2020:78:62"
            },
            "returnParameters": {
              "id": 15456,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2115:0:62"
            },
            "scope": 15522,
            "src": "2001:115:62",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 15458,
              "nodeType": "StructuredDocumentation",
              "src": "2122:425:62",
              "text": " @notice Submit a batch of commits in a single transaction.\n @dev Using `encryptedVote` is optional. If included then commitment is stored on chain.\n Look at `project-root/common/Constants.js` for the tested maximum number of\n commitments that can fit in one transaction.\n @param commits array of structs that encapsulate an `identifier`, `time`, `hash` and optional `encryptedVote`."
            },
            "functionSelector": "70a0cf2c",
            "id": 15464,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "batchCommit",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 15462,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15461,
                  "mutability": "mutable",
                  "name": "commits",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15464,
                  "src": "2573:29:62",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Commitment_$15434_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct VotingInterface.Commitment[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 15459,
                      "name": "Commitment",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 15434,
                      "src": "2573:10:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Commitment_$15434_storage_ptr",
                        "typeString": "struct VotingInterface.Commitment"
                      }
                    },
                    "id": 15460,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2573:12:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Commitment_$15434_storage_$dyn_storage_ptr",
                      "typeString": "struct VotingInterface.Commitment[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2572:31:62"
            },
            "returnParameters": {
              "id": 15463,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2620:0:62"
            },
            "scope": 15522,
            "src": "2552:69:62",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 15465,
              "nodeType": "StructuredDocumentation",
              "src": "2627:406:62",
              "text": " @notice snapshot the current round's token balances and lock in the inflation rate and GAT.\n @dev This function can be called multiple times but each round will only every have one snapshot at the\n time of calling `_freezeRoundVariables`.\n @param signature  signature required to prove caller is an EOA to prevent flash loans from being included in the\n snapshot."
            },
            "functionSelector": "110d559a",
            "id": 15470,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "snapshotCurrentRound",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 15468,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15467,
                  "mutability": "mutable",
                  "name": "signature",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15470,
                  "src": "3068:24:62",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 15466,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3068:5:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3067:26:62"
            },
            "returnParameters": {
              "id": 15469,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3110:0:62"
            },
            "scope": 15522,
            "src": "3038:73:62",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 15471,
              "nodeType": "StructuredDocumentation",
              "src": "3117:592:62",
              "text": " @notice Reveal a previously committed vote for `identifier` at `time`.\n @dev The revealed `price`, `salt`, `address`, `time`, `roundId`, and `identifier`, must hash to the latest `hash`\n that `commitVote()` was called with. Only the committer can reveal their vote.\n @param identifier voted on in the commit phase. EG BTC/USD price pair.\n @param time specifies the unix timestamp of the price is being voted on.\n @param price voted on during the commit phase.\n @param salt value used to hide the commitment price during the commit phase."
            },
            "functionSelector": "4c7a2603",
            "id": 15482,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "revealVote",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 15480,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15473,
                  "mutability": "mutable",
                  "name": "identifier",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15482,
                  "src": "3743:18:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 15472,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3743:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15475,
                  "mutability": "mutable",
                  "name": "time",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15482,
                  "src": "3771:12:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15474,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3771:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15477,
                  "mutability": "mutable",
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15482,
                  "src": "3793:12:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 15476,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3793:6:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15479,
                  "mutability": "mutable",
                  "name": "salt",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15482,
                  "src": "3815:11:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 15478,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3815:6:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3733:99:62"
            },
            "returnParameters": {
              "id": 15481,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3849:0:62"
            },
            "scope": 15522,
            "src": "3714:136:62",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 15483,
              "nodeType": "StructuredDocumentation",
              "src": "3856:388:62",
              "text": " @notice Reveal multiple votes in a single transaction.\n Look at `project-root/common/Constants.js` for the tested maximum number of reveals.\n that can fit in one transaction.\n @dev For more information on reveals, review the comment for `revealVote`.\n @param reveals array of the Reveal struct which contains an identifier, time, price and salt."
            },
            "functionSelector": "6852eea0",
            "id": 15489,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "batchReveal",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 15487,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15486,
                  "mutability": "mutable",
                  "name": "reveals",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15489,
                  "src": "4270:25:62",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Reveal_$15443_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct VotingInterface.Reveal[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 15484,
                      "name": "Reveal",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 15443,
                      "src": "4270:6:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Reveal_$15443_storage_ptr",
                        "typeString": "struct VotingInterface.Reveal"
                      }
                    },
                    "id": 15485,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "4270:8:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Reveal_$15443_storage_$dyn_storage_ptr",
                      "typeString": "struct VotingInterface.Reveal[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4269:27:62"
            },
            "returnParameters": {
              "id": 15488,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4313:0:62"
            },
            "scope": 15522,
            "src": "4249:65:62",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 15490,
              "nodeType": "StructuredDocumentation",
              "src": "4320:204:62",
              "text": " @notice Gets the queries that are being voted on this round.\n @return pendingRequests `PendingRequest` array containing identifiers\n and timestamps for all pending requests."
            },
            "functionSelector": "80a1f712",
            "id": 15496,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getPendingRequests",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 15491,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4556:2:62"
            },
            "returnParameters": {
              "id": 15495,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15494,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15496,
                  "src": "4590:23:62",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_PendingRequest_$15425_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct VotingInterface.PendingRequest[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 15492,
                      "name": "PendingRequest",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 15425,
                      "src": "4590:14:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PendingRequest_$15425_storage_ptr",
                        "typeString": "struct VotingInterface.PendingRequest"
                      }
                    },
                    "id": 15493,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "4590:16:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_PendingRequest_$15425_storage_$dyn_storage_ptr",
                      "typeString": "struct VotingInterface.PendingRequest[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4589:25:62"
            },
            "scope": 15522,
            "src": "4529:86:62",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 15497,
              "nodeType": "StructuredDocumentation",
              "src": "4621:198:62",
              "text": " @notice Returns the current voting phase, as a function of the current time.\n @return Phase to indicate the current phase. Either { Commit, Reveal, NUM_PHASES_PLACEHOLDER }."
            },
            "functionSelector": "74dd278c",
            "id": 15502,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getVotePhase",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 15498,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4845:2:62"
            },
            "returnParameters": {
              "id": 15501,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15500,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15502,
                  "src": "4879:5:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Phase_$15447",
                    "typeString": "enum VotingInterface.Phase"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 15499,
                    "name": "Phase",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 15447,
                    "src": "4879:5:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Phase_$15447",
                      "typeString": "enum VotingInterface.Phase"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4878:7:62"
            },
            "scope": 15522,
            "src": "4824:62:62",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 15503,
              "nodeType": "StructuredDocumentation",
              "src": "4892:148:62",
              "text": " @notice Returns the current round ID, as a function of the current time.\n @return uint256 representing the unique round ID."
            },
            "functionSelector": "5727e25d",
            "id": 15508,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentRoundId",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 15504,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5071:2:62"
            },
            "returnParameters": {
              "id": 15507,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15506,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15508,
                  "src": "5105:7:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15505,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5105:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5104:9:62"
            },
            "scope": 15522,
            "src": "5045:69:62",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 15509,
              "nodeType": "StructuredDocumentation",
              "src": "5120:559:62",
              "text": " @notice Retrieves rewards owed for a set of resolved price requests.\n @dev Can only retrieve rewards if calling for a valid round and if the\n call is done within the timeout threshold (not expired).\n @param voterAddress voter for which rewards will be retrieved. Does not have to be the caller.\n @param roundId the round from which voting rewards will be retrieved from.\n @param toRetrieve array of PendingRequests which rewards are retrieved from.\n @return total amount of rewards returned to the voter."
            },
            "functionSelector": "0d434e7e",
            "id": 15521,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "retrieveRewards",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 15517,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15511,
                  "mutability": "mutable",
                  "name": "voterAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15521,
                  "src": "5718:20:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15510,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5718:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15513,
                  "mutability": "mutable",
                  "name": "roundId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15521,
                  "src": "5748:15:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15512,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5748:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15516,
                  "mutability": "mutable",
                  "name": "toRetrieve",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15521,
                  "src": "5773:34:62",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_PendingRequest_$15425_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct VotingInterface.PendingRequest[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 15514,
                      "name": "PendingRequest",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 15425,
                      "src": "5773:14:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PendingRequest_$15425_storage_ptr",
                        "typeString": "struct VotingInterface.PendingRequest"
                      }
                    },
                    "id": 15515,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "5773:16:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_PendingRequest_$15425_storage_$dyn_storage_ptr",
                      "typeString": "struct VotingInterface.PendingRequest[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5708:105:62"
            },
            "returnParameters": {
              "id": 15520,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15519,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15521,
                  "src": "5838:26:62",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Unsigned_$416_memory_ptr",
                    "typeString": "struct FixedPoint.Unsigned"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 15518,
                    "name": "FixedPoint.Unsigned",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 416,
                    "src": "5838:19:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Unsigned_$416_storage_ptr",
                      "typeString": "struct FixedPoint.Unsigned"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5837:28:62"
            },
            "scope": 15522,
            "src": "5684:182:62",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 15523,
        "src": "202:5666:62"
      }
    ],
    "src": "0:5869:62"
  },
  "legacyAST": {
    "absolutePath": "/home/circleci/protocol/packages/core/contracts/oracle/interfaces/VotingInterface.sol",
    "exportedSymbols": {
      "VotingInterface": [
        15522
      ]
    },
    "id": 15523,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 15417,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:62"
      },
      {
        "id": 15418,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "25:33:62"
      },
      {
        "absolutePath": "/home/circleci/protocol/packages/core/contracts/common/implementation/FixedPoint.sol",
        "file": "../../common/implementation/FixedPoint.sol",
        "id": 15419,
        "nodeType": "ImportDirective",
        "scope": 15523,
        "sourceUnit": 1104,
        "src": "60:52:62",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 15420,
          "nodeType": "StructuredDocumentation",
          "src": "115:86:62",
          "text": " @title Interface that voters must use to Vote on price request resolutions."
        },
        "fullyImplemented": false,
        "id": 15522,
        "linearizedBaseContracts": [
          15522
        ],
        "name": "VotingInterface",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "VotingInterface.PendingRequest",
            "id": 15425,
            "members": [
              {
                "constant": false,
                "id": 15422,
                "mutability": "mutable",
                "name": "identifier",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 15425,
                "src": "274:18:62",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 15421,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "274:7:62",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15424,
                "mutability": "mutable",
                "name": "time",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 15425,
                "src": "302:12:62",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 15423,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "302:7:62",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "PendingRequest",
            "nodeType": "StructDefinition",
            "scope": 15522,
            "src": "242:79:62",
            "visibility": "public"
          },
          {
            "canonicalName": "VotingInterface.Commitment",
            "id": 15434,
            "members": [
              {
                "constant": false,
                "id": 15427,
                "mutability": "mutable",
                "name": "identifier",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 15434,
                "src": "522:18:62",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 15426,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "522:7:62",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15429,
                "mutability": "mutable",
                "name": "time",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 15434,
                "src": "550:12:62",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 15428,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "550:7:62",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15431,
                "mutability": "mutable",
                "name": "hash",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 15434,
                "src": "572:12:62",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 15430,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "572:7:62",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15433,
                "mutability": "mutable",
                "name": "encryptedVote",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 15434,
                "src": "594:19:62",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 15432,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "594:5:62",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Commitment",
            "nodeType": "StructDefinition",
            "scope": 15522,
            "src": "494:126:62",
            "visibility": "public"
          },
          {
            "canonicalName": "VotingInterface.Reveal",
            "id": 15443,
            "members": [
              {
                "constant": false,
                "id": 15436,
                "mutability": "mutable",
                "name": "identifier",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 15443,
                "src": "810:18:62",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 15435,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "810:7:62",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15438,
                "mutability": "mutable",
                "name": "time",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 15443,
                "src": "838:12:62",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 15437,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "838:7:62",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15440,
                "mutability": "mutable",
                "name": "price",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 15443,
                "src": "860:12:62",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_int256",
                  "typeString": "int256"
                },
                "typeName": {
                  "id": 15439,
                  "name": "int256",
                  "nodeType": "ElementaryTypeName",
                  "src": "860:6:62",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15442,
                "mutability": "mutable",
                "name": "salt",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 15443,
                "src": "882:11:62",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_int256",
                  "typeString": "int256"
                },
                "typeName": {
                  "id": 15441,
                  "name": "int256",
                  "nodeType": "ElementaryTypeName",
                  "src": "882:6:62",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Reveal",
            "nodeType": "StructDefinition",
            "scope": 15522,
            "src": "786:114:62",
            "visibility": "public"
          },
          {
            "canonicalName": "VotingInterface.Phase",
            "id": 15447,
            "members": [
              {
                "id": 15444,
                "name": "Commit",
                "nodeType": "EnumValue",
                "src": "1140:6:62"
              },
              {
                "id": 15445,
                "name": "Reveal",
                "nodeType": "EnumValue",
                "src": "1148:6:62"
              },
              {
                "id": 15446,
                "name": "NUM_PHASES_PLACEHOLDER",
                "nodeType": "EnumValue",
                "src": "1156:22:62"
              }
            ],
            "name": "Phase",
            "nodeType": "EnumDefinition",
            "src": "1127:53:62"
          },
          {
            "body": null,
            "documentation": {
              "id": 15448,
              "nodeType": "StructuredDocumentation",
              "src": "1186:810:62",
              "text": " @notice Commit a vote for a price request for `identifier` at `time`.\n @dev `identifier`, `time` must correspond to a price request that's currently in the commit phase.\n Commits can be changed.\n @dev Since transaction data is public, the salt will be revealed with the vote. While this is the system’s expected behavior,\n voters should never reuse salts. If someone else is able to guess the voted price and knows that a salt will be reused, then\n they can determine the vote pre-reveal.\n @param identifier uniquely identifies the committed vote. EG BTC/USD price pair.\n @param time unix timestamp of the price being voted on.\n @param hash keccak256 hash of the `price`, `salt`, voter `address`, `time`, current `roundId`, and `identifier`."
            },
            "functionSelector": "d8651ad0",
            "id": 15457,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "commitVote",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 15455,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15450,
                  "mutability": "mutable",
                  "name": "identifier",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15457,
                  "src": "2030:18:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 15449,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2030:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15452,
                  "mutability": "mutable",
                  "name": "time",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15457,
                  "src": "2058:12:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15451,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2058:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15454,
                  "mutability": "mutable",
                  "name": "hash",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15457,
                  "src": "2080:12:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 15453,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2080:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2020:78:62"
            },
            "returnParameters": {
              "id": 15456,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2115:0:62"
            },
            "scope": 15522,
            "src": "2001:115:62",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 15458,
              "nodeType": "StructuredDocumentation",
              "src": "2122:425:62",
              "text": " @notice Submit a batch of commits in a single transaction.\n @dev Using `encryptedVote` is optional. If included then commitment is stored on chain.\n Look at `project-root/common/Constants.js` for the tested maximum number of\n commitments that can fit in one transaction.\n @param commits array of structs that encapsulate an `identifier`, `time`, `hash` and optional `encryptedVote`."
            },
            "functionSelector": "70a0cf2c",
            "id": 15464,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "batchCommit",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 15462,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15461,
                  "mutability": "mutable",
                  "name": "commits",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15464,
                  "src": "2573:29:62",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Commitment_$15434_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct VotingInterface.Commitment[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 15459,
                      "name": "Commitment",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 15434,
                      "src": "2573:10:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Commitment_$15434_storage_ptr",
                        "typeString": "struct VotingInterface.Commitment"
                      }
                    },
                    "id": 15460,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2573:12:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Commitment_$15434_storage_$dyn_storage_ptr",
                      "typeString": "struct VotingInterface.Commitment[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2572:31:62"
            },
            "returnParameters": {
              "id": 15463,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2620:0:62"
            },
            "scope": 15522,
            "src": "2552:69:62",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 15465,
              "nodeType": "StructuredDocumentation",
              "src": "2627:406:62",
              "text": " @notice snapshot the current round's token balances and lock in the inflation rate and GAT.\n @dev This function can be called multiple times but each round will only every have one snapshot at the\n time of calling `_freezeRoundVariables`.\n @param signature  signature required to prove caller is an EOA to prevent flash loans from being included in the\n snapshot."
            },
            "functionSelector": "110d559a",
            "id": 15470,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "snapshotCurrentRound",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 15468,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15467,
                  "mutability": "mutable",
                  "name": "signature",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15470,
                  "src": "3068:24:62",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 15466,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3068:5:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3067:26:62"
            },
            "returnParameters": {
              "id": 15469,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3110:0:62"
            },
            "scope": 15522,
            "src": "3038:73:62",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 15471,
              "nodeType": "StructuredDocumentation",
              "src": "3117:592:62",
              "text": " @notice Reveal a previously committed vote for `identifier` at `time`.\n @dev The revealed `price`, `salt`, `address`, `time`, `roundId`, and `identifier`, must hash to the latest `hash`\n that `commitVote()` was called with. Only the committer can reveal their vote.\n @param identifier voted on in the commit phase. EG BTC/USD price pair.\n @param time specifies the unix timestamp of the price is being voted on.\n @param price voted on during the commit phase.\n @param salt value used to hide the commitment price during the commit phase."
            },
            "functionSelector": "4c7a2603",
            "id": 15482,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "revealVote",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 15480,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15473,
                  "mutability": "mutable",
                  "name": "identifier",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15482,
                  "src": "3743:18:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 15472,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3743:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15475,
                  "mutability": "mutable",
                  "name": "time",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15482,
                  "src": "3771:12:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15474,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3771:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15477,
                  "mutability": "mutable",
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15482,
                  "src": "3793:12:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 15476,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3793:6:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15479,
                  "mutability": "mutable",
                  "name": "salt",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15482,
                  "src": "3815:11:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 15478,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3815:6:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3733:99:62"
            },
            "returnParameters": {
              "id": 15481,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3849:0:62"
            },
            "scope": 15522,
            "src": "3714:136:62",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 15483,
              "nodeType": "StructuredDocumentation",
              "src": "3856:388:62",
              "text": " @notice Reveal multiple votes in a single transaction.\n Look at `project-root/common/Constants.js` for the tested maximum number of reveals.\n that can fit in one transaction.\n @dev For more information on reveals, review the comment for `revealVote`.\n @param reveals array of the Reveal struct which contains an identifier, time, price and salt."
            },
            "functionSelector": "6852eea0",
            "id": 15489,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "batchReveal",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 15487,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15486,
                  "mutability": "mutable",
                  "name": "reveals",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15489,
                  "src": "4270:25:62",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Reveal_$15443_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct VotingInterface.Reveal[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 15484,
                      "name": "Reveal",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 15443,
                      "src": "4270:6:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Reveal_$15443_storage_ptr",
                        "typeString": "struct VotingInterface.Reveal"
                      }
                    },
                    "id": 15485,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "4270:8:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Reveal_$15443_storage_$dyn_storage_ptr",
                      "typeString": "struct VotingInterface.Reveal[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4269:27:62"
            },
            "returnParameters": {
              "id": 15488,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4313:0:62"
            },
            "scope": 15522,
            "src": "4249:65:62",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 15490,
              "nodeType": "StructuredDocumentation",
              "src": "4320:204:62",
              "text": " @notice Gets the queries that are being voted on this round.\n @return pendingRequests `PendingRequest` array containing identifiers\n and timestamps for all pending requests."
            },
            "functionSelector": "80a1f712",
            "id": 15496,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getPendingRequests",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 15491,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4556:2:62"
            },
            "returnParameters": {
              "id": 15495,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15494,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15496,
                  "src": "4590:23:62",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_PendingRequest_$15425_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct VotingInterface.PendingRequest[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 15492,
                      "name": "PendingRequest",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 15425,
                      "src": "4590:14:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PendingRequest_$15425_storage_ptr",
                        "typeString": "struct VotingInterface.PendingRequest"
                      }
                    },
                    "id": 15493,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "4590:16:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_PendingRequest_$15425_storage_$dyn_storage_ptr",
                      "typeString": "struct VotingInterface.PendingRequest[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4589:25:62"
            },
            "scope": 15522,
            "src": "4529:86:62",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 15497,
              "nodeType": "StructuredDocumentation",
              "src": "4621:198:62",
              "text": " @notice Returns the current voting phase, as a function of the current time.\n @return Phase to indicate the current phase. Either { Commit, Reveal, NUM_PHASES_PLACEHOLDER }."
            },
            "functionSelector": "74dd278c",
            "id": 15502,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getVotePhase",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 15498,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4845:2:62"
            },
            "returnParameters": {
              "id": 15501,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15500,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15502,
                  "src": "4879:5:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Phase_$15447",
                    "typeString": "enum VotingInterface.Phase"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 15499,
                    "name": "Phase",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 15447,
                    "src": "4879:5:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Phase_$15447",
                      "typeString": "enum VotingInterface.Phase"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4878:7:62"
            },
            "scope": 15522,
            "src": "4824:62:62",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 15503,
              "nodeType": "StructuredDocumentation",
              "src": "4892:148:62",
              "text": " @notice Returns the current round ID, as a function of the current time.\n @return uint256 representing the unique round ID."
            },
            "functionSelector": "5727e25d",
            "id": 15508,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentRoundId",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 15504,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5071:2:62"
            },
            "returnParameters": {
              "id": 15507,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15506,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15508,
                  "src": "5105:7:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15505,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5105:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5104:9:62"
            },
            "scope": 15522,
            "src": "5045:69:62",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 15509,
              "nodeType": "StructuredDocumentation",
              "src": "5120:559:62",
              "text": " @notice Retrieves rewards owed for a set of resolved price requests.\n @dev Can only retrieve rewards if calling for a valid round and if the\n call is done within the timeout threshold (not expired).\n @param voterAddress voter for which rewards will be retrieved. Does not have to be the caller.\n @param roundId the round from which voting rewards will be retrieved from.\n @param toRetrieve array of PendingRequests which rewards are retrieved from.\n @return total amount of rewards returned to the voter."
            },
            "functionSelector": "0d434e7e",
            "id": 15521,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "retrieveRewards",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 15517,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15511,
                  "mutability": "mutable",
                  "name": "voterAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15521,
                  "src": "5718:20:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15510,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5718:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15513,
                  "mutability": "mutable",
                  "name": "roundId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15521,
                  "src": "5748:15:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15512,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5748:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15516,
                  "mutability": "mutable",
                  "name": "toRetrieve",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15521,
                  "src": "5773:34:62",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_PendingRequest_$15425_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct VotingInterface.PendingRequest[]"
                  },
                  "typeName": {
                    "baseType": {
                      "contractScope": null,
                      "id": 15514,
                      "name": "PendingRequest",
                      "nodeType": "UserDefinedTypeName",
                      "referencedDeclaration": 15425,
                      "src": "5773:14:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PendingRequest_$15425_storage_ptr",
                        "typeString": "struct VotingInterface.PendingRequest"
                      }
                    },
                    "id": 15515,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "5773:16:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_PendingRequest_$15425_storage_$dyn_storage_ptr",
                      "typeString": "struct VotingInterface.PendingRequest[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5708:105:62"
            },
            "returnParameters": {
              "id": 15520,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15519,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15521,
                  "src": "5838:26:62",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Unsigned_$416_memory_ptr",
                    "typeString": "struct FixedPoint.Unsigned"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 15518,
                    "name": "FixedPoint.Unsigned",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 416,
                    "src": "5838:19:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Unsigned_$416_storage_ptr",
                      "typeString": "struct FixedPoint.Unsigned"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "5837:28:62"
            },
            "scope": 15522,
            "src": "5684:182:62",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "scope": 15523,
        "src": "202:5666:62"
      }
    ],
    "src": "0:5869:62"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2020-10-06T21:03:39.157Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "batchCommit((bytes32,uint256,bytes32,bytes)[])": {
        "details": "Using `encryptedVote` is optional. If included then commitment is stored on chain. Look at `project-root/common/Constants.js` for the tested maximum number of commitments that can fit in one transaction.",
        "params": {
          "commits": "array of structs that encapsulate an `identifier`, `time`, `hash` and optional `encryptedVote`."
        }
      },
      "batchReveal((bytes32,uint256,int256,int256)[])": {
        "details": "For more information on reveals, review the comment for `revealVote`.",
        "params": {
          "reveals": "array of the Reveal struct which contains an identifier, time, price and salt."
        }
      },
      "commitVote(bytes32,uint256,bytes32)": {
        "details": "`identifier`, `time` must correspond to a price request that's currently in the commit phase. Commits can be changed.Since transaction data is public, the salt will be revealed with the vote. While this is the system’s expected behavior, voters should never reuse salts. If someone else is able to guess the voted price and knows that a salt will be reused, then they can determine the vote pre-reveal.",
        "params": {
          "hash": "keccak256 hash of the `price`, `salt`, voter `address`, `time`, current `roundId`, and `identifier`.",
          "identifier": "uniquely identifies the committed vote. EG BTC/USD price pair.",
          "time": "unix timestamp of the price being voted on."
        }
      },
      "getCurrentRoundId()": {
        "returns": {
          "_0": "uint256 representing the unique round ID."
        }
      },
      "getPendingRequests()": {
        "returns": {
          "_0": "pendingRequests `PendingRequest` array containing identifiers and timestamps for all pending requests."
        }
      },
      "getVotePhase()": {
        "returns": {
          "_0": "Phase to indicate the current phase. Either { Commit, Reveal, NUM_PHASES_PLACEHOLDER }."
        }
      },
      "retrieveRewards(address,uint256,(bytes32,uint256)[])": {
        "details": "Can only retrieve rewards if calling for a valid round and if the call is done within the timeout threshold (not expired).",
        "params": {
          "roundId": "the round from which voting rewards will be retrieved from.",
          "toRetrieve": "array of PendingRequests which rewards are retrieved from.",
          "voterAddress": "voter for which rewards will be retrieved. Does not have to be the caller."
        },
        "returns": {
          "_0": "total amount of rewards returned to the voter."
        }
      },
      "revealVote(bytes32,uint256,int256,int256)": {
        "details": "The revealed `price`, `salt`, `address`, `time`, `roundId`, and `identifier`, must hash to the latest `hash` that `commitVote()` was called with. Only the committer can reveal their vote.",
        "params": {
          "identifier": "voted on in the commit phase. EG BTC/USD price pair.",
          "price": "voted on during the commit phase.",
          "salt": "value used to hide the commitment price during the commit phase.",
          "time": "specifies the unix timestamp of the price is being voted on."
        }
      },
      "snapshotCurrentRound(bytes)": {
        "details": "This function can be called multiple times but each round will only every have one snapshot at the time of calling `_freezeRoundVariables`.",
        "params": {
          "signature": "signature required to prove caller is an EOA to prevent flash loans from being included in the snapshot."
        }
      }
    },
    "title": "Interface that voters must use to Vote on price request resolutions.",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "batchCommit((bytes32,uint256,bytes32,bytes)[])": {
        "notice": "Submit a batch of commits in a single transaction."
      },
      "batchReveal((bytes32,uint256,int256,int256)[])": {
        "notice": "Reveal multiple votes in a single transaction. Look at `project-root/common/Constants.js` for the tested maximum number of reveals. that can fit in one transaction."
      },
      "commitVote(bytes32,uint256,bytes32)": {
        "notice": "Commit a vote for a price request for `identifier` at `time`."
      },
      "getCurrentRoundId()": {
        "notice": "Returns the current round ID, as a function of the current time."
      },
      "getPendingRequests()": {
        "notice": "Gets the queries that are being voted on this round."
      },
      "getVotePhase()": {
        "notice": "Returns the current voting phase, as a function of the current time."
      },
      "retrieveRewards(address,uint256,(bytes32,uint256)[])": {
        "notice": "Retrieves rewards owed for a set of resolved price requests."
      },
      "revealVote(bytes32,uint256,int256,int256)": {
        "notice": "Reveal a previously committed vote for `identifier` at `time`."
      },
      "snapshotCurrentRound(bytes)": {
        "notice": "snapshot the current round's token balances and lock in the inflation rate and GAT."
      }
    },
    "version": 1
  }
}