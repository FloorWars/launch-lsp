{
  "contractName": "VotingTest",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_phaseLength",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "_gatPercentage",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "_inflationRate",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "_rewardsExpirationTimeout",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_votingToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_finder",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_timerAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "roundId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "encryptedVote",
          "type": "bytes"
        }
      ],
      "name": "EncryptedVote",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "roundId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "PriceRequestAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "roundId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "price",
          "type": "int256"
        }
      ],
      "name": "PriceResolved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "roundId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "numTokens",
          "type": "uint256"
        }
      ],
      "name": "RewardsRetrieved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "roundId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "VoteCommitted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "roundId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "price",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "numTokens",
          "type": "uint256"
        }
      ],
      "name": "VoteRevealed",
      "type": "event"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "identifier",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "time",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "hash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "encryptedVote",
              "type": "bytes"
            }
          ],
          "internalType": "struct VotingInterface.Commitment[]",
          "name": "commits",
          "type": "tuple[]"
        }
      ],
      "name": "batchCommit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "identifier",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "time",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "price",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "salt",
              "type": "int256"
            }
          ],
          "internalType": "struct VotingInterface.Reveal[]",
          "name": "reveals",
          "type": "tuple[]"
        }
      ],
      "name": "batchReveal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "encryptedVote",
          "type": "bytes"
        }
      ],
      "name": "commitAndEmitEncryptedVote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        }
      ],
      "name": "commitVote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gatPercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rawValue",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentRoundId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPendingRequests",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "identifier",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "time",
              "type": "uint256"
            }
          ],
          "internalType": "struct VotingInterface.PendingRequest[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "identifier",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "time",
              "type": "uint256"
            }
          ],
          "internalType": "struct VotingInterface.PendingRequest[]",
          "name": "requests",
          "type": "tuple[]"
        }
      ],
      "name": "getPriceRequestStatuses",
      "outputs": [
        {
          "components": [
            {
              "internalType": "enum Voting.RequestStatus",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "lastVotingRound",
              "type": "uint256"
            }
          ],
          "internalType": "struct Voting.RequestState[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVotePhase",
      "outputs": [
        {
          "internalType": "enum VotingInterface.Phase",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "hasPrice",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "inflationRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rawValue",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "migratedAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "requestPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "voterAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "roundId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "identifier",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "time",
              "type": "uint256"
            }
          ],
          "internalType": "struct VotingInterface.PendingRequest[]",
          "name": "toRetrieve",
          "type": "tuple[]"
        }
      ],
      "name": "retrieveRewards",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "totalRewardToIssue",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        },
        {
          "internalType": "int256",
          "name": "price",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "salt",
          "type": "int256"
        }
      ],
      "name": "revealVote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardsExpirationTimeout",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "rounds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "snapshotId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "inflationRate",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "gatPercentage",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "rewardsExpirationTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "setCurrentTime",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "newGatPercentage",
          "type": "tuple"
        }
      ],
      "name": "setGatPercentage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "newInflationRate",
          "type": "tuple"
        }
      ],
      "name": "setInflationRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newVotingAddress",
          "type": "address"
        }
      ],
      "name": "setMigrated",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "NewRewardsExpirationTimeout",
          "type": "uint256"
        }
      ],
      "name": "setRewardsExpirationTimeout",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "snapshotCurrentRound",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "snapshotMessageHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timerAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "voteTiming",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "phaseLength",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingToken",
      "outputs": [
        {
          "internalType": "contract VotingToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPendingPriceRequestsArray",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_phaseLength\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"_gatPercentage\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"_inflationRate\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"_rewardsExpirationTimeout\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_votingToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_finder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_timerAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"encryptedVote\",\"type\":\"bytes\"}],\"name\":\"EncryptedVote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"PriceRequestAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"price\",\"type\":\"int256\"}],\"name\":\"PriceResolved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"numTokens\",\"type\":\"uint256\"}],\"name\":\"RewardsRetrieved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"VoteCommitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"price\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"numTokens\",\"type\":\"uint256\"}],\"name\":\"VoteRevealed\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"encryptedVote\",\"type\":\"bytes\"}],\"internalType\":\"struct VotingInterface.Commitment[]\",\"name\":\"commits\",\"type\":\"tuple[]\"}],\"name\":\"batchCommit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"price\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"salt\",\"type\":\"int256\"}],\"internalType\":\"struct VotingInterface.Reveal[]\",\"name\":\"reveals\",\"type\":\"tuple[]\"}],\"name\":\"batchReveal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"encryptedVote\",\"type\":\"bytes\"}],\"name\":\"commitAndEmitEncryptedVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"commitVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gatPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentRoundId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPendingPriceRequestsArray\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPendingRequests\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"internalType\":\"struct VotingInterface.PendingRequest[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"internalType\":\"struct VotingInterface.PendingRequest[]\",\"name\":\"requests\",\"type\":\"tuple[]\"}],\"name\":\"getPriceRequestStatuses\",\"outputs\":[{\"components\":[{\"internalType\":\"enum Voting.RequestStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"lastVotingRound\",\"type\":\"uint256\"}],\"internalType\":\"struct Voting.RequestState[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVotePhase\",\"outputs\":[{\"internalType\":\"enum VotingInterface.Phase\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"hasPrice\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"inflationRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migratedAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"requestPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"voterAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"internalType\":\"struct VotingInterface.PendingRequest[]\",\"name\":\"toRetrieve\",\"type\":\"tuple[]\"}],\"name\":\"retrieveRewards\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"totalRewardToIssue\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"price\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"salt\",\"type\":\"int256\"}],\"name\":\"revealVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsExpirationTimeout\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rounds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"inflationRate\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"gatPercentage\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"rewardsExpirationTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"setCurrentTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"newGatPercentage\",\"type\":\"tuple\"}],\"name\":\"setGatPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"newInflationRate\",\"type\":\"tuple\"}],\"name\":\"setInflationRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newVotingAddress\",\"type\":\"address\"}],\"name\":\"setMigrated\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"NewRewardsExpirationTimeout\",\"type\":\"uint256\"}],\"name\":\"setRewardsExpirationTimeout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"snapshotCurrentRound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"snapshotMessageHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"voteTiming\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"phaseLength\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingToken\",\"outputs\":[{\"internalType\":\"contract VotingToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"batchCommit((bytes32,uint256,bytes32,bytes)[])\":{\"details\":\"Using `encryptedVote` is optional. If included then commitment is emitted in an event. Look at `project-root/common/Constants.js` for the tested maximum number of commitments that can fit in one transaction.\",\"params\":{\"commits\":\"struct to encapsulate an `identifier`, `time`, `hash` and optional `encryptedVote`.\"}},\"batchReveal((bytes32,uint256,int256,int256)[])\":{\"details\":\"For more information on reveals, review the comment for `revealVote`.\",\"params\":{\"reveals\":\"array of the Reveal struct which contains an identifier, time, price and salt.\"}},\"commitAndEmitEncryptedVote(bytes32,uint256,bytes32,bytes)\":{\"details\":\"An encrypted version of the vote is emitted in an event `EncryptedVote` to allow off-chain infrastructure to retrieve the commit. The contents of `encryptedVote` are never used on chain: it is purely for convenience.\",\"params\":{\"encryptedVote\":\"offchain encrypted blob containing the voters amount, time and salt.\",\"hash\":\"keccak256 hash of the price you want to vote for and a `int256 salt`.\",\"identifier\":\"unique price pair identifier. Eg: BTC/USD price pair.\",\"time\":\"unix timestamp of for the price request.\"}},\"commitVote(bytes32,uint256,bytes32)\":{\"details\":\"`identifier`, `time` must correspond to a price request that's currently in the commit phase. Commits can be changed.Since transaction data is public, the salt will be revealed with the vote. While this is the system\\u2019s expected behavior, voters should never reuse salts. If someone else is able to guess the voted price and knows that a salt will be reused, then they can determine the vote pre-reveal.\",\"params\":{\"hash\":\"keccak256 hash of the `price`, `salt`, voter `address`, `time`, current `roundId`, and `identifier`.\",\"identifier\":\"uniquely identifies the committed vote. EG BTC/USD price pair.\",\"time\":\"unix timestamp of the price being voted on.\"}},\"getCurrentRoundId()\":{\"returns\":{\"_0\":\"uint256 representing the unique round ID.\"}},\"getCurrentTime()\":{\"returns\":{\"_0\":\"uint for the current Testable timestamp.\"}},\"getPendingRequests()\":{\"returns\":{\"_0\":\"pendingRequests array containing identifiers of type `PendingRequest`. and timestamps for all pending requests.\"}},\"getPrice(bytes32,uint256)\":{\"details\":\"If the price is not available, the method reverts.\",\"params\":{\"identifier\":\"uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.\",\"time\":\"unix timestamp of for the price request.\"},\"returns\":{\"_0\":\"int256 representing the resolved price for the given identifier and timestamp.\"}},\"getPriceRequestStatuses((bytes32,uint256)[])\":{\"details\":\"If the status for a particular request is NotRequested, the lastVotingRound will always be 0.\",\"params\":{\"requests\":\"array of type PendingRequest which includes an identifier and timestamp for each request.\"},\"returns\":{\"_0\":\"requestStates a list, in the same order as the input list, giving the status of each of the specified price requests.\"}},\"getVotePhase()\":{\"returns\":{\"_0\":\"Phase to indicate the current phase. Either { Commit, Reveal, NUM_PHASES_PLACEHOLDER }.\"}},\"hasPrice(bytes32,uint256)\":{\"details\":\"Time must be in the past and the identifier must be supported.\",\"params\":{\"identifier\":\"uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.\",\"time\":\"unix timestamp of for the price request.\"},\"returns\":{\"_0\":\"_hasPrice bool if the DVM has resolved to a price for the given identifier and timestamp.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"requestPrice(bytes32,uint256)\":{\"details\":\"Time must be in the past and the identifier must be supported.\",\"params\":{\"identifier\":\"uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.\",\"time\":\"unix timestamp for the price request.\"}},\"retrieveRewards(address,uint256,(bytes32,uint256)[])\":{\"details\":\"Can only retrieve rewards if calling for a valid round and if the call is done within the timeout threshold (not expired).\",\"params\":{\"roundId\":\"the round from which voting rewards will be retrieved from.\",\"toRetrieve\":\"array of PendingRequests which rewards are retrieved from.\",\"voterAddress\":\"voter for which rewards will be retrieved. Does not have to be the caller.\"},\"returns\":{\"totalRewardToIssue\":\"total amount of rewards returned to the voter.\"}},\"revealVote(bytes32,uint256,int256,int256)\":{\"details\":\"The revealed `price`, `salt`, `address`, `time`, `roundId`, and `identifier`, must hash to the latest `hash` that `commitVote()` was called with. Only the committer can reveal their vote.\",\"params\":{\"identifier\":\"voted on in the commit phase. EG BTC/USD price pair.\",\"price\":\"voted on during the commit phase.\",\"salt\":\"value used to hide the commitment price during the commit phase.\",\"time\":\"specifies the unix timestamp of the price being voted on.\"}},\"setCurrentTime(uint256)\":{\"details\":\"Will revert if not running in test mode.\",\"params\":{\"time\":\"timestamp to set current Testable time to.\"}},\"setGatPercentage((uint256))\":{\"details\":\"This method is public because calldata structs are not currently supported by solidity.\",\"params\":{\"newGatPercentage\":\"sets the next round's Gat percentage.\"}},\"setInflationRate((uint256))\":{\"details\":\"This method is public because calldata structs are not currently supported by solidity.\",\"params\":{\"newInflationRate\":\"sets the next round's inflation rate.\"}},\"setMigrated(address)\":{\"details\":\"Can only be called by the contract owner.\",\"params\":{\"newVotingAddress\":\"the newly migrated contract address.\"}},\"setRewardsExpirationTimeout(uint256)\":{\"details\":\"This change only applies to rounds that have not yet begun.\",\"params\":{\"NewRewardsExpirationTimeout\":\"how long a caller can wait before choosing to withdraw their rewards.\"}},\"snapshotCurrentRound(bytes)\":{\"details\":\"This function can be called multiple times, but only the first call per round into this function or `revealVote` will create the round snapshot. Any later calls will be a no-op. Will revert unless called during reveal period.\",\"params\":{\"signature\":\"signature required to prove caller is an EOA to prevent flash loans from being included in the snapshot.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"batchCommit((bytes32,uint256,bytes32,bytes)[])\":{\"notice\":\"Submit a batch of commits in a single transaction.\"},\"batchReveal((bytes32,uint256,int256,int256)[])\":{\"notice\":\"Reveal multiple votes in a single transaction. Look at `project-root/common/Constants.js` for the tested maximum number of reveals. that can fit in one transaction.\"},\"commitAndEmitEncryptedVote(bytes32,uint256,bytes32,bytes)\":{\"notice\":\"commits a vote and logs an event with a data blob, typically an encrypted version of the vote\"},\"commitVote(bytes32,uint256,bytes32)\":{\"notice\":\"Commit a vote for a price request for `identifier` at `time`.\"},\"getCurrentRoundId()\":{\"notice\":\"Returns the current round ID, as a function of the current time.\"},\"getCurrentTime()\":{\"notice\":\"Gets the current time. Will return the last time set in `setCurrentTime` if running in test mode. Otherwise, it will return the block timestamp.\"},\"getPendingRequests()\":{\"notice\":\"Gets the queries that are being voted on this round.\"},\"getPrice(bytes32,uint256)\":{\"notice\":\"Gets the price for `identifier` and `time` if it has already been requested and resolved.\"},\"getPriceRequestStatuses((bytes32,uint256)[])\":{\"notice\":\"Gets the status of a list of price requests, identified by their identifier and time.\"},\"getVotePhase()\":{\"notice\":\"Returns the current voting phase, as a function of the current time.\"},\"hasPrice(bytes32,uint256)\":{\"notice\":\"Whether the price for `identifier` and `time` is available.\"},\"requestPrice(bytes32,uint256)\":{\"notice\":\"Enqueues a request (if a request isn't already present) for the given `identifier`, `time` pair.\"},\"retrieveRewards(address,uint256,(bytes32,uint256)[])\":{\"notice\":\"Retrieves rewards owed for a set of resolved price requests.\"},\"revealVote(bytes32,uint256,int256,int256)\":{\"notice\":\"Reveal a previously committed vote for `identifier` at `time`.\"},\"setCurrentTime(uint256)\":{\"notice\":\"Sets the current time.\"},\"setGatPercentage((uint256))\":{\"notice\":\"Resets the Gat percentage. Note: this change only applies to rounds that have not yet begun.\"},\"setInflationRate((uint256))\":{\"notice\":\"Resets the inflation rate. Note: this change only applies to rounds that have not yet begun.\"},\"setMigrated(address)\":{\"notice\":\"Disables this Voting contract in favor of the migrated one.\"},\"setRewardsExpirationTimeout(uint256)\":{\"notice\":\"Resets the rewards expiration timeout.\"},\"snapshotCurrentRound(bytes)\":{\"notice\":\"Snapshot the current round's token balances and lock in the inflation rate and GAT.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/circleci/protocol/packages/core/contracts/oracle/implementation/test/VotingTest.sol\":\"VotingTest\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":199},\"remappings\":[]},\"sources\":{\"/home/circleci/protocol/packages/core/contracts/common/implementation/ExpandedERC20.sol\":{\"keccak256\":\"0x24cca39fcaab3e759d15b90a62aaf5c20343318593f598e9d652d3e9e57de191\",\"urls\":[\"bzz-raw://a236292c9c9a00f524c80f61f43e4b795e849531dcb0b5ef868d942e06ccc10c\",\"dweb:/ipfs/Qma9ssE3jQsgijsaSMrfxzzzKY9q79HyA9giqZ8gzjhY5F\"]},\"/home/circleci/protocol/packages/core/contracts/common/implementation/FixedPoint.sol\":{\"keccak256\":\"0xeaa0bef7c35ff2902ef852864d217d75071da9cc96e9cdf5dcb77d54f4e4fefa\",\"urls\":[\"bzz-raw://9c5b1224f4bb7d8d992a1c71b8e2f8c2c8e655af30eb468058dd0eade3218d13\",\"dweb:/ipfs/QmYQ1WUhRwHgfPL5v1MVjCL7AvSVPEdPJt53Q2L5R6zwJU\"]},\"/home/circleci/protocol/packages/core/contracts/common/implementation/MultiRole.sol\":{\"keccak256\":\"0x93b7932a9bf98defef8cd3dedfd7a11d8054107f123014cfd98970f491e96ed4\",\"urls\":[\"bzz-raw://f4d0201fe3e21a78bb805b9add2d0184be86a0bb706fdfcfd75ac95f8ac4aab9\",\"dweb:/ipfs/QmXjFT3zUMZ1T1omL8d8RTr7MDhCoLuAqFpCKJs3D6tJmy\"]},\"/home/circleci/protocol/packages/core/contracts/common/implementation/Testable.sol\":{\"keccak256\":\"0x15b3f57e51e6e1d5f11b09cefd1cc60550e72fb827bf7cf8ff67b208368c7ec0\",\"urls\":[\"bzz-raw://8bdd28e1cb12662124354cc330acd14733dfbb786daf6401b1f5969a1e11b14d\",\"dweb:/ipfs/QmWY8kEXEALJ55CgHSCPZgAA4b39Ef2YdKshhnvqkyWEcm\"]},\"/home/circleci/protocol/packages/core/contracts/common/implementation/Timer.sol\":{\"keccak256\":\"0x1db17ce4c028ed96713c3fddda6d34155281e104a47b2c65283fd0f8293d78b1\",\"urls\":[\"bzz-raw://8f306faba8d5190f36c87a8f47cce3bd7894bc5540599819aea2dd5b8ffa9413\",\"dweb:/ipfs/Qmeg4wuF1Dw5DAuoxyfnrmMZ5MK6af226hEHxCJgWKgrch\"]},\"/home/circleci/protocol/packages/core/contracts/common/interfaces/ExpandedIERC20.sol\":{\"keccak256\":\"0xdde1eb1c04fb1733219a7946c04ba5e2a763dc7c5e64b71240c2deaab1e811d5\",\"urls\":[\"bzz-raw://e5997f5c5cfb0a76cdcce36e937971b32707d70e7f37bb8cf9722c3c98a3dc63\",\"dweb:/ipfs/QmXtGBrJDk87Rot81L2T1YFyEtivBHMiuaXrgZYnFAsciH\"]},\"/home/circleci/protocol/packages/core/contracts/oracle/implementation/Constants.sol\":{\"keccak256\":\"0xfa5379e18f31da723268d949acf3ecd8b76593467210032e91e2ac47201e9c80\",\"urls\":[\"bzz-raw://c15222ccf0c0e418ebe2915e59b8765db4335f11a83f5db44436719da02da51a\",\"dweb:/ipfs/QmQfj8ADqa5s7EpeqNmnt1g5YUid9Yc49DQvtufrpL1Npq\"]},\"/home/circleci/protocol/packages/core/contracts/oracle/implementation/Registry.sol\":{\"keccak256\":\"0xb9267d77d51680272ee375a0dfe930b9bccfc248f8eb03a2f692671f67903d1c\",\"urls\":[\"bzz-raw://12edbdbd26d12c48dd790c79122e9a34f99f9aece10449fdf25a008735be2544\",\"dweb:/ipfs/QmNeS4JdnMqqjkDJ38RcowKwSktKBXZZbNWq3M4T6mQ8yE\"]},\"/home/circleci/protocol/packages/core/contracts/oracle/implementation/ResultComputation.sol\":{\"keccak256\":\"0xbbfb6a7e5db762994f6798bf534dd2042452963b0cbb31164319ed1ac3b350b8\",\"urls\":[\"bzz-raw://a2ad051ada25c5149a37c3a80d4b94d08ed7c55aabe04954890921f7a41f058a\",\"dweb:/ipfs/QmdUtJ7aRqqgqE6jnpU7JVdUssJPbn1XUEj8stymfTqLpJ\"]},\"/home/circleci/protocol/packages/core/contracts/oracle/implementation/VoteTiming.sol\":{\"keccak256\":\"0xe344ecb50ad8caa1cfcd86bcabbc22385e76fa41916eefaf6c1e70ee1f81f14d\",\"urls\":[\"bzz-raw://348a246b1a1c58ffe830b1e00284d9919e26a9fa368b03dcdeb06d2180c69433\",\"dweb:/ipfs/QmUCAhLUY9YUeJXYkpDvF2HZkrN9665eh8eacpmr4m69bS\"]},\"/home/circleci/protocol/packages/core/contracts/oracle/implementation/Voting.sol\":{\"keccak256\":\"0x132782db4ef4bcd6ccfb2635ceae26afa3aea5d630fff980aec6ebfa386cfa76\",\"urls\":[\"bzz-raw://60ca9114a287c7ff44685aabd929d57683cd960ac82cbf5f2808ed200787f3f4\",\"dweb:/ipfs/QmXwWumGdALjPsCU32qgBTjrYdc34qpJuB9sQmTHRTjFvY\"]},\"/home/circleci/protocol/packages/core/contracts/oracle/implementation/VotingToken.sol\":{\"keccak256\":\"0xd75bce30b76f3c2caf8815af47673b3d4c33f10be856f8008d095619846bec6e\",\"urls\":[\"bzz-raw://ce83b3a24ecfa858a7a85dda1e08c8cbbaf6556196661149cdc4fb4045ea8896\",\"dweb:/ipfs/QmbhsFdGTh8CY9bEExniK2ytGcmT1n5h6QE6WXCEZcGjYk\"]},\"/home/circleci/protocol/packages/core/contracts/oracle/implementation/test/VotingTest.sol\":{\"keccak256\":\"0x06c001c29f4e4e59fb269be0c5fc53ae011d6c35ab2cc9fbd05a1430f4305992\",\"urls\":[\"bzz-raw://7918c020fb0237787294a7ccc98f74c524d7ef80abeb196c4b69cc18c59dba4a\",\"dweb:/ipfs/QmfF95dhF97xFU9EVGaJsDew6szFqLBrpxUvd4RoxCbbdh\"]},\"/home/circleci/protocol/packages/core/contracts/oracle/interfaces/FinderInterface.sol\":{\"keccak256\":\"0x266903a280400446041bbc9c839c2be8805bbde710a42c5cad36d6eb2d932a17\",\"urls\":[\"bzz-raw://16bb92ad84fcec107a09ea6a5b3987f8217842e1c5e676b64fc0c3191f32ed91\",\"dweb:/ipfs/QmVjLDHUuqN527VSrzQAy8ox1infQro6kTaZQ7ezX9weeA\"]},\"/home/circleci/protocol/packages/core/contracts/oracle/interfaces/IdentifierWhitelistInterface.sol\":{\"keccak256\":\"0x0b1eef7b2b24bafb30c446bc99fa826352bb5e8c12b56f0a1867bdcee8583789\",\"urls\":[\"bzz-raw://8c03cc413725a68b581c9ecc363bdc67b1a0263893651836a6f012a1924b621c\",\"dweb:/ipfs/QmYz1wQJHtpoEutko6J4BSKb2bAw8ARQvyviSLN5Pqkr38\"]},\"/home/circleci/protocol/packages/core/contracts/oracle/interfaces/OracleInterface.sol\":{\"keccak256\":\"0xcf0a9487f059626ddfb4555fcc4ea4c1223c68267aaaf342541ebf38d1c37527\",\"urls\":[\"bzz-raw://dc27e5ca23a9d7711ce0d819ac096b4c5609014fad6ccc7bb8a724f761987d5e\",\"dweb:/ipfs/QmZnaKgBefrkis9V5UUfkWKagKAX3dEcYK6WgTRSZhBeRp\"]},\"/home/circleci/protocol/packages/core/contracts/oracle/interfaces/RegistryInterface.sol\":{\"keccak256\":\"0x9945a1e0c23bf6dfeb768de35c3a3b1cb5325b229add6cf480cccf2fb90c5600\",\"urls\":[\"bzz-raw://95be068d174428524e76fdfbc8b30067e54fd241dc5e05c657741f53a5946b83\",\"dweb:/ipfs/QmYz8AiEkCpPeZSTo3CqjGZHDZW5c6Pj2jKyzrYeSpvkjh\"]},\"/home/circleci/protocol/packages/core/contracts/oracle/interfaces/VotingInterface.sol\":{\"keccak256\":\"0xd2c1deaa9272918b57a367ea8ff0fe5d6e93f4384eaabf720d0b23f2c19bf6fb\",\"urls\":[\"bzz-raw://7b7de6eb7675b19a46bb4538e9910a86850022a6223de150d91ea62fd5db8ba8\",\"dweb:/ipfs/QmfZLEcCPJ58aPBDQfoooE2oywPhm6FT7AkyhLzAFDBPgk\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x0de74dfa6b37943c1b834cbd8fb7a8d052e5ff80c7adb33692102dd6cd2985e9\",\"urls\":[\"bzz-raw://9d2d827fcf4a838f5821732c0acd6a40d21c2a5a2cfe2563feec91465f47bb60\",\"dweb:/ipfs/Qmex3wMKf5Sghbfvr288RUg1kP2uAyTMf11w83WbMbpQQc\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x9a8c691b81a4a48adbbd5b010faa56a168c189e711495c16347d93b60b805f82\",\"urls\":[\"bzz-raw://d951d626ed7bfe1a2d7a6bd4af315ff8691929bd567594d6ab53599fe9e17e4e\",\"dweb:/ipfs/QmYkGeowpa6Bjr9aaDirWdDo7hSfShzzZhanKC4nTfRhLj\"]},\"@openzeppelin/contracts/cryptography/ECDSA.sol\":{\"keccak256\":\"0x0c4a4883483cd70c6541aa55ae609483d65d457f160963da29acfc39f9a555ec\",\"urls\":[\"bzz-raw://8fa01aeec715a6ee596e68809306717f9343f175058217f85761161bfc832dfd\",\"dweb:/ipfs/QmTRt1sA3PQjiBV8Hka4jQ5hmAY8CJrujz2TMt5PqdNKjc\"]},\"@openzeppelin/contracts/math/Math.sol\":{\"keccak256\":\"0x50280546205978ca6573541955e15453b4c07a19e6c8ec4f6785a5ae0d7343fb\",\"urls\":[\"bzz-raw://6463c7833ba4b3cbc3b56d50b56e7ce870aaec674633d7897a459b234478fa3e\",\"dweb:/ipfs/QmRkfjwTpA5E4SxUoHw8Qb7g6eXahtgmLrWWtTGH2TDZLj\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x04d34b3cd5677bea25f8dfceb6dec0eaa071d4d4b789a43f13fe0c415ba4c296\",\"urls\":[\"bzz-raw://e7e8b526a6839e5ba14f0d23a830387fec47f7043ce01d42c9f285b709a9d080\",\"dweb:/ipfs/QmXmhhFmX5gcAvVzNiDPAGA35iHMPNaYtQkACswRHBVTNw\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x3211de52f707a62a356a34fdea9d6a7bed46402d5ce45f1891a16fe2132fbb47\",\"urls\":[\"bzz-raw://45dfe794ad43a3674fab38a378c57eb6ed3353949f6529ccad4a4cbc91d45fc5\",\"dweb:/ipfs/QmReFGciE9fgsb6Nas1Fx593pzKWMjaDa1VQg4CEJQaD6U\"]},\"@openzeppelin/contracts/token/ERC20/ERC20Snapshot.sol\":{\"keccak256\":\"0x5e3f26bd43cf4dc30cfc964c03cefd701fe11952ee12e43222bbbe11ff2f928f\",\"urls\":[\"bzz-raw://2d4a8b33e68ae7e906907b42a2dde2693545672f1e2b37b82bc18799056a8392\",\"dweb:/ipfs/QmT3AdfADU3xDZ1jemuFxVutTHq8SdoJtBHdUpKyoTyKgh\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x6cc1cb934a3ac2137a7dcaed018af9e235392236ceecfd3687259702b9c767ad\",\"urls\":[\"bzz-raw://0055fa88138cd1c3c6440370f8580f85857f8fe9dec41c99af9eafbeb8d9c3ce\",\"dweb:/ipfs/QmX1xDh8vwGLLCH8ti45eXjQ7Wcxv1FEGTR3jkFnd5Nv6F\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x5f7da58ee3d9faa9b8999a93d49c8ff978f1afc88ae9bcfc6f9cbb44da011c2b\",\"urls\":[\"bzz-raw://4f089d954b3ecaa26949412fe63e9a184b056562c6c13dd4a0529a5d9a2e685a\",\"dweb:/ipfs/QmVK5iCNAMcEJQxT59bsC5E53JQASDQPU6khHox3d5ZXCn\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x6167b89f91ae6ca26fcba6ad04565ffa70a74694e0e46fda9b1500b2b796cf34\",\"urls\":[\"bzz-raw://aa7a5a74568c83dee67049f8dc42a80450add6c440828a2f16ac4f64905faa75\",\"dweb:/ipfs/QmaVFRGewWReDnvpHraeyrh3GsHLxH1tq6BVKdhYxBaykT\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0x4f3a00edb976e97943fe0a620ea2948955a75eff2a9231c202d50d1e062d8da5\",\"urls\":[\"bzz-raw://4d83aa87b7c75f666d57a0e5b779a19c00b453b14ee4ed88cfda6d056fdcf14c\",\"dweb:/ipfs/QmXpWwQVFo66hsrAZmHxoxNzwEwBDgNWvaUYqY4TJV38vk\"]}},\"version\":1}",
  "bytecode": "0x60c060405260116080527014da59db88119bdc8814db985c1cda1bdd607a1b60a052620000587f05ae8dd7e03a2a2e45343dbd50fe048482c1d0e0e9e034857ff13dd19f476b7e620001b6602090811b62001efd17901c565b600c553480156200006857600080fd5b5060405162003d7138038062003d718339810160408190526200008b91620002f0565b600080546001600160a01b0319166001600160a01b0383161781558790879087908790879087908790620000be620001e8565b600180546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a35062000127876005620001ec60201b62001f2d1790919060201c565b62000142600187620001fe60201b62001f3e1790919060201c565b6200016a5760405162461bcd60e51b81526004016200016190620003af565b60405180910390fd5b5093516006559151600755600980546001600160a01b039384166001600160a01b031991821617909155600a805494909316931692909217905560085550620004409650505050505050565b600081604051602001620001cb91906200037e565b604051602081830303815290604052805190602001209050919050565b3390565b60008111620001fa57600080fd5b9055565b60006200020b8262000219565b518351111590505b92915050565b620002236200029f565b604051806020016040528062000250670de0b6b3a7640000856200025860201b62001f561790919060201c565b905292915050565b600082620002695750600062000213565b828202828482816200027757fe5b0414620002985760405162461bcd60e51b81526004016200016190620003e6565b9392505050565b6040518060200160405280600081525090565b600060208284031215620002c4578081fd5b604051602081016001600160401b0381118282101715620002e3578283fd5b6040529151825250919050565b600080600080600080600060e0888a0312156200030b578283fd5b875196506200031e8960208a01620002b2565b95506200032f8960408a01620002b2565b9450606088015193506080880151620003488162000427565b60a08901519093506200035b8162000427565b60c08901519092506200036e8162000427565b8091505092959891949750929550565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000008152601c810191909152603c0190565b6020808252601e908201527f4741542070657263656e74616765206d757374206265203c3d20313030250000604082015260600190565b60208082526021908201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6040820152607760f81b606082015260800190565b6001600160a01b03811681146200043d57600080fd5b50565b61392180620004506000396000f3fe608060405234801561001057600080fd5b50600436106101fb5760003560e01c806370a0cf2c1161011a5780638c65c81f116100ad578063b90fd4801161007c578063b90fd480146103fb578063c9280f0614610403578063d8651ad014610416578063f116961f14610429578063f2fde38b1461043e576101fb565b80638c65c81f146103a85780638da5cb5b146103cb578063a03e881a146103d3578063b0340123146103f3576101fb565b806380a1f712116100e957806380a1f7121461034d57806383c6aaca146103625780638558d4f3146103755780638876e8a014610395576101fb565b806370a0cf2c14610315578063715018a61461032857806371b7db531461033057806374dd278c14610338576101fb565b806329cb924d116101925780634c7a2603116101615780634c7a2603146102d45780635727e25d146102e75780636852eea0146102ef57806368ad8ae314610302576101fb565b806329cb924d146102a957806331f9e35b146102b15780634000851f146102b95780634666cb0c146102c1576101fb565b806320b373a2116101ce57806320b373a21461026657806322f8e5661461027b57806326af73bf1461028e5780632960b5af14610296576101fb565b80630d434e7e14610200578063110d559a1461022957806313e56d6a1461023e5780631c39c38d14610251575b600080fd5b61021361020e366004612c6c565b610451565b60405161022091906137e3565b60405180910390f35b61023c610237366004612f04565b6109bb565b005b61023c61024c366004612f5e565b610ab5565b610259610b17565b6040516102209190613069565b61026e610b26565b6040516102209190613180565b61023c610289366004612f83565b610b2c565b61026e610ba6565b61023c6102a4366004612c34565b610bac565b61026e610c03565b61026e610ca6565b610259610cac565b61023c6102cf366004612e2b565b610cbb565b61023c6102e2366004612ed3565b610d29565b61026e610fab565b61023c6102fd366004612d62565b610fbd565b61023c610310366004612ddf565b611035565b61023c610323366004612cc2565b61138c565b61023c61150f565b61026e61158e565b610340611594565b60405161022091906131b5565b6103556115a9565b60405161022091906130da565b61023c610370366004612f5e565b611765565b610388610383366004612d30565b6117a0565b6040516102209190613129565b61023c6103a3366004612f83565b6118ec565b6103bb6103b6366004612f83565b611926565b604051610220949392919061381c565b610259611960565b6103e66103e1366004612ddf565b61196f565b6040516102209190613175565b610259611af4565b61026e611b03565b61026e610411366004612ddf565b611b09565b61023c610424366004612e00565b611caa565b610431611dee565b6040516102209190613096565b61023c61044c366004612c34565b611e46565b610459612b52565b600b546001600160a01b03161561049d57600b546001600160a01b0316331461049d5760405162461bcd60e51b815260040161049490613377565b60405180910390fd5b60006104a7610c03565b90506104b4600582611f97565b84106104d25760405162461bcd60e51b8152600401610494906133ae565b6000848152600260205260409020600381015482116104ef612b52565b604080516020810191829052600954855463277166bf60e11b909352909182916001600160a01b031690634ee2cd7e9061052e908d906024860161307d565b60206040518083038186803b15801561054657600080fd5b505afa15801561055a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057e9190612f9b565b9052905061058a612b52565b6040805160208101918290526009548654630981b24d60e41b909352909182916001600160a01b03169063981b24d0906105c79060248501613180565b60206040518083038186803b1580156105df57600080fd5b505afa1580156105f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106179190612f9b565b90529050610623612b52565b60408051602081019091526001860154815261063f9083611fbc565b905060405180602001604052806000815250965060005b88518110156108fc5760006106998a838151811061067057fe5b6020026020010151600001518b848151811061068857fe5b602002602001015160200151611ff9565b6003810154600081815260028301602052604090209192508c146106cf5760405162461bcd60e51b81526004016104949061373e565b6106d9828261201f565b6001600160a01b038d166000908152602082905260409020600101546107005750506108f4565b861561077f578a838151811061071257fe5b6020026020010151600001518c8e6001600160a01b03167ff8da7bdb1837995e872689b605d1a2b076db111cb4b15351f835ebd275be423f8e878151811061075657fe5b6020026020010151602001516000604051610772929190613189565b60405180910390a46108d5565b6001600160a01b038d1660009081526020829052604090206001908101546107a991830190612161565b15610860576107b6612b52565b6107d56107c583600101612198565b6107cf8988611fbc565b906121c4565b90506107e18b82612202565b9a508b84815181106107ef57fe5b6020026020010151600001518d8f6001600160a01b03167ff8da7bdb1837995e872689b605d1a2b076db111cb4b15351f835ebd275be423f8f888151811061083357fe5b6020026020010151602001518560000151604051610852929190613189565b60405180910390a4506108d5565b8a838151811061086c57fe5b6020026020010151600001518c8e6001600160a01b03167ff8da7bdb1837995e872689b605d1a2b076db111cb4b15351f835ebd275be423f8e87815181106108b057fe5b60200260200101516020015160006040516108cc929190613189565b60405180910390a45b6001600160a01b038d1660009081526020919091526040812060010155505b600101610656565b50610908876000612225565b156109ae5760095487516040516340c10f1960e01b81526001600160a01b03909216916340c10f1991610940918e919060040161307d565b602060405180830381600087803b15801561095a57600080fd5b505af115801561096e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109929190612dbf565b6109ae5760405162461bcd60e51b815260040161049490613534565b5050505050509392505050565b600b546001600160a01b0316156109e45760405162461bcd60e51b8152600401610494906136d8565b60006109ee610c03565b905060016109fd60058361223c565b6002811115610a0857fe5b14610a255760405162461bcd60e51b815260040161049490613775565b336001600160a01b0316610a71600c5485858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061226192505050565b6001600160a01b031614610a975760405162461bcd60e51b8152600401610494906134fd565b6000610aa4600583611f97565b9050610aaf8161238f565b50505050565b610abd61247a565b6001546001600160a01b03908116911614610aea5760405162461bcd60e51b815260040161049490613491565b610af581600161247e565b610b115760405162461bcd60e51b8152600401610494906135fe565b51600655565b6000546001600160a01b031681565b600c5481565b6000546001600160a01b0316610b4157600080fd5b60005460405163117c72b360e11b81526001600160a01b03909116906322f8e56690610b71908490600401613180565b600060405180830381600087803b158015610b8b57600080fd5b505af1158015610b9f573d6000803e3d6000fd5b5050505050565b60085481565b610bb461247a565b6001546001600160a01b03908116911614610be15760405162461bcd60e51b815260040161049490613491565b600b80546001600160a01b0319166001600160a01b0392909216919091179055565b600080546001600160a01b031615610ca05760008054906101000a90046001600160a01b03166001600160a01b03166329cb924d6040518163ffffffff1660e01b815260040160206040518083038186803b158015610c6157600080fd5b505afa158015610c75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c999190612f9b565b9050610ca3565b50425b90565b60075481565b600b546001600160a01b031681565b610cc6848484611caa565b6000610cdb610cd3610c03565b600590611f97565b90508481336001600160a01b03167f6992efdd7b69c1a8d79212d5ef5fe92118ed053fb7195808a858fa6889a117e98786604051610d1a9291906137ed565b60405180910390a45050505050565b600b546001600160a01b031615610d525760405162461bcd60e51b8152600401610494906136d8565b6000610d5c610c03565b90506001610d6b60058361223c565b6002811115610d7657fe5b14610d935760405162461bcd60e51b8152600401610494906132fe565b6000610da0600583611f97565b90506000610dae8787611ff9565b600083815260028201602090815260408083203384529182905290912080549293509091610dee5760405162461bcd60e51b81526004016104949061359a565b80600001548787338b888e604051602001610e0e96959493929190612ffe565b6040516020818303038152906040528051906020012014610e415760405162461bcd60e51b81526004016104949061324a565b600084815260026020526040902054610e6c5760405162461bcd60e51b81526004016104949061370f565b600084815260026020526040812054908255610e86612b52565b60408051602081019182905260095463277166bf60e11b9092529081906001600160a01b0316634ee2cd7e610ebf33876024860161307d565b60206040518083038186803b158015610ed757600080fd5b505afa158015610eeb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f0f9190612f9b565b815250905088604051602001610f259190613180565b60408051601f198184030181529190528051602090910120600180850191909155610f539085018a83612495565b8a86336001600160a01b03167fd04931ad32b4f942a0f169443ebd7f85a7d42c8b4310b4792243a065348836078d8d8660000151604051610f9693929190613806565b60405180910390a45050505050505050505050565b6000610fb8610cd3610c03565b905090565b60005b8181101561103057611028838383818110610fd757fe5b90506080020160000135848484818110610fed57fe5b9050608002016020013585858581811061100357fe5b9050608002016040013586868681811061101957fe5b90506080020160600135610d29565b600101610fc0565b505050565b600b546001600160a01b03161561107557600b546001600160a01b031633146110705760405162461bcd60e51b8152600401610494906137ac565b61119e565b600a546040516302abf57960e61b81526000916001600160a01b03169063aafd5e40906110b19067526567697374727960c01b90600401613180565b60206040518083038186803b1580156110c957600080fd5b505afa1580156110dd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111019190612c50565b60405163f9f6b49b60e01b81529091506001600160a01b0382169063f9f6b49b90611130903390600401613069565b60206040518083038186803b15801561114857600080fd5b505afa15801561115c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111809190612dbf565b61119c5760405162461bcd60e51b81526004016104949061366a565b505b60006111a8610c03565b9050808211156111ca5760405162461bcd60e51b8152600401610494906135c7565b6111d261254a565b6001600160a01b03166390978d1b846040518263ffffffff1660e01b81526004016111fd9190613180565b60206040518083038186803b15801561121557600080fd5b505afa158015611229573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061124d9190612dbf565b6112695760405162461bcd60e51b815260040161049490613419565b600061127584846125e1565b6000818152600360205260408120919250611291600585611f97565b9050600061129f8383612614565b905060008160038111156112af57fe5b14156113835760006112c283600161269b565b604080516080810182528a815260208082018b8152828401858152600480546060860190815260008d815260039586905287812096518755935160018088019190915592519486019490945592519383019390935581549283018255527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0187905551909150889082907f5d80f93c41e95cacea0b9ce9bb825092d709fa503a70bb26ea3f536bf16946bd90611379908b90613180565b60405180910390a3505b50505050505050565b60005b81811015611030578282828181106113a357fe5b90506020028101906113b59190613882565b6113c3906060810190613837565b1515905061143b576114368383838181106113da57fe5b90506020028101906113ec9190613882565b358484848181106113f957fe5b905060200281019061140b9190613882565b6020013585858581811061141b57fe5b905060200281019061142d9190613882565b60400135611caa565b611507565b61150783838381811061144a57fe5b905060200281019061145c9190613882565b3584848481811061146957fe5b905060200281019061147b9190613882565b6020013585858581811061148b57fe5b905060200281019061149d9190613882565b604001358686868181106114ad57fe5b90506020028101906114bf9190613882565b6114cd906060810190613837565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610cbb92505050565b60010161138f565b61151761247a565b6001546001600160a01b039081169116146115445760405162461bcd60e51b815260040161049490613491565b6001546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600180546001600160a01b0319169055565b60055481565b6000610fb86115a1610c03565b60059061223c565b606060006115b5610c03565b905060006115c4600583611f97565b6004549091506060906001600160401b03811180156115e257600080fd5b5060405190808252806020026020018201604052801561161c57816020015b611609612b65565b8152602001906001900390816116015790505b5090506000805b6004548110156116c7576000600360006004848154811061164057fe5b9060005260206000200154815260200190815260200160002090506001600381111561166857fe5b6116728287612614565b600381111561167d57fe5b14156116be5760405180604001604052808260000154815260200182600101548152508484815181106116ac57fe5b60209081029190910101526001909201915b50600101611623565b506060816001600160401b03811180156116e057600080fd5b5060405190808252806020026020018201604052801561171a57816020015b611707612b65565b8152602001906001900390816116ff5790505b50905060005b8281101561175b5783818151811061173457fe5b602002602001015182828151811061174857fe5b6020908102919091010152600101611720565b5094505050505090565b61176d61247a565b6001546001600160a01b0390811691161461179a5760405162461bcd60e51b815260040161049490613491565b51600755565b60608082516001600160401b03811180156117ba57600080fd5b506040519080825280602002602001820160405280156117f457816020015b6117e1612b65565b8152602001906001900390816117d95790505b5090506000611804610cd3610c03565b905060005b84518110156118e157600061183b86838151811061182357fe5b60200260200101516000015187848151811061068857fe5b905060006118498285612614565b9050600181600381111561185957fe5b1415611881578385848151811061186c57fe5b602002602001015160200181815250506118a3565b816003015485848151811061189257fe5b602002602001015160200181815250505b808584815181106118b057fe5b60200260200101516000019060038111156118c757fe5b908160038111156118d457fe5b9052505050600101611809565b50909150505b919050565b6118f461247a565b6001546001600160a01b039081169116146119215760405162461bcd60e51b815260040161049490613491565b600855565b6002602081815260009283526040928390208054845180840186526001830154815285519384019095529281015482526003015491929184565b6001546001600160a01b031690565b600b546000906001600160a01b0316156119b257600b546001600160a01b031633146119ad5760405162461bcd60e51b8152600401610494906137ac565b611adb565b600a546040516302abf57960e61b81526000916001600160a01b03169063aafd5e40906119ee9067526567697374727960c01b90600401613180565b60206040518083038186803b158015611a0657600080fd5b505afa158015611a1a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a3e9190612c50565b60405163f9f6b49b60e01b81529091506001600160a01b0382169063f9f6b49b90611a6d903390600401613069565b60206040518083038186803b158015611a8557600080fd5b505afa158015611a99573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611abd9190612dbf565b611ad95760405162461bcd60e51b81526004016104949061366a565b505b6000611ae784846126c0565b5090925050505b92915050565b6009546001600160a01b031681565b60065481565b600b546000906001600160a01b031615611b4c57600b546001600160a01b03163314611b475760405162461bcd60e51b8152600401610494906137ac565b611c75565b600a546040516302abf57960e61b81526000916001600160a01b03169063aafd5e4090611b889067526567697374727960c01b90600401613180565b60206040518083038186803b158015611ba057600080fd5b505afa158015611bb4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bd89190612c50565b60405163f9f6b49b60e01b81529091506001600160a01b0382169063f9f6b49b90611c07903390600401613069565b60206040518083038186803b158015611c1f57600080fd5b505afa158015611c33573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c579190612dbf565b611c735760405162461bcd60e51b81526004016104949061366a565b505b6000806060611c8486866126c0565b925092509250828190611ae75760405162461bcd60e51b815260040161049491906131c9565b600b546001600160a01b031615611cd35760405162461bcd60e51b8152600401610494906136d8565b80611cf05760405162461bcd60e51b81526004016104949061356b565b6000611cfa610c03565b90506000611d0960058361223c565b6002811115611d1457fe5b14611d315760405162461bcd60e51b8152600401610494906136a1565b6000611d3e600583611f97565b90506000611d4c8686611ff9565b90506001611d5a8284612614565b6003811115611d6557fe5b14611d825760405162461bcd60e51b8152600401610494906134c6565b600381018290556000828152600282016020908152604080832033808552928190529281902087905551889185917f879c67d036f174a10ea491cf7281d05af9b906660b4f26727d866aec0cf9147c90611ddd908b90613180565b60405180910390a450505050505050565b60606004805480602002602001604051908101604052809291908181526020018280548015611e3c57602002820191906000526020600020905b815481526020019060010190808311611e28575b5050505050905090565b611e4e61247a565b6001546001600160a01b03908116911614611e7b5760405162461bcd60e51b815260040161049490613491565b6001600160a01b038116611ea15760405162461bcd60e51b815260040161049490613281565b6001546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600180546001600160a01b0319166001600160a01b0392909216919091179055565b600081604051602001611f109190613038565b604051602081830303815290604052805190602001209050919050565b60008111611f3a57600080fd5b9055565b6000611f498261284b565b5183511115905092915050565b600082611f6557506000611aee565b82820282848281611f7257fe5b0414611f905760405162461bcd60e51b815260040161049490613450565b9392505050565b600080611fa860025b855490611f56565b9050611fb48382612879565b949350505050565b611fc4612b52565b6040805160208101909152825184518291670de0b6b3a764000091611fe891611f56565b81611fef57fe5b0490529392505050565b60006003600061200985856125e1565b8152602001908152602001600020905092915050565b600482015460001914156120325761215d565b60008061204f61204585600301546128bb565b60018501906129ad565b91509150816120705760405162461bcd60e51b815260040161049490613635565b6004805460001981019160009160039183918590811061208c57fe5b90600052602060002001548152602001908152602001600020905085600401548160040181905550600482815481106120c157fe5b906000526020600020015460048760040154815481106120dd57fe5b60009182526020909120015560048054806120f457fe5b60008281526020812082016000199081019190915590810190915560048701558554600387015460018801546040517f67565e6a3e804c4e180134cb2885e32142229de3ca125701318af11658ee498891612150918890613189565b60405180910390a3505050505b5050565b600082600201546040516020016121789190613180565b604051602081830303815290604052805190602001208214905092915050565b6121a0612b52565b50600281015460009081526020918252604090819020815192830190915254815290565b6121cc612b52565b60408051602081019091528251845182916121f9916121f390670de0b6b3a7640000611f56565b90612879565b90529392505050565b61220a612b52565b60408051602081019091528251845182916121f9919061269b565b60006122308261284b565b51835111905092915050565b600061225660028454612250908590612879565b90612a59565b6002811115611f9057fe5b600081516041146122845760405162461bcd60e51b815260040161049490613213565b60208201516040830151606084015160001a7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08211156122d65760405162461bcd60e51b815260040161049490613335565b8060ff16601b141580156122ee57508060ff16601c14155b1561230b5760405162461bcd60e51b8152600401610494906133d7565b6000600187838686604051600081526020016040526040516123309493929190613197565b6020604051602081039080840390855afa158015612352573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166123855760405162461bcd60e51b8152600401610494906131dc565b9695505050505050565b6000818152600260205260409020805461215d57600960009054906101000a90046001600160a01b03166001600160a01b0316639711715a6040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156123f357600080fd5b505af1158015612407573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061242b9190612f9b565b8155600082815260026020819052604090912060075460018201556006549101556008546124649061245e600585612a9b565b9061269b565b6000838152600260205260409020600301555050565b3390565b60006124898261284b565b51835110905092915050565b6040805160208101909152600184015481526124b19082612202565b516001840155600082815260208481526040918290208251918201909252905481526124dd9082612202565b6000838152602085905260409020905190556002830154821480159061253b57506002830154600090815260208481526040808320815180840183529054815285845286835292819020815192830190915254815261253b91612abf565b15611030575060029190910155565b600a546040516302abf57960e61b81526000916001600160a01b03169063aafd5e409061259190721259195b9d1a599a595c95da1a5d195b1a5cdd606a1b90600401613180565b60206040518083038186803b1580156125a957600080fd5b505afa1580156125bd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fb89190612c50565b600082826040516020016125f6929190613189565b60405160208183030381529060405280519060200120905092915050565b600082600301546000141561262b57506000611aee565b818360030154101561267f57600383015460008181526002850160205260408120916126649061265a906128bb565b60018401906129ad565b50905080612673576001612676565b60025b92505050611aee565b818360030154141561269357506001611aee565b506003611aee565b600082820183811015611f905760405162461bcd60e51b8152600401610494906132c7565b600080606060006126d18686611ff9565b905060006126e0610cd3610c03565b905060006126ee8383612614565b905060018160038111156126fe57fe5b141561274b576000806040518060400160405280601e81526020017f43757272656e7420766f74696e6720726f756e64206e6f7420656e6465640000815250955095509550505050612844565b600281600381111561275957fe5b14156127a657600383015460008181526002850160205260408120916127829061265a906128bb565b60408051602081019091526000815260019a50909850965061284495505050505050565b60038160038111156127b457fe5b1415612801576000806040518060400160405280601d81526020017f5072696365206973207374696c6c20746f20626520766f746564206f6e000000815250955095509550505050612844565b6000806040518060400160405280601981526020017f507269636520776173206e6576657220726571756573746564000000000000008152509550955095505050505b9250925092565b612853612b52565b60408051602081019091528061287184670de0b6b3a7640000611f56565b905292915050565b6000611f9083836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612ac6565b6128c3612b52565b600082815260026020526040902054806128ee575050604080516020810190915260001981526118e7565b6128f6612b52565b604080516020810191829052600954630981b24d60e41b9092529081906001600160a01b031663981b24d061292e8660248501613180565b60206040518083038186803b15801561294657600080fd5b505afa15801561295a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061297e9190612f9b565b905260008581526002602081815260409283902083519182019093529101548152909150611fb4908290611fbc565b6000806129b8612b52565b6129cd60646129c7603261284b565b90612afd565b6040805160208101909152600187015481529091506129ec9085612abf565b8015612a37575060408051602080820183526001880154825260028801546000908152888252839020835191820190935291548252612a37918391612a3191906121c4565b90612abf565b15612a4c576001925084600201549150612a51565b600092505b509250929050565b6000611f9083836040518060400160405280601881526020017f536166654d6174683a206d6f64756c6f206279207a65726f0000000000000000815250612b1e565b600080612aa86002611fa0565b9050611fb4612ab884600161269b565b8290611f56565b5190511190565b60008183612ae75760405162461bcd60e51b815260040161049491906131c9565b506000838581612af357fe5b0495945050505050565b612b05612b52565b6040805160208101909152835181906121f99085612879565b60008183612b3f5760405162461bcd60e51b815260040161049491906131c9565b50828481612b4957fe5b06949350505050565b6040518060200160405280600081525090565b604080518082019091526000808252602082015290565b600082601f830112612b8c578081fd5b81356001600160401b03811115612ba1578182fd5b6020612bb081828402016138a1565b8281529250808301848201604080850287018401881015612bd057600080fd5b60005b85811015612bf757612be58984612c03565b84529284019291810191600101612bd3565b50505050505092915050565b600060408284031215612c14578081fd5b612c1e60406138a1565b9050813581526020820135602082015292915050565b600060208284031215612c45578081fd5b8135611f90816138d3565b600060208284031215612c61578081fd5b8151611f90816138d3565b600080600060608486031215612c80578182fd5b8335612c8b816138d3565b92506020840135915060408401356001600160401b03811115612cac578182fd5b612cb886828701612b7c565b9150509250925092565b60008060208385031215612cd4578182fd5b82356001600160401b0380821115612cea578384fd5b818501915085601f830112612cfd578384fd5b813581811115612d0b578485fd5b8660208083028501011115612d1e578485fd5b60209290920196919550909350505050565b600060208284031215612d41578081fd5b81356001600160401b03811115612d56578182fd5b611fb484828501612b7c565b60008060208385031215612d74578182fd5b82356001600160401b0380821115612d8a578384fd5b818501915085601f830112612d9d578384fd5b813581811115612dab578485fd5b866020608083028501011115612d1e578485fd5b600060208284031215612dd0578081fd5b81518015158114611f90578182fd5b60008060408385031215612df1578182fd5b50508035926020909101359150565b600080600060608486031215612e14578283fd5b505081359360208301359350604090920135919050565b60008060008060808587031215612e40578081fd5b84359350602085013592506040850135915060608501356001600160401b0380821115612e6b578283fd5b818701915087601f830112612e7e578283fd5b813581811115612e8c578384fd5b612e9f601f8201601f19166020016138a1565b9150808252886020828501011115612eb5578384fd5b612ec68160208401602086016138c7565b5094979396509194505050565b60008060008060808587031215612ee8578182fd5b5050823594602084013594506040840135936060013592509050565b60008060208385031215612f16578182fd5b82356001600160401b0380821115612f2c578384fd5b818501915085601f830112612f3f578384fd5b813581811115612f4d578485fd5b866020828501011115612d1e578485fd5b600060208284031215612f6f578081fd5b612f7960206138a1565b9135825250919050565b600060208284031215612f94578081fd5b5035919050565b600060208284031215612fac578081fd5b5051919050565b60008151808452815b81811015612fd857602081850181015186830182015201612fbc565b81811115612fe95782602083870101525b50601f01601f19169290920160200192915050565b958652602086019490945260609290921b6bffffffffffffffffffffffff1916604085015260548401526074830152609482015260b40190565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000008152601c810191909152603c0190565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b6020808252825182820181905260009190848201906040850190845b818110156130ce578351835292840192918401916001016130b2565b50909695505050505050565b602080825282518282018190526000919060409081850190868401855b8281101561311c578151805185528601518685015292840192908501906001016130f7565b5091979650505050505050565b602080825282518282018190526000919060409081850190868401855b8281101561311c57815180516004811061315c57fe5b8552860151868501529284019290850190600101613146565b901515815260200190565b90815260200190565b918252602082015260400190565b93845260ff9290921660208401526040830152606082015260800190565b60208101600383106131c357fe5b91905290565b600060208252611f906020830184612fb3565b60208082526018908201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604082015260600190565b6020808252601f908201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604082015260600190565b6020808252601c908201527f52657665616c6564206461746120213d20636f6d6d6974206861736800000000604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b6020808252601d908201527f43616e6e6f742072657665616c20696e20636f6d6d6974207068617365000000604082015260600190565b60208082526022908201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604082015261756560f01b606082015260800190565b6020808252601b908201527f43616e206f6e6c792063616c6c2066726f6d206d696772617465640000000000604082015260600190565b6020808252600f908201526e125b9d985b1a59081c9bdd5b991259608a1b604082015260600190565b60208082526022908201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604082015261756560f01b606082015260800190565b6020808252601e908201527f556e737570706f72746564206964656e74696669657220726571756573740000604082015260600190565b60208082526021908201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6040820152607760f81b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601e908201527f43616e6e6f7420636f6d6d697420696e61637469766520726571756573740000604082015260600190565b6020808252601b908201527f5369676e6174757265206d757374206d617463682073656e6465720000000000604082015260600190565b6020808252601c908201527f566f74696e6720746f6b656e2069737375616e6365206661696c656400000000604082015260600190565b602080825260159082015274092dcecc2d8d2c840e0e4deecd2c8cac840d0c2e6d605b1b604082015260600190565b602080825260139082015272125b9d985b1a59081a185cda081c995d99585b606a1b604082015260600190565b60208082526018908201527f43616e206f6e6c79207265717565737420696e20706173740000000000000000604082015260600190565b6020808252601d908201527f4741542070657263656e74616765206d757374206265203c2031303025000000604082015260600190565b6020808252818101527f43616e2774207265736f6c766520756e7265736f6c7665642072657175657374604082015260600190565b60208082526019908201527f43616c6c6564206d757374206265207265676973746572656400000000000000604082015260600190565b6020808252601d908201527f43616e6e6f7420636f6d6d697420696e2072657665616c207068617365000000604082015260600190565b6020808252601e908201527f4f6e6c792063616c6c2074686973206966206e6f74206d696772617465640000604082015260600190565b602080825260159082015274149bdd5b99081a185cc81b9bc81cdb985c1cda1bdd605a1b604082015260600190565b6020808252601d908201527f526574726965766520666f7220766f7465732073616d6520726f756e64000000604082015260600190565b6020808252601d908201527f4f6e6c7920736e617073686f7420696e2072657665616c207068617365000000604082015260600190565b6020808252601f908201527f43616c6c6572206d757374206265206d69677261746564206164647265737300604082015260600190565b9051815260200190565b600083825260406020830152611fb46040830184612fb3565b9283526020830191909152604082015260600190565b93845291516020840152516040830152606082015260800190565b6000808335601e1984360301811261384d578283fd5b8301803591506001600160401b03821115613866578283fd5b60200191503681900382131561387b57600080fd5b9250929050565b60008235607e19833603018112613897578182fd5b9190910192915050565b6040518181016001600160401b03811182821017156138bf57600080fd5b604052919050565b82818337506000910152565b6001600160a01b03811681146138e857600080fd5b5056fea26469706673582212206b193f330ddace7542c815826ef62055fb3147c0a05215121958f2a3daabb8d064736f6c634300060c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101fb5760003560e01c806370a0cf2c1161011a5780638c65c81f116100ad578063b90fd4801161007c578063b90fd480146103fb578063c9280f0614610403578063d8651ad014610416578063f116961f14610429578063f2fde38b1461043e576101fb565b80638c65c81f146103a85780638da5cb5b146103cb578063a03e881a146103d3578063b0340123146103f3576101fb565b806380a1f712116100e957806380a1f7121461034d57806383c6aaca146103625780638558d4f3146103755780638876e8a014610395576101fb565b806370a0cf2c14610315578063715018a61461032857806371b7db531461033057806374dd278c14610338576101fb565b806329cb924d116101925780634c7a2603116101615780634c7a2603146102d45780635727e25d146102e75780636852eea0146102ef57806368ad8ae314610302576101fb565b806329cb924d146102a957806331f9e35b146102b15780634000851f146102b95780634666cb0c146102c1576101fb565b806320b373a2116101ce57806320b373a21461026657806322f8e5661461027b57806326af73bf1461028e5780632960b5af14610296576101fb565b80630d434e7e14610200578063110d559a1461022957806313e56d6a1461023e5780631c39c38d14610251575b600080fd5b61021361020e366004612c6c565b610451565b60405161022091906137e3565b60405180910390f35b61023c610237366004612f04565b6109bb565b005b61023c61024c366004612f5e565b610ab5565b610259610b17565b6040516102209190613069565b61026e610b26565b6040516102209190613180565b61023c610289366004612f83565b610b2c565b61026e610ba6565b61023c6102a4366004612c34565b610bac565b61026e610c03565b61026e610ca6565b610259610cac565b61023c6102cf366004612e2b565b610cbb565b61023c6102e2366004612ed3565b610d29565b61026e610fab565b61023c6102fd366004612d62565b610fbd565b61023c610310366004612ddf565b611035565b61023c610323366004612cc2565b61138c565b61023c61150f565b61026e61158e565b610340611594565b60405161022091906131b5565b6103556115a9565b60405161022091906130da565b61023c610370366004612f5e565b611765565b610388610383366004612d30565b6117a0565b6040516102209190613129565b61023c6103a3366004612f83565b6118ec565b6103bb6103b6366004612f83565b611926565b604051610220949392919061381c565b610259611960565b6103e66103e1366004612ddf565b61196f565b6040516102209190613175565b610259611af4565b61026e611b03565b61026e610411366004612ddf565b611b09565b61023c610424366004612e00565b611caa565b610431611dee565b6040516102209190613096565b61023c61044c366004612c34565b611e46565b610459612b52565b600b546001600160a01b03161561049d57600b546001600160a01b0316331461049d5760405162461bcd60e51b815260040161049490613377565b60405180910390fd5b60006104a7610c03565b90506104b4600582611f97565b84106104d25760405162461bcd60e51b8152600401610494906133ae565b6000848152600260205260409020600381015482116104ef612b52565b604080516020810191829052600954855463277166bf60e11b909352909182916001600160a01b031690634ee2cd7e9061052e908d906024860161307d565b60206040518083038186803b15801561054657600080fd5b505afa15801561055a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057e9190612f9b565b9052905061058a612b52565b6040805160208101918290526009548654630981b24d60e41b909352909182916001600160a01b03169063981b24d0906105c79060248501613180565b60206040518083038186803b1580156105df57600080fd5b505afa1580156105f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106179190612f9b565b90529050610623612b52565b60408051602081019091526001860154815261063f9083611fbc565b905060405180602001604052806000815250965060005b88518110156108fc5760006106998a838151811061067057fe5b6020026020010151600001518b848151811061068857fe5b602002602001015160200151611ff9565b6003810154600081815260028301602052604090209192508c146106cf5760405162461bcd60e51b81526004016104949061373e565b6106d9828261201f565b6001600160a01b038d166000908152602082905260409020600101546107005750506108f4565b861561077f578a838151811061071257fe5b6020026020010151600001518c8e6001600160a01b03167ff8da7bdb1837995e872689b605d1a2b076db111cb4b15351f835ebd275be423f8e878151811061075657fe5b6020026020010151602001516000604051610772929190613189565b60405180910390a46108d5565b6001600160a01b038d1660009081526020829052604090206001908101546107a991830190612161565b15610860576107b6612b52565b6107d56107c583600101612198565b6107cf8988611fbc565b906121c4565b90506107e18b82612202565b9a508b84815181106107ef57fe5b6020026020010151600001518d8f6001600160a01b03167ff8da7bdb1837995e872689b605d1a2b076db111cb4b15351f835ebd275be423f8f888151811061083357fe5b6020026020010151602001518560000151604051610852929190613189565b60405180910390a4506108d5565b8a838151811061086c57fe5b6020026020010151600001518c8e6001600160a01b03167ff8da7bdb1837995e872689b605d1a2b076db111cb4b15351f835ebd275be423f8e87815181106108b057fe5b60200260200101516020015160006040516108cc929190613189565b60405180910390a45b6001600160a01b038d1660009081526020919091526040812060010155505b600101610656565b50610908876000612225565b156109ae5760095487516040516340c10f1960e01b81526001600160a01b03909216916340c10f1991610940918e919060040161307d565b602060405180830381600087803b15801561095a57600080fd5b505af115801561096e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109929190612dbf565b6109ae5760405162461bcd60e51b815260040161049490613534565b5050505050509392505050565b600b546001600160a01b0316156109e45760405162461bcd60e51b8152600401610494906136d8565b60006109ee610c03565b905060016109fd60058361223c565b6002811115610a0857fe5b14610a255760405162461bcd60e51b815260040161049490613775565b336001600160a01b0316610a71600c5485858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061226192505050565b6001600160a01b031614610a975760405162461bcd60e51b8152600401610494906134fd565b6000610aa4600583611f97565b9050610aaf8161238f565b50505050565b610abd61247a565b6001546001600160a01b03908116911614610aea5760405162461bcd60e51b815260040161049490613491565b610af581600161247e565b610b115760405162461bcd60e51b8152600401610494906135fe565b51600655565b6000546001600160a01b031681565b600c5481565b6000546001600160a01b0316610b4157600080fd5b60005460405163117c72b360e11b81526001600160a01b03909116906322f8e56690610b71908490600401613180565b600060405180830381600087803b158015610b8b57600080fd5b505af1158015610b9f573d6000803e3d6000fd5b5050505050565b60085481565b610bb461247a565b6001546001600160a01b03908116911614610be15760405162461bcd60e51b815260040161049490613491565b600b80546001600160a01b0319166001600160a01b0392909216919091179055565b600080546001600160a01b031615610ca05760008054906101000a90046001600160a01b03166001600160a01b03166329cb924d6040518163ffffffff1660e01b815260040160206040518083038186803b158015610c6157600080fd5b505afa158015610c75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c999190612f9b565b9050610ca3565b50425b90565b60075481565b600b546001600160a01b031681565b610cc6848484611caa565b6000610cdb610cd3610c03565b600590611f97565b90508481336001600160a01b03167f6992efdd7b69c1a8d79212d5ef5fe92118ed053fb7195808a858fa6889a117e98786604051610d1a9291906137ed565b60405180910390a45050505050565b600b546001600160a01b031615610d525760405162461bcd60e51b8152600401610494906136d8565b6000610d5c610c03565b90506001610d6b60058361223c565b6002811115610d7657fe5b14610d935760405162461bcd60e51b8152600401610494906132fe565b6000610da0600583611f97565b90506000610dae8787611ff9565b600083815260028201602090815260408083203384529182905290912080549293509091610dee5760405162461bcd60e51b81526004016104949061359a565b80600001548787338b888e604051602001610e0e96959493929190612ffe565b6040516020818303038152906040528051906020012014610e415760405162461bcd60e51b81526004016104949061324a565b600084815260026020526040902054610e6c5760405162461bcd60e51b81526004016104949061370f565b600084815260026020526040812054908255610e86612b52565b60408051602081019182905260095463277166bf60e11b9092529081906001600160a01b0316634ee2cd7e610ebf33876024860161307d565b60206040518083038186803b158015610ed757600080fd5b505afa158015610eeb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f0f9190612f9b565b815250905088604051602001610f259190613180565b60408051601f198184030181529190528051602090910120600180850191909155610f539085018a83612495565b8a86336001600160a01b03167fd04931ad32b4f942a0f169443ebd7f85a7d42c8b4310b4792243a065348836078d8d8660000151604051610f9693929190613806565b60405180910390a45050505050505050505050565b6000610fb8610cd3610c03565b905090565b60005b8181101561103057611028838383818110610fd757fe5b90506080020160000135848484818110610fed57fe5b9050608002016020013585858581811061100357fe5b9050608002016040013586868681811061101957fe5b90506080020160600135610d29565b600101610fc0565b505050565b600b546001600160a01b03161561107557600b546001600160a01b031633146110705760405162461bcd60e51b8152600401610494906137ac565b61119e565b600a546040516302abf57960e61b81526000916001600160a01b03169063aafd5e40906110b19067526567697374727960c01b90600401613180565b60206040518083038186803b1580156110c957600080fd5b505afa1580156110dd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111019190612c50565b60405163f9f6b49b60e01b81529091506001600160a01b0382169063f9f6b49b90611130903390600401613069565b60206040518083038186803b15801561114857600080fd5b505afa15801561115c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111809190612dbf565b61119c5760405162461bcd60e51b81526004016104949061366a565b505b60006111a8610c03565b9050808211156111ca5760405162461bcd60e51b8152600401610494906135c7565b6111d261254a565b6001600160a01b03166390978d1b846040518263ffffffff1660e01b81526004016111fd9190613180565b60206040518083038186803b15801561121557600080fd5b505afa158015611229573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061124d9190612dbf565b6112695760405162461bcd60e51b815260040161049490613419565b600061127584846125e1565b6000818152600360205260408120919250611291600585611f97565b9050600061129f8383612614565b905060008160038111156112af57fe5b14156113835760006112c283600161269b565b604080516080810182528a815260208082018b8152828401858152600480546060860190815260008d815260039586905287812096518755935160018088019190915592519486019490945592519383019390935581549283018255527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0187905551909150889082907f5d80f93c41e95cacea0b9ce9bb825092d709fa503a70bb26ea3f536bf16946bd90611379908b90613180565b60405180910390a3505b50505050505050565b60005b81811015611030578282828181106113a357fe5b90506020028101906113b59190613882565b6113c3906060810190613837565b1515905061143b576114368383838181106113da57fe5b90506020028101906113ec9190613882565b358484848181106113f957fe5b905060200281019061140b9190613882565b6020013585858581811061141b57fe5b905060200281019061142d9190613882565b60400135611caa565b611507565b61150783838381811061144a57fe5b905060200281019061145c9190613882565b3584848481811061146957fe5b905060200281019061147b9190613882565b6020013585858581811061148b57fe5b905060200281019061149d9190613882565b604001358686868181106114ad57fe5b90506020028101906114bf9190613882565b6114cd906060810190613837565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610cbb92505050565b60010161138f565b61151761247a565b6001546001600160a01b039081169116146115445760405162461bcd60e51b815260040161049490613491565b6001546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600180546001600160a01b0319169055565b60055481565b6000610fb86115a1610c03565b60059061223c565b606060006115b5610c03565b905060006115c4600583611f97565b6004549091506060906001600160401b03811180156115e257600080fd5b5060405190808252806020026020018201604052801561161c57816020015b611609612b65565b8152602001906001900390816116015790505b5090506000805b6004548110156116c7576000600360006004848154811061164057fe5b9060005260206000200154815260200190815260200160002090506001600381111561166857fe5b6116728287612614565b600381111561167d57fe5b14156116be5760405180604001604052808260000154815260200182600101548152508484815181106116ac57fe5b60209081029190910101526001909201915b50600101611623565b506060816001600160401b03811180156116e057600080fd5b5060405190808252806020026020018201604052801561171a57816020015b611707612b65565b8152602001906001900390816116ff5790505b50905060005b8281101561175b5783818151811061173457fe5b602002602001015182828151811061174857fe5b6020908102919091010152600101611720565b5094505050505090565b61176d61247a565b6001546001600160a01b0390811691161461179a5760405162461bcd60e51b815260040161049490613491565b51600755565b60608082516001600160401b03811180156117ba57600080fd5b506040519080825280602002602001820160405280156117f457816020015b6117e1612b65565b8152602001906001900390816117d95790505b5090506000611804610cd3610c03565b905060005b84518110156118e157600061183b86838151811061182357fe5b60200260200101516000015187848151811061068857fe5b905060006118498285612614565b9050600181600381111561185957fe5b1415611881578385848151811061186c57fe5b602002602001015160200181815250506118a3565b816003015485848151811061189257fe5b602002602001015160200181815250505b808584815181106118b057fe5b60200260200101516000019060038111156118c757fe5b908160038111156118d457fe5b9052505050600101611809565b50909150505b919050565b6118f461247a565b6001546001600160a01b039081169116146119215760405162461bcd60e51b815260040161049490613491565b600855565b6002602081815260009283526040928390208054845180840186526001830154815285519384019095529281015482526003015491929184565b6001546001600160a01b031690565b600b546000906001600160a01b0316156119b257600b546001600160a01b031633146119ad5760405162461bcd60e51b8152600401610494906137ac565b611adb565b600a546040516302abf57960e61b81526000916001600160a01b03169063aafd5e40906119ee9067526567697374727960c01b90600401613180565b60206040518083038186803b158015611a0657600080fd5b505afa158015611a1a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a3e9190612c50565b60405163f9f6b49b60e01b81529091506001600160a01b0382169063f9f6b49b90611a6d903390600401613069565b60206040518083038186803b158015611a8557600080fd5b505afa158015611a99573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611abd9190612dbf565b611ad95760405162461bcd60e51b81526004016104949061366a565b505b6000611ae784846126c0565b5090925050505b92915050565b6009546001600160a01b031681565b60065481565b600b546000906001600160a01b031615611b4c57600b546001600160a01b03163314611b475760405162461bcd60e51b8152600401610494906137ac565b611c75565b600a546040516302abf57960e61b81526000916001600160a01b03169063aafd5e4090611b889067526567697374727960c01b90600401613180565b60206040518083038186803b158015611ba057600080fd5b505afa158015611bb4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611bd89190612c50565b60405163f9f6b49b60e01b81529091506001600160a01b0382169063f9f6b49b90611c07903390600401613069565b60206040518083038186803b158015611c1f57600080fd5b505afa158015611c33573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c579190612dbf565b611c735760405162461bcd60e51b81526004016104949061366a565b505b6000806060611c8486866126c0565b925092509250828190611ae75760405162461bcd60e51b815260040161049491906131c9565b600b546001600160a01b031615611cd35760405162461bcd60e51b8152600401610494906136d8565b80611cf05760405162461bcd60e51b81526004016104949061356b565b6000611cfa610c03565b90506000611d0960058361223c565b6002811115611d1457fe5b14611d315760405162461bcd60e51b8152600401610494906136a1565b6000611d3e600583611f97565b90506000611d4c8686611ff9565b90506001611d5a8284612614565b6003811115611d6557fe5b14611d825760405162461bcd60e51b8152600401610494906134c6565b600381018290556000828152600282016020908152604080832033808552928190529281902087905551889185917f879c67d036f174a10ea491cf7281d05af9b906660b4f26727d866aec0cf9147c90611ddd908b90613180565b60405180910390a450505050505050565b60606004805480602002602001604051908101604052809291908181526020018280548015611e3c57602002820191906000526020600020905b815481526020019060010190808311611e28575b5050505050905090565b611e4e61247a565b6001546001600160a01b03908116911614611e7b5760405162461bcd60e51b815260040161049490613491565b6001600160a01b038116611ea15760405162461bcd60e51b815260040161049490613281565b6001546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600180546001600160a01b0319166001600160a01b0392909216919091179055565b600081604051602001611f109190613038565b604051602081830303815290604052805190602001209050919050565b60008111611f3a57600080fd5b9055565b6000611f498261284b565b5183511115905092915050565b600082611f6557506000611aee565b82820282848281611f7257fe5b0414611f905760405162461bcd60e51b815260040161049490613450565b9392505050565b600080611fa860025b855490611f56565b9050611fb48382612879565b949350505050565b611fc4612b52565b6040805160208101909152825184518291670de0b6b3a764000091611fe891611f56565b81611fef57fe5b0490529392505050565b60006003600061200985856125e1565b8152602001908152602001600020905092915050565b600482015460001914156120325761215d565b60008061204f61204585600301546128bb565b60018501906129ad565b91509150816120705760405162461bcd60e51b815260040161049490613635565b6004805460001981019160009160039183918590811061208c57fe5b90600052602060002001548152602001908152602001600020905085600401548160040181905550600482815481106120c157fe5b906000526020600020015460048760040154815481106120dd57fe5b60009182526020909120015560048054806120f457fe5b60008281526020812082016000199081019190915590810190915560048701558554600387015460018801546040517f67565e6a3e804c4e180134cb2885e32142229de3ca125701318af11658ee498891612150918890613189565b60405180910390a3505050505b5050565b600082600201546040516020016121789190613180565b604051602081830303815290604052805190602001208214905092915050565b6121a0612b52565b50600281015460009081526020918252604090819020815192830190915254815290565b6121cc612b52565b60408051602081019091528251845182916121f9916121f390670de0b6b3a7640000611f56565b90612879565b90529392505050565b61220a612b52565b60408051602081019091528251845182916121f9919061269b565b60006122308261284b565b51835111905092915050565b600061225660028454612250908590612879565b90612a59565b6002811115611f9057fe5b600081516041146122845760405162461bcd60e51b815260040161049490613213565b60208201516040830151606084015160001a7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08211156122d65760405162461bcd60e51b815260040161049490613335565b8060ff16601b141580156122ee57508060ff16601c14155b1561230b5760405162461bcd60e51b8152600401610494906133d7565b6000600187838686604051600081526020016040526040516123309493929190613197565b6020604051602081039080840390855afa158015612352573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166123855760405162461bcd60e51b8152600401610494906131dc565b9695505050505050565b6000818152600260205260409020805461215d57600960009054906101000a90046001600160a01b03166001600160a01b0316639711715a6040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156123f357600080fd5b505af1158015612407573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061242b9190612f9b565b8155600082815260026020819052604090912060075460018201556006549101556008546124649061245e600585612a9b565b9061269b565b6000838152600260205260409020600301555050565b3390565b60006124898261284b565b51835110905092915050565b6040805160208101909152600184015481526124b19082612202565b516001840155600082815260208481526040918290208251918201909252905481526124dd9082612202565b6000838152602085905260409020905190556002830154821480159061253b57506002830154600090815260208481526040808320815180840183529054815285845286835292819020815192830190915254815261253b91612abf565b15611030575060029190910155565b600a546040516302abf57960e61b81526000916001600160a01b03169063aafd5e409061259190721259195b9d1a599a595c95da1a5d195b1a5cdd606a1b90600401613180565b60206040518083038186803b1580156125a957600080fd5b505afa1580156125bd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fb89190612c50565b600082826040516020016125f6929190613189565b60405160208183030381529060405280519060200120905092915050565b600082600301546000141561262b57506000611aee565b818360030154101561267f57600383015460008181526002850160205260408120916126649061265a906128bb565b60018401906129ad565b50905080612673576001612676565b60025b92505050611aee565b818360030154141561269357506001611aee565b506003611aee565b600082820183811015611f905760405162461bcd60e51b8152600401610494906132c7565b600080606060006126d18686611ff9565b905060006126e0610cd3610c03565b905060006126ee8383612614565b905060018160038111156126fe57fe5b141561274b576000806040518060400160405280601e81526020017f43757272656e7420766f74696e6720726f756e64206e6f7420656e6465640000815250955095509550505050612844565b600281600381111561275957fe5b14156127a657600383015460008181526002850160205260408120916127829061265a906128bb565b60408051602081019091526000815260019a50909850965061284495505050505050565b60038160038111156127b457fe5b1415612801576000806040518060400160405280601d81526020017f5072696365206973207374696c6c20746f20626520766f746564206f6e000000815250955095509550505050612844565b6000806040518060400160405280601981526020017f507269636520776173206e6576657220726571756573746564000000000000008152509550955095505050505b9250925092565b612853612b52565b60408051602081019091528061287184670de0b6b3a7640000611f56565b905292915050565b6000611f9083836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612ac6565b6128c3612b52565b600082815260026020526040902054806128ee575050604080516020810190915260001981526118e7565b6128f6612b52565b604080516020810191829052600954630981b24d60e41b9092529081906001600160a01b031663981b24d061292e8660248501613180565b60206040518083038186803b15801561294657600080fd5b505afa15801561295a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061297e9190612f9b565b905260008581526002602081815260409283902083519182019093529101548152909150611fb4908290611fbc565b6000806129b8612b52565b6129cd60646129c7603261284b565b90612afd565b6040805160208101909152600187015481529091506129ec9085612abf565b8015612a37575060408051602080820183526001880154825260028801546000908152888252839020835191820190935291548252612a37918391612a3191906121c4565b90612abf565b15612a4c576001925084600201549150612a51565b600092505b509250929050565b6000611f9083836040518060400160405280601881526020017f536166654d6174683a206d6f64756c6f206279207a65726f0000000000000000815250612b1e565b600080612aa86002611fa0565b9050611fb4612ab884600161269b565b8290611f56565b5190511190565b60008183612ae75760405162461bcd60e51b815260040161049491906131c9565b506000838581612af357fe5b0495945050505050565b612b05612b52565b6040805160208101909152835181906121f99085612879565b60008183612b3f5760405162461bcd60e51b815260040161049491906131c9565b50828481612b4957fe5b06949350505050565b6040518060200160405280600081525090565b604080518082019091526000808252602082015290565b600082601f830112612b8c578081fd5b81356001600160401b03811115612ba1578182fd5b6020612bb081828402016138a1565b8281529250808301848201604080850287018401881015612bd057600080fd5b60005b85811015612bf757612be58984612c03565b84529284019291810191600101612bd3565b50505050505092915050565b600060408284031215612c14578081fd5b612c1e60406138a1565b9050813581526020820135602082015292915050565b600060208284031215612c45578081fd5b8135611f90816138d3565b600060208284031215612c61578081fd5b8151611f90816138d3565b600080600060608486031215612c80578182fd5b8335612c8b816138d3565b92506020840135915060408401356001600160401b03811115612cac578182fd5b612cb886828701612b7c565b9150509250925092565b60008060208385031215612cd4578182fd5b82356001600160401b0380821115612cea578384fd5b818501915085601f830112612cfd578384fd5b813581811115612d0b578485fd5b8660208083028501011115612d1e578485fd5b60209290920196919550909350505050565b600060208284031215612d41578081fd5b81356001600160401b03811115612d56578182fd5b611fb484828501612b7c565b60008060208385031215612d74578182fd5b82356001600160401b0380821115612d8a578384fd5b818501915085601f830112612d9d578384fd5b813581811115612dab578485fd5b866020608083028501011115612d1e578485fd5b600060208284031215612dd0578081fd5b81518015158114611f90578182fd5b60008060408385031215612df1578182fd5b50508035926020909101359150565b600080600060608486031215612e14578283fd5b505081359360208301359350604090920135919050565b60008060008060808587031215612e40578081fd5b84359350602085013592506040850135915060608501356001600160401b0380821115612e6b578283fd5b818701915087601f830112612e7e578283fd5b813581811115612e8c578384fd5b612e9f601f8201601f19166020016138a1565b9150808252886020828501011115612eb5578384fd5b612ec68160208401602086016138c7565b5094979396509194505050565b60008060008060808587031215612ee8578182fd5b5050823594602084013594506040840135936060013592509050565b60008060208385031215612f16578182fd5b82356001600160401b0380821115612f2c578384fd5b818501915085601f830112612f3f578384fd5b813581811115612f4d578485fd5b866020828501011115612d1e578485fd5b600060208284031215612f6f578081fd5b612f7960206138a1565b9135825250919050565b600060208284031215612f94578081fd5b5035919050565b600060208284031215612fac578081fd5b5051919050565b60008151808452815b81811015612fd857602081850181015186830182015201612fbc565b81811115612fe95782602083870101525b50601f01601f19169290920160200192915050565b958652602086019490945260609290921b6bffffffffffffffffffffffff1916604085015260548401526074830152609482015260b40190565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000008152601c810191909152603c0190565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b6020808252825182820181905260009190848201906040850190845b818110156130ce578351835292840192918401916001016130b2565b50909695505050505050565b602080825282518282018190526000919060409081850190868401855b8281101561311c578151805185528601518685015292840192908501906001016130f7565b5091979650505050505050565b602080825282518282018190526000919060409081850190868401855b8281101561311c57815180516004811061315c57fe5b8552860151868501529284019290850190600101613146565b901515815260200190565b90815260200190565b918252602082015260400190565b93845260ff9290921660208401526040830152606082015260800190565b60208101600383106131c357fe5b91905290565b600060208252611f906020830184612fb3565b60208082526018908201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604082015260600190565b6020808252601f908201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604082015260600190565b6020808252601c908201527f52657665616c6564206461746120213d20636f6d6d6974206861736800000000604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b6020808252601d908201527f43616e6e6f742072657665616c20696e20636f6d6d6974207068617365000000604082015260600190565b60208082526022908201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604082015261756560f01b606082015260800190565b6020808252601b908201527f43616e206f6e6c792063616c6c2066726f6d206d696772617465640000000000604082015260600190565b6020808252600f908201526e125b9d985b1a59081c9bdd5b991259608a1b604082015260600190565b60208082526022908201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604082015261756560f01b606082015260800190565b6020808252601e908201527f556e737570706f72746564206964656e74696669657220726571756573740000604082015260600190565b60208082526021908201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6040820152607760f81b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601e908201527f43616e6e6f7420636f6d6d697420696e61637469766520726571756573740000604082015260600190565b6020808252601b908201527f5369676e6174757265206d757374206d617463682073656e6465720000000000604082015260600190565b6020808252601c908201527f566f74696e6720746f6b656e2069737375616e6365206661696c656400000000604082015260600190565b602080825260159082015274092dcecc2d8d2c840e0e4deecd2c8cac840d0c2e6d605b1b604082015260600190565b602080825260139082015272125b9d985b1a59081a185cda081c995d99585b606a1b604082015260600190565b60208082526018908201527f43616e206f6e6c79207265717565737420696e20706173740000000000000000604082015260600190565b6020808252601d908201527f4741542070657263656e74616765206d757374206265203c2031303025000000604082015260600190565b6020808252818101527f43616e2774207265736f6c766520756e7265736f6c7665642072657175657374604082015260600190565b60208082526019908201527f43616c6c6564206d757374206265207265676973746572656400000000000000604082015260600190565b6020808252601d908201527f43616e6e6f7420636f6d6d697420696e2072657665616c207068617365000000604082015260600190565b6020808252601e908201527f4f6e6c792063616c6c2074686973206966206e6f74206d696772617465640000604082015260600190565b602080825260159082015274149bdd5b99081a185cc81b9bc81cdb985c1cda1bdd605a1b604082015260600190565b6020808252601d908201527f526574726965766520666f7220766f7465732073616d6520726f756e64000000604082015260600190565b6020808252601d908201527f4f6e6c7920736e617073686f7420696e2072657665616c207068617365000000604082015260600190565b6020808252601f908201527f43616c6c6572206d757374206265206d69677261746564206164647265737300604082015260600190565b9051815260200190565b600083825260406020830152611fb46040830184612fb3565b9283526020830191909152604082015260600190565b93845291516020840152516040830152606082015260800190565b6000808335601e1984360301811261384d578283fd5b8301803591506001600160401b03821115613866578283fd5b60200191503681900382131561387b57600080fd5b9250929050565b60008235607e19833603018112613897578182fd5b9190910192915050565b6040518181016001600160401b03811182821017156138bf57600080fd5b604052919050565b82818337506000910152565b6001600160a01b03811681146138e857600080fd5b5056fea26469706673582212206b193f330ddace7542c815826ef62055fb3147c0a05215121958f2a3daabb8d064736f6c634300060c0033",
  "immutableReferences": {},
  "sourceMap": "5202:26:49:-:0;217:689:55;5202:26:49;;217:689:55;5202:26:49;-1:-1:-1;;;5202:26:49;;5163:67;5192:37;5163:28;5202:26;5163:28;;;;;:67;;:::i;:::-;5126:104;;253:520:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;702:12:6;:28;;-1:-1:-1;;;;;;702:28:6;-1:-1:-1;;;;;702:28:6;;;;;575:12:55;;601:14;;629;;657:25;;696:12;;722:7;;702:28:6;;852:12:67;:10;:12::i;:::-;874:6;:18;;-1:-1:-1;;;;;;874:18:67;-1:-1:-1;;;;;874:18:67;;;;;;;;907:43;;874:18;;-1:-1:-1;874:18:67;-1:-1:-1;;907:43:67;;-1:-1:-1;;907:43:67;798:159;7400:29:49::1;7416:12;7400:10;:15;;;;;;:29;;;;:::i;:::-;7447:35;7480:1;7447:14;:32;;;;;;:35;;;;:::i;:::-;7439:78;;;;-1:-1:-1::0;;;7439:78:49::1;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1::0;7527:30:49;;:13:::1;:30:::0;7567;;:13:::1;:30:::0;7607:11:::1;:39:::0;;-1:-1:-1;;;;;7607:39:49;;::::1;-1:-1:-1::0;;;;;;7607:39:49;;::::1;;::::0;;;7656:6:::1;:33:::0;;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;7699:24:::1;:52:::0;-1:-1:-1;217:689:55;;-1:-1:-1;;;;;;;217:689:55;3363:265:68;3432:7;3615:4;3562:58;;;;;;;;:::i;:::-;;;;;;;;;;;;;3552:69;;;;;;3545:76;;3363:265;;;:::o;735:104:66:-;822:10;735:104;:::o;440:238:48:-;629:1;615:11;:15;607:24;;;;;;641:30;;440:238::o;4831:152:3:-;4911:4;4948:19;4965:1;4948:16;:19::i;:::-;:28;4934:10;;:42;;;-1:-1:-1;4831:152:3;;;;;:::o;722:135::-;782:15;;:::i;:::-;816:34;;;;;;;;825:24;436:6;825:1;:5;;;;;;:24;;;;:::i;:::-;816:34;;809:41;722:135;-1:-1:-1;;722:135:3:o;2119:459:70:-;2177:7;2418:6;2414:45;;-1:-1:-1;2447:1:70;2440:8;;2414:45;2481:5;;;2485:1;2481;:5;:1;2504:5;;;;;:10;2496:56;;;;-1:-1:-1;;;2496:56:70;;;;;;;:::i;:::-;2570:1;2119:459;-1:-1:-1;;;2119:459:70:o;217:689:55:-;;;;;;;;;;;;;;:::o;179:349:-1:-;;304:4;292:9;287:3;283:19;279:30;276:2;;;-1:-1;;312:12;276:2;4587;4581:9;304:4;4613:17;;-1:-1;;;;;4673:34;;4709:22;;;4670:62;4667:2;;;-1:-1;;4735:12;4667:2;4587;4754:22;613:13;;421:86;;-1:-1;331:29;270:258;-1:-1;270:258::o;676:1183::-;;;;;;;;943:3;931:9;922:7;918:23;914:33;911:2;;;-1:-1;;950:12;911:2;619:6;613:13;1002:74;;1131:89;1212:7;1113:2;1192:9;1188:22;1131:89;:::i;:::-;1121:99;;1275:89;1356:7;1257:2;1336:9;1332:22;1275:89;:::i;:::-;1265:99;;1401:2;1455:9;1451:22;613:13;1409:74;;1520:3;1575:9;1571:22;83:13;101:33;128:5;101:33;:::i;:::-;1640:3;1691:22;;83:13;1529:74;;-1:-1;101:33;83:13;101:33;:::i;:::-;1760:3;1811:22;;83:13;1649:74;;-1:-1;101:33;83:13;101:33;:::i;:::-;1769:74;;;;905:954;;;;;;;;;;:::o;3152:520::-;2322:66;2302:87;;2286:2;2408:12;;1955:58;;;;3635:12;;;3369:303::o;3679:416::-;3879:2;3893:47;;;2659:2;3864:18;;;4892:19;2695:32;4932:14;;;2675:53;2747:12;;;3850:245::o;4102:416::-;4302:2;4316:47;;;2998:2;4287:18;;;4892:19;3034:34;4932:14;;;3014:55;-1:-1;;;3089:12;;;3082:25;3126:12;;;4273:245::o;5579:117::-;-1:-1;;;;;5353:54;;5638:35;;5628:2;;5687:1;;5677:12;5628:2;5622:74;:::o;:::-;217:689:55;;;;;;",
  "deployedSourceMap": "217:689:55:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22294:3612:49;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;15784:557;;;;;;:::i;:::-;;:::i;:::-;;29405:219;;;;;;:::i;:::-;;:::i;356:27:6:-;;;:::i;:::-;;;;;;;:::i;5126:104:49:-;;;:::i;:::-;;;;;;;:::i;1071:115:6:-;;;;;;:::i;:::-;;:::i;4658:39:49:-;;;:::i;28553:117::-;;;;;;:::i;:::-;;:::i;1431:256:6:-;;;:::i;4475:40:49:-;;;:::i;4994:30::-;;;:::i;19729:369::-;;;;;;:::i;:::-;;:::i;16941:2096::-;;;;;;:::i;:::-;;:::i;28050:144::-;;;:::i;21468:237::-;;;;;;:::i;:::-;;:::i;8951:1278::-;;;;;;:::i;:::-;;:::i;20526:543::-;;;;;;:::i;:::-;;:::i;1656:145:67:-;;;:::i;3994:33:49:-;;;:::i;27756:135::-;;;:::i;:::-;;;;;;;:::i;26270:1277::-;;;:::i;:::-;;;;;;;:::i;28969:137::-;;;;;;:::i;:::-;;:::i;12240:974::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;29884:162::-;;;;;;:::i;:::-;;:::i;3649:39::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;1033:77:67:-;;;:::i;10684:215:49:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4742:30::-;;;:::i;4160:40::-;;;:::i;11361:404::-;;;;;;:::i;:::-;;:::i;14175:1106::-;;;;;;:::i;:::-;;:::i;779:125:55:-;;;:::i;:::-;;;;;;;:::i;1950:240:67:-;;;;;;:::i;:::-;;:::i;22294:3612:49:-;22449:45;;:::i;:::-;22510:15;;-1:-1:-1;;;;;22510:15:49;:29;22506:129;;22577:15;;-1:-1:-1;;;;;22577:15:49;22563:10;:29;22555:69;;;;-1:-1:-1;;;22555:69:49;;;;;;;:::i;:::-;;;;;;;;;22644:17;22664:16;:14;:16::i;:::-;22644:36;-1:-1:-1;22708:43:49;:10;22644:36;22708:32;:43::i;:::-;22698:7;:53;22690:81;;;;-1:-1:-1;;;22690:81:49;;;;;;;:::i;:::-;22782:19;22804:15;;;:6;:15;;;;;22858:27;;;;22846:39;;22895:42;;:::i;:::-;22940:98;;;;;;;;;;22973:11;;23011:16;;-1:-1:-1;;;22973:55:49;;;22940:98;;;;-1:-1:-1;;;;;22973:11:49;;:23;;:55;;22997:12;;22973:55;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;22940:98;;22895:143;-1:-1:-1;23151:46:49;;:::i;:::-;23200:86;;;;;;;;;;23233:11;;23259:16;;-1:-1:-1;;;23233:43:49;;;23200:86;;;;-1:-1:-1;;;;;23233:11:49;;:25;;:43;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;23200:86;;23151:135;-1:-1:-1;23296:45:49;;:::i;:::-;23344:23;;;;;;;;;:19;;;:23;;;:44;;23368:19;23344:23;:44::i;:::-;23296:92;;23483:22;;;;;;;;23503:1;23483:22;;;23462:43;;23521:9;23516:2166;23540:10;:17;23536:1;:21;23516:2166;;;23578:33;23614:62;23631:10;23642:1;23631:13;;;;;;;;;;;;;;:24;;;23657:10;23668:1;23657:13;;;;;;;;;;;;;;:18;;;23614:16;:62::i;:::-;23753:28;;;;23690:33;23726:56;;;:26;;;:56;;;;;23578:98;;-1:-1:-1;23874:39:49;;23866:81;;;;-1:-1:-1;;;23866:81:49;;;;;;;:::i;:::-;23962:48;23983:12;23997;23962:20;:48::i;:::-;-1:-1:-1;;;;;24029:42:49;;:28;:42;;;;;;;;;;:53;;;24025:1491;;24107:8;;;;24025:1491;24140:9;24136:1380;;;24278:10;24289:1;24278:13;;;;;;;;;;;;;;:24;;;24269:7;24255:12;-1:-1:-1;;;;;24238:88:49;;24304:10;24315:1;24304:13;;;;;;;;;;;;;;:18;;;24324:1;24238:88;;;;;;;:::i;:::-;;;;;;;;24136:1380;;;-1:-1:-1;;;;;24414:42:49;;:28;:42;;;;;;;;;;:53;;;;;24368:100;;:30;;;:45;:100::i;:::-;24347:1169;;;24756:33;;:::i;:::-;24792:144;24857:61;:12;:30;;:59;:61::i;:::-;24792:39;:15;24812:18;24792:19;:39::i;:::-;:43;;:144::i;:::-;24756:180;-1:-1:-1;24975:30:49;:18;24756:180;24975:22;:30::i;:::-;24954:51;;25186:10;25197:1;25186:13;;;;;;;;;;;;;;:24;;;25157:7;25123:12;-1:-1:-1;;;;;25085:220:49;;25232:10;25243:1;25232:13;;;;;;;;;;;;;;:18;;;25272:6;:15;;;25085:220;;;;;;;:::i;:::-;;;;;;;;24347:1169;;;;25453:10;25464:1;25453:13;;;;;;;;;;;;;;:24;;;25444:7;25430:12;-1:-1:-1;;;;;25413:88:49;;25479:10;25490:1;25479:13;;;;;;;;;;;;;;:18;;;25499:1;25413:88;;;;;;;:::i;:::-;;;;;;;;24347:1169;-1:-1:-1;;;;;25618:42:49;;:28;:42;;;;;;;;;;;:53;;25611:60;-1:-1:-1;23516:2166:49;23559:3;;23516:2166;;;-1:-1:-1;25738:35:49;:18;25771:1;25738:32;:35::i;:::-;25734:166;;;25797:11;;25828:27;;25797:59;;-1:-1:-1;;;25797:59:49;;-1:-1:-1;;;;;25797:11:49;;;;:16;;:59;;25814:12;;25828:27;25797:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25789:100;;;;-1:-1:-1;;;25789:100:49;;;;;;;:::i;:::-;22294:3612;;;;;;;;;;;:::o;15784:557::-;8345:15;;-1:-1:-1;;;;;8345:15:49;:29;8337:72;;;;-1:-1:-1;;;8337:72:49;;;;;;;:::i;:::-;15888:17:::1;15908:16;:14;:16::i;:::-;15888:36:::0;-1:-1:-1;15987:12:49::1;15942:41;:10;15973:9:::0;15942:30:::1;:41::i;:::-;:57;;;;;;;;;15934:99;;;;-1:-1:-1::0;;;15934:99:49::1;;;;;;;:::i;:::-;16181:10;-1:-1:-1::0;;;;;16132:59:49::1;:45;16146:19;;16167:9;;16132:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;16132:13:49::1;::::0;-1:-1:-1;;;16132:45:49:i:1;:::-;-1:-1:-1::0;;;;;16132:59:49::1;;16124:99;;;;-1:-1:-1::0;;;16124:99:49::1;;;;;;;:::i;:::-;16233:15;16251:43;:10;16284:9:::0;16251:32:::1;:43::i;:::-;16233:61;;16304:30;16326:7;16304:21;:30::i;:::-;8419:1;;15784:557:::0;;:::o;29405:219::-;1247:12:67;:10;:12::i;:::-;1237:6;;-1:-1:-1;;;;;1237:6:67;;;:22;;;1229:67;;;;-1:-1:-1;;;1229:67:67;;;;;;;:::i;:::-;29511:30:49::1;:16:::0;29539:1:::1;29511:27;:30::i;:::-;29503:72;;;;-1:-1:-1::0;;;29503:72:49::1;;;;;;;:::i;:::-;29585:32:::0;:13:::1;:32:::0;29405:219::o;356:27:6:-;;;-1:-1:-1;;;;;356:27:6;;:::o;5126:104:49:-;;;;:::o;1071:115:6:-;873:3;849:12;-1:-1:-1;;;;;849:12:6;841:37;;;;;;1145:12:::1;::::0;1139:40:::1;::::0;-1:-1:-1;;;1139:40:6;;-1:-1:-1;;;;;1145:12:6;;::::1;::::0;1139:34:::1;::::0;:40:::1;::::0;1174:4;;1139:40:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1071:115:::0;:::o;4658:39:49:-;;;;:::o;28553:117::-;1247:12:67;:10;:12::i;:::-;1237:6;;-1:-1:-1;;;;;1237:6:67;;;:22;;;1229:67;;;;-1:-1:-1;;;1229:67:67;;;;;;;:::i;:::-;28629:15:49::1;:34:::0;;-1:-1:-1;;;;;;28629:34:49::1;-1:-1:-1::0;;;;;28629:34:49;;;::::1;::::0;;;::::1;::::0;;28553:117::o;1431:256:6:-;1478:7;1501:12;;-1:-1:-1;;;;;1501:12:6;:28;1497:184;;1558:12;;;;;;;;-1:-1:-1;;;;;1558:12:6;-1:-1:-1;;;;;1552:34:6;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1545:43;;;;1497:184;-1:-1:-1;1626:3:6;1497:184;1431:256;:::o;4475:40:49:-;;;;:::o;4994:30::-;;;-1:-1:-1;;;;;4994:30:49;;:::o;19729:369::-;19896:34;19907:10;19919:4;19925;19896:10;:34::i;:::-;19941:15;19959:50;19992:16;:14;:16::i;:::-;19959:10;;:32;:50::i;:::-;19941:68;;20059:10;20050:7;20038:10;-1:-1:-1;;;;;20024:67:49;;20071:4;20077:13;20024:67;;;;;;;:::i;:::-;;;;;;;;19729:369;;;;;:::o;16941:2096::-;8345:15;;-1:-1:-1;;;;;8345:15:49;:29;8337:72;;;;-1:-1:-1;;;8337:72:49;;;;;;;:::i;:::-;17106:17:::1;17126:16;:14;:16::i;:::-;17106:36:::0;-1:-1:-1;17205:12:49::1;17160:41;:10;17191:9:::0;17160:30:::1;:41::i;:::-;:57;;;;;;;;;17152:99;;;;-1:-1:-1::0;;;17152:99:49::1;;;;;;;:::i;:::-;17402:15;17420:43;:10;17453:9:::0;17420:32:::1;:43::i;:::-;17402:61;;17474:33;17510:34;17527:10;17539:4;17510:16;:34::i;:::-;17554:33;17590:35:::0;;;:26:::1;::::0;::::1;:35;::::0;;;;;;;17704:10:::1;17675:40:::0;;;;;;;;;17894:21;;17474:70;;-1:-1:-1;17590:35:49;;17886:67:::1;;;;-1:-1:-1::0;;;17886:67:49::1;;;;;;;:::i;:::-;18067:14;:21;;;18011:5;18018:4;18024:10;18036:4;18042:7;18051:10;17994:68;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;17984:79;;;;;;:104;17963:179;;;;-1:-1:-1::0;;;17963:179:49::1;;;;;;;:::i;:::-;18245:15;::::0;;;:6:::1;:15;::::0;;;;:26;18237:65:::1;;;;-1:-1:-1::0;;;18237:65:49::1;;;;;;;:::i;:::-;18350:18;18371:15:::0;;;:6:::1;:15;::::0;;;;:26;18408:28;;;18626:34:::1;;:::i;:::-;18663:68;::::0;;::::1;::::0;::::1;::::0;;;;18683:11:::1;::::0;-1:-1:-1;;;18683:47:49;;;18663:68;;;-1:-1:-1;;;;;18683:11:49::1;:23;:47;18707:10;18719::::0;18683:47;;;::::1;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18663:68;;::::0;18626:105:::1;;18830:5;18819:17;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;18819:17:49;;::::1;::::0;;;;;;18809:28;;18819:17:::1;18809:28:::0;;::::1;::::0;18781:25:::1;::::0;;::::1;:56:::0;;;;18884:54:::1;::::0;:30;::::1;18923:5:::0;18930:7;18884:38:::1;:54::i;:::-;18988:10;18979:7;18967:10;-1:-1:-1::0;;;;;18954:76:49::1;;19000:4;19006:5;19013:7;:16;;;18954:76;;;;;;;;:::i;:::-;;;;;;;;8419:1;;;;;;;16941:2096:::0;;;;:::o;28050:144::-;28111:7;28137:50;28170:16;:14;:16::i;28137:50::-;28130:57;;28050:144;:::o;21468:237::-;21549:9;21544:155;21564:18;;;21544:155;;;21603:85;21614:7;;21622:1;21614:10;;;;;;;;;;;;:21;;;21637:7;;21645:1;21637:10;;;;;;;;;;;;:15;;;21654:7;;21662:1;21654:10;;;;;;;;;;;;:16;;;21672:7;;21680:1;21672:10;;;;;;;;;;;;:15;;;21603:10;:85::i;:::-;21584:3;;21544:155;;;;21468:237;;:::o;8951:1278::-;7934:15;;-1:-1:-1;;;;;7934:15:49;:29;7930:345;;8001:15;;-1:-1:-1;;;;;8001:15:49;7987:10;:29;7979:73;;;;-1:-1:-1;;;7979:73:49;;;;;;;:::i;:::-;7930:345;;;8112:6;;:58;;-1:-1:-1;;;8112:58:49;;8083:17;;-1:-1:-1;;;;;8112:6:49;;:31;;:58;;-1:-1:-1;;;8144:25:49;8112:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8193:41;;-1:-1:-1;;;8193:41:49;;8083:88;;-1:-1:-1;;;;;;8193:29:49;;;;;:41;;8223:10;;8193:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8185:79;;;;-1:-1:-1;;;8185:79:49;;;;;;;:::i;:::-;7930:345;;9060:17:::1;9080:16;:14;:16::i;:::-;9060:36;;9122:9;9114:4;:17;;9106:54;;;;-1:-1:-1::0;;;9106:54:49::1;;;;;;;:::i;:::-;9178:25;:23;:25::i;:::-;-1:-1:-1::0;;;;;9178:47:49::1;;9226:10;9178:59;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9170:102;;;;-1:-1:-1::0;;;9170:102:49::1;;;;;;;:::i;:::-;9283:22;9308:37;9328:10;9340:4;9308:19;:37::i;:::-;9355:33;9391:29:::0;;;:13:::1;:29;::::0;;;;9283:62;;-1:-1:-1;9455:43:49::1;:10;9488:9:::0;9455:32:::1;:43::i;:::-;9430:68;;9509:27;9539:47;9557:12;9571:14;9539:17;:47::i;:::-;9509:77:::0;-1:-1:-1;9618:26:49::1;9601:13;:43;;;;;;;;;9597:626;;;9806:19;9828:21;:14:::0;9847:1:::1;9828:18;:21::i;:::-;9896:194;::::0;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;;::::1;::::0;;;;;;;;;10048:20:::1;:27:::0;;9896:194;;;;;;-1:-1:-1;9864:29:49;;;:13:::1;:29:::0;;;;;;;:226;;;;;;::::1;::::0;;::::1;::::0;;;;;;;;::::1;::::0;;;;;;;;::::1;::::0;;;;10104:41;;;;::::1;::::0;;;;::::1;::::0;;;10164:48;9806:43;;-1:-1:-1;9939:10:49;;9806:43;;10164:48:::1;::::0;::::1;::::0;9973:4;;10164:48:::1;:::i;:::-;;;;;;;;9597:626;;8284:1;;;;;8951:1278:::0;;:::o;20526:543::-;20611:9;20606:457;20626:18;;;20606:457;;;20669:7;;20677:1;20669:10;;;;;;;;;;;;;;;;;;:::i;:::-;:24;;;;;;;:::i;:::-;:36;20665:388;;-1:-1:-1;20665:388:49;;20725:67;20736:7;;20744:1;20736:10;;;;;;;;;;;;;;;;;;:::i;:::-;:21;20759:7;;20767:1;20759:10;;;;;;;;;;;;;;;;;;:::i;:::-;:15;;;20776:7;;20784:1;20776:10;;;;;;;;;;;;;;;;;;:::i;:::-;:15;;;20725:10;:67::i;:::-;20665:388;;;20831:207;20879:7;;20887:1;20879:10;;;;;;;;;;;;;;;;;;:::i;:::-;:21;20922:7;;20930:1;20922:10;;;;;;;;;;;;;;;;;;:::i;:::-;:15;;;20959:7;;20967:1;20959:10;;;;;;;;;;;;;;;;;;:::i;:::-;:15;;;20996:7;;21004:1;20996:10;;;;;;;;;;;;;;;;;;:::i;:::-;:24;;;;;;;:::i;:::-;20831:207;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20831:26:49;;-1:-1:-1;;;20831:207:49:i;:::-;20646:3;;20606:457;;1656:145:67;1247:12;:10;:12::i;:::-;1237:6;;-1:-1:-1;;;;;1237:6:67;;;:22;;;1229:67;;;;-1:-1:-1;;;1229:67:67;;;;;;;:::i;:::-;1746:6:::1;::::0;1725:40:::1;::::0;1762:1:::1;::::0;-1:-1:-1;;;;;1746:6:67::1;::::0;1725:40:::1;::::0;1762:1;;1725:40:::1;1775:6;:19:::0;;-1:-1:-1;;;;;;1775:19:67::1;::::0;;1656:145::o;3994:33:49:-;;;;:::o;27756:135::-;27812:5;27836:48;27867:16;:14;:16::i;:::-;27836:10;;:30;:48::i;26270:1277::-;26332:23;26367:17;26387:16;:14;:16::i;:::-;26367:36;-1:-1:-1;26413:22:49;26438:43;:10;26367:36;26438:32;:43::i;:::-;26758:20;:27;26413:68;;-1:-1:-1;26700:34:49;;-1:-1:-1;;;;;26737:49:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;26700:86;;26796:21;26837:9;26832:477;26856:20;:27;26852:31;;26832:477;;;26904:33;26940:13;:38;26954:20;26975:1;26954:23;;;;;;;;;;;;;;;;26940:38;;;;;;;;;;;26904:74;;27047:20;26996:71;;;;;;;;:47;27014:12;27028:14;26996:17;:47::i;:::-;:71;;;;;;;;;26992:307;;;27115:136;;;;;;;;27164:12;:23;;;27115:136;;;;27215:12;:17;;;27115:136;;;27087:10;27098:13;27087:25;;;;;;;;;;;;;;;;;:164;27269:15;;;;;26992:307;-1:-1:-1;26885:3:49;;26832:477;;;;27319:39;27382:13;-1:-1:-1;;;;;27361:35:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;27319:77;;27411:9;27406:103;27430:13;27426:1;:17;27406:103;;;27485:10;27496:1;27485:13;;;;;;;;;;;;;;27464:15;27480:1;27464:18;;;;;;;;;;;;;;;;;:34;27445:3;;27406:103;;;-1:-1:-1;27525:15:49;-1:-1:-1;;;;;26270:1277:49;:::o;28969:137::-;1247:12:67;:10;:12::i;:::-;1237:6;;-1:-1:-1;;;;;1237:6:67;;;:22;;;1229:67;;;;-1:-1:-1;;;1229:67:67;;;;;;;:::i;:::-;29067:32:49;:13:::1;:32:::0;28969:137::o;12240:974::-;12328:21;12361:35;12418:8;:15;-1:-1:-1;;;;;12399:35:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;12361:73;;12444:22;12469:50;12502:16;:14;:16::i;12469:50::-;12444:75;;12534:9;12529:649;12553:8;:15;12549:1;:19;12529:649;;;12589:33;12625:58;12642:8;12651:1;12642:11;;;;;;;;;;;;;;:22;;;12666:8;12675:1;12666:11;;;;;;;12625:58;12589:94;;12698:20;12721:47;12739:12;12753:14;12721:17;:47::i;:::-;12698:70;-1:-1:-1;12916:20:49;12906:6;:30;;;;;;;;;12902:220;;;12991:14;12956:13;12970:1;12956:16;;;;;;;;;;;;;;:32;;:49;;;;;12902:220;;;13079:12;:28;;;13044:13;13058:1;13044:16;;;;;;;;;;;;;;:32;;:63;;;;;12902:220;13161:6;13135:13;13149:1;13135:16;;;;;;;;;;;;;;:23;;:32;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;12570:3:49;;12529:649;;;-1:-1:-1;13194:13:49;;-1:-1:-1;;12240:974:49;;;;:::o;29884:162::-;1247:12:67;:10;:12::i;:::-;1237:6;;-1:-1:-1;;;;;1237:6:67;;;:22;;;1229:67;;;;-1:-1:-1;;;1229:67:67;;;;;;;:::i;:::-;29985:24:49::1;:54:::0;29884:162::o;3649:39::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1033:77:67:-;1097:6;;-1:-1:-1;;;;;1097:6:67;1033:77;:::o;10684:215:49:-;7934:15;;10793:4;;-1:-1:-1;;;;;7934:15:49;:29;7930:345;;8001:15;;-1:-1:-1;;;;;8001:15:49;7987:10;:29;7979:73;;;;-1:-1:-1;;;7979:73:49;;;;;;;:::i;:::-;7930:345;;;8112:6;;:58;;-1:-1:-1;;;8112:58:49;;8083:17;;-1:-1:-1;;;;;8112:6:49;;:31;;:58;;-1:-1:-1;;;8144:25:49;8112:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8193:41;;-1:-1:-1;;;8193:41:49;;8083:88;;-1:-1:-1;;;;;;8193:29:49;;;;;:41;;8223:10;;8193:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8185:79;;;;-1:-1:-1;;;8185:79:49;;;;;;;:::i;:::-;7930:345;;10810:14:::1;10832:34;10849:10;10861:4;10832:16;:34::i;:::-;-1:-1:-1::0;10809:57:49;;-1:-1:-1;;;8284:1:49::1;10684:215:::0;;;;:::o;4742:30::-;;;-1:-1:-1;;;;;4742:30:49;;:::o;4160:40::-;;;;:::o;11361:404::-;7934:15;;11510:6;;-1:-1:-1;;;;;7934:15:49;:29;7930:345;;8001:15;;-1:-1:-1;;;;;8001:15:49;7987:10;:29;7979:73;;;;-1:-1:-1;;;7979:73:49;;;;;;;:::i;:::-;7930:345;;;8112:6;;:58;;-1:-1:-1;;;8112:58:49;;8083:17;;-1:-1:-1;;;;;8112:6:49;;:31;;:58;;-1:-1:-1;;;8144:25:49;8112:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8193:41;;-1:-1:-1;;;8193:41:49;;8083:88;;-1:-1:-1;;;;;;8193:29:49;;;;;:41;;8223:10;;8193:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8185:79;;;;-1:-1:-1;;;8185:79:49;;;;;;;:::i;:::-;7930:345;;11533:14:::1;11549:12:::0;11563:21:::1;11588:34;11605:10;11617:4;11588:16;:34::i;:::-;11532:90;;;;;;11717:9;11728:7;11709:27;;;;;-1:-1:-1::0;;;11709:27:49::1;;;;;;;;:::i;14175:1106::-:0;8345:15;;-1:-1:-1;;;;;8345:15:49;:29;8337:72;;;;-1:-1:-1;;;8337:72:49;;;;;;;:::i;:::-;14327:18;14319:52:::1;;;;-1:-1:-1::0;;;14319:52:49::1;;;;;;;:::i;:::-;14446:17;14466:16;:14;:16::i;:::-;14446:36:::0;-1:-1:-1;14545:12:49::1;14500:41;:10;14531:9:::0;14500:30:::1;:41::i;:::-;:57;;;;;;;;;14492:99;;;;-1:-1:-1::0;;;14492:99:49::1;;;;;;;:::i;:::-;14684:22;14709:43;:10;14742:9:::0;14709:32:::1;:43::i;:::-;14684:68;;14763:33;14799:34;14816:10;14828:4;14799:16;:34::i;:::-;14763:70:::0;-1:-1:-1;14915:20:49::1;14864:47;14882:12;14896:14;14864:17;:47::i;:::-;:71;;;;;;;;;14843:148;;;;-1:-1:-1::0;;;14843:148:49::1;;;;;;;:::i;:::-;15002:28;::::0;::::1;:45:::0;;;15057:33:::1;15093:42:::0;;;:26:::1;::::0;::::1;:42;::::0;;;;;;;15174:10:::1;15145:40:::0;;;;;;;;;;;:54;;;15215:59;15257:10;;15033:14;;15215:59:::1;::::0;::::1;::::0;15269:4;;15215:59:::1;:::i;:::-;;;;;;;;8419:1;;;;14175:1106:::0;;;:::o;779:125:55:-;842:16;877:20;870:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;779:125;:::o;1950:240:67:-;1247:12;:10;:12::i;:::-;1237:6;;-1:-1:-1;;;;;1237:6:67;;;:22;;;1229:67;;;;-1:-1:-1;;;1229:67:67;;;;;;;:::i;:::-;-1:-1:-1;;;;;2038:22:67;::::1;2030:73;;;;-1:-1:-1::0;;;2030:73:67::1;;;;;;;:::i;:::-;2139:6;::::0;2118:38:::1;::::0;-1:-1:-1;;;;;2118:38:67;;::::1;::::0;2139:6:::1;::::0;2118:38:::1;::::0;2139:6:::1;::::0;2118:38:::1;2166:6;:17:::0;;-1:-1:-1;;;;;;2166:17:67::1;-1:-1:-1::0;;;;;2166:17:67;;;::::1;::::0;;;::::1;::::0;;1950:240::o;3363:265:68:-;3432:7;3615:4;3562:58;;;;;;;;:::i;:::-;;;;;;;;;;;;;3552:69;;;;;;3545:76;;3363:265;;;:::o;440:238:48:-;629:1;615:11;:15;607:24;;;;;;641:30;;440:238::o;4831:152:3:-;4911:4;4948:19;4965:1;4948:16;:19::i;:::-;:28;4934:10;;:42;;;-1:-1:-1;4831:152:3;;;;:::o;2119:459:70:-;2177:7;2418:6;2414:45;;-1:-1:-1;2447:1:70;2440:8;;2414:45;2481:5;;;2485:1;2481;:5;:1;2504:5;;;;;:10;2496:56;;;;-1:-1:-1;;;2496:56:70;;;;;;;:::i;:::-;2570:1;2119:459;-1:-1:-1;;;2119:459:70:o;1269:262:48:-;1363:7;;1404:75;1433:44;1425:53;1404:16;;;:20;:75::i;:::-;1382:97;-1:-1:-1;1496:28:48;:11;1382:97;1496:15;:28::i;:::-;1489:35;1269:262;-1:-1:-1;;;;1269:262:48:o;7876:650:3:-;7950:15;;:::i;:::-;8463:56;;;;;;;;;8487:10;;8472;;8463:56;;436:6;;8472:26;;:14;:26::i;:::-;:46;;;;;;8463:56;;8456:63;7876:650;-1:-1:-1;;;7876:650:3:o;31573:180:49:-;31655:20;31694:13;:52;31708:37;31728:10;31740:4;31708:19;:37::i;:::-;31694:52;;;;;;;;;;;31687:59;;31573:180;;;;:::o;32829:980::-;32951:18;;;;-1:-1:-1;;32951:30:49;32947:67;;;32997:7;;32947:67;33024:15;33041:20;33065:112;33126:41;33138:12;:28;;;33126:11;:41::i;:::-;33065:30;;;;:47;:112::i;:::-;33023:154;;;;33195:10;33187:55;;;;-1:-1:-1;;;33187:55:49;;;;;;;:::i;:::-;33345:20;:27;;-1:-1:-1;;33345:31:49;;;33325:17;;33426:13;;33325:17;;33345:31;;33440;;;;;;;;;;;;;;33426:46;;;;;;;;;;;33386:86;;33507:12;:18;;;33482:16;:22;;:43;;;;33578:20;33599:9;33578:31;;;;;;;;;;;;;;;;33535:20;33556:12;:18;;;33535:40;;;;;;;;;;;;;;;;;:74;33619:20;:26;;;;;;;;;;;;;;;;-1:-1:-1;;33619:26:49;;;;;;;;;;;;;33656:18;;;:29;33744:23;;33714:28;;;;33619:26;33769:17;;;33700:102;;;;;;33788:13;;33700:102;:::i;:::-;;;;;;;;32829:980;;;;;;;:::o;3605:165:45:-;3689:4;3745;:16;;;3734:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;3724:39;;;;;;3712:8;:51;3705:58;;3605:165;;;;:::o;4153:168::-;4233:26;;:::i;:::-;-1:-1:-1;4297:16:45;;;;4278:18;:36;;;;;;;;;;;;4271:43;;;;;;;;;;;;4153:168::o;10292:634:3:-;10366:15;;:::i;:::-;10860:59;;;;;;;;;10907:10;;10869;;10860:59;;10869:49;;:33;;436:6;10869:14;:33::i;:::-;:37;;:49::i;:::-;10860:59;;10853:66;10292:634;-1:-1:-1;;;10292:634:3:o;6123:151::-;6197:15;;:::i;:::-;6231:36;;;;;;;;;6255:10;;6240;;6231:36;;6240:26;;:10;:14;:26::i;1938:147::-;2014:4;2050:19;2067:1;2050:16;:19::i;:::-;:28;2037:10;;:41;;-1:-1:-1;1938:147:3;;;;:::o;2362:411:48:-;2454:21;2660:92;2706:44;2676:16;;2660:33;;:11;;:15;:33::i;:::-;:37;;:92::i;:::-;2621:145;;;;;;;1031:2068:68;1109:7;1170:9;:16;1190:2;1170:22;1166:94;;1208:41;;-1:-1:-1;;;1208:41:68;;;;;;;:::i;1166:94::-;1610:4;1595:20;;1589:27;1655:4;1640:20;;1634:27;1708:4;1693:20;;1687:27;1326:9;1679:36;2626:66;2613:79;;2609:154;;;2708:44;;-1:-1:-1;;;2708:44:68;;;;;;;:::i;2609:154::-;2777:1;:7;;2782:2;2777:7;;:18;;;;;2788:1;:7;;2793:2;2788:7;;2777:18;2773:93;;;2811:44;;-1:-1:-1;;;2811:44:68;;;;;;;:::i;2773:93::-;2960:14;2977:24;2987:4;2993:1;2996;2999;2977:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2977:24:68;;-1:-1:-1;;2977:24:68;;;-1:-1:-1;;;;;;;3019:20:68;;3011:57;;;;-1:-1:-1;;;3011:57:68;;;;;;;:::i;:::-;3086:6;1031:2068;-1:-1:-1;;;;;;1031:2068:68:o;31922:901:49:-;31988:19;32010:15;;;:6;:15;;;;;32123:16;;32119:698;;32238:11;;;;;;;;;-1:-1:-1;;;;;32238:11:49;-1:-1:-1;;;;;32238:20:49;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;32219:41;;:16;32357:15;;;:6;:15;;;;;;;;32389:13;32357:45;:29;;;:45;32525:13;32493:45;:29;;:45;32768:24;;32707:99;;:39;:10;32364:7;32707:30;:39::i;:::-;:43;;:99::i;:::-;32667:15;;;;:6;:15;;;;;:37;;:139;31922:901;;:::o;735:104:66:-;822:10;735:104;:::o;3874:144:3:-;3947:4;3983:19;4000:1;3983:16;:19::i;:::-;:28;3970:10;;:41;;-1:-1:-1;3874:144:3;;;;:::o;1261:507:45:-;1423:19;;;;;;;;;:15;;;:19;;;:33;;1443:12;1423:19;:33::i;:::-;1405:51;:15;;;:51;;1498:29;;;;;;;;;;;;:33;;;;;;;;;;;;:47;;1532:12;1498:33;:47::i;:::-;1466:18;:29;;;;;;;;;;:79;;;;1585:16;;;;1572:29;;;;;:126;;-1:-1:-1;1680:16:45;;;;1661:18;:36;;;;;;;;;;;1617:81;;;;;;;;;;;:29;;;;;;;;;;:43;;;;;;;;;;;:81;;:43;:81::i;:::-;1555:207;;;-1:-1:-1;1723:16:45;;;;;:28;1261:507::o;35533:231:49:-;35687:6;;:69;;-1:-1:-1;;;35687:69:49;;35590:49;;-1:-1:-1;;;;;35687:6:49;;:31;;:69;;-1:-1:-1;;;35719:36:49;35687:69;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;31759:157::-;31844:7;31891:10;31903:4;31880:28;;;;;;;;;:::i;:::-;;;;;;;;;;;;;31870:39;;;;;;31863:46;;31759:157;;;;:::o;34614:913::-;34746:13;34779:12;:28;;;34811:1;34779:33;34775:746;;;-1:-1:-1;34835:26:49;34828:33;;34775:746;34913:14;34882:12;:28;;;:45;34878:643;;;35006:28;;;;34943:33;34979:56;;;:26;;;:56;;;;;;35071:120;;35136:41;;:11;:41::i;:::-;35071:30;;;;:47;:120::i;:::-;35049:142;;;35212:10;:58;;35250:20;35212:58;;;35225:22;35212:58;35205:65;;;;;;34878:643;35323:14;35291:12;:28;;;:46;35287:234;;;-1:-1:-1;35360:20:49;35353:27;;35287:234;-1:-1:-1;35490:20:49;35483:27;;834:176:70;892:7;923:5;;;946:6;;;;938:46;;;;-1:-1:-1;;;938:46:70;;;;;;;:::i;30418:1149:49:-;30537:4;30555:6;30575:13;30613:33;30649:34;30666:10;30678:4;30649:16;:34::i;:::-;30613:70;;30693:22;30718:50;30751:16;:14;:16::i;30718:50::-;30693:75;;30779:27;30809:47;30827:12;30841:14;30809:17;:47::i;:::-;30779:77;-1:-1:-1;30887:20:49;30870:13;:37;;;;;;;;;30866:695;;;30931:5;30938:1;30923:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;30866:695;31012:22;30995:13;:39;;;;;;;;;30991:570;;;31113:28;;;;31050:33;31086:56;;;:26;;;:56;;;;;;31183:120;;31248:41;;:11;:41::i;31183:120::-;31317:32;;;;;;;;;-1:-1:-1;31317:32:49;;31325:4;;-1:-1:-1;31156:147:49;;-1:-1:-1;31317:32:49;-1:-1:-1;31317:32:49;;-1:-1:-1;;;;;;31317:32:49;30991:570;31387:20;31370:13;:37;;;;;;;;;31366:195;;;31431:5;31438:1;31423:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;31366:195;31512:5;31519:1;31504:46;;;;;;;;;;;;;;;;;;;;;;;;;;30418:1149;;;;;;:::o;722:135:3:-;782:15;;:::i;:::-;816:34;;;;;;;;;;825:24;:1;436:6;825:5;:24::i;:::-;816:34;;809:41;722:135;-1:-1:-1;;722:135:3:o;3033:130:70:-;3091:7;3117:39;3121:1;3124;3117:39;;;;;;;;;;;;;;;;;:3;:39::i;33815:793:49:-;33875:26;;:::i;:::-;33913:18;33934:15;;;:6;:15;;;;;:26;33974:15;33970:159;;-1:-1:-1;;34089:29:49;;;;;;;;;-1:-1:-1;;34089:29:49;;34082:36;;33970:159;34316:44;;:::i;:::-;34363:58;;;;;;;;;;34383:11;;-1:-1:-1;;;34383:37:49;;;34363:58;;;-1:-1:-1;;;;;34383:11:49;:25;:37;34409:10;34383:37;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;34363:58;;34571:15;;;;:6;:15;;;;;;;;;34549:52;;;;;;;;34571:29;;34549:52;;;34316:105;;-1:-1:-1;34549:52:49;;34316:105;;34549:21;:52::i;2535:699:45:-;2672:15;2689:12;2717:40;;:::i;:::-;2760;2796:3;2760:31;2788:2;2760:27;:31::i;:::-;:35;;:40::i;:::-;2828:29;;;;;;;;;:15;;;:29;;;2717:83;;-1:-1:-1;2828:47:45;;2858:16;2828:29;:47::i;:::-;:149;;;;-1:-1:-1;2891:57:45;;;;;;;;;2932:15;;;2891:57;;;2910:16;;;;-1:-1:-1;2891:36:45;;;;;;;;;:40;;;;;;;;;;;;:86;;2963:13;;2891:57;;:40;;:57::i;:::-;:71;;:86::i;:::-;2811:417;;;3126:4;3113:17;;3152:4;:16;;;3144:24;;2811:417;;;3212:5;3199:18;;2811:417;2535:699;;;;;;:::o;4420:128:70:-;4478:7;4504:37;4508:1;4511;4504:37;;;;;;;;;;;;;;;;;:3;:37::i;1796:259:48:-;1884:7;;1925:75;1954:44;1946:53;;1925:75;1903:97;-1:-1:-1;2017:31:48;2033:14;:7;2045:1;2033:11;:14::i;:::-;2017:11;;:15;:31::i;1632:137:3:-;1752:10;1739;;:23;;1632:137::o;3638:338:70:-;3724:7;3824:12;3817:5;3809:28;;;;-1:-1:-1;;;3809:28:70;;;;;;;;:::i;:::-;;3847:9;3863:1;3859;:5;;;;;;;3638:338;-1:-1:-1;;;;;3638:338:70:o;11224:134:3:-;11290:15;;:::i;:::-;11324:27;;;;;;;;;11333:10;;11324:27;;11333:17;;11348:1;11333:14;:17::i;5012:163:70:-;5098:7;5133:12;5125:6;5117:29;;;;-1:-1:-1;;;5117:29:70;;;;;;;;:::i;:::-;;5167:1;5163;:5;;;;;;;5012:163;-1:-1:-1;;;;5012:163:70:o;-1:-1:-1:-;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;766:806::-;;916:3;909:4;901:6;897:17;893:27;883:2;;-1:-1;;924:12;883:2;971:6;958:20;-1:-1;;;;;51700:6;51697:30;51694:2;;;-1:-1;;51730:12;51694:2;51775:4;993:113;51775:4;;51767:6;51763:17;51828:15;993:113;:::i;:::-;1134:21;;;984:122;-1:-1;1191:14;;;1166:17;;;1292:4;1280:17;;;1271:27;;;;1268:36;-1:-1;1265:2;;;1317:1;;1307:12;1265:2;1342:1;1327:239;1352:6;1349:1;1346:13;1327:239;;;1432:70;1498:3;1486:10;1432:70;:::i;:::-;1420:83;;1517:14;;;;1545;;;;1374:1;1367:9;1327:239;;;1331:14;;;;;;876:696;;;;:::o;3265:481::-;;3387:4;3375:9;3370:3;3366:19;3362:30;3359:2;;;-1:-1;;3395:12;3359:2;3423:20;3387:4;3423:20;:::i;:::-;3414:29;;2222:6;2209:20;3513:16;3506:75;3642:2;3700:9;3696:22;4187:20;3642:2;3661:5;3657:16;3650:75;3353:393;;;;:::o;4398:241::-;;4502:2;4490:9;4481:7;4477:23;4473:32;4470:2;;;-1:-1;;4508:12;4470:2;85:6;72:20;97:33;124:5;97:33;:::i;4646:263::-;;4761:2;4749:9;4740:7;4736:23;4732:32;4729:2;;;-1:-1;;4767:12;4729:2;226:6;220:13;238:33;265:5;238:33;:::i;4916:693::-;;;;5112:2;5100:9;5091:7;5087:23;5083:32;5080:2;;;-1:-1;;5118:12;5080:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;5170:63;-1:-1;5270:2;5309:22;;4187:20;;-1:-1;5406:2;5391:18;;5378:32;-1:-1;;;;;5419:30;;5416:2;;;-1:-1;;5452:12;5416:2;5482:111;5585:7;5576:6;5565:9;5561:22;5482:111;:::i;:::-;5472:121;;;5074:535;;;;;:::o;5616:459::-;;;5786:2;5774:9;5765:7;5761:23;5757:32;5754:2;;;-1:-1;;5792:12;5754:2;5850:17;5837:31;-1:-1;;;;;5888:18;5880:6;5877:30;5874:2;;;-1:-1;;5910:12;5874:2;6042:6;6031:9;6027:22;;;488:3;481:4;473:6;469:17;465:27;455:2;;-1:-1;;496:12;455:2;539:6;526:20;5888:18;558:6;555:30;552:2;;;-1:-1;;588:12;552:2;683:3;5786:2;;667:6;663:17;624:6;649:32;;646:41;643:2;;;-1:-1;;690:12;643:2;5786;620:17;;;;;5930:129;;-1:-1;5748:327;;-1:-1;;;;5748:327::o;6082:443::-;;6244:2;6232:9;6223:7;6219:23;6215:32;6212:2;;;-1:-1;;6250:12;6212:2;6308:17;6295:31;-1:-1;;;;;6338:6;6335:30;6332:2;;;-1:-1;;6368:12;6332:2;6398:111;6501:7;6492:6;6481:9;6477:22;6398:111;:::i;6532:451::-;;;6698:2;6686:9;6677:7;6673:23;6669:32;6666:2;;;-1:-1;;6704:12;6666:2;6762:17;6749:31;-1:-1;;;;;6800:18;6792:6;6789:30;6786:2;;;-1:-1;;6822:12;6786:2;6950:6;6939:9;6935:22;;;1777:3;1770:4;1762:6;1758:17;1754:27;1744:2;;-1:-1;;1785:12;1744:2;1828:6;1815:20;6800:18;1847:6;1844:30;1841:2;;;-1:-1;;1877:12;1841:2;1972:3;6698:2;1964:4;1956:6;1952:17;1913:6;1938:32;;1935:41;1932:2;;;-1:-1;;1979:12;6990:257;;7102:2;7090:9;7081:7;7077:23;7073:32;7070:2;;;-1:-1;;7108:12;7070:2;2088:6;2082:13;58655:5;55280:13;55273:21;58633:5;58630:32;58620:2;;-1:-1;;58666:12;7254:366;;;7375:2;7363:9;7354:7;7350:23;7346:32;7343:2;;;-1:-1;;7381:12;7343:2;-1:-1;;2209:20;;;7533:2;7572:22;;;4187:20;;-1:-1;7337:283::o;7627:491::-;;;;7765:2;7753:9;7744:7;7740:23;7736:32;7733:2;;;-1:-1;;7771:12;7733:2;-1:-1;;2209:20;;;7923:2;7962:22;;4187:20;;-1:-1;8031:2;8070:22;;;2209:20;;7727:391;-1:-1;7727:391::o;8125:721::-;;;;;8289:3;8277:9;8268:7;8264:23;8260:33;8257:2;;;-1:-1;;8296:12;8257:2;2222:6;2209:20;8348:63;;8448:2;8491:9;8487:22;4187:20;8456:63;;8556:2;8599:9;8595:22;2209:20;8564:63;;8692:2;8681:9;8677:18;8664:32;-1:-1;;;;;8716:18;8708:6;8705:30;8702:2;;;-1:-1;;8738:12;8702:2;8813:6;8802:9;8798:22;;;2739:3;2732:4;2724:6;2720:17;2716:27;2706:2;;-1:-1;;2747:12;2706:2;2794:6;2781:20;8716:18;51995:6;51992:30;51989:2;;;-1:-1;;52025:12;51989:2;2816:64;52098:9;52079:17;;-1:-1;;52075:33;8448:2;52156:15;2816:64;:::i;:::-;2807:73;;2900:6;2893:5;2886:21;3004:3;8448:2;2995:6;2928;2986:16;;2983:25;2980:2;;;-1:-1;;3011:12;2980:2;3031:41;3065:6;8448:2;2962:5;2958:16;8448:2;2928:6;2924:17;3031:41;:::i;:::-;-1:-1;8251:595;;;;-1:-1;8251:595;;-1:-1;;;8251:595::o;8853:613::-;;;;;9006:3;8994:9;8985:7;8981:23;8977:33;8974:2;;;-1:-1;;9013:12;8974:2;-1:-1;;2209:20;;;9165:2;9204:22;;4187:20;;-1:-1;9273:2;9311:22;;3152:20;;9380:2;9418:22;3152:20;;-1:-1;8968:498;-1:-1;8968:498::o;9473:365::-;;;9596:2;9584:9;9575:7;9571:23;9567:32;9564:2;;;-1:-1;;9602:12;9564:2;9660:17;9647:31;-1:-1;;;;;9698:18;9690:6;9687:30;9684:2;;;-1:-1;;9720:12;9684:2;9805:6;9794:9;9790:22;;;2407:3;2400:4;2392:6;2388:17;2384:27;2374:2;;-1:-1;;2415:12;2374:2;2458:6;2445:20;9698:18;2477:6;2474:30;2471:2;;;-1:-1;;2507:12;2471:2;2602:3;9596:2;2582:17;2543:6;2568:32;;2565:41;2562:2;;;-1:-1;;2609:12;9845:291;;9974:2;9962:9;9953:7;9949:23;9945:32;9942:2;;;-1:-1;;9980:12;9942:2;3936:20;9974:2;3936:20;:::i;:::-;4187;;4017:75;;-1:-1;4024:16;9936:200;-1:-1;9936:200::o;10143:241::-;;10247:2;10235:9;10226:7;10222:23;10218:32;10215:2;;;-1:-1;;10253:12;10215:2;-1:-1;4187:20;;10209:175;-1:-1;10209:175::o;10391:263::-;;10506:2;10494:9;10485:7;10481:23;10477:32;10474:2;;;-1:-1;;10512:12;10474:2;-1:-1;4335:13;;10468:186;-1:-1;10468:186::o;15220:343::-;;15362:5;52829:12;54019:6;54014:3;54007:19;-1:-1;57365:101;57379:6;57376:1;57373:13;57365:101;;;54056:4;57446:11;;;;;57440:18;57427:11;;;;;57420:39;57394:10;57365:101;;;57481:6;57478:1;57475:13;57472:2;;;-1:-1;54056:4;57537:6;54051:3;57528:16;;57521:27;57472:2;-1:-1;52098:9;58085:14;-1:-1;;58081:28;15519:39;;;;54056:4;15519:39;;15310:253;-1:-1;;15310:253::o;28880:972::-;14892:37;;;29255:2;29246:12;;14892:37;;;;58196:2;58192:14;;;;-1:-1;;58192:14;29355:12;;;11717:74;29482:12;;;14892:37;29593:12;;;14892:37;29704:12;;;14892:37;29815:12;;;29148:704::o;29859:520::-;17798:66;17778:87;;17762:2;17884:12;;14892:37;;;;30342:12;;;30076:303::o;30386:222::-;-1:-1;;;;;55811:54;;;;11874:37;;30513:2;30498:18;;30484:124::o;30860:349::-;-1:-1;;;;;55811:54;;;;11542:58;;31195:2;31180:18;;14892:37;31023:2;31008:18;;30994:215::o;31556:370::-;31733:2;31747:47;;;52829:12;;31718:18;;;54007:19;;;31556:370;;31733:2;52303:14;;;;54047;;;;31556:370;12362:260;12387:6;12384:1;12381:13;12362:260;;;12448:13;;14892:37;;53568:14;;;;10815;;;;12409:1;12402:9;12362:260;;;-1:-1;31800:116;;31704:222;-1:-1;;;;;;31704:222::o;31933:502::-;32176:2;32190:47;;;52829:12;;32161:18;;;54007:19;;;31933:502;;32176:2;54047:14;;;;;;52303;;;31933:502;13316:359;13341:6;13338:1;13335:13;13316:359;;;13402:13;;27129:23;;14892:37;;27289:16;;27283:23;27360:14;;;14892:37;11129:14;;;;53568;;;;13363:1;13356:9;13316:359;;;-1:-1;32243:182;;32147:288;-1:-1;;;;;;;32147:288::o;32442:494::-;32681:2;32695:47;;;52829:12;;32666:18;;;54007:19;;;32442:494;;32681:2;54047:14;;;;;;52303;;;32442:494;14337:353;14362:6;14359:1;14356:13;14337:353;;;14429:6;14423:13;27685:16;27679:23;58421:1;58414:5;58411:12;58401:2;;58427:9;58401:2;15974:67;;27867:16;;27861:23;27938:14;;;14892:37;11435:14;;;;53568;;;;14384:1;14377:9;14337:353;;32943:210;55280:13;;55273:21;14785:34;;33064:2;33049:18;;33035:118::o;33160:222::-;14892:37;;;33287:2;33272:18;;33258:124::o;33389:333::-;14892:37;;;33708:2;33693:18;;14892:37;33544:2;33529:18;;33515:207::o;33729:548::-;14892:37;;;56027:4;56016:16;;;;34097:2;34082:18;;28833:35;34180:2;34165:18;;14892:37;34263:2;34248:18;;14892:37;33936:3;33921:19;;33907:370::o;34555:240::-;34691:2;34676:18;;58304:1;58294:12;;58284:2;;58310:9;58284:2;15825:59;;;34662:133;:::o;35027:310::-;;35174:2;35195:17;35188:47;35249:78;35174:2;35163:9;35159:18;35313:6;35249:78;:::i;35344:416::-;35544:2;35558:47;;;17053:2;35529:18;;;54007:19;17089:26;54047:14;;;17069:47;17135:12;;;35515:245::o;35767:416::-;35967:2;35981:47;;;17386:2;35952:18;;;54007:19;17422:33;54047:14;;;17402:54;17475:12;;;35938:245::o;36190:416::-;36390:2;36404:47;;;18135:2;36375:18;;;54007:19;18171:30;54047:14;;;18151:51;18221:12;;;36361:245::o;36613:416::-;36813:2;36827:47;;;18472:2;36798:18;;;54007:19;18508:34;54047:14;;;18488:55;-1:-1;;;18563:12;;;18556:30;18605:12;;;36784:245::o;37036:416::-;37236:2;37250:47;;;18856:2;37221:18;;;54007:19;18892:29;54047:14;;;18872:50;18941:12;;;37207:245::o;37459:416::-;37659:2;37673:47;;;19192:2;37644:18;;;54007:19;19228:31;54047:14;;;19208:52;19279:12;;;37630:245::o;37882:416::-;38082:2;38096:47;;;19530:2;38067:18;;;54007:19;19566:34;54047:14;;;19546:55;-1:-1;;;19621:12;;;19614:26;19659:12;;;38053:245::o;38305:416::-;38505:2;38519:47;;;19910:2;38490:18;;;54007:19;19946:29;54047:14;;;19926:50;19995:12;;;38476:245::o;38728:416::-;38928:2;38942:47;;;20246:2;38913:18;;;54007:19;-1:-1;;;54047:14;;;20262:38;20319:12;;;38899:245::o;39151:416::-;39351:2;39365:47;;;20570:2;39336:18;;;54007:19;20606:34;54047:14;;;20586:55;-1:-1;;;20661:12;;;20654:26;20699:12;;;39322:245::o;39574:416::-;39774:2;39788:47;;;20950:2;39759:18;;;54007:19;20986:32;54047:14;;;20966:53;21038:12;;;39745:245::o;39997:416::-;40197:2;40211:47;;;21289:2;40182:18;;;54007:19;21325:34;54047:14;;;21305:55;-1:-1;;;21380:12;;;21373:25;21417:12;;;40168:245::o;40420:416::-;40620:2;40634:47;;;40605:18;;;54007:19;21704:34;54047:14;;;21684:55;21758:12;;;40591:245::o;40843:416::-;41043:2;41057:47;;;22009:2;41028:18;;;54007:19;22045:32;54047:14;;;22025:53;22097:12;;;41014:245::o;41266:416::-;41466:2;41480:47;;;22348:2;41451:18;;;54007:19;22384:29;54047:14;;;22364:50;22433:12;;;41437:245::o;41689:416::-;41889:2;41903:47;;;22684:2;41874:18;;;54007:19;22720:30;54047:14;;;22700:51;22770:12;;;41860:245::o;42112:416::-;42312:2;42326:47;;;23021:2;42297:18;;;54007:19;-1:-1;;;54047:14;;;23037:44;23100:12;;;42283:245::o;42535:416::-;42735:2;42749:47;;;23351:2;42720:18;;;54007:19;-1:-1;;;54047:14;;;23367:42;23428:12;;;42706:245::o;42958:416::-;43158:2;43172:47;;;23679:2;43143:18;;;54007:19;23715:26;54047:14;;;23695:47;23761:12;;;43129:245::o;43381:416::-;43581:2;43595:47;;;24012:2;43566:18;;;54007:19;24048:31;54047:14;;;24028:52;24099:12;;;43552:245::o;43804:416::-;44004:2;44018:47;;;43989:18;;;54007:19;24386:34;54047:14;;;24366:55;24440:12;;;43975:245::o;44227:416::-;44427:2;44441:47;;;24691:2;44412:18;;;54007:19;24727:27;54047:14;;;24707:48;24774:12;;;44398:245::o;44650:416::-;44850:2;44864:47;;;25025:2;44835:18;;;54007:19;25061:31;54047:14;;;25041:52;25112:12;;;44821:245::o;45073:416::-;45273:2;45287:47;;;25363:2;45258:18;;;54007:19;25399:32;54047:14;;;25379:53;25451:12;;;45244:245::o;45496:416::-;45696:2;45710:47;;;25702:2;45681:18;;;54007:19;-1:-1;;;54047:14;;;25718:44;25781:12;;;45667:245::o;45919:416::-;46119:2;46133:47;;;26032:2;46104:18;;;54007:19;26068:31;54047:14;;;26048:52;26119:12;;;46090:245::o;46342:416::-;46542:2;46556:47;;;26370:2;46527:18;;;54007:19;26406:31;54047:14;;;26386:52;26457:12;;;46513:245::o;46765:416::-;46965:2;46979:47;;;26708:2;46950:18;;;54007:19;26744:33;54047:14;;;26724:54;26797:12;;;46936:245::o;47188:322::-;28257:23;;14892:37;;47365:2;47350:18;;47336:174::o;47746:417::-;;14922:5;14899:3;14892:37;47919:2;48037;48026:9;48022:18;48015:48;48077:76;47919:2;47908:9;47904:18;48139:6;48077:76;:::i;48506:440::-;14892:37;;;48849:2;48834:18;;14892:37;;;;48932:2;48917:18;;14892:37;48687:2;48672:18;;48658:288::o;49309:756::-;14892:37;;;28257:23;;49835:2;49820:18;;14892:37;28257:23;49968:2;49953:18;;14892:37;50051:2;50036:18;;14892:37;49620:3;49605:19;;49591:474::o;50412:506::-;;;50547:11;50534:25;50598:48;;50622:8;50606:14;50602:29;50598:48;50578:18;50574:73;50564:2;;-1:-1;;50651:12;50564:2;50678:33;;50732:18;;;-1:-1;;;;;;50759:30;;50756:2;;;-1:-1;;50792:12;50756:2;50637:4;50820:13;;-1:-1;50606:14;50852:38;;;50842:49;;50839:2;;;50904:1;;50894:12;50839:2;50502:416;;;;;:::o;50925:321::-;;51072:11;51059:25;51123:48;;51147:8;51131:14;51127:29;51123:48;51103:18;51099:73;51089:2;;-1:-1;;51176:12;51089:2;51203:33;;;;;51027:219;-1:-1;;51027:219::o;51253:256::-;51315:2;51309:9;51341:17;;;-1:-1;;;;;51401:34;;51437:22;;;51398:62;51395:2;;;51473:1;;51463:12;51395:2;51315;51482:22;51293:216;;-1:-1;51293:216::o;57139:145::-;57220:6;57215:3;57210;57197:30;-1:-1;57276:1;57258:16;;57251:27;57190:94::o;58450:117::-;-1:-1;;;;;55811:54;;58509:35;;58499:2;;58558:1;;58548:12;58499:2;58493:74;:::o",
  "source": "pragma solidity ^0.6.0;\n\npragma experimental ABIEncoderV2;\n\nimport \"../Voting.sol\";\nimport \"../../../common/implementation/FixedPoint.sol\";\n\n\n// Test contract used to access internal variables in the Voting contract.\ncontract VotingTest is Voting {\n    constructor(\n        uint256 _phaseLength,\n        FixedPoint.Unsigned memory _gatPercentage,\n        FixedPoint.Unsigned memory _inflationRate,\n        uint256 _rewardsExpirationTimeout,\n        address _votingToken,\n        address _finder,\n        address _timerAddress\n    )\n        public\n        Voting(\n            _phaseLength,\n            _gatPercentage,\n            _inflationRate,\n            _rewardsExpirationTimeout,\n            _votingToken,\n            _finder,\n            _timerAddress\n        )\n    {}\n\n    function getPendingPriceRequestsArray() external view returns (bytes32[] memory) {\n        return pendingPriceRequests;\n    }\n}\n",
  "sourcePath": "/home/circleci/protocol/packages/core/contracts/oracle/implementation/test/VotingTest.sol",
  "ast": {
    "absolutePath": "/home/circleci/protocol/packages/core/contracts/oracle/implementation/test/VotingTest.sol",
    "exportedSymbols": {
      "VotingTest": [
        15225
      ]
    },
    "id": 15226,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 15183,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:55"
      },
      {
        "id": 15184,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "25:33:55"
      },
      {
        "absolutePath": "/home/circleci/protocol/packages/core/contracts/oracle/implementation/Voting.sol",
        "file": "../Voting.sol",
        "id": 15185,
        "nodeType": "ImportDirective",
        "scope": 15226,
        "sourceUnit": 14877,
        "src": "60:23:55",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/circleci/protocol/packages/core/contracts/common/implementation/FixedPoint.sol",
        "file": "../../../common/implementation/FixedPoint.sol",
        "id": 15186,
        "nodeType": "ImportDirective",
        "scope": 15226,
        "sourceUnit": 1104,
        "src": "84:55:55",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 15187,
              "name": "Voting",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 14876,
              "src": "240:6:55",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Voting_$14876",
                "typeString": "contract Voting"
              }
            },
            "id": 15188,
            "nodeType": "InheritanceSpecifier",
            "src": "240:6:55"
          }
        ],
        "contractDependencies": [
          1844,
          14876,
          15314,
          15522,
          16086,
          16195
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 15225,
        "linearizedBaseContracts": [
          15225,
          14876,
          15522,
          15314,
          16195,
          16086,
          1844
        ],
        "name": "VotingTest",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 15214,
              "nodeType": "Block",
              "src": "771:2:55",
              "statements": []
            },
            "documentation": null,
            "id": 15215,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 15205,
                    "name": "_phaseLength",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15190,
                    "src": "575:12:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 15206,
                    "name": "_gatPercentage",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15192,
                    "src": "601:14:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Unsigned_$416_memory_ptr",
                      "typeString": "struct FixedPoint.Unsigned memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 15207,
                    "name": "_inflationRate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15194,
                    "src": "629:14:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Unsigned_$416_memory_ptr",
                      "typeString": "struct FixedPoint.Unsigned memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 15208,
                    "name": "_rewardsExpirationTimeout",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15196,
                    "src": "657:25:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 15209,
                    "name": "_votingToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15198,
                    "src": "696:12:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 15210,
                    "name": "_finder",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15200,
                    "src": "722:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 15211,
                    "name": "_timerAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15202,
                    "src": "743:13:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 15212,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 15204,
                  "name": "Voting",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 14876,
                  "src": "555:6:55",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Voting_$14876_$",
                    "typeString": "type(contract Voting)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "555:211:55"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 15203,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15190,
                  "mutability": "mutable",
                  "name": "_phaseLength",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15215,
                  "src": "274:20:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15189,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "274:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15192,
                  "mutability": "mutable",
                  "name": "_gatPercentage",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15215,
                  "src": "304:41:55",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Unsigned_$416_memory_ptr",
                    "typeString": "struct FixedPoint.Unsigned"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 15191,
                    "name": "FixedPoint.Unsigned",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 416,
                    "src": "304:19:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Unsigned_$416_storage_ptr",
                      "typeString": "struct FixedPoint.Unsigned"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15194,
                  "mutability": "mutable",
                  "name": "_inflationRate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15215,
                  "src": "355:41:55",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Unsigned_$416_memory_ptr",
                    "typeString": "struct FixedPoint.Unsigned"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 15193,
                    "name": "FixedPoint.Unsigned",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 416,
                    "src": "355:19:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Unsigned_$416_storage_ptr",
                      "typeString": "struct FixedPoint.Unsigned"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15196,
                  "mutability": "mutable",
                  "name": "_rewardsExpirationTimeout",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15215,
                  "src": "406:33:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15195,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "406:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15198,
                  "mutability": "mutable",
                  "name": "_votingToken",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15215,
                  "src": "449:20:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15197,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "449:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15200,
                  "mutability": "mutable",
                  "name": "_finder",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15215,
                  "src": "479:15:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15199,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "479:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15202,
                  "mutability": "mutable",
                  "name": "_timerAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15215,
                  "src": "504:21:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15201,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "504:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "264:267:55"
            },
            "returnParameters": {
              "id": 15213,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "771:0:55"
            },
            "scope": 15225,
            "src": "253:520:55",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15223,
              "nodeType": "Block",
              "src": "860:44:55",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 15221,
                    "name": "pendingPriceRequests",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13119,
                    "src": "877:20:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                      "typeString": "bytes32[] storage ref"
                    }
                  },
                  "functionReturnParameters": 15220,
                  "id": 15222,
                  "nodeType": "Return",
                  "src": "870:27:55"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "f116961f",
            "id": 15224,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPendingPriceRequestsArray",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 15216,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "816:2:55"
            },
            "returnParameters": {
              "id": 15220,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15219,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15224,
                  "src": "842:16:55",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 15217,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "842:7:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 15218,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "842:9:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "841:18:55"
            },
            "scope": 15225,
            "src": "779:125:55",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 15226,
        "src": "217:689:55"
      }
    ],
    "src": "0:907:55"
  },
  "legacyAST": {
    "absolutePath": "/home/circleci/protocol/packages/core/contracts/oracle/implementation/test/VotingTest.sol",
    "exportedSymbols": {
      "VotingTest": [
        15225
      ]
    },
    "id": 15226,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 15183,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:55"
      },
      {
        "id": 15184,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "25:33:55"
      },
      {
        "absolutePath": "/home/circleci/protocol/packages/core/contracts/oracle/implementation/Voting.sol",
        "file": "../Voting.sol",
        "id": 15185,
        "nodeType": "ImportDirective",
        "scope": 15226,
        "sourceUnit": 14877,
        "src": "60:23:55",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/circleci/protocol/packages/core/contracts/common/implementation/FixedPoint.sol",
        "file": "../../../common/implementation/FixedPoint.sol",
        "id": 15186,
        "nodeType": "ImportDirective",
        "scope": 15226,
        "sourceUnit": 1104,
        "src": "84:55:55",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 15187,
              "name": "Voting",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 14876,
              "src": "240:6:55",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Voting_$14876",
                "typeString": "contract Voting"
              }
            },
            "id": 15188,
            "nodeType": "InheritanceSpecifier",
            "src": "240:6:55"
          }
        ],
        "contractDependencies": [
          1844,
          14876,
          15314,
          15522,
          16086,
          16195
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 15225,
        "linearizedBaseContracts": [
          15225,
          14876,
          15522,
          15314,
          16195,
          16086,
          1844
        ],
        "name": "VotingTest",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 15214,
              "nodeType": "Block",
              "src": "771:2:55",
              "statements": []
            },
            "documentation": null,
            "id": 15215,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 15205,
                    "name": "_phaseLength",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15190,
                    "src": "575:12:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 15206,
                    "name": "_gatPercentage",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15192,
                    "src": "601:14:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Unsigned_$416_memory_ptr",
                      "typeString": "struct FixedPoint.Unsigned memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 15207,
                    "name": "_inflationRate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15194,
                    "src": "629:14:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Unsigned_$416_memory_ptr",
                      "typeString": "struct FixedPoint.Unsigned memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 15208,
                    "name": "_rewardsExpirationTimeout",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15196,
                    "src": "657:25:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 15209,
                    "name": "_votingToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15198,
                    "src": "696:12:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 15210,
                    "name": "_finder",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15200,
                    "src": "722:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 15211,
                    "name": "_timerAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15202,
                    "src": "743:13:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 15212,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 15204,
                  "name": "Voting",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 14876,
                  "src": "555:6:55",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Voting_$14876_$",
                    "typeString": "type(contract Voting)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "555:211:55"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 15203,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15190,
                  "mutability": "mutable",
                  "name": "_phaseLength",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15215,
                  "src": "274:20:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15189,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "274:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15192,
                  "mutability": "mutable",
                  "name": "_gatPercentage",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15215,
                  "src": "304:41:55",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Unsigned_$416_memory_ptr",
                    "typeString": "struct FixedPoint.Unsigned"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 15191,
                    "name": "FixedPoint.Unsigned",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 416,
                    "src": "304:19:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Unsigned_$416_storage_ptr",
                      "typeString": "struct FixedPoint.Unsigned"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15194,
                  "mutability": "mutable",
                  "name": "_inflationRate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15215,
                  "src": "355:41:55",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Unsigned_$416_memory_ptr",
                    "typeString": "struct FixedPoint.Unsigned"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 15193,
                    "name": "FixedPoint.Unsigned",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 416,
                    "src": "355:19:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Unsigned_$416_storage_ptr",
                      "typeString": "struct FixedPoint.Unsigned"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15196,
                  "mutability": "mutable",
                  "name": "_rewardsExpirationTimeout",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15215,
                  "src": "406:33:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15195,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "406:7:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15198,
                  "mutability": "mutable",
                  "name": "_votingToken",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15215,
                  "src": "449:20:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15197,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "449:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15200,
                  "mutability": "mutable",
                  "name": "_finder",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15215,
                  "src": "479:15:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15199,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "479:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15202,
                  "mutability": "mutable",
                  "name": "_timerAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15215,
                  "src": "504:21:55",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15201,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "504:7:55",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "264:267:55"
            },
            "returnParameters": {
              "id": 15213,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "771:0:55"
            },
            "scope": 15225,
            "src": "253:520:55",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15223,
              "nodeType": "Block",
              "src": "860:44:55",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 15221,
                    "name": "pendingPriceRequests",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 13119,
                    "src": "877:20:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                      "typeString": "bytes32[] storage ref"
                    }
                  },
                  "functionReturnParameters": 15220,
                  "id": 15222,
                  "nodeType": "Return",
                  "src": "870:27:55"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "f116961f",
            "id": 15224,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPendingPriceRequestsArray",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 15216,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "816:2:55"
            },
            "returnParameters": {
              "id": 15220,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15219,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 15224,
                  "src": "842:16:55",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 15217,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "842:7:55",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 15218,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "842:9:55",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "841:18:55"
            },
            "scope": 15225,
            "src": "779:125:55",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 15226,
        "src": "217:689:55"
      }
    ],
    "src": "0:907:55"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2020-10-06T21:03:39.153Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "batchCommit((bytes32,uint256,bytes32,bytes)[])": {
        "details": "Using `encryptedVote` is optional. If included then commitment is emitted in an event. Look at `project-root/common/Constants.js` for the tested maximum number of commitments that can fit in one transaction.",
        "params": {
          "commits": "struct to encapsulate an `identifier`, `time`, `hash` and optional `encryptedVote`."
        }
      },
      "batchReveal((bytes32,uint256,int256,int256)[])": {
        "details": "For more information on reveals, review the comment for `revealVote`.",
        "params": {
          "reveals": "array of the Reveal struct which contains an identifier, time, price and salt."
        }
      },
      "commitAndEmitEncryptedVote(bytes32,uint256,bytes32,bytes)": {
        "details": "An encrypted version of the vote is emitted in an event `EncryptedVote` to allow off-chain infrastructure to retrieve the commit. The contents of `encryptedVote` are never used on chain: it is purely for convenience.",
        "params": {
          "encryptedVote": "offchain encrypted blob containing the voters amount, time and salt.",
          "hash": "keccak256 hash of the price you want to vote for and a `int256 salt`.",
          "identifier": "unique price pair identifier. Eg: BTC/USD price pair.",
          "time": "unix timestamp of for the price request."
        }
      },
      "commitVote(bytes32,uint256,bytes32)": {
        "details": "`identifier`, `time` must correspond to a price request that's currently in the commit phase. Commits can be changed.Since transaction data is public, the salt will be revealed with the vote. While this is the system’s expected behavior, voters should never reuse salts. If someone else is able to guess the voted price and knows that a salt will be reused, then they can determine the vote pre-reveal.",
        "params": {
          "hash": "keccak256 hash of the `price`, `salt`, voter `address`, `time`, current `roundId`, and `identifier`.",
          "identifier": "uniquely identifies the committed vote. EG BTC/USD price pair.",
          "time": "unix timestamp of the price being voted on."
        }
      },
      "getCurrentRoundId()": {
        "returns": {
          "_0": "uint256 representing the unique round ID."
        }
      },
      "getCurrentTime()": {
        "returns": {
          "_0": "uint for the current Testable timestamp."
        }
      },
      "getPendingRequests()": {
        "returns": {
          "_0": "pendingRequests array containing identifiers of type `PendingRequest`. and timestamps for all pending requests."
        }
      },
      "getPrice(bytes32,uint256)": {
        "details": "If the price is not available, the method reverts.",
        "params": {
          "identifier": "uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.",
          "time": "unix timestamp of for the price request."
        },
        "returns": {
          "_0": "int256 representing the resolved price for the given identifier and timestamp."
        }
      },
      "getPriceRequestStatuses((bytes32,uint256)[])": {
        "details": "If the status for a particular request is NotRequested, the lastVotingRound will always be 0.",
        "params": {
          "requests": "array of type PendingRequest which includes an identifier and timestamp for each request."
        },
        "returns": {
          "_0": "requestStates a list, in the same order as the input list, giving the status of each of the specified price requests."
        }
      },
      "getVotePhase()": {
        "returns": {
          "_0": "Phase to indicate the current phase. Either { Commit, Reveal, NUM_PHASES_PLACEHOLDER }."
        }
      },
      "hasPrice(bytes32,uint256)": {
        "details": "Time must be in the past and the identifier must be supported.",
        "params": {
          "identifier": "uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.",
          "time": "unix timestamp of for the price request."
        },
        "returns": {
          "_0": "_hasPrice bool if the DVM has resolved to a price for the given identifier and timestamp."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "requestPrice(bytes32,uint256)": {
        "details": "Time must be in the past and the identifier must be supported.",
        "params": {
          "identifier": "uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.",
          "time": "unix timestamp for the price request."
        }
      },
      "retrieveRewards(address,uint256,(bytes32,uint256)[])": {
        "details": "Can only retrieve rewards if calling for a valid round and if the call is done within the timeout threshold (not expired).",
        "params": {
          "roundId": "the round from which voting rewards will be retrieved from.",
          "toRetrieve": "array of PendingRequests which rewards are retrieved from.",
          "voterAddress": "voter for which rewards will be retrieved. Does not have to be the caller."
        },
        "returns": {
          "totalRewardToIssue": "total amount of rewards returned to the voter."
        }
      },
      "revealVote(bytes32,uint256,int256,int256)": {
        "details": "The revealed `price`, `salt`, `address`, `time`, `roundId`, and `identifier`, must hash to the latest `hash` that `commitVote()` was called with. Only the committer can reveal their vote.",
        "params": {
          "identifier": "voted on in the commit phase. EG BTC/USD price pair.",
          "price": "voted on during the commit phase.",
          "salt": "value used to hide the commitment price during the commit phase.",
          "time": "specifies the unix timestamp of the price being voted on."
        }
      },
      "setCurrentTime(uint256)": {
        "details": "Will revert if not running in test mode.",
        "params": {
          "time": "timestamp to set current Testable time to."
        }
      },
      "setGatPercentage((uint256))": {
        "details": "This method is public because calldata structs are not currently supported by solidity.",
        "params": {
          "newGatPercentage": "sets the next round's Gat percentage."
        }
      },
      "setInflationRate((uint256))": {
        "details": "This method is public because calldata structs are not currently supported by solidity.",
        "params": {
          "newInflationRate": "sets the next round's inflation rate."
        }
      },
      "setMigrated(address)": {
        "details": "Can only be called by the contract owner.",
        "params": {
          "newVotingAddress": "the newly migrated contract address."
        }
      },
      "setRewardsExpirationTimeout(uint256)": {
        "details": "This change only applies to rounds that have not yet begun.",
        "params": {
          "NewRewardsExpirationTimeout": "how long a caller can wait before choosing to withdraw their rewards."
        }
      },
      "snapshotCurrentRound(bytes)": {
        "details": "This function can be called multiple times, but only the first call per round into this function or `revealVote` will create the round snapshot. Any later calls will be a no-op. Will revert unless called during reveal period.",
        "params": {
          "signature": "signature required to prove caller is an EOA to prevent flash loans from being included in the snapshot."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "batchCommit((bytes32,uint256,bytes32,bytes)[])": {
        "notice": "Submit a batch of commits in a single transaction."
      },
      "batchReveal((bytes32,uint256,int256,int256)[])": {
        "notice": "Reveal multiple votes in a single transaction. Look at `project-root/common/Constants.js` for the tested maximum number of reveals. that can fit in one transaction."
      },
      "commitAndEmitEncryptedVote(bytes32,uint256,bytes32,bytes)": {
        "notice": "commits a vote and logs an event with a data blob, typically an encrypted version of the vote"
      },
      "commitVote(bytes32,uint256,bytes32)": {
        "notice": "Commit a vote for a price request for `identifier` at `time`."
      },
      "getCurrentRoundId()": {
        "notice": "Returns the current round ID, as a function of the current time."
      },
      "getCurrentTime()": {
        "notice": "Gets the current time. Will return the last time set in `setCurrentTime` if running in test mode. Otherwise, it will return the block timestamp."
      },
      "getPendingRequests()": {
        "notice": "Gets the queries that are being voted on this round."
      },
      "getPrice(bytes32,uint256)": {
        "notice": "Gets the price for `identifier` and `time` if it has already been requested and resolved."
      },
      "getPriceRequestStatuses((bytes32,uint256)[])": {
        "notice": "Gets the status of a list of price requests, identified by their identifier and time."
      },
      "getVotePhase()": {
        "notice": "Returns the current voting phase, as a function of the current time."
      },
      "hasPrice(bytes32,uint256)": {
        "notice": "Whether the price for `identifier` and `time` is available."
      },
      "requestPrice(bytes32,uint256)": {
        "notice": "Enqueues a request (if a request isn't already present) for the given `identifier`, `time` pair."
      },
      "retrieveRewards(address,uint256,(bytes32,uint256)[])": {
        "notice": "Retrieves rewards owed for a set of resolved price requests."
      },
      "revealVote(bytes32,uint256,int256,int256)": {
        "notice": "Reveal a previously committed vote for `identifier` at `time`."
      },
      "setCurrentTime(uint256)": {
        "notice": "Sets the current time."
      },
      "setGatPercentage((uint256))": {
        "notice": "Resets the Gat percentage. Note: this change only applies to rounds that have not yet begun."
      },
      "setInflationRate((uint256))": {
        "notice": "Resets the inflation rate. Note: this change only applies to rounds that have not yet begun."
      },
      "setMigrated(address)": {
        "notice": "Disables this Voting contract in favor of the migrated one."
      },
      "setRewardsExpirationTimeout(uint256)": {
        "notice": "Resets the rewards expiration timeout."
      },
      "snapshotCurrentRound(bytes)": {
        "notice": "Snapshot the current round's token balances and lock in the inflation rate and GAT."
      }
    },
    "version": 1
  }
}