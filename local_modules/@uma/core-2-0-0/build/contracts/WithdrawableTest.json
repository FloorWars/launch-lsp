{
  "contractName": "WithdrawableTest",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newMember",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "manager",
          "type": "address"
        }
      ],
      "name": "AddedSharedMember",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldMember",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "manager",
          "type": "address"
        }
      ],
      "name": "RemovedSharedMember",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newMember",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "manager",
          "type": "address"
        }
      ],
      "name": "ResetExclusiveMember",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "newMember",
          "type": "address"
        }
      ],
      "name": "addMember",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        }
      ],
      "name": "getMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "memberToCheck",
          "type": "address"
        }
      ],
      "name": "holdsRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "memberToRemove",
          "type": "address"
        }
      ],
      "name": "removeMember",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        }
      ],
      "name": "renounceMembership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "newMember",
          "type": "address"
        }
      ],
      "name": "resetMember",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "erc20Address",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawErc20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pay",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "setRoleId",
          "type": "uint256"
        }
      ],
      "name": "setInternalWithdrawRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newMember\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"AddedSharedMember\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldMember\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"RemovedSharedMember\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newMember\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"ResetExclusiveMember\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newMember\",\"type\":\"address\"}],\"name\":\"addMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"}],\"name\":\"getMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"memberToCheck\",\"type\":\"address\"}],\"name\":\"holdsRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pay\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"memberToRemove\",\"type\":\"address\"}],\"name\":\"removeMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"}],\"name\":\"renounceMembership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newMember\",\"type\":\"address\"}],\"name\":\"resetMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"setRoleId\",\"type\":\"uint256\"}],\"name\":\"setInternalWithdrawRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc20Address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawErc20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addMember(uint256,address)\":{\"details\":\"Reverts if `roleId` does not represent an initialized, SharedRole or if the caller is not a member of the managing role for `roleId`.\",\"params\":{\"newMember\":\"the new SharedRole member.\",\"roleId\":\"the SharedRole membership to modify.\"}},\"getMember(uint256)\":{\"details\":\"Reverts if `roleId` does not represent an initialized, exclusive role.\",\"params\":{\"roleId\":\"the ExclusiveRole membership to check.\"},\"returns\":{\"_0\":\"the address of the current ExclusiveRole member.\"}},\"holdsRole(uint256,address)\":{\"details\":\"Reverts if roleId does not correspond to an initialized role.\",\"params\":{\"memberToCheck\":\"the address to check.\",\"roleId\":\"the Role to check.\"},\"returns\":{\"_0\":\"True if `memberToCheck` is a member of `roleId`.\"}},\"removeMember(uint256,address)\":{\"details\":\"Reverts if `roleId` does not represent an initialized, SharedRole or if the caller is not a member of the managing role for `roleId`.\",\"params\":{\"memberToRemove\":\"the current SharedRole member to remove.\",\"roleId\":\"the SharedRole membership to modify.\"}},\"renounceMembership(uint256)\":{\"details\":\"Reverts if the caller is not a member of the role for `roleId` or if `roleId` is not an initialized, SharedRole.\",\"params\":{\"roleId\":\"the SharedRole membership to modify.\"}},\"resetMember(uint256,address)\":{\"details\":\"Reverts if the caller is not a member of the managing role for `roleId` or if `roleId` is not an initialized, ExclusiveRole.\",\"params\":{\"newMember\":\"the new ExclusiveRole member.\",\"roleId\":\"the ExclusiveRole membership to modify.\"}},\"withdrawErc20(address,uint256)\":{\"params\":{\"amount\":\"amount of tokens to withdraw.\",\"erc20Address\":\"ERC20 token to withdraw.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addMember(uint256,address)\":{\"notice\":\"Adds `newMember` to the shared role, `roleId`.\"},\"getMember(uint256)\":{\"notice\":\"Gets the current holder of the exclusive role, `roleId`.\"},\"holdsRole(uint256,address)\":{\"notice\":\"Whether `memberToCheck` is a member of roleId.\"},\"removeMember(uint256,address)\":{\"notice\":\"Removes `memberToRemove` from the shared role, `roleId`.\"},\"renounceMembership(uint256)\":{\"notice\":\"Removes caller from the role, `roleId`.\"},\"resetMember(uint256,address)\":{\"notice\":\"Changes the exclusive role holder of `roleId` to `newMember`.\"},\"withdraw(uint256)\":{\"notice\":\"Withdraws ETH from the contract.\"},\"withdrawErc20(address,uint256)\":{\"notice\":\"Withdraws ERC20 tokens from the contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/circleci/protocol/packages/core/contracts/common/test/WithdrawableTest.sol\":\"WithdrawableTest\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":199},\"remappings\":[]},\"sources\":{\"/home/circleci/protocol/packages/core/contracts/common/implementation/MultiRole.sol\":{\"keccak256\":\"0xc35f4e028196f04a47b2456ed7efd825be3406688a314d75916f57680eae1795\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://29edb6ac3a5e5146fe262f77431d55571379cf0265925060d15f27b1b927cdd6\",\"dweb:/ipfs/QmUg31ey8b53pXdUpUBUrHx46nC3p2XChwmhLXw1h9ooyi\"]},\"/home/circleci/protocol/packages/core/contracts/common/implementation/Withdrawable.sol\":{\"keccak256\":\"0x5b0d5074d0f4c99aa2e8afa8f640219ecfd6ccd10ce160a2ff937043f5ae2eca\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://e75557768b9eedd663f3d481276dfe7f90b7c2b99b8fbb5f5806ca2e43809f99\",\"dweb:/ipfs/QmaQnmhRiogqN3AbWwWF6T16Go4ViGdb1wiaVnDujE7Gbg\"]},\"/home/circleci/protocol/packages/core/contracts/common/test/WithdrawableTest.sol\":{\"keccak256\":\"0x13a7706c2e0cbdecaddcb6e7667fc7a8df1283116c80d51834b72dc690971061\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://ac7f98019ed1c8afed8edcd7443535602450de0e27ee5102db9a9fce2966e331\",\"dweb:/ipfs/QmWq4RFX7GYfiMmKWf5nJdsmA68WzKAuGrVe2wmiBG29sy\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x04d34b3cd5677bea25f8dfceb6dec0eaa071d4d4b789a43f13fe0c415ba4c296\",\"urls\":[\"bzz-raw://e7e8b526a6839e5ba14f0d23a830387fec47f7043ce01d42c9f285b709a9d080\",\"dweb:/ipfs/QmXmhhFmX5gcAvVzNiDPAGA35iHMPNaYtQkACswRHBVTNw\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x6cc1cb934a3ac2137a7dcaed018af9e235392236ceecfd3687259702b9c767ad\",\"urls\":[\"bzz-raw://0055fa88138cd1c3c6440370f8580f85857f8fe9dec41c99af9eafbeb8d9c3ce\",\"dweb:/ipfs/QmX1xDh8vwGLLCH8ti45eXjQ7Wcxv1FEGTR3jkFnd5Nv6F\"]},\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xa27d8d0bf389702f2b124fff3d86238b17ec0abd47d1401e81dc48a1509dbb9a\",\"urls\":[\"bzz-raw://899c25b79e783c1e4ccdd06928e332e2b37f3ecaa487f49ef68ef9fde6b18f82\",\"dweb:/ipfs/QmV3rZDWabetVSmZ2iviS5tajKzvR3AEwsicKZao4ptTg2\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x5f7da58ee3d9faa9b8999a93d49c8ff978f1afc88ae9bcfc6f9cbb44da011c2b\",\"urls\":[\"bzz-raw://4f089d954b3ecaa26949412fe63e9a184b056562c6c13dd4a0529a5d9a2e685a\",\"dweb:/ipfs/QmVK5iCNAMcEJQxT59bsC5E53JQASDQPU6khHox3d5ZXCn\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50620000206000803362000035565b6200002f600160003362000150565b620001db565b826000808281526020819052604090206001015460ff1660028111156200005857fe5b14620000ab576040805162461bcd60e51b815260206004820152601e60248201527f43616e6e6f74207573652061207072652d6578697374696e6720726f6c650000604482015290519081900360640190fd5b60008481526020819052604090206001808201805460ff191682800217905550838155620000e9600282018462000167602090811b620008b217901c565b60008481526020819052604081206001015460ff1660028111156200010a57fe5b1415620001495760405162461bcd60e51b815260040180806020018281038252603c815260200180620010ff603c913960400191505060405180910390fd5b5050505050565b60018390556200016283838362000035565b505050565b62000173828262000177565b5050565b6001600160a01b038116620001be5760405162461bcd60e51b81526004018080602001828103825260238152602001806200113b6023913960400191505060405180910390fd5b81546001600160a01b0319166001600160a01b0391909116179055565b610f1480620001eb6000396000f3fe6080604052600436106100915760003560e01c80637cdc1cb9116100595780637cdc1cb914610166578063aaa14ca3146101b3578063ab3545e5146101dd578063bd1f4b5214610223578063d97c05be1461025c57610091565b80631b9265b8146100965780632e1a7d4d146100a05780636b85f1b0146100ca5780636be7658b146100f457806374d0a6761461012d575b600080fd5b61009e610295565b005b3480156100ac57600080fd5b5061009e600480360360208110156100c357600080fd5b50356102a4565b3480156100d657600080fd5b5061009e600480360360208110156100ed57600080fd5b50356102fa565b34801561010057600080fd5b5061009e6004803603604081101561011757600080fd5b50803590602001356001600160a01b0316610306565b34801561013957600080fd5b5061009e6004803603604081101561015057600080fd5b50803590602001356001600160a01b0316610414565b34801561017257600080fd5b5061019f6004803603604081101561018957600080fd5b50803590602001356001600160a01b0316610522565b604080519115158252519081900360200190f35b3480156101bf57600080fd5b5061009e600480360360208110156101d657600080fd5b50356105cb565b3480156101e957600080fd5b506102076004803603602081101561020057600080fd5b50356106bf565b604080516001600160a01b039092168252519081900360200190f35b34801561022f57600080fd5b5061009e6004803603604081101561024657600080fd5b506001600160a01b038135169060200135610741565b34801561026857600080fd5b5061009e6004803603604081101561027f57600080fd5b50803590602001356001600160a01b03166107a4565b600034116102a257600080fd5b565b6001546102b18133610522565b6102ec5760405162461bcd60e51b8152600401808060200182810382526022815260200180610e4c6022913960400191505060405180910390fd5b6102f633836108bc565b5050565b610303816109a6565b50565b81600260008281526020819052604090206001015460ff16600281111561032957fe5b146103655760405162461bcd60e51b815260040180806020018281038252602c815260200180610e20602c913960400191505060405180910390fd5b60008381526020819052604090205483906103809033610522565b6103bb5760405162461bcd60e51b8152600401808060200182810382526024815260200180610e916024913960400191505060405180910390fd5b60008481526020819052604090206103d69060030184610a0b565b60405133906001600160a01b0385169086907feb3e33034c392e69263b04ec0fa376dc12784a41b6676c7f31b936cbc0fbb5af90600090a450505050565b81600260008281526020819052604090206001015460ff16600281111561043757fe5b146104735760405162461bcd60e51b815260040180806020018281038252602c815260200180610e20602c913960400191505060405180910390fd5b600083815260208190526040902054839061048e9033610522565b6104c95760405162461bcd60e51b8152600401808060200182810382526024815260200180610e916024913960400191505060405180910390fd5b60008481526020819052604090206104e49060030184610a2d565b60405133906001600160a01b0385169086907f63502af7324ff6db91ab38f8236a648727d9385ea6c782073dd4882d8a61a48f90600090a450505050565b600082815260208190526040812060018082015460ff16600281111561054457fe5b141561055f576105576002820184610aad565b9150506105c5565b6002600182015460ff16600281111561057457fe5b1415610587576105576003820184610ac0565b6040805162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081c9bdb19525960921b604482015290519081900360640190fd5b92915050565b80600260008281526020819052604090206001015460ff1660028111156105ee57fe5b1461062a5760405162461bcd60e51b815260040180806020018281038252602c815260200180610e20602c913960400191505060405180910390fd5b816106358133610522565b6106705760405162461bcd60e51b8152600401808060200182810382526022815260200180610e4c6022913960400191505060405180910390fd5b600083815260208190526040902061068b9060030133610a0b565b6040513390819085907feb3e33034c392e69263b04ec0fa376dc12784a41b6676c7f31b936cbc0fbb5af90600090a4505050565b600081600160008281526020819052604090206001015460ff1660028111156106e457fe5b146107205760405162461bcd60e51b815260040180806020018281038252602f815260200180610db7602f913960400191505060405180910390fd5b600083815260208190526040902061073a90600201610adf565b9392505050565b60015461074e8133610522565b6107895760405162461bcd60e51b8152600401808060200182810382526022815260200180610e4c6022913960400191505060405180910390fd5b8261079e6001600160a01b0382163385610aec565b50505050565b81600160008281526020819052604090206001015460ff1660028111156107c757fe5b146108035760405162461bcd60e51b815260040180806020018281038252602f815260200180610db7602f913960400191505060405180910390fd5b600083815260208190526040902054839061081e9033610522565b6108595760405162461bcd60e51b8152600401808060200182810382526024815260200180610e916024913960400191505060405180910390fd5b60008481526020819052604090206108749060020184610b3e565b60405133906001600160a01b0385169086907f3b855c56b409b671c7112789d022675eb639d0bcb8896f1b6197c132f799e74690600090a450505050565b6102f68282610b3e565b80471015610911576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015290519081900360640190fd5b6040516000906001600160a01b0384169083908381818185875af1925050503d806000811461095c576040519150601f19603f3d011682016040523d82523d6000602084013e610961565b606091505b50509050806109a15760405162461bcd60e51b815260040180806020018281038252603a815260200180610de6603a913960400191505060405180910390fd5b505050565b806000808281526020819052604090206001015460ff1660028111156109c857fe5b1415610a055760405162461bcd60e51b8152600401808060200182810382526022815260200180610d956022913960400191505060405180910390fd5b50600155565b6001600160a01b0316600090815260209190915260409020805460ff19169055565b6001600160a01b038116610a88576040805162461bcd60e51b815260206004820152601f60248201527f43616e6e6f74206164642030783020746f20612073686172656420726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b90546001600160a01b0391821691161490565b6001600160a01b03166000908152602091909152604090205460ff1690565b546001600160a01b031690565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526109a1908490610ba0565b6001600160a01b038116610b835760405162461bcd60e51b8152600401808060200182810382526023815260200180610e6e6023913960400191505060405180910390fd5b81546001600160a01b0319166001600160a01b0391909116179055565b610bb2826001600160a01b0316610d58565b610c03576040805162461bcd60e51b815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604482015290519081900360640190fd5b60006060836001600160a01b0316836040518082805190602001908083835b60208310610c415780518252601f199092019160209182019101610c22565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610ca3576040519150601f19603f3d011682016040523d82523d6000602084013e610ca8565b606091505b509150915081610cff576040805162461bcd60e51b815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604482015290519081900360640190fd5b80511561079e57808060200190516020811015610d1b57600080fd5b505161079e5760405162461bcd60e51b815260040180806020018281038252602a815260200180610eb5602a913960400191505060405180910390fd5b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590610d8c57508115155b94935050505056fe417474656d7074656420746f2075736520616e20696e76616c696420726f6c6549644d7573742062652063616c6c6564206f6e20616e20696e697469616c697a6564204578636c757369766520726f6c65416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d617920686176652072657665727465644d7573742062652063616c6c6564206f6e20616e20696e697469616c697a65642053686172656420726f6c6553656e64657220646f6573206e6f7420686f6c6420726571756972656420726f6c6543616e6e6f742073657420616e206578636c757369766520726f6c6520746f2030783043616e206f6e6c792062652063616c6c6564206279206120726f6c65206d616e616765725361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a26469706673582212208f73d2fa58a0a1027122f735098306f60a4689be1452173e8ed229ffc24f653964736f6c634300060c0033417474656d7074656420746f2075736520616e20696e76616c696420726f6c6520746f206d616e61676520616e206578636c757369766520726f6c6543616e6e6f742073657420616e206578636c757369766520726f6c6520746f20307830",
  "deployedBytecode": "0x6080604052600436106100915760003560e01c80637cdc1cb9116100595780637cdc1cb914610166578063aaa14ca3146101b3578063ab3545e5146101dd578063bd1f4b5214610223578063d97c05be1461025c57610091565b80631b9265b8146100965780632e1a7d4d146100a05780636b85f1b0146100ca5780636be7658b146100f457806374d0a6761461012d575b600080fd5b61009e610295565b005b3480156100ac57600080fd5b5061009e600480360360208110156100c357600080fd5b50356102a4565b3480156100d657600080fd5b5061009e600480360360208110156100ed57600080fd5b50356102fa565b34801561010057600080fd5b5061009e6004803603604081101561011757600080fd5b50803590602001356001600160a01b0316610306565b34801561013957600080fd5b5061009e6004803603604081101561015057600080fd5b50803590602001356001600160a01b0316610414565b34801561017257600080fd5b5061019f6004803603604081101561018957600080fd5b50803590602001356001600160a01b0316610522565b604080519115158252519081900360200190f35b3480156101bf57600080fd5b5061009e600480360360208110156101d657600080fd5b50356105cb565b3480156101e957600080fd5b506102076004803603602081101561020057600080fd5b50356106bf565b604080516001600160a01b039092168252519081900360200190f35b34801561022f57600080fd5b5061009e6004803603604081101561024657600080fd5b506001600160a01b038135169060200135610741565b34801561026857600080fd5b5061009e6004803603604081101561027f57600080fd5b50803590602001356001600160a01b03166107a4565b600034116102a257600080fd5b565b6001546102b18133610522565b6102ec5760405162461bcd60e51b8152600401808060200182810382526022815260200180610e4c6022913960400191505060405180910390fd5b6102f633836108bc565b5050565b610303816109a6565b50565b81600260008281526020819052604090206001015460ff16600281111561032957fe5b146103655760405162461bcd60e51b815260040180806020018281038252602c815260200180610e20602c913960400191505060405180910390fd5b60008381526020819052604090205483906103809033610522565b6103bb5760405162461bcd60e51b8152600401808060200182810382526024815260200180610e916024913960400191505060405180910390fd5b60008481526020819052604090206103d69060030184610a0b565b60405133906001600160a01b0385169086907feb3e33034c392e69263b04ec0fa376dc12784a41b6676c7f31b936cbc0fbb5af90600090a450505050565b81600260008281526020819052604090206001015460ff16600281111561043757fe5b146104735760405162461bcd60e51b815260040180806020018281038252602c815260200180610e20602c913960400191505060405180910390fd5b600083815260208190526040902054839061048e9033610522565b6104c95760405162461bcd60e51b8152600401808060200182810382526024815260200180610e916024913960400191505060405180910390fd5b60008481526020819052604090206104e49060030184610a2d565b60405133906001600160a01b0385169086907f63502af7324ff6db91ab38f8236a648727d9385ea6c782073dd4882d8a61a48f90600090a450505050565b600082815260208190526040812060018082015460ff16600281111561054457fe5b141561055f576105576002820184610aad565b9150506105c5565b6002600182015460ff16600281111561057457fe5b1415610587576105576003820184610ac0565b6040805162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081c9bdb19525960921b604482015290519081900360640190fd5b92915050565b80600260008281526020819052604090206001015460ff1660028111156105ee57fe5b1461062a5760405162461bcd60e51b815260040180806020018281038252602c815260200180610e20602c913960400191505060405180910390fd5b816106358133610522565b6106705760405162461bcd60e51b8152600401808060200182810382526022815260200180610e4c6022913960400191505060405180910390fd5b600083815260208190526040902061068b9060030133610a0b565b6040513390819085907feb3e33034c392e69263b04ec0fa376dc12784a41b6676c7f31b936cbc0fbb5af90600090a4505050565b600081600160008281526020819052604090206001015460ff1660028111156106e457fe5b146107205760405162461bcd60e51b815260040180806020018281038252602f815260200180610db7602f913960400191505060405180910390fd5b600083815260208190526040902061073a90600201610adf565b9392505050565b60015461074e8133610522565b6107895760405162461bcd60e51b8152600401808060200182810382526022815260200180610e4c6022913960400191505060405180910390fd5b8261079e6001600160a01b0382163385610aec565b50505050565b81600160008281526020819052604090206001015460ff1660028111156107c757fe5b146108035760405162461bcd60e51b815260040180806020018281038252602f815260200180610db7602f913960400191505060405180910390fd5b600083815260208190526040902054839061081e9033610522565b6108595760405162461bcd60e51b8152600401808060200182810382526024815260200180610e916024913960400191505060405180910390fd5b60008481526020819052604090206108749060020184610b3e565b60405133906001600160a01b0385169086907f3b855c56b409b671c7112789d022675eb639d0bcb8896f1b6197c132f799e74690600090a450505050565b6102f68282610b3e565b80471015610911576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015290519081900360640190fd5b6040516000906001600160a01b0384169083908381818185875af1925050503d806000811461095c576040519150601f19603f3d011682016040523d82523d6000602084013e610961565b606091505b50509050806109a15760405162461bcd60e51b815260040180806020018281038252603a815260200180610de6603a913960400191505060405180910390fd5b505050565b806000808281526020819052604090206001015460ff1660028111156109c857fe5b1415610a055760405162461bcd60e51b8152600401808060200182810382526022815260200180610d956022913960400191505060405180910390fd5b50600155565b6001600160a01b0316600090815260209190915260409020805460ff19169055565b6001600160a01b038116610a88576040805162461bcd60e51b815260206004820152601f60248201527f43616e6e6f74206164642030783020746f20612073686172656420726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b90546001600160a01b0391821691161490565b6001600160a01b03166000908152602091909152604090205460ff1690565b546001600160a01b031690565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526109a1908490610ba0565b6001600160a01b038116610b835760405162461bcd60e51b8152600401808060200182810382526023815260200180610e6e6023913960400191505060405180910390fd5b81546001600160a01b0319166001600160a01b0391909116179055565b610bb2826001600160a01b0316610d58565b610c03576040805162461bcd60e51b815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604482015290519081900360640190fd5b60006060836001600160a01b0316836040518082805190602001908083835b60208310610c415780518252601f199092019160209182019101610c22565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610ca3576040519150601f19603f3d011682016040523d82523d6000602084013e610ca8565b606091505b509150915081610cff576040805162461bcd60e51b815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604482015290519081900360640190fd5b80511561079e57808060200190516020811015610d1b57600080fd5b505161079e5760405162461bcd60e51b815260040180806020018281038252602a815260200180610eb5602a913960400191505060405180910390fd5b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590610d8c57508115155b94935050505056fe417474656d7074656420746f2075736520616e20696e76616c696420726f6c6549644d7573742062652063616c6c6564206f6e20616e20696e697469616c697a6564204578636c757369766520726f6c65416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d617920686176652072657665727465644d7573742062652063616c6c6564206f6e20616e20696e697469616c697a65642053686172656420726f6c6553656e64657220646f6573206e6f7420686f6c6420726571756972656420726f6c6543616e6e6f742073657420616e206578636c757369766520726f6c6520746f2030783043616e206f6e6c792062652063616c6c6564206279206120726f6c65206d616e616765725361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a26469706673582212208f73d2fa58a0a1027122f735098306f60a4689be1452173e8ed229ffc24f653964736f6c634300060c0033",
  "immutableReferences": {},
  "sourceMap": "206:543:31:-:0;;;344:217;;;;;;;;;-1:-1:-1;375:86:31;404:16;431;450:10;375:20;:86::i;:::-;471:83;499:14;524:16;543:10;471:19;:83::i;:::-;206:543;;8816:519:6;8964:6;7559:16;7533:5;:13;;;;;;;;;;:22;;;;;:42;;;;;;;;;7525:85;;;;;-1:-1:-1;;;7525:85:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;8982:17:::1;9002:13:::0;;;::::1;::::0;;;;;;9041:18:::1;9025:13:::0;;::::1;:34:::0;;-1:-1:-1;;9025:34:6::1;9041:18:::0;;9025:34:::1;;::::0;;-1:-1:-1;9069:34:6;;;9113:48:::1;:28;::::0;::::1;9147:13:::0;9113:33:::1;;::::0;;::::1;;;:48:::0;::::1;:::i;:::-;9226:16;9192:21:::0;;;::::1;::::0;;;;;;:30:::1;;::::0;::::1;;:50;::::0;::::1;;;;;;;;9171:157;;;;-1:-1:-1::0;;;9171:157:6::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7620:1;8816:519:::0;;;;:::o;1604:249:10:-;1752:6;:18;;;1780:66;1761:9;1812:14;1828:17;1780:20;:66::i;:::-;1604:249;;;:::o;695:144:6:-;790:42;802:14;818:13;790:11;:42::i;:::-;695:144;;:::o;327:221::-;-1:-1:-1;;;;;433:25:6;;425:73;;;;-1:-1:-1;;;425:73:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;508:33;;-1:-1:-1;;;;;;508:33:6;-1:-1:-1;;;;;508:33:6;;;;;;;327:221::o;206:543:31:-;;;;;;;",
  "deployedSourceMap": "206:543:31:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;567:71;;;:::i;:::-;;600:120:10;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;600:120:10;;:::i;644:103:31:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;644:103:31;;:::i;6404:262:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6404:262:6;;;;;;-1:-1:-1;;;;;6404:262:6;;:::i;5790:239::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5790:239:6;;;;;;-1:-1:-1;;;;;5790:239:6;;:::i;3945:428::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3945:428:6;;;;;;-1:-1:-1;;;;;3945:428:6;;:::i;:::-;;;;;;;;;;;;;;;;;;6933:235;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6933:235:6;;:::i;5284:160::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5284:160:6;;:::i;:::-;;;;-1:-1:-1;;;;;5284:160:6;;;;;;;;;;;;;;902:193:10;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;902:193:10;;;;;;;;:::i;4731:252:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4731:252:6;;;;;;-1:-1:-1;;;;;4731:252:6;;:::i;567:71:31:-;629:1;617:9;:13;609:22;;;;;;567:71::o;600:120:10:-;658:6;;2713:29:6;2723:6;2731:10;2713:9;:29::i;:::-;2705:76;;;;-1:-1:-1;;;2705:76:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;676:37:10::1;694:10;706:6;676:17;:37::i;:::-;600:120:::0;;:::o;644:103:31:-;713:27;730:9;713:16;:27::i;:::-;644:103;:::o;6404:262:6:-;6484:6;3551:15;3525:5;:13;;;;;;;;;;:22;;;;;:41;;;;;;;;;3517:98;;;;-1:-1:-1;;;3517:98:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2989:5:::1;:13:::0;;;::::1;::::0;;;;;;:26;6508:6;;2979:49:::1;::::0;3017:10:::1;2979:9;:49::i;:::-;2971:98;;;;-1:-1:-1::0;;;2971:98:6::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6526:5:::2;:13:::0;;;::::2;::::0;;;;;;:63:::2;::::0;:34:::2;;6574:14:::0;6526:47:::2;:63::i;:::-;6604:55;::::0;6648:10:::2;::::0;-1:-1:-1;;;;;6604:55:6;::::2;::::0;6624:6;;6604:55:::2;::::0;;;::::2;3625:1:::1;6404:262:::0;;;:::o;5790:239::-;5862:6;3551:15;3525:5;:13;;;;;;;;;;:22;;;;;:41;;;;;;;;;3517:98;;;;-1:-1:-1;;;3517:98:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2989:5:::1;:13:::0;;;::::1;::::0;;;;;;:26;5886:6;;2979:49:::1;::::0;3017:10:::1;2979:9;:49::i;:::-;2971:98;;;;-1:-1:-1::0;;;2971:98:6::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5904:5:::2;:13:::0;;;::::2;::::0;;;;;;:55:::2;::::0;:34:::2;;5949:9:::0;5904:44:::2;:55::i;:::-;5974:48;::::0;6011:10:::2;::::0;-1:-1:-1;;;;;5974:48:6;::::2;::::0;5992:6;;5974:48:::2;::::0;;;::::2;3625:1:::1;5790:239:::0;;;:::o;3945:428::-;4024:4;4060:13;;;;;;;;;;4104:18;4087:13;;;;;;:35;;;;;;;;;4083:250;;;4145:52;:28;;;4183:13;4145:37;:52::i;:::-;4138:59;;;;;4083:250;4235:15;4218:13;;;;;;:32;;;;;;;;;4214:119;;;4273:49;:25;;;4308:13;4273:34;:49::i;4214:119::-;4342:24;;;-1:-1:-1;;;4342:24:6;;;;;;;;;;;;-1:-1:-1;;;4342:24:6;;;;;;;;;;;;;;3945:428;;;;;:::o;6933:235::-;6995:6;3551:15;3525:5;:13;;;;;;;;;;:22;;;;;:41;;;;;;;;;3517:98;;;;-1:-1:-1;;;3517:98:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7018:6:::1;2713:29;2723:6;2731:10;2713:9;:29::i;:::-;2705:76;;;;-1:-1:-1::0;;;2705:76:6::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7036:5:::2;:13:::0;;;::::2;::::0;;;;;;:59:::2;::::0;:34:::2;;7084:10;7036:47;:59::i;:::-;7110:51;::::0;7150:10:::2;::::0;;;7130:6;;7110:51:::2;::::0;;;::::2;3625:1:::1;6933:235:::0;;:::o;5284:160::-;5362:7;5345:6;3278:18;3252:5;:13;;;;;;;;;;:22;;;;;:44;;;;;;;;;3244:104;;;;-1:-1:-1;;;3244:104:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5388:5:::1;:13:::0;;;::::1;::::0;;;;;;:49:::1;::::0;:37:::1;;:47;:49::i;:::-;5381:56:::0;5284:160;-1:-1:-1;;;5284:160:6:o;902:193:10:-;987:6;;2713:29:6;2723:6;2731:10;2713:9;:29::i;:::-;2705:76;;;;-1:-1:-1;;;2705:76:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1027:12:10;1050:38:::1;-1:-1:-1::0;;;;;1050:18:10;::::1;1069:10;1081:6:::0;1050:18:::1;:38::i;:::-;2791:1:6;902:193:10::0;;;:::o;4731:252:6:-;4808:6;3278:18;3252:5;:13;;;;;;;;;;:22;;;;;:44;;;;;;;;;3244:104;;;;-1:-1:-1;;;3244:104:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2989:5:::1;:13:::0;;;::::1;::::0;;;;;;:26;4832:6;;2979:49:::1;::::0;3017:10:::1;2979:9;:49::i;:::-;2971:98;;;;-1:-1:-1::0;;;2971:98:6::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4850:5:::2;:13:::0;;;::::2;::::0;;;;;;:60:::2;::::0;:37:::2;;4900:9:::0;4850:49:::2;:60::i;:::-;4925:51;::::0;4965:10:::2;::::0;-1:-1:-1;;;;;4925:51:6;::::2;::::0;4946:6;;4925:51:::2;::::0;;;::::2;3358:1:::1;4731:252:::0;;;:::o;695:144::-;790:42;802:14;818:13;790:11;:42::i;2212:391:106:-;2326:6;2301:21;:31;;2293:73;;;;;-1:-1:-1;;;2293:73:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;2473:35;;2455:12;;-1:-1:-1;;;;;2473:14:106;;;2496:6;;2455:12;2473:35;2455:12;2473:35;2496:6;2473:14;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2454:54;;;2526:7;2518:78;;;;-1:-1:-1;;;2518:78:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2212:391;;;:::o;2220:114:10:-;2288:9;7328:16:6;7302:5;:13;;;;;;;;;;:22;;;;;:42;;;;;;;;;;7294:89;;;;-1:-1:-1;;;7294:89:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2309:6:10::1;:18:::0;2220:114::o;1351:157:6:-;-1:-1:-1;;;;;1455:38:6;1496:5;1455:38;;;;;;;;;;;:46;;-1:-1:-1;;1455:46:6;;;1351:157::o;1117:228::-;-1:-1:-1;;;;;1223:27:6;;1215:71;;;;;-1:-1:-1;;;1215:71:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1296:35:6;:22;:35;;;;;;;;;;;:42;;-1:-1:-1;;1296:42:6;1334:4;1296:42;;;1117:228::o;150:171::-;276:21;;-1:-1:-1;;;;;276:38:6;;;:21;;:38;;150:171::o;941:170::-;-1:-1:-1;;;;;1067:37:6;1044:4;1067:37;;;;;;;;;;;;;;;941:170::o;554:135::-;661:21;-1:-1:-1;;;;;661:21:6;;554:135::o;662:175:105:-;771:58;;;-1:-1:-1;;;;;771:58:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;771:58:105;-1:-1:-1;;;771:58:105;;;744:86;;764:5;;744:19;:86::i;327:221:6:-;-1:-1:-1;;;;;433:25:6;;425:73;;;;-1:-1:-1;;;425:73:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;508:33;;-1:-1:-1;;;;;;508:33:6;-1:-1:-1;;;;;508:33:6;;;;;;;327:221::o;2671:1096:105:-;3267:27;3275:5;-1:-1:-1;;;;;3267:25:105;;:27::i;:::-;3259:71;;;;;-1:-1:-1;;;3259:71:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;3401:12;3415:23;3450:5;-1:-1:-1;;;;;3442:19:105;3462:4;3442:25;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3442:25:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3400:67;;;;3485:7;3477:52;;;;;-1:-1:-1;;;3477:52:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3544:17;;:21;3540:221;;3684:10;3673:30;;;;;;;;;;;;;;;-1:-1:-1;3673:30:105;3665:85;;;;-1:-1:-1;;;3665:85:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;685:610:106;745:4;1206:20;;1051:66;1245:23;;;;;;:42;;-1:-1:-1;1272:15:106;;;1245:42;1237:51;685:610;-1:-1:-1;;;;685:610:106:o",
  "source": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity ^0.6.0;\n\nimport \"../implementation/Withdrawable.sol\";\n\n// WithdrawableTest is derived from the abstract contract Withdrawable for testing purposes.\ncontract WithdrawableTest is Withdrawable {\n    enum Roles { Governance, Withdraw }\n\n    // solhint-disable-next-line no-empty-blocks\n    constructor() public {\n        _createExclusiveRole(uint256(Roles.Governance), uint256(Roles.Governance), msg.sender);\n        _createWithdrawRole(uint256(Roles.Withdraw), uint256(Roles.Governance), msg.sender);\n    }\n\n    function pay() external payable {\n        require(msg.value > 0);\n    }\n\n    function setInternalWithdrawRole(uint256 setRoleId) public {\n        _setWithdrawRole(setRoleId);\n    }\n}\n",
  "sourcePath": "/home/circleci/protocol/packages/core/contracts/common/test/WithdrawableTest.sol",
  "ast": {
    "absolutePath": "/home/circleci/protocol/packages/core/contracts/common/test/WithdrawableTest.sol",
    "exportedSymbols": {
      "WithdrawableTest": [
        5677
      ]
    },
    "id": 5678,
    "license": "AGPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5615,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:23:31"
      },
      {
        "absolutePath": "/home/circleci/protocol/packages/core/contracts/common/implementation/Withdrawable.sol",
        "file": "../implementation/Withdrawable.sol",
        "id": 5616,
        "nodeType": "ImportDirective",
        "scope": 5678,
        "sourceUnit": 3283,
        "src": "67:44:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5617,
              "name": "Withdrawable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3282,
              "src": "235:12:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Withdrawable_$3282",
                "typeString": "contract Withdrawable"
              }
            },
            "id": 5618,
            "nodeType": "InheritanceSpecifier",
            "src": "235:12:31"
          }
        ],
        "contractDependencies": [
          3042,
          3282
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 5677,
        "linearizedBaseContracts": [
          5677,
          3282,
          3042
        ],
        "name": "WithdrawableTest",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "WithdrawableTest.Roles",
            "id": 5621,
            "members": [
              {
                "id": 5619,
                "name": "Governance",
                "nodeType": "EnumValue",
                "src": "267:10:31"
              },
              {
                "id": 5620,
                "name": "Withdraw",
                "nodeType": "EnumValue",
                "src": "279:8:31"
              }
            ],
            "name": "Roles",
            "nodeType": "EnumDefinition",
            "src": "254:35:31"
          },
          {
            "body": {
              "id": 5654,
              "nodeType": "Block",
              "src": "365:196:31",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 5627,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5621,
                              "src": "404:5:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$5621_$",
                                "typeString": "type(enum WithdrawableTest.Roles)"
                              }
                            },
                            "id": 5628,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Governance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "404:16:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$5621",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$5621",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          ],
                          "id": 5626,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "396:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 5625,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "396:7:31",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 5629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "396:25:31",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 5632,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5621,
                              "src": "431:5:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$5621_$",
                                "typeString": "type(enum WithdrawableTest.Roles)"
                              }
                            },
                            "id": 5633,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Governance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "431:16:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$5621",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$5621",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          ],
                          "id": 5631,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "423:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 5630,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "423:7:31",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 5634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "423:25:31",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 5635,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "450:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "450:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 5624,
                      "name": "_createExclusiveRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3041,
                      "src": "375:20:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256,address)"
                      }
                    },
                    "id": 5637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "375:86:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5638,
                  "nodeType": "ExpressionStatement",
                  "src": "375:86:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 5642,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5621,
                              "src": "499:5:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$5621_$",
                                "typeString": "type(enum WithdrawableTest.Roles)"
                              }
                            },
                            "id": 5643,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Withdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "499:14:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$5621",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$5621",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          ],
                          "id": 5641,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "491:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 5640,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "491:7:31",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 5644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "491:23:31",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 5647,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5621,
                              "src": "524:5:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$5621_$",
                                "typeString": "type(enum WithdrawableTest.Roles)"
                              }
                            },
                            "id": 5648,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Governance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "524:16:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$5621",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$5621",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          ],
                          "id": 5646,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "516:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 5645,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "516:7:31",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 5649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "516:25:31",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 5650,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "543:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "543:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 5639,
                      "name": "_createWithdrawRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3267,
                      "src": "471:19:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256,address)"
                      }
                    },
                    "id": 5652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "471:83:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5653,
                  "nodeType": "ExpressionStatement",
                  "src": "471:83:31"
                }
              ]
            },
            "documentation": null,
            "id": 5655,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5622,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "355:2:31"
            },
            "returnParameters": {
              "id": 5623,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "365:0:31"
            },
            "scope": 5677,
            "src": "344:217:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5665,
              "nodeType": "Block",
              "src": "599:39:31",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 5659,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "617:3:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 5660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "617:9:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 5661,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "629:1:31",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "617:13:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 5658,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "609:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 5663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "609:22:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5664,
                  "nodeType": "ExpressionStatement",
                  "src": "609:22:31"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "1b9265b8",
            "id": 5666,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pay",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5656,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "579:2:31"
            },
            "returnParameters": {
              "id": 5657,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "599:0:31"
            },
            "scope": 5677,
            "src": "567:71:31",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5675,
              "nodeType": "Block",
              "src": "703:44:31",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5672,
                        "name": "setRoleId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5668,
                        "src": "730:9:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5671,
                      "name": "_setWithdrawRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3281,
                      "src": "713:16:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 5673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "713:27:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5674,
                  "nodeType": "ExpressionStatement",
                  "src": "713:27:31"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "6b85f1b0",
            "id": 5676,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setInternalWithdrawRole",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5669,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5668,
                  "mutability": "mutable",
                  "name": "setRoleId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5676,
                  "src": "677:17:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5667,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "677:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "676:19:31"
            },
            "returnParameters": {
              "id": 5670,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "703:0:31"
            },
            "scope": 5677,
            "src": "644:103:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 5678,
        "src": "206:543:31"
      }
    ],
    "src": "42:708:31"
  },
  "legacyAST": {
    "absolutePath": "/home/circleci/protocol/packages/core/contracts/common/test/WithdrawableTest.sol",
    "exportedSymbols": {
      "WithdrawableTest": [
        5677
      ]
    },
    "id": 5678,
    "license": "AGPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5615,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:23:31"
      },
      {
        "absolutePath": "/home/circleci/protocol/packages/core/contracts/common/implementation/Withdrawable.sol",
        "file": "../implementation/Withdrawable.sol",
        "id": 5616,
        "nodeType": "ImportDirective",
        "scope": 5678,
        "sourceUnit": 3283,
        "src": "67:44:31",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5617,
              "name": "Withdrawable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3282,
              "src": "235:12:31",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Withdrawable_$3282",
                "typeString": "contract Withdrawable"
              }
            },
            "id": 5618,
            "nodeType": "InheritanceSpecifier",
            "src": "235:12:31"
          }
        ],
        "contractDependencies": [
          3042,
          3282
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 5677,
        "linearizedBaseContracts": [
          5677,
          3282,
          3042
        ],
        "name": "WithdrawableTest",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "WithdrawableTest.Roles",
            "id": 5621,
            "members": [
              {
                "id": 5619,
                "name": "Governance",
                "nodeType": "EnumValue",
                "src": "267:10:31"
              },
              {
                "id": 5620,
                "name": "Withdraw",
                "nodeType": "EnumValue",
                "src": "279:8:31"
              }
            ],
            "name": "Roles",
            "nodeType": "EnumDefinition",
            "src": "254:35:31"
          },
          {
            "body": {
              "id": 5654,
              "nodeType": "Block",
              "src": "365:196:31",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 5627,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5621,
                              "src": "404:5:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$5621_$",
                                "typeString": "type(enum WithdrawableTest.Roles)"
                              }
                            },
                            "id": 5628,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Governance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "404:16:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$5621",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$5621",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          ],
                          "id": 5626,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "396:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 5625,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "396:7:31",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 5629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "396:25:31",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 5632,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5621,
                              "src": "431:5:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$5621_$",
                                "typeString": "type(enum WithdrawableTest.Roles)"
                              }
                            },
                            "id": 5633,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Governance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "431:16:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$5621",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$5621",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          ],
                          "id": 5631,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "423:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 5630,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "423:7:31",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 5634,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "423:25:31",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 5635,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "450:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "450:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 5624,
                      "name": "_createExclusiveRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3041,
                      "src": "375:20:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256,address)"
                      }
                    },
                    "id": 5637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "375:86:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5638,
                  "nodeType": "ExpressionStatement",
                  "src": "375:86:31"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 5642,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5621,
                              "src": "499:5:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$5621_$",
                                "typeString": "type(enum WithdrawableTest.Roles)"
                              }
                            },
                            "id": 5643,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Withdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "499:14:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$5621",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$5621",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          ],
                          "id": 5641,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "491:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 5640,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "491:7:31",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 5644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "491:23:31",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 5647,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5621,
                              "src": "524:5:31",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$5621_$",
                                "typeString": "type(enum WithdrawableTest.Roles)"
                              }
                            },
                            "id": 5648,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Governance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "524:16:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$5621",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$5621",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          ],
                          "id": 5646,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "516:7:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 5645,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "516:7:31",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 5649,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "516:25:31",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 5650,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "543:3:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 5651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "543:10:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 5639,
                      "name": "_createWithdrawRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3267,
                      "src": "471:19:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256,address)"
                      }
                    },
                    "id": 5652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "471:83:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5653,
                  "nodeType": "ExpressionStatement",
                  "src": "471:83:31"
                }
              ]
            },
            "documentation": null,
            "id": 5655,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5622,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "355:2:31"
            },
            "returnParameters": {
              "id": 5623,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "365:0:31"
            },
            "scope": 5677,
            "src": "344:217:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5665,
              "nodeType": "Block",
              "src": "599:39:31",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5662,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 5659,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "617:3:31",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 5660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "617:9:31",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 5661,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "629:1:31",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "617:13:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 5658,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "609:7:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 5663,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "609:22:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5664,
                  "nodeType": "ExpressionStatement",
                  "src": "609:22:31"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "1b9265b8",
            "id": 5666,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pay",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5656,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "579:2:31"
            },
            "returnParameters": {
              "id": 5657,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "599:0:31"
            },
            "scope": 5677,
            "src": "567:71:31",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 5675,
              "nodeType": "Block",
              "src": "703:44:31",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 5672,
                        "name": "setRoleId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5668,
                        "src": "730:9:31",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5671,
                      "name": "_setWithdrawRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3281,
                      "src": "713:16:31",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 5673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "713:27:31",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5674,
                  "nodeType": "ExpressionStatement",
                  "src": "713:27:31"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "6b85f1b0",
            "id": 5676,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setInternalWithdrawRole",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 5669,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5668,
                  "mutability": "mutable",
                  "name": "setRoleId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 5676,
                  "src": "677:17:31",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5667,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "677:7:31",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "676:19:31"
            },
            "returnParameters": {
              "id": 5670,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "703:0:31"
            },
            "scope": 5677,
            "src": "644:103:31",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 5678,
        "src": "206:543:31"
      }
    ],
    "src": "42:708:31"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2021-02-26T22:07:27.627Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addMember(uint256,address)": {
        "details": "Reverts if `roleId` does not represent an initialized, SharedRole or if the caller is not a member of the managing role for `roleId`.",
        "params": {
          "newMember": "the new SharedRole member.",
          "roleId": "the SharedRole membership to modify."
        }
      },
      "getMember(uint256)": {
        "details": "Reverts if `roleId` does not represent an initialized, exclusive role.",
        "params": {
          "roleId": "the ExclusiveRole membership to check."
        },
        "returns": {
          "_0": "the address of the current ExclusiveRole member."
        }
      },
      "holdsRole(uint256,address)": {
        "details": "Reverts if roleId does not correspond to an initialized role.",
        "params": {
          "memberToCheck": "the address to check.",
          "roleId": "the Role to check."
        },
        "returns": {
          "_0": "True if `memberToCheck` is a member of `roleId`."
        }
      },
      "removeMember(uint256,address)": {
        "details": "Reverts if `roleId` does not represent an initialized, SharedRole or if the caller is not a member of the managing role for `roleId`.",
        "params": {
          "memberToRemove": "the current SharedRole member to remove.",
          "roleId": "the SharedRole membership to modify."
        }
      },
      "renounceMembership(uint256)": {
        "details": "Reverts if the caller is not a member of the role for `roleId` or if `roleId` is not an initialized, SharedRole.",
        "params": {
          "roleId": "the SharedRole membership to modify."
        }
      },
      "resetMember(uint256,address)": {
        "details": "Reverts if the caller is not a member of the managing role for `roleId` or if `roleId` is not an initialized, ExclusiveRole.",
        "params": {
          "newMember": "the new ExclusiveRole member.",
          "roleId": "the ExclusiveRole membership to modify."
        }
      },
      "withdrawErc20(address,uint256)": {
        "params": {
          "amount": "amount of tokens to withdraw.",
          "erc20Address": "ERC20 token to withdraw."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addMember(uint256,address)": {
        "notice": "Adds `newMember` to the shared role, `roleId`."
      },
      "getMember(uint256)": {
        "notice": "Gets the current holder of the exclusive role, `roleId`."
      },
      "holdsRole(uint256,address)": {
        "notice": "Whether `memberToCheck` is a member of roleId."
      },
      "removeMember(uint256,address)": {
        "notice": "Removes `memberToRemove` from the shared role, `roleId`."
      },
      "renounceMembership(uint256)": {
        "notice": "Removes caller from the role, `roleId`."
      },
      "resetMember(uint256,address)": {
        "notice": "Changes the exclusive role holder of `roleId` to `newMember`."
      },
      "withdraw(uint256)": {
        "notice": "Withdraws ETH from the contract."
      },
      "withdrawErc20(address,uint256)": {
        "notice": "Withdraws ERC20 tokens from the contract."
      }
    },
    "version": 1
  }
}