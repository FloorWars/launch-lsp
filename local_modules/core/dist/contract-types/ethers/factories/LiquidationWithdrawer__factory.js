"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.LiquidationWithdrawer__factory = void 0;
const ethers_1 = require("ethers");
class LiquidationWithdrawer__factory extends ethers_1.ContractFactory {
    constructor(signer) {
        super(_abi, _bytecode, signer);
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.LiquidationWithdrawer__factory = LiquidationWithdrawer__factory;
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "financialContractAddress",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "liquidationId",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "sponsor",
                type: "address",
            },
        ],
        name: "withdrawLiquidation",
        outputs: [
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "rawValue",
                        type: "uint256",
                    },
                ],
                internalType: "struct FixedPoint.Unsigned",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b506101c7806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80631c9eb97b14610030575b600080fd5b61004361003e366004610109565b610056565b6040519051815260200160405180910390f35b6040805160208101825260008152905163360598e160e01b8152600481018490526001600160a01b03838116602483015285169063360598e190604401602060405180830381600087803b1580156100ad57600080fd5b505af11580156100c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100e59190610144565b949350505050565b80356001600160a01b038116811461010457600080fd5b919050565b60008060006060848603121561011d578283fd5b610126846100ed565b92506020840135915061013b604085016100ed565b90509250925092565b600060208284031215610155578081fd5b6040516020810181811067ffffffffffffffff8211171561018457634e487b7160e01b83526041600452602483fd5b604052915182525091905056fea2646970667358221220b48aa5f3d439ab7527d873c917bd99cfc64223da1963491fcbdb4fd7bd81fcfb64736f6c63430008040033";
