"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.FxChildMock__factory = void 0;
const ethers_1 = require("ethers");
class FxChildMock__factory extends ethers_1.ContractFactory {
    constructor(signer) {
        super(_abi, _bytecode, signer);
    }
    deploy(_systemCaller, overrides) {
        return super.deploy(_systemCaller, overrides || {});
    }
    getDeployTransaction(_systemCaller, overrides) {
        return super.getDeployTransaction(_systemCaller, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.FxChildMock__factory = FxChildMock__factory;
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "_systemCaller",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "rootMessageSender",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "receiver",
                type: "address",
            },
            {
                indexed: false,
                internalType: "bytes",
                name: "data",
                type: "bytes",
            },
        ],
        name: "NewFxMessage",
        type: "event",
    },
    {
        inputs: [],
        name: "fxRoot",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "systemCaller",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_fxRoot",
                type: "address",
            },
        ],
        name: "setFxRoot",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "stateId",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "_data",
                type: "bytes",
            },
        ],
        name: "onStateReceive",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b5060405161052838038061052883398101604081905261002f91610054565b600180546001600160a01b0319166001600160a01b0392909216919091179055610082565b600060208284031215610065578081fd5b81516001600160a01b038116811461007b578182fd5b9392505050565b610497806100916000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806326c53bea146100515780634c8ff99e146100665780638b9805d414610079578063de9b771f146100a8575b600080fd5b61006461005f366004610312565b6100bb565b005b61006461007436600461021e565b6101e6565b60015461008c906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b60005461008c906001600160a01b031681565b6001546001600160a01b0316331461012b5760405162461bcd60e51b815260206004820152602960248201527f496e76616c69642073656e6465723a206d7573742062652073797374656d20736044820152683ab832b9103ab9b2b960b91b606482015260840160405180910390fd5b6000808061013b84860186610241565b9250925092507ff091cd9cbbaff01426d8183042dff452ef18e6690f19816d5dd114e00761e0e8838383604051610174939291906103d4565b60405180910390a1604051639a7c4b7160e01b81526001600160a01b03831690639a7c4b71906101ac90899087908690600401610409565b600060405180830381600087803b1580156101c657600080fd5b505af11580156101da573d6000803e3d6000fd5b50505050505050505050565b6000546001600160a01b0316156101fc57600080fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b60006020828403121561022f578081fd5b813561023a81610449565b9392505050565b600080600060608486031215610255578182fd5b833561026081610449565b9250602084013561027081610449565b9150604084013567ffffffffffffffff8082111561028c578283fd5b818601915086601f83011261029f578283fd5b8135818111156102b1576102b1610433565b604051601f8201601f19908116603f011681019083821181831017156102d9576102d9610433565b816040528281528960208487010111156102f1578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600080600060408486031215610326578283fd5b83359250602084013567ffffffffffffffff80821115610344578384fd5b818601915086601f830112610357578384fd5b813581811115610365578485fd5b876020828501011115610376578485fd5b6020830194508093505050509250925092565b60008151808452815b818110156103ae57602081850181015186830182015201610392565b818111156103bf5782602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0384811682528316602082015260606040820181905260009061040090830184610389565b95945050505050565b8381526001600160a01b038316602082015260606040820181905260009061040090830184610389565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461045e57600080fd5b5056fea26469706673582212207ab1aff3b312c3cd5aaab5971e13472ce62577952b1fa4b08e04efc3a034a06164736f6c63430008040033";
