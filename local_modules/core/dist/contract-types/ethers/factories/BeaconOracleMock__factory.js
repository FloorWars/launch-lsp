"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.BeaconOracleMock__factory = void 0;
const ethers_1 = require("ethers");
class BeaconOracleMock__factory extends ethers_1.ContractFactory {
    constructor(signer) {
        super(_abi, _bytecode, signer);
    }
    deploy(_finderAddress, _chainID, overrides) {
        return super.deploy(_finderAddress, _chainID, overrides || {});
    }
    getDeployTransaction(_finderAddress, _chainID, overrides) {
        return super.getDeployTransaction(_finderAddress, _chainID, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.BeaconOracleMock__factory = BeaconOracleMock__factory;
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "_finderAddress",
                type: "address",
            },
            {
                internalType: "uint8",
                name: "_chainID",
                type: "uint8",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint8",
                name: "chainID",
                type: "uint8",
            },
            {
                indexed: true,
                internalType: "bytes32",
                name: "identifier",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "time",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "bytes",
                name: "ancillaryData",
                type: "bytes",
            },
        ],
        name: "PriceRequestAdded",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint8",
                name: "chainID",
                type: "uint8",
            },
            {
                indexed: true,
                internalType: "bytes32",
                name: "identifier",
                type: "bytes32",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "time",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "bytes",
                name: "ancillaryData",
                type: "bytes",
            },
            {
                indexed: false,
                internalType: "int256",
                name: "price",
                type: "int256",
            },
        ],
        name: "PushedPrice",
        type: "event",
    },
    {
        inputs: [],
        name: "currentChainID",
        outputs: [
            {
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "finder",
        outputs: [
            {
                internalType: "contract FinderInterface",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "identifier",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "time",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "ancillaryData",
                type: "bytes",
            },
        ],
        name: "requestPrice",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "identifier",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "time",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "ancillaryData",
                type: "bytes",
            },
        ],
        name: "encodePriceRequest",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "identifier",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "time",
                type: "uint256",
            },
            {
                internalType: "bytes",
                name: "ancillaryData",
                type: "bytes",
            },
            {
                internalType: "int256",
                name: "price",
                type: "int256",
            },
        ],
        name: "publishPrice",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "getBridge",
        outputs: [
            {
                internalType: "contract IBridge",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b5060405161079c38038061079c83398101604081905261002f91610068565b600280546001600160a01b0319166001600160a01b0393909316929092179091556000805460ff191660ff9092169190911790556100b1565b6000806040838503121561007a578182fd5b82516001600160a01b0381168114610090578283fd5b602084015190925060ff811681146100a6578182fd5b809150509250929050565b6106dc806100c06000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630fffbaf314610067578063216666a41461008c57806370a6c197146100a15780637dc59b46146100c2578063b179e1e7146100d5578063b9a3c84c146100f4575b600080fd5b61006f610107565b6040516001600160a01b0390911681526020015b60405180910390f35b61009f61009a36600461052d565b610116565b005b6100b46100af36600461052d565b61013f565b604051908152602001610083565b61009f6100d036600461057b565b61015a565b6000546100e29060ff1681565b60405160ff9091168152602001610083565b60025461006f906001600160a01b031681565b6000610111610173565b905090565b6000546101289060ff168484846101f8565b60005461013a9060ff16848484610296565b505050565b600080546101529060ff16858585610340565b949350505050565b60005461016d9060ff1685858585610379565b50505050565b6002546040516302abf57960e61b81526542726964676560d01b60048201526000916001600160a01b03169063aafd5e409060240160206040518083038186803b1580156101c057600080fd5b505afa1580156101d4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061011191906104ff565b600061020685858585610340565b6000818152600160205260408120919250815460ff16600481111561023b57634e487b7160e01b600052602160045260246000fd5b141561028e57805460ff19166001178155604051859060ff8816907f73a67cb84132a2f461ed3c04c189c0b36d084058f1776b565164aad656c1365390610285908890889061061c565b60405180910390a35b505050505050565b60006102a485858585610340565b6000818152600160208190526040909120919250815460ff1660048111156102dc57634e487b7160e01b600052602160045260246000fd5b1461032e5760405162461bcd60e51b815260206004820152601c60248201527f507269636520686173206e6f74206265656e207265717565737465640000000060448201526064015b60405180910390fd5b805460ff191660021790555050505050565b600084848484604051602001610359949392919061065e565b604051602081830303815290604052805190602001209050949350505050565b600061038786868686610340565b60008181526001602052604090209091506002815460ff1660048111156103be57634e487b7160e01b600052602160045260246000fd5b1461041a5760405162461bcd60e51b815260206004820152602660248201527f50726963652072657175657374206973206e6f742063757272656e746c792070604482015265656e64696e6760d01b6064820152608401610325565b60018101839055805460ff19166003178155604051869060ff8916907ffee3c549ded1d140e76f82727129b254f5d19815ec4c4dbfe2199145bf72b3359061046790899089908990610635565b60405180910390a350505050505050565b600082601f830112610488578081fd5b813567ffffffffffffffff808211156104a3576104a3610690565b604051601f8301601f19908116603f011681019082821181831017156104cb576104cb610690565b816040528381528660208588010111156104e3578485fd5b8360208701602083013792830160200193909352509392505050565b600060208284031215610510578081fd5b81516001600160a01b0381168114610526578182fd5b9392505050565b600080600060608486031215610541578182fd5b8335925060208401359150604084013567ffffffffffffffff811115610565578182fd5b61057186828701610478565b9150509250925092565b60008060008060808587031215610590578081fd5b8435935060208501359250604085013567ffffffffffffffff8111156105b4578182fd5b6105c087828801610478565b949793965093946060013593505050565b60008151808452815b818110156105f6576020818501810151868301820152016105da565b818111156106075782602083870101525b50601f01601f19169290920160200192915050565b82815260406020820152600061015260408301846105d1565b83815260606020820152600061064e60608301856105d1565b9050826040830152949350505050565b60ff8516815283602082015282604082015260806060820152600061068660808301846105d1565b9695505050505050565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220dd71c506702e52931d33f4913e44e3de30bc4072bcfbab8092ccb44e39d573fd64736f6c63430008040033";
