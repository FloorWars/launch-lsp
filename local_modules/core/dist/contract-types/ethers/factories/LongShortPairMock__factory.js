"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.LongShortPairMock__factory = void 0;
const ethers_1 = require("ethers");
class LongShortPairMock__factory extends ethers_1.ContractFactory {
    constructor(signer) {
        super(_abi, _bytecode, signer);
    }
    deploy(_expirationTimestamp, _collateralPerPair, overrides) {
        return super.deploy(_expirationTimestamp, _collateralPerPair, overrides || {});
    }
    getDeployTransaction(_expirationTimestamp, _collateralPerPair, overrides) {
        return super.getDeployTransaction(_expirationTimestamp, _collateralPerPair, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.LongShortPairMock__factory = LongShortPairMock__factory;
const _abi = [
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_expirationTimestamp",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_collateralPerPair",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "collateralPerPair",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "expirationTimestamp",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b506040516100fd3803806100fd83398101604081905261002f9161003d565b600091909155600155610060565b6000806040838503121561004f578182fd5b505080516020909101519092909150565b608f8061006e6000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c80639f43ddd2146037578063e964ae02146051575b600080fd5b603f60005481565b60405190815260200160405180910390f35b603f6001548156fea26469706673582212201f5530ded51b22fa9cb81f54e425777fc7a40d38fcf842e4576d694daad9f86d64736f6c63430008040033";
