"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.TokenMigrator__factory = void 0;
const ethers_1 = require("ethers");
class TokenMigrator__factory extends ethers_1.ContractFactory {
    constructor(signer) {
        super(_abi, _bytecode, signer);
    }
    deploy(_rate, _oldToken, _newToken, overrides) {
        return super.deploy(_rate, _oldToken, _newToken, overrides || {});
    }
    getDeployTransaction(_rate, _oldToken, _newToken, overrides) {
        return super.getDeployTransaction(_rate, _oldToken, _newToken, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.TokenMigrator__factory = TokenMigrator__factory;
const _abi = [
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "rawValue",
                        type: "uint256",
                    },
                ],
                internalType: "struct FixedPoint.Unsigned",
                name: "_rate",
                type: "tuple",
            },
            {
                internalType: "address",
                name: "_oldToken",
                type: "address",
            },
            {
                internalType: "address",
                name: "_newToken",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        name: "hasMigrated",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "newToken",
        outputs: [
            {
                internalType: "contract ExpandedIERC20",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "oldToken",
        outputs: [
            {
                internalType: "contract VotingToken",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "rate",
        outputs: [
            {
                internalType: "uint256",
                name: "rawValue",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "snapshotId",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "tokenHolder",
                type: "address",
            },
        ],
        name: "migrateTokens",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b5060405161074538038061074583398101604081905261002f916101c0565b61004760008461013960201b6103261790919060201c565b6100895760405162461bcd60e51b815260206004820152600f60248201526e0526174652063616e2774206265203608c1b604482015260640160405180910390fd5b8251600355600180546001600160a01b038084166001600160a01b03199283161790925560008054928516929091168217815560408051634b88b8ad60e11b81529051639711715a92600480840193602093929083900390910190829087803b1580156100f557600080fd5b505af1158015610109573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061012d919061023d565b60025550610280915050565b600061014482610150565b51835111905092915050565b6040805160208101909152600081526040518060200160405280610189670de0b6b3a76400008561019160201b61033d1790919060201c565b905292915050565b600061019d8284610255565b9392505050565b80516001600160a01b03811681146101bb57600080fd5b919050565b600080600083850360608112156101d5578384fd5b60208112156101e2578384fd5b50604051602081016001600160401b038111828210171561021157634e487b7160e01b85526041600452602485fd5b604052845181529250610226602085016101a4565b9150610234604085016101a4565b90509250925092565b60006020828403121561024e578081fd5b5051919050565b600081600019048311821515161561027b57634e487b7160e01b81526011600452602481fd5b500290565b6104b68061028f6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80632c4e722e146100675780632ddc79b714610084578063b31c710a1461008d578063c1684711146100b8578063c42bd05a146100cd578063d7625c88146100e0575b600080fd5b6003546100719081565b6040519081526020015b60405180910390f35b61007160025481565b6000546100a0906001600160a01b031681565b6040516001600160a01b03909116815260200161007b565b6100cb6100c63660046103d6565b610113565b005b6001546100a0906001600160a01b031681565b6101036100ee3660046103d6565b60046020526000908152604090205460ff1681565b604051901515815260200161007b565b6001600160a01b03811660009081526004602052604090205460ff161561017b5760405162461bcd60e51b8152602060048201526017602482015276416c7265616479206d6967726174656420746f6b656e7360481b60448201526064015b60405180910390fd5b6001600160a01b038181166000818152600460209081526040808320805460ff19166001179055805191820190819052825460025463277166bf60e11b9092526024830194909452604482015290929091829116634ee2cd7e6064830160206040518083038186803b1580156101f057600080fd5b505afa158015610204573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610228919061041d565b90529050610237816000610326565b61023f575050565b6040805160208101909152600354815260009061025d908390610350565b60015481516040516340c10f1960e01b81526001600160a01b038781166004830152602482019290925292935016906340c10f1990604401602060405180830381600087803b1580156102af57600080fd5b505af11580156102c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102e791906103fd565b6103215760405162461bcd60e51b815260206004820152600b60248201526a135a5b9d0819985a5b195960aa1b6044820152606401610172565b505050565b600061033182610395565b51835111905092915050565b60006103498284610455565b9392505050565b604080516020810190915260008152604080516020810190915282518451829161038c9161038690670de0b6b3a764000061033d565b906103ca565b90529392505050565b6040805160208101909152600081526040805160208101909152806103c284670de0b6b3a764000061033d565b905292915050565b60006103498284610435565b6000602082840312156103e7578081fd5b81356001600160a01b0381168114610349578182fd5b60006020828403121561040e578081fd5b81518015158114610349578182fd5b60006020828403121561042e578081fd5b5051919050565b60008261045057634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561047b57634e487b7160e01b81526011600452602481fd5b50029056fea2646970667358221220ce168fc8ad10d14b2c75b94f86715e58a13a88f984c91ee39f44e9dce4fb52f564736f6c63430008040033";
