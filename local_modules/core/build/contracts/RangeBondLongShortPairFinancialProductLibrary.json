{
  "contractName": "RangeBondLongShortPairFinancialProductLibrary",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "longShortPairParameters",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "highPriceRange",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lowPriceRange",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "longShortPair",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "highPriceRange",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lowPriceRange",
          "type": "uint256"
        }
      ],
      "name": "setLongShortPairParameters",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "expiryPrice",
          "type": "int256"
        }
      ],
      "name": "percentageLongCollateralAtExpiry",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"longShortPairParameters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"highPriceRange\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lowPriceRange\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"expiryPrice\",\"type\":\"int256\"}],\"name\":\"percentageLongCollateralAtExpiry\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"longShortPair\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"highPriceRange\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lowPriceRange\",\"type\":\"uint256\"}],\"name\":\"setLongShortPairParameters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"percentageLongCollateralAtExpiry(int256)\":{\"params\":{\"expiryPrice\":\"price from the optimistic oracle for the LSP price identifier.\"},\"returns\":{\"_0\":\"expiryPercentLong to indicate how much collateral should be sent between long and short tokens.\"}},\"setLongShortPairParameters(address,uint256,uint256)\":{\"details\":\"between highPriceRange and lowPriceRange the contract will payout a fixed amount of lowPriceRange*collateralPerPair (i.e the \\\"notional\\\" of the yield dollar).Note: a) Any address can set these parameters b) existing LSP parameters for address not set. c) highPriceRange > lowPriceRange. d) parameters price can only be set once to prevent the deployer from changing the parameters after the fact. e) For safety, a parameters should be set before depositing any synthetic tokens in a liquidity pool. f) longShortPair must expose an expirationTimestamp method to validate it is correctly deployed.\",\"params\":{\"highPriceRange\":\"high price range after which the payout transforms from a yield dollar to a call option.\",\"longShortPair\":\"address of the LSP contract.\",\"lowPriceRange\":\"low price range below which the payout transforms from a yield dollar to a short put option.\"}}},\"title\":\"Range Bond Long Short Pair Financial Product Library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"percentageLongCollateralAtExpiry(int256)\":{\"notice\":\"Returns a number between 0 and 1e18 to indicate how much collateral each long and short token are entitled to per collateralPerPair.\"},\"setLongShortPairParameters(address,uint256,uint256)\":{\"notice\":\"Enables any address to set the parameters price for an associated financial product.\"}},\"notice\":\"Adds settlement logic to create range bond LSPs. A range bond is the combination of a Yield dollar, short put option and long call option enabling the token sponsor to issue structured products to unlock DeFi treasuries. A range bond is defined as = Yield Dollar - Put Option + Call option. Numerically this is found using: N = Notional of bond P = price of token T = number of tokens R1 = low price range R2 = high price range T = min(N/P,N/R1) + max((N/R2*(P-R2))/P,0) - At any price below the low price range (R1) the long side effectively holds a fixed number of collateral equal to collateralPerPair from the LSP with the value of expiryPercentLong = 1. This is the max payout in collateral. - Any price between R1 and R2 gives a payout equivalent to a yield dollar (bond) of notional N. In this range the expiryPercentLong shifts to keep the payout in dollar terms equal to the bond notional. - At any price above R2 the long holders are entitled to a fixed, minimum number of collateral equal to N/R2 with a expiryPercentLong=(N/R2)/collateralPerPair. The expression for the number of tokens paid out to the long side (T above) can be algebraically simplified, transformed to remove the notional and reframed to express the expiryPercentLong as [min(max(1/R2,1/P),1/R1)]/(1/R1) With this equation, the contract deployer does not need to specify the bond notional N. The notional can be calculated by taking R1*collateralPerPair from the LSP.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/circleci/protocol/packages/core/contracts/financial-templates/common/financial-product-libraries/long-short-pair-libraries/RangeBondLongShortPairFinancialProductLibrary.sol\":\"RangeBondLongShortPairFinancialProductLibrary\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":199},\"remappings\":[]},\"sources\":{\"/home/circleci/protocol/packages/core/contracts/common/implementation/FixedPoint.sol\":{\"keccak256\":\"0x8ea44f1bf5e1efcfc5943ea67c3dc5bf7ce1ba84bf2d6b868baafac7e422cc01\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://94e828e682e9e44991807f5f39c2ed499b451d65155d8a6c6d0fd62b13dbd222\",\"dweb:/ipfs/QmPfPWyR9deca2dHmwVnm3E9Kt2fLXXABQE4WT8iSdKSXm\"]},\"/home/circleci/protocol/packages/core/contracts/common/implementation/Lockable.sol\":{\"keccak256\":\"0xcd34b3f83b61a096b53020749f327096d5cacd89c2393d947595afb934496ad4\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://aef5cb31ab23e1e6baad76130c29aff1ee3fcda3c4ffc80e0a5294341a253934\",\"dweb:/ipfs/QmNyso4UszNxE6un3Cqc3R7KiBmZzdWNULvjBDfnLRAmwc\"]},\"/home/circleci/protocol/packages/core/contracts/financial-templates/common/financial-product-libraries/long-short-pair-libraries/LongShortPairFinancialProductLibrary.sol\":{\"keccak256\":\"0x74229dc41c9be406f5b038f5e7e42403355110559e5f37ade5ed3d547020cfae\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://05bfc5c3dcf36b82db8530b259933c8112dbfa9ca14f287b4bf57209aee5449b\",\"dweb:/ipfs/QmdvWd7xU6FcduDBjzw1QpqRCRe1ogkL4xXYWWMsYT6vYN\"]},\"/home/circleci/protocol/packages/core/contracts/financial-templates/common/financial-product-libraries/long-short-pair-libraries/RangeBondLongShortPairFinancialProductLibrary.sol\":{\"keccak256\":\"0xcbbb80413a00640aef0d32459e400b271ee8f34d23e615d5445df03ba7b08228\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://ed6958d55dc9c5bcfb516af93b8538acfdab10b71d757523de50e83143b52a40\",\"dweb:/ipfs/QmS2vsVjEaY6cYzXJtQM5yKUy8V1Nz8mK9atjU2R6C4HuC\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1477864def7febd9826918e50482a1ee7068b337b03804a7e0e98c674ac57c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bdd8ea2ace1bf716007318f8aca21d32384f0b8b295adac55147270767441fa\",\"dweb:/ipfs/QmSv235N45Ub3wFXdTLNiS3k4b7FAudtEL8s6g1PwcsCcS\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x2526b7c6a366fc211bbc176078ab02b83833e7682abcc5b3bed9d700b34e2a3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f9529d3d365e8415155cee11394e0f7c0de2152b601b7e77508fce16cb4a509\",\"dweb:/ipfs/QmVhbcLVsAzvqfjsdLwy25XMjgVJm7Z3w2JCNiNbZF2GHT\"]},\"@openzeppelin/contracts/utils/math/SignedSafeMath.sol\":{\"keccak256\":\"0xd1ddc24b24f12a347093844dd645c3a96bcdce05d1f51b8650946ad404cb3c40\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://873363c817ef68913ced271e77fc4af21d4a94ffba23de2b205c6e9de8ff6b72\",\"dweb:/ipfs/QmNmN46R3rrvTxMUjDTbZiCiqqTX9TRvWbiaN9qLrWQXPS\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506000805460ff191660011790556105be8061002d6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80632da52361146100465780639299cbed1461006c57806392a98f53146100a8575b600080fd5b61005961005436600461050d565b6100bd565b6040519081526020015b60405180910390f35b61009361007a3660046104c1565b6001602081905260009182526040909120805491015482565b60408051928352602083019190915201610063565b6100bb6100b63660046104db565b6101e1565b005b60006100c76103bd565b3360009081526001602081815260409283902083518085019094528054808552920154908301521515806100fe5750602081015115155b61014f5760405162461bcd60e51b815260206004820152601e60248201527f506172616d73206e6f742073657420666f722063616c6c696e67204c5350000060448201526064015b60405180910390fd5b600080841361015f576000610161565b835b905081602001518111610183576101786001610411565b5192506101dc915050565b815181116101b0576040805160208082018352838252825180820190935284015182526101789190610446565b604080516020808201835284518252825180820190935284015182526101d69190610446565b51925050505b919050565b6101e96103bd565b6101f86000805460ff19169055565b826001600160a01b0316639f43ddd26040518163ffffffff1660e01b815260040160206040518083038186803b15801561023157600080fd5b505afa158015610245573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102699190610525565b6102ab5760405162461bcd60e51b8152602060048201526013602482015272496e76616c6964204c5350206164647265737360681b6044820152606401610146565b8082116102eb5760405162461bcd60e51b815260206004820152600e60248201526d496e76616c696420626f756e647360901b6044820152606401610146565b6001600160a01b038316600090815260016020818152604092839020835180850190945280548085529201549083015215801561032a57506020810151155b61036f5760405162461bcd60e51b815260206004820152601660248201527514185c985b595d195c9cc8185b1c9958591e481cd95d60521b6044820152606401610146565b5060408051808201825283815260208082018481526001600160a01b0387166000908152600192839052939093209151825591519101556103b86000805460ff19166001179055565b505050565b60005460ff1661040f5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610146565b565b60408051602081019091526000815260408051602081019091528061043e84670de0b6b3a764000061048b565b905292915050565b60408051602081019091526000815260408051602081019091528251845182916104829161047c90670de0b6b3a764000061048b565b9061049e565b90529392505050565b6000610497828461055d565b9392505050565b6000610497828461053d565b80356001600160a01b03811681146101dc57600080fd5b6000602082840312156104d2578081fd5b610497826104aa565b6000806000606084860312156104ef578182fd5b6104f8846104aa565b95602085013595506040909401359392505050565b60006020828403121561051e578081fd5b5035919050565b600060208284031215610536578081fd5b5051919050565b60008261055857634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561058357634e487b7160e01b81526011600452602481fd5b50029056fea2646970667358221220d1694d91ef2d8b719871ca8a3fc6fab4adaeba2d45a64bc46fc52eb03000f4ad64736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c80632da52361146100465780639299cbed1461006c57806392a98f53146100a8575b600080fd5b61005961005436600461050d565b6100bd565b6040519081526020015b60405180910390f35b61009361007a3660046104c1565b6001602081905260009182526040909120805491015482565b60408051928352602083019190915201610063565b6100bb6100b63660046104db565b6101e1565b005b60006100c76103bd565b3360009081526001602081815260409283902083518085019094528054808552920154908301521515806100fe5750602081015115155b61014f5760405162461bcd60e51b815260206004820152601e60248201527f506172616d73206e6f742073657420666f722063616c6c696e67204c5350000060448201526064015b60405180910390fd5b600080841361015f576000610161565b835b905081602001518111610183576101786001610411565b5192506101dc915050565b815181116101b0576040805160208082018352838252825180820190935284015182526101789190610446565b604080516020808201835284518252825180820190935284015182526101d69190610446565b51925050505b919050565b6101e96103bd565b6101f86000805460ff19169055565b826001600160a01b0316639f43ddd26040518163ffffffff1660e01b815260040160206040518083038186803b15801561023157600080fd5b505afa158015610245573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102699190610525565b6102ab5760405162461bcd60e51b8152602060048201526013602482015272496e76616c6964204c5350206164647265737360681b6044820152606401610146565b8082116102eb5760405162461bcd60e51b815260206004820152600e60248201526d496e76616c696420626f756e647360901b6044820152606401610146565b6001600160a01b038316600090815260016020818152604092839020835180850190945280548085529201549083015215801561032a57506020810151155b61036f5760405162461bcd60e51b815260206004820152601660248201527514185c985b595d195c9cc8185b1c9958591e481cd95d60521b6044820152606401610146565b5060408051808201825283815260208082018481526001600160a01b0387166000908152600192839052939093209151825591519101556103b86000805460ff19166001179055565b505050565b60005460ff1661040f5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610146565b565b60408051602081019091526000815260408051602081019091528061043e84670de0b6b3a764000061048b565b905292915050565b60408051602081019091526000815260408051602081019091528251845182916104829161047c90670de0b6b3a764000061048b565b9061049e565b90529392505050565b6000610497828461055d565b9392505050565b6000610497828461053d565b80356001600160a01b03811681146101dc57600080fd5b6000602082840312156104d2578081fd5b610497826104aa565b6000806000606084860312156104ef578182fd5b6104f8846104aa565b95602085013595506040909401359392505050565b60006020828403121561051e578081fd5b5035919050565b600060208284031215610536578081fd5b5051919050565b60008261055857634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561058357634e487b7160e01b81526011600452602481fd5b50029056fea2646970667358221220d1694d91ef2d8b719871ca8a3fc6fab4adaeba2d45a64bc46fc52eb03000f4ad64736f6c63430008040033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3820:192",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:192",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "63:124:192",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "73:29:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:192"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "82:12:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:20:192"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "73:5:192"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "165:16:192",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "174:1:192",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "177:1:192",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "167:6:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "167:12:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "167:12:192"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "124:5:192"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "135:5:192"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "150:3:192",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "155:1:192",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "146:3:192"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "146:11:192"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "159:1:192",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "142:3:192"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "142:19:192"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "131:3:192"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "131:31:192"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "121:2:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "121:42:192"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "114:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "114:50:192"
                  },
                  "nodeType": "YulIf",
                  "src": "111:2:192"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "42:6:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:192",
                "type": ""
              }
            ],
            "src": "14:173:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "262:126:192",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "308:26:192",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "317:6:192"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "325:6:192"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "310:6:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "310:22:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "310:22:192"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "283:7:192"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "292:9:192"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "279:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "279:23:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "304:2:192",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "275:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "275:32:192"
                  },
                  "nodeType": "YulIf",
                  "src": "272:2:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "343:39:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "372:9:192"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "353:18:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "353:29:192"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "343:6:192"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "228:9:192",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "239:7:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "251:6:192",
                "type": ""
              }
            ],
            "src": "192:196:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "497:228:192",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "543:26:192",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "552:6:192"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "560:6:192"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "545:6:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "545:22:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "545:22:192"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "518:7:192"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "527:9:192"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "514:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "514:23:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "539:2:192",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "510:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "510:32:192"
                  },
                  "nodeType": "YulIf",
                  "src": "507:2:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "578:39:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "607:9:192"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "588:18:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "588:29:192"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "578:6:192"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "626:42:192",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "653:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "664:2:192",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "649:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "649:18:192"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "636:12:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "636:32:192"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "626:6:192"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "677:42:192",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "704:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "715:2:192",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "700:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "700:18:192"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "687:12:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "687:32:192"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "677:6:192"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "447:9:192",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "458:7:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "470:6:192",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "478:6:192",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "486:6:192",
                "type": ""
              }
            ],
            "src": "393:332:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "799:120:192",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "845:26:192",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "854:6:192"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "862:6:192"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "847:6:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "847:22:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "847:22:192"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "820:7:192"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "829:9:192"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "816:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "816:23:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "841:2:192",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "812:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "812:32:192"
                  },
                  "nodeType": "YulIf",
                  "src": "809:2:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "880:33:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "903:9:192"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "890:12:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "890:23:192"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "880:6:192"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "765:9:192",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "776:7:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "788:6:192",
                "type": ""
              }
            ],
            "src": "730:189:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1005:113:192",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1051:26:192",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1060:6:192"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1068:6:192"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1053:6:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1053:22:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1053:22:192"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1026:7:192"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1035:9:192"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1022:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1022:23:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1047:2:192",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1018:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1018:32:192"
                  },
                  "nodeType": "YulIf",
                  "src": "1015:2:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1086:26:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1102:9:192"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1096:5:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1096:16:192"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1086:6:192"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "971:9:192",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "982:7:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "994:6:192",
                "type": ""
              }
            ],
            "src": "924:194:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1297:172:192",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1314:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1325:2:192",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1307:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1307:21:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1307:21:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1348:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1359:2:192",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1344:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1344:18:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1364:2:192",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1337:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1337:30:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1337:30:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1387:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1398:2:192",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1383:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1383:18:192"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1403:24:192",
                        "type": "",
                        "value": "Parameters already set"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1376:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1376:52:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1376:52:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1437:26:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1449:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1460:2:192",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1445:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1445:18:192"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1437:4:192"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1c660ff5672050f49f4504349febd871d9a8af4dbd7a242ac305e556f78030ee__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1274:9:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1288:4:192",
                "type": ""
              }
            ],
            "src": "1123:346:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1648:164:192",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1665:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1676:2:192",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1658:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1658:21:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1658:21:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1699:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1710:2:192",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1695:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1695:18:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1715:2:192",
                        "type": "",
                        "value": "14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1688:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1688:30:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1688:30:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1738:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1749:2:192",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1734:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1734:18:192"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1754:16:192",
                        "type": "",
                        "value": "Invalid bounds"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1727:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1727:44:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1727:44:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1780:26:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1792:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1803:2:192",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1788:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1788:18:192"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1780:4:192"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_247b4a8950cc859ed74b0ac5064161dde897ab929a9a949e360193cf1adc2f3a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1625:9:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1639:4:192",
                "type": ""
              }
            ],
            "src": "1474:338:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1991:180:192",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2008:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2019:2:192",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2001:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2001:21:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2001:21:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2042:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2053:2:192",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2038:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2038:18:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2058:2:192",
                        "type": "",
                        "value": "30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2031:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2031:30:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2031:30:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2081:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2092:2:192",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2077:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2077:18:192"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2097:32:192",
                        "type": "",
                        "value": "Params not set for calling LSP"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2070:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2070:60:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2070:60:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2139:26:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2151:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2162:2:192",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2147:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2147:18:192"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2139:4:192"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_68cc0dd0836e3d636c6d9a388054767b5f98741a714b83391a138d4c0cefe7d2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1968:9:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1982:4:192",
                "type": ""
              }
            ],
            "src": "1817:354:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2350:169:192",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2367:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2378:2:192",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2360:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2360:21:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2360:21:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2401:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2412:2:192",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2397:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2397:18:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2417:2:192",
                        "type": "",
                        "value": "19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2390:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2390:30:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2390:30:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2440:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2451:2:192",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2436:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2436:18:192"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2456:21:192",
                        "type": "",
                        "value": "Invalid LSP address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2429:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2429:49:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2429:49:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2487:26:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2499:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2510:2:192",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2495:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2495:18:192"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2487:4:192"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9c7a742eb98e20c17de092129b9e73fedab190e4a1e2e034f7e056503d041914__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2327:9:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2341:4:192",
                "type": ""
              }
            ],
            "src": "2176:343:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2698:181:192",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2715:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2726:2:192",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2708:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2708:21:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2708:21:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2749:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2760:2:192",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2745:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2745:18:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2765:2:192",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2738:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2738:30:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2738:30:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2788:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2799:2:192",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2784:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2784:18:192"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2804:33:192",
                        "type": "",
                        "value": "ReentrancyGuard: reentrant call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2777:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2777:61:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2777:61:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2847:26:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2859:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2870:2:192",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2855:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2855:18:192"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2847:4:192"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2675:9:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2689:4:192",
                "type": ""
              }
            ],
            "src": "2524:355:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2985:76:192",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2995:26:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3007:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3018:2:192",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3003:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3003:18:192"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2995:4:192"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3037:9:192"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3048:6:192"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3030:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3030:25:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3030:25:192"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2954:9:192",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2965:6:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2976:4:192",
                "type": ""
              }
            ],
            "src": "2884:177:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3195:119:192",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3205:26:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3217:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3228:2:192",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3213:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3213:18:192"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3205:4:192"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3247:9:192"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3258:6:192"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3240:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3240:25:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3240:25:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3285:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3296:2:192",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3281:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3281:18:192"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3301:6:192"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3274:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3274:34:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3274:34:192"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3156:9:192",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3167:6:192",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3175:6:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3186:4:192",
                "type": ""
              }
            ],
            "src": "3066:248:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3365:171:192",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3396:111:192",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "3417:1:192"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3424:3:192",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3429:10:192",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "3420:3:192"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3420:20:192"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3410:6:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3410:31:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3410:31:192"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3461:1:192",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3464:4:192",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3454:6:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3454:15:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3454:15:192"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "3489:1:192"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3492:4:192",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3482:6:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3482:15:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3482:15:192"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3385:1:192"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3378:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3378:9:192"
                  },
                  "nodeType": "YulIf",
                  "src": "3375:2:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3516:14:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3525:1:192"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3528:1:192"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "3521:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3521:9:192"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "3516:1:192"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3350:1:192",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3353:1:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "3359:1:192",
                "type": ""
              }
            ],
            "src": "3319:217:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3593:225:192",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3660:123:192",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "product",
                              "nodeType": "YulIdentifier",
                              "src": "3681:7:192"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3694:3:192",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3699:10:192",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "3690:3:192"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3690:20:192"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3674:6:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3674:37:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3674:37:192"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3731:1:192",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3734:4:192",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3724:6:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3724:15:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3724:15:192"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "product",
                              "nodeType": "YulIdentifier",
                              "src": "3759:7:192"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3768:4:192",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3752:6:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3752:21:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3752:21:192"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "3624:1:192"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "3617:6:192"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3617:9:192"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "3610:6:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3610:17:192"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "3632:1:192"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3643:1:192",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "3639:3:192"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3639:6:192"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "3647:1:192"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "3635:3:192"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3635:14:192"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "3629:2:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3629:21:192"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3606:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3606:45:192"
                  },
                  "nodeType": "YulIf",
                  "src": "3603:2:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3792:20:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3807:1:192"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3810:1:192"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "3803:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3803:9:192"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "3792:7:192"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3572:1:192",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3575:1:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "3581:7:192",
                "type": ""
              }
            ],
            "src": "3541:277:192"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value1, value1) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_int256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_1c660ff5672050f49f4504349febd871d9a8af4dbd7a242ac305e556f78030ee__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Parameters already set\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_247b4a8950cc859ed74b0ac5064161dde897ab929a9a949e360193cf1adc2f3a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Invalid bounds\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_68cc0dd0836e3d636c6d9a388054767b5f98741a714b83391a138d4c0cefe7d2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Params not set for calling LSP\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9c7a742eb98e20c17de092129b9e73fedab190e4a1e2e034f7e056503d041914__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Invalid LSP address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x)))\n        {\n            mstore(product, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(product, 0x24)\n        }\n        product := mul(x, y)\n    }\n}",
      "id": 192,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "1882:4164:76:-:0;;;;;;;;;;;;-1:-1:-1;874:11:11;:18;;-1:-1:-1;;874:18:11;888:4;874:18;;;1882:4164:76;;;;;;",
  "deployedSourceMap": "1882:4164:76:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4449:1595;;;;;;:::i;:::-;;:::i;:::-;;;3030:25:192;;;3018:2;3003:18;4449:1595:76;;;;;;;;2193:83;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;3240:25:192;;;3296:2;3281:18;;3274:34;;;;3213:18;2193:83:76;3195:119:192;3350:722:76;;;;;;:::i;:::-;;:::i;:::-;;4449:1595;4600:7;1603:19:11;:17;:19::i;:::-;4696:10:76::1;4623:46;4672:35:::0;;;:23:::1;:35;::::0;;;;;;;;4623:84;;;;::::1;::::0;;;;;;;;;::::1;::::0;;;::::1;::::0;4725:26;::::1;::::0;:55:::1;;-1:-1:-1::0;4755:20:76::1;::::0;::::1;::::0;:25;::::1;4725:55;4717:98;;;::::0;-1:-1:-1;;;4717:98:76;;2019:2:192;4717:98:76::1;::::0;::::1;2001:21:192::0;2058:2;2038:18;;;2031:30;2097:32;2077:18;;;2070:60;2147:18;;4717:98:76::1;;;;;;;;;5216:27;5260:1:::0;5246:11:::1;:15;:42;;5287:1;5246:42;;;5272:11;5246:42;5216:72;;5434:6;:20;;;5411:19;:43;5407:95;;5463:30;5491:1;5463:27;:30::i;:::-;:39:::0;;-1:-1:-1;5456:46:76::1;::::0;-1:-1:-1;;5456:46:76::1;5407:95;5694:21:::0;;5671:44;::::1;5667:165;;5782:40;::::0;;::::1;::::0;;::::1;::::0;;;;;5736:41;;;;::::1;::::0;;;5756:20;::::1;::::0;5736:41;;:87:::1;::::0;:41;:45:::1;:87::i;5667:165::-;5985:42;::::0;;::::1;::::0;;::::1;::::0;;6005:21;;5985:42;;5939:41;;;;::::1;::::0;;;5959:20;::::1;::::0;5939:41;;:89:::1;::::0;:41;:45:::1;:89::i;:::-;:98:::0;;-1:-1:-1;;;1632:1:11::1;4449:1595:76::0;;;:::o;3350:722::-;1317:19:11;:17;:19::i;:::-;1346:17;2459:5;2445:19;;-1:-1:-1;;2445:19:11;;;2335:136;1346:17;3552:13:76::1;-1:-1:-1::0;;;;;3526:60:76::1;;:62;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3518:99;;;::::0;-1:-1:-1;;;3518:99:76;;2378:2:192;3518:99:76::1;::::0;::::1;2360:21:192::0;2417:2;2397:18;;;2390:30;-1:-1:-1;;;2436:18:192;;;2429:49;2495:18;;3518:99:76::1;2350:169:192::0;3518:99:76::1;3653:13;3636:14;:30;3628:57;;;::::0;-1:-1:-1;;;3628:57:76;;1676:2:192;3628:57:76::1;::::0;::::1;1658:21:192::0;1715:2;1695:18;;;1688:30;-1:-1:-1;;;1734:18:192;;;1727:44;1788:18;;3628:57:76::1;1648:164:192::0;3628:57:76::1;-1:-1:-1::0;;;;;3745:38:76;::::1;3696:46;3745:38:::0;;;:23:::1;:38;::::0;;;;;;;;3696:87;;;;::::1;::::0;;;;;;;;;::::1;::::0;;;::::1;::::0;3801:26;:55;::::1;;;-1:-1:-1::0;3831:20:76::1;::::0;::::1;::::0;:25;3801:55:::1;3793:90;;;::::0;-1:-1:-1;;;3793:90:76;;1325:2:192;3793:90:76::1;::::0;::::1;1307:21:192::0;1364:2;1344:18;;;1337:30;-1:-1:-1;;;1383:18:192;;;1376:52;1445:18;;3793:90:76::1;1297:172:192::0;3793:90:76::1;-1:-1:-1::0;3935:130:76::1;::::0;;;;::::1;::::0;;;;;::::1;::::0;;::::1;::::0;;;-1:-1:-1;;;;;3894:38:76;::::1;-1:-1:-1::0;3894:38:76;;;:23:::1;:38:::0;;;;;;;;:171;;;;;;;::::1;::::0;1384:20:11;2658:11;:18;;-1:-1:-1;;2658:18:11;2672:4;2658:18;;;2477:206;1384:20;3350:722:76;;;:::o;2143:186:11:-;2275:11;;;;2267:55;;;;-1:-1:-1;;;2267:55:11;;2726:2:192;2267:55:11;;;2708:21:192;2765:2;2745:18;;;2738:30;2804:33;2784:18;;;2777:61;2855:18;;2267:55:11;2698:181:192;2267:55:11;2143:186::o;1044:135:10:-;-1:-1:-1;;;;;;;;;;;;1138:34:10;;;;;;;;;;1147:24;:1;619:6;1147:5;:24::i;:::-;1138:34;;1131:41;1044:135;-1:-1:-1;;1044:135:10:o;10614:634::-;-1:-1:-1;;;;;;;;;;;;11182:59:10;;;;;;;;;11229:10;;11191;;11182:59;;11191:49;;:33;;619:6;11191:14;:33::i;:::-;:37;;:49::i;:::-;11182:59;;11175:66;10614:634;-1:-1:-1;;;10614:634:10:o;3382:96:172:-;3440:7;3466:5;3470:1;3466;:5;:::i;:::-;3459:12;3382:96;-1:-1:-1;;;3382:96:172:o;3767:::-;3825:7;3851:5;3855:1;3851;:5;:::i;14:173:192:-;82:20;;-1:-1:-1;;;;;131:31:192;;121:42;;111:2;;177:1;174;167:12;192:196;251:6;304:2;292:9;283:7;279:23;275:32;272:2;;;325:6;317;310:22;272:2;353:29;372:9;353:29;:::i;393:332::-;470:6;478;486;539:2;527:9;518:7;514:23;510:32;507:2;;;560:6;552;545:22;507:2;588:29;607:9;588:29;:::i;:::-;578:39;664:2;649:18;;636:32;;-1:-1:-1;715:2:192;700:18;;;687:32;;497:228;-1:-1:-1;;;497:228:192:o;730:189::-;788:6;841:2;829:9;820:7;816:23;812:32;809:2;;;862:6;854;847:22;809:2;-1:-1:-1;890:23:192;;799:120;-1:-1:-1;799:120:192:o;924:194::-;994:6;1047:2;1035:9;1026:7;1022:23;1018:32;1015:2;;;1068:6;1060;1053:22;1015:2;-1:-1:-1;1096:16:192;;1005:113;-1:-1:-1;1005:113:192:o;3319:217::-;3359:1;3385;3375:2;;-1:-1:-1;;;3410:31:192;;3464:4;3461:1;3454:15;3492:4;3417:1;3482:15;3375:2;-1:-1:-1;3521:9:192;;3365:171::o;3541:277::-;3581:7;3647:1;3643;3639:6;3635:14;3632:1;3629:21;3624:1;3617:9;3610:17;3606:45;3603:2;;;-1:-1:-1;;;3674:37:192;;3734:4;3731:1;3724:15;3768:4;3681:7;3752:21;3603:2;-1:-1:-1;3803:9:192;;3593:225::o",
  "source": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/utils/math/SignedSafeMath.sol\";\nimport \"@openzeppelin/contracts/utils/math/Math.sol\";\n\nimport \"./LongShortPairFinancialProductLibrary.sol\";\nimport \"../../../../common/implementation/Lockable.sol\";\n\n/**\n * @title Range Bond Long Short Pair Financial Product Library\n * @notice Adds settlement logic to create range bond LSPs. A range bond is the combination of a Yield dollar, short put\n * option and long call option enabling the token sponsor to issue structured products to unlock DeFi treasuries.\n * A range bond is defined as = Yield Dollar - Put Option + Call option. Numerically this is found using:\n * N = Notional of bond\n * P = price of token\n * T = number of tokens\n * R1 = low price range\n * R2 = high price range\n * T = min(N/P,N/R1) + max((N/R2*(P-R2))/P,0)\n * - At any price below the low price range (R1) the long side effectively holds a fixed number of collateral equal to\n * collateralPerPair from the LSP with the value of expiryPercentLong = 1. This is the max payout in collateral.\n * - Any price between R1 and R2 gives a payout equivalent to a yield dollar (bond) of notional N. In this range the\n * expiryPercentLong shifts to keep the payout in dollar terms equal to the bond notional.\n * - At any price above R2 the long holders are entitled to a fixed, minimum number of collateral equal to N/R2 with a\n * expiryPercentLong=(N/R2)/collateralPerPair.\n * The expression for the number of tokens paid out to the long side (T above) can be algebraically simplified,\n * transformed to remove the notional and reframed to express the expiryPercentLong as [min(max(1/R2,1/P),1/R1)]/(1/R1)\n * With this equation, the contract deployer does not need to specify the bond notional N. The notional can be calculated\n * by taking R1*collateralPerPair from the LSP.\n */\ncontract RangeBondLongShortPairFinancialProductLibrary is LongShortPairFinancialProductLibrary, Lockable {\n    using FixedPoint for FixedPoint.Unsigned;\n    using SignedSafeMath for int256;\n\n    struct RangeBondLongShortPairParameters {\n        uint256 highPriceRange;\n        uint256 lowPriceRange;\n    }\n\n    mapping(address => RangeBondLongShortPairParameters) public longShortPairParameters;\n\n    /**\n     * @notice Enables any address to set the parameters price for an associated financial product.\n     * @param longShortPair address of the LSP contract.\n     * @param highPriceRange high price range after which the payout transforms from a yield dollar to a call option.\n     * @param lowPriceRange low price range below which the payout transforms from a yield dollar to a short put option.\n     * @dev between highPriceRange and lowPriceRange the contract will payout a fixed amount of\n     * lowPriceRange*collateralPerPair (i.e the \"notional\" of the yield dollar).\n     * @dev Note: a) Any address can set these parameters b) existing LSP parameters for address not set.\n     * c) highPriceRange > lowPriceRange.\n     * d) parameters price can only be set once to prevent the deployer from changing the parameters after the fact.\n     * e) For safety, a parameters should be set before depositing any synthetic tokens in a liquidity pool.\n     * f) longShortPair must expose an expirationTimestamp method to validate it is correctly deployed.\n     */\n    function setLongShortPairParameters(\n        address longShortPair,\n        uint256 highPriceRange,\n        uint256 lowPriceRange\n    ) public nonReentrant() {\n        require(ExpiringContractInterface(longShortPair).expirationTimestamp() != 0, \"Invalid LSP address\");\n\n        require(highPriceRange > lowPriceRange, \"Invalid bounds\");\n\n        RangeBondLongShortPairParameters memory params = longShortPairParameters[longShortPair];\n        require(params.highPriceRange == 0 && params.lowPriceRange == 0, \"Parameters already set\");\n\n        longShortPairParameters[longShortPair] = RangeBondLongShortPairParameters({\n            highPriceRange: highPriceRange,\n            lowPriceRange: lowPriceRange\n        });\n    }\n\n    /**\n     * @notice Returns a number between 0 and 1e18 to indicate how much collateral each long and short token are\n     * entitled to per collateralPerPair.\n     * @param expiryPrice price from the optimistic oracle for the LSP price identifier.\n     * @return expiryPercentLong to indicate how much collateral should be sent between long and short tokens.\n     */\n    function percentageLongCollateralAtExpiry(int256 expiryPrice)\n        public\n        view\n        override\n        nonReentrantView()\n        returns (uint256)\n    {\n        RangeBondLongShortPairParameters memory params = longShortPairParameters[msg.sender];\n        require(params.highPriceRange != 0 || params.lowPriceRange != 0, \"Params not set for calling LSP\");\n\n        // This function returns a value between 0 and 1e18 to be used in conjunction with the LSP collateralPerPair\n        // that allocates collateral between the short and long tokens on expiry. This can be simplified by considering\n        // the price in three discrete ranges: 1) below the low price range, 2) between low and high range and 3) above\n        // the high price range.\n        uint256 positiveExpiryPrice = expiryPrice > 0 ? uint256(expiryPrice) : 0;\n\n        // 1) The long position is entitled to the full position in this range. The short token is worth 0.\n        if (positiveExpiryPrice <= params.lowPriceRange) return FixedPoint.fromUnscaledUint(1).rawValue;\n        // 2) Within the range, the long position is entitled to the bond notional value which is equal to\n        // (collateral tokens * lowPriceRange).\n        if (positiveExpiryPrice <= params.highPriceRange)\n            return FixedPoint.Unsigned(params.lowPriceRange).div(FixedPoint.Unsigned(positiveExpiryPrice)).rawValue;\n        // 3) Above the range, the long position is entitled to a fixed number of tokens.\n        return FixedPoint.Unsigned(params.lowPriceRange).div(FixedPoint.Unsigned(params.highPriceRange)).rawValue;\n    }\n}\n",
  "sourcePath": "/home/circleci/protocol/packages/core/contracts/financial-templates/common/financial-product-libraries/long-short-pair-libraries/RangeBondLongShortPairFinancialProductLibrary.sol",
  "ast": {
    "absolutePath": "/home/circleci/protocol/packages/core/contracts/financial-templates/common/financial-product-libraries/long-short-pair-libraries/RangeBondLongShortPairFinancialProductLibrary.sol",
    "exportedSymbols": {
      "ExpiringContractInterface": [
        14792
      ],
      "FixedPoint": [
        3659
      ],
      "Lockable": [
        3720
      ],
      "LongShortPairFinancialProductLibrary": [
        14800
      ],
      "Math": [
        43408
      ],
      "RangeBondLongShortPairFinancialProductLibrary": [
        14977
      ],
      "SafeMath": [
        44033
      ],
      "SignedSafeMath": [
        44097
      ]
    },
    "id": 14978,
    "license": "AGPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 14802,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:23:76"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SignedSafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SignedSafeMath.sol",
        "id": 14803,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14978,
        "sourceUnit": 44098,
        "src": "67:63:76",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
        "file": "@openzeppelin/contracts/utils/math/Math.sol",
        "id": 14804,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14978,
        "sourceUnit": 43409,
        "src": "131:53:76",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/circleci/protocol/packages/core/contracts/financial-templates/common/financial-product-libraries/long-short-pair-libraries/LongShortPairFinancialProductLibrary.sol",
        "file": "./LongShortPairFinancialProductLibrary.sol",
        "id": 14805,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14978,
        "sourceUnit": 14801,
        "src": "186:52:76",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/circleci/protocol/packages/core/contracts/common/implementation/Lockable.sol",
        "file": "../../../../common/implementation/Lockable.sol",
        "id": 14806,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14978,
        "sourceUnit": 3721,
        "src": "239:56:76",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 14808,
              "name": "LongShortPairFinancialProductLibrary",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14800,
              "src": "1940:36:76"
            },
            "id": 14809,
            "nodeType": "InheritanceSpecifier",
            "src": "1940:36:76"
          },
          {
            "baseName": {
              "id": 14810,
              "name": "Lockable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3720,
              "src": "1978:8:76"
            },
            "id": 14811,
            "nodeType": "InheritanceSpecifier",
            "src": "1978:8:76"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 14807,
          "nodeType": "StructuredDocumentation",
          "src": "297:1584:76",
          "text": " @title Range Bond Long Short Pair Financial Product Library\n @notice Adds settlement logic to create range bond LSPs. A range bond is the combination of a Yield dollar, short put\n option and long call option enabling the token sponsor to issue structured products to unlock DeFi treasuries.\n A range bond is defined as = Yield Dollar - Put Option + Call option. Numerically this is found using:\n N = Notional of bond\n P = price of token\n T = number of tokens\n R1 = low price range\n R2 = high price range\n T = min(N/P,N/R1) + max((N/R2*(P-R2))/P,0)\n - At any price below the low price range (R1) the long side effectively holds a fixed number of collateral equal to\n collateralPerPair from the LSP with the value of expiryPercentLong = 1. This is the max payout in collateral.\n - Any price between R1 and R2 gives a payout equivalent to a yield dollar (bond) of notional N. In this range the\n expiryPercentLong shifts to keep the payout in dollar terms equal to the bond notional.\n - At any price above R2 the long holders are entitled to a fixed, minimum number of collateral equal to N/R2 with a\n expiryPercentLong=(N/R2)/collateralPerPair.\n The expression for the number of tokens paid out to the long side (T above) can be algebraically simplified,\n transformed to remove the notional and reframed to express the expiryPercentLong as [min(max(1/R2,1/P),1/R1)]/(1/R1)\n With this equation, the contract deployer does not need to specify the bond notional N. The notional can be calculated\n by taking R1*collateralPerPair from the LSP."
        },
        "fullyImplemented": true,
        "id": 14977,
        "linearizedBaseContracts": [
          14977,
          3720,
          14800
        ],
        "name": "RangeBondLongShortPairFinancialProductLibrary",
        "nameLocation": "1891:45:76",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 14815,
            "libraryName": {
              "id": 14812,
              "name": "FixedPoint",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3659,
              "src": "1999:10:76"
            },
            "nodeType": "UsingForDirective",
            "src": "1993:41:76",
            "typeName": {
              "id": 14814,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 14813,
                "name": "FixedPoint.Unsigned",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2045,
                "src": "2014:19:76"
              },
              "referencedDeclaration": 2045,
              "src": "2014:19:76",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Unsigned_$2045_storage_ptr",
                "typeString": "struct FixedPoint.Unsigned"
              }
            }
          },
          {
            "id": 14818,
            "libraryName": {
              "id": 14816,
              "name": "SignedSafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 44097,
              "src": "2045:14:76"
            },
            "nodeType": "UsingForDirective",
            "src": "2039:32:76",
            "typeName": {
              "id": 14817,
              "name": "int256",
              "nodeType": "ElementaryTypeName",
              "src": "2064:6:76",
              "typeDescriptions": {
                "typeIdentifier": "t_int256",
                "typeString": "int256"
              }
            }
          },
          {
            "canonicalName": "RangeBondLongShortPairFinancialProductLibrary.RangeBondLongShortPairParameters",
            "id": 14823,
            "members": [
              {
                "constant": false,
                "id": 14820,
                "mutability": "mutable",
                "name": "highPriceRange",
                "nameLocation": "2135:14:76",
                "nodeType": "VariableDeclaration",
                "scope": 14823,
                "src": "2127:22:76",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 14819,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2127:7:76",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14822,
                "mutability": "mutable",
                "name": "lowPriceRange",
                "nameLocation": "2167:13:76",
                "nodeType": "VariableDeclaration",
                "scope": 14823,
                "src": "2159:21:76",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 14821,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2159:7:76",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "RangeBondLongShortPairParameters",
            "nameLocation": "2084:32:76",
            "nodeType": "StructDefinition",
            "scope": 14977,
            "src": "2077:110:76",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9299cbed",
            "id": 14828,
            "mutability": "mutable",
            "name": "longShortPairParameters",
            "nameLocation": "2253:23:76",
            "nodeType": "VariableDeclaration",
            "scope": 14977,
            "src": "2193:83:76",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RangeBondLongShortPairParameters_$14823_storage_$",
              "typeString": "mapping(address => struct RangeBondLongShortPairFinancialProductLibrary.RangeBondLongShortPairParameters)"
            },
            "typeName": {
              "id": 14827,
              "keyType": {
                "id": 14824,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2201:7:76",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2193:52:76",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RangeBondLongShortPairParameters_$14823_storage_$",
                "typeString": "mapping(address => struct RangeBondLongShortPairFinancialProductLibrary.RangeBondLongShortPairParameters)"
              },
              "valueType": {
                "id": 14826,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 14825,
                  "name": "RangeBondLongShortPairParameters",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14823,
                  "src": "2212:32:76"
                },
                "referencedDeclaration": 14823,
                "src": "2212:32:76",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_RangeBondLongShortPairParameters_$14823_storage_ptr",
                  "typeString": "struct RangeBondLongShortPairFinancialProductLibrary.RangeBondLongShortPairParameters"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 14887,
              "nodeType": "Block",
              "src": "3508:564:76",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 14847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 14842,
                                  "name": "longShortPair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14831,
                                  "src": "3552:13:76",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 14841,
                                "name": "ExpiringContractInterface",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14792,
                                "src": "3526:25:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ExpiringContractInterface_$14792_$",
                                  "typeString": "type(contract ExpiringContractInterface)"
                                }
                              },
                              "id": 14843,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3526:40:76",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ExpiringContractInterface_$14792",
                                "typeString": "contract ExpiringContractInterface"
                              }
                            },
                            "id": 14844,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "expirationTimestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14791,
                            "src": "3526:60:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 14845,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3526:62:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 14846,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3592:1:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3526:67:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964204c53502061646472657373",
                        "id": 14848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3595:21:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9c7a742eb98e20c17de092129b9e73fedab190e4a1e2e034f7e056503d041914",
                          "typeString": "literal_string \"Invalid LSP address\""
                        },
                        "value": "Invalid LSP address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9c7a742eb98e20c17de092129b9e73fedab190e4a1e2e034f7e056503d041914",
                          "typeString": "literal_string \"Invalid LSP address\""
                        }
                      ],
                      "id": 14840,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3518:7:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3518:99:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14850,
                  "nodeType": "ExpressionStatement",
                  "src": "3518:99:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 14854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 14852,
                          "name": "highPriceRange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14833,
                          "src": "3636:14:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 14853,
                          "name": "lowPriceRange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14835,
                          "src": "3653:13:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3636:30:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420626f756e6473",
                        "id": 14855,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3668:16:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_247b4a8950cc859ed74b0ac5064161dde897ab929a9a949e360193cf1adc2f3a",
                          "typeString": "literal_string \"Invalid bounds\""
                        },
                        "value": "Invalid bounds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_247b4a8950cc859ed74b0ac5064161dde897ab929a9a949e360193cf1adc2f3a",
                          "typeString": "literal_string \"Invalid bounds\""
                        }
                      ],
                      "id": 14851,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3628:7:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3628:57:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14857,
                  "nodeType": "ExpressionStatement",
                  "src": "3628:57:76"
                },
                {
                  "assignments": [
                    14860
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14860,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "3736:6:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 14887,
                      "src": "3696:46:76",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RangeBondLongShortPairParameters_$14823_memory_ptr",
                        "typeString": "struct RangeBondLongShortPairFinancialProductLibrary.RangeBondLongShortPairParameters"
                      },
                      "typeName": {
                        "id": 14859,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 14858,
                          "name": "RangeBondLongShortPairParameters",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14823,
                          "src": "3696:32:76"
                        },
                        "referencedDeclaration": 14823,
                        "src": "3696:32:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RangeBondLongShortPairParameters_$14823_storage_ptr",
                          "typeString": "struct RangeBondLongShortPairFinancialProductLibrary.RangeBondLongShortPairParameters"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14864,
                  "initialValue": {
                    "baseExpression": {
                      "id": 14861,
                      "name": "longShortPairParameters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14828,
                      "src": "3745:23:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RangeBondLongShortPairParameters_$14823_storage_$",
                        "typeString": "mapping(address => struct RangeBondLongShortPairFinancialProductLibrary.RangeBondLongShortPairParameters storage ref)"
                      }
                    },
                    "id": 14863,
                    "indexExpression": {
                      "id": 14862,
                      "name": "longShortPair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14831,
                      "src": "3769:13:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3745:38:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RangeBondLongShortPairParameters_$14823_storage",
                      "typeString": "struct RangeBondLongShortPairFinancialProductLibrary.RangeBondLongShortPairParameters storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3696:87:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 14874,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 14869,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 14866,
                              "name": "params",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14860,
                              "src": "3801:6:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RangeBondLongShortPairParameters_$14823_memory_ptr",
                                "typeString": "struct RangeBondLongShortPairFinancialProductLibrary.RangeBondLongShortPairParameters memory"
                              }
                            },
                            "id": 14867,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "highPriceRange",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14820,
                            "src": "3801:21:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 14868,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3826:1:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3801:26:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 14873,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 14870,
                              "name": "params",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14860,
                              "src": "3831:6:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RangeBondLongShortPairParameters_$14823_memory_ptr",
                                "typeString": "struct RangeBondLongShortPairFinancialProductLibrary.RangeBondLongShortPairParameters memory"
                              }
                            },
                            "id": 14871,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lowPriceRange",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14822,
                            "src": "3831:20:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 14872,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3855:1:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3831:25:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3801:55:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506172616d657465727320616c726561647920736574",
                        "id": 14875,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3858:24:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1c660ff5672050f49f4504349febd871d9a8af4dbd7a242ac305e556f78030ee",
                          "typeString": "literal_string \"Parameters already set\""
                        },
                        "value": "Parameters already set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1c660ff5672050f49f4504349febd871d9a8af4dbd7a242ac305e556f78030ee",
                          "typeString": "literal_string \"Parameters already set\""
                        }
                      ],
                      "id": 14865,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3793:7:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3793:90:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14877,
                  "nodeType": "ExpressionStatement",
                  "src": "3793:90:76"
                },
                {
                  "expression": {
                    "id": 14885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 14878,
                        "name": "longShortPairParameters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14828,
                        "src": "3894:23:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RangeBondLongShortPairParameters_$14823_storage_$",
                          "typeString": "mapping(address => struct RangeBondLongShortPairFinancialProductLibrary.RangeBondLongShortPairParameters storage ref)"
                        }
                      },
                      "id": 14880,
                      "indexExpression": {
                        "id": 14879,
                        "name": "longShortPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14831,
                        "src": "3918:13:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3894:38:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RangeBondLongShortPairParameters_$14823_storage",
                        "typeString": "struct RangeBondLongShortPairFinancialProductLibrary.RangeBondLongShortPairParameters storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 14882,
                          "name": "highPriceRange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14833,
                          "src": "3998:14:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 14883,
                          "name": "lowPriceRange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14835,
                          "src": "4041:13:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 14881,
                        "name": "RangeBondLongShortPairParameters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14823,
                        "src": "3935:32:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_RangeBondLongShortPairParameters_$14823_storage_ptr_$",
                          "typeString": "type(struct RangeBondLongShortPairFinancialProductLibrary.RangeBondLongShortPairParameters storage pointer)"
                        }
                      },
                      "id": 14884,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "highPriceRange",
                        "lowPriceRange"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "3935:130:76",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RangeBondLongShortPairParameters_$14823_memory_ptr",
                        "typeString": "struct RangeBondLongShortPairFinancialProductLibrary.RangeBondLongShortPairParameters memory"
                      }
                    },
                    "src": "3894:171:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RangeBondLongShortPairParameters_$14823_storage",
                      "typeString": "struct RangeBondLongShortPairFinancialProductLibrary.RangeBondLongShortPairParameters storage ref"
                    }
                  },
                  "id": 14886,
                  "nodeType": "ExpressionStatement",
                  "src": "3894:171:76"
                }
              ]
            },
            "documentation": {
              "id": 14829,
              "nodeType": "StructuredDocumentation",
              "src": "2283:1062:76",
              "text": " @notice Enables any address to set the parameters price for an associated financial product.\n @param longShortPair address of the LSP contract.\n @param highPriceRange high price range after which the payout transforms from a yield dollar to a call option.\n @param lowPriceRange low price range below which the payout transforms from a yield dollar to a short put option.\n @dev between highPriceRange and lowPriceRange the contract will payout a fixed amount of\n lowPriceRange*collateralPerPair (i.e the \"notional\" of the yield dollar).\n @dev Note: a) Any address can set these parameters b) existing LSP parameters for address not set.\n c) highPriceRange > lowPriceRange.\n d) parameters price can only be set once to prevent the deployer from changing the parameters after the fact.\n e) For safety, a parameters should be set before depositing any synthetic tokens in a liquidity pool.\n f) longShortPair must expose an expirationTimestamp method to validate it is correctly deployed."
            },
            "functionSelector": "92a98f53",
            "id": 14888,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 14838,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14837,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3686,
                  "src": "3493:12:76"
                },
                "nodeType": "ModifierInvocation",
                "src": "3493:14:76"
              }
            ],
            "name": "setLongShortPairParameters",
            "nameLocation": "3359:26:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14836,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14831,
                  "mutability": "mutable",
                  "name": "longShortPair",
                  "nameLocation": "3403:13:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14888,
                  "src": "3395:21:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14830,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3395:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14833,
                  "mutability": "mutable",
                  "name": "highPriceRange",
                  "nameLocation": "3434:14:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14888,
                  "src": "3426:22:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14832,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3426:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14835,
                  "mutability": "mutable",
                  "name": "lowPriceRange",
                  "nameLocation": "3466:13:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14888,
                  "src": "3458:21:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14834,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3458:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3385:100:76"
            },
            "returnParameters": {
              "id": 14839,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3508:0:76"
            },
            "scope": 14977,
            "src": "3350:722:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              14799
            ],
            "body": {
              "id": 14975,
              "nodeType": "Block",
              "src": "4613:1431:76",
              "statements": [
                {
                  "assignments": [
                    14901
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14901,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "4663:6:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 14975,
                      "src": "4623:46:76",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RangeBondLongShortPairParameters_$14823_memory_ptr",
                        "typeString": "struct RangeBondLongShortPairFinancialProductLibrary.RangeBondLongShortPairParameters"
                      },
                      "typeName": {
                        "id": 14900,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 14899,
                          "name": "RangeBondLongShortPairParameters",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14823,
                          "src": "4623:32:76"
                        },
                        "referencedDeclaration": 14823,
                        "src": "4623:32:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RangeBondLongShortPairParameters_$14823_storage_ptr",
                          "typeString": "struct RangeBondLongShortPairFinancialProductLibrary.RangeBondLongShortPairParameters"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14906,
                  "initialValue": {
                    "baseExpression": {
                      "id": 14902,
                      "name": "longShortPairParameters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14828,
                      "src": "4672:23:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RangeBondLongShortPairParameters_$14823_storage_$",
                        "typeString": "mapping(address => struct RangeBondLongShortPairFinancialProductLibrary.RangeBondLongShortPairParameters storage ref)"
                      }
                    },
                    "id": 14905,
                    "indexExpression": {
                      "expression": {
                        "id": 14903,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "4696:3:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 14904,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "4696:10:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4672:35:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RangeBondLongShortPairParameters_$14823_storage",
                      "typeString": "struct RangeBondLongShortPairFinancialProductLibrary.RangeBondLongShortPairParameters storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4623:84:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 14916,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 14911,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 14908,
                              "name": "params",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14901,
                              "src": "4725:6:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RangeBondLongShortPairParameters_$14823_memory_ptr",
                                "typeString": "struct RangeBondLongShortPairFinancialProductLibrary.RangeBondLongShortPairParameters memory"
                              }
                            },
                            "id": 14909,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "highPriceRange",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14820,
                            "src": "4725:21:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 14910,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4750:1:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4725:26:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 14915,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 14912,
                              "name": "params",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14901,
                              "src": "4755:6:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RangeBondLongShortPairParameters_$14823_memory_ptr",
                                "typeString": "struct RangeBondLongShortPairFinancialProductLibrary.RangeBondLongShortPairParameters memory"
                              }
                            },
                            "id": 14913,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lowPriceRange",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14822,
                            "src": "4755:20:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 14914,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4779:1:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4755:25:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4725:55:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506172616d73206e6f742073657420666f722063616c6c696e67204c5350",
                        "id": 14917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4782:32:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_68cc0dd0836e3d636c6d9a388054767b5f98741a714b83391a138d4c0cefe7d2",
                          "typeString": "literal_string \"Params not set for calling LSP\""
                        },
                        "value": "Params not set for calling LSP"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_68cc0dd0836e3d636c6d9a388054767b5f98741a714b83391a138d4c0cefe7d2",
                          "typeString": "literal_string \"Params not set for calling LSP\""
                        }
                      ],
                      "id": 14907,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4717:7:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4717:98:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14919,
                  "nodeType": "ExpressionStatement",
                  "src": "4717:98:76"
                },
                {
                  "assignments": [
                    14921
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14921,
                      "mutability": "mutable",
                      "name": "positiveExpiryPrice",
                      "nameLocation": "5224:19:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 14975,
                      "src": "5216:27:76",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 14920,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5216:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14931,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "id": 14924,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 14922,
                        "name": "expiryPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14891,
                        "src": "5246:11:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 14923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5260:1:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "5246:15:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "30",
                      "id": 14929,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5287:1:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "id": 14930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "5246:42:76",
                    "trueExpression": {
                      "arguments": [
                        {
                          "id": 14927,
                          "name": "expiryPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14891,
                          "src": "5272:11:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        ],
                        "id": 14926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5264:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 14925,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5264:7:76",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 14928,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5264:20:76",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5216:72:76"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 14935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 14932,
                      "name": "positiveExpiryPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14921,
                      "src": "5411:19:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "expression": {
                        "id": 14933,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14901,
                        "src": "5434:6:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RangeBondLongShortPairParameters_$14823_memory_ptr",
                          "typeString": "struct RangeBondLongShortPairFinancialProductLibrary.RangeBondLongShortPairParameters memory"
                        }
                      },
                      "id": 14934,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "lowPriceRange",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14822,
                      "src": "5434:20:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5411:43:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 14942,
                  "nodeType": "IfStatement",
                  "src": "5407:95:76",
                  "trueBody": {
                    "expression": {
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 14938,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5491:1:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "expression": {
                            "id": 14936,
                            "name": "FixedPoint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3659,
                            "src": "5463:10:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_FixedPoint_$3659_$",
                              "typeString": "type(library FixedPoint)"
                            }
                          },
                          "id": 14937,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "fromUnscaledUint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2062,
                          "src": "5463:27:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_Unsigned_$2045_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (struct FixedPoint.Unsigned memory)"
                          }
                        },
                        "id": 14939,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5463:30:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Unsigned_$2045_memory_ptr",
                          "typeString": "struct FixedPoint.Unsigned memory"
                        }
                      },
                      "id": 14940,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rawValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2044,
                      "src": "5463:39:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 14898,
                    "id": 14941,
                    "nodeType": "Return",
                    "src": "5456:46:76"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 14946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 14943,
                      "name": "positiveExpiryPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14921,
                      "src": "5671:19:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "expression": {
                        "id": 14944,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14901,
                        "src": "5694:6:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RangeBondLongShortPairParameters_$14823_memory_ptr",
                          "typeString": "struct RangeBondLongShortPairFinancialProductLibrary.RangeBondLongShortPairParameters memory"
                        }
                      },
                      "id": 14945,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "highPriceRange",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14820,
                      "src": "5694:21:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5671:44:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 14960,
                  "nodeType": "IfStatement",
                  "src": "5667:165:76",
                  "trueBody": {
                    "expression": {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 14955,
                                "name": "positiveExpiryPrice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14921,
                                "src": "5802:19:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 14953,
                                "name": "FixedPoint",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3659,
                                "src": "5782:10:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_FixedPoint_$3659_$",
                                  "typeString": "type(library FixedPoint)"
                                }
                              },
                              "id": 14954,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "Unsigned",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2045,
                              "src": "5782:19:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Unsigned_$2045_storage_ptr_$",
                                "typeString": "type(struct FixedPoint.Unsigned storage pointer)"
                              }
                            },
                            "id": 14956,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5782:40:76",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Unsigned_$2045_memory_ptr",
                              "typeString": "struct FixedPoint.Unsigned memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Unsigned_$2045_memory_ptr",
                              "typeString": "struct FixedPoint.Unsigned memory"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 14949,
                                  "name": "params",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14901,
                                  "src": "5756:6:76",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_RangeBondLongShortPairParameters_$14823_memory_ptr",
                                    "typeString": "struct RangeBondLongShortPairFinancialProductLibrary.RangeBondLongShortPairParameters memory"
                                  }
                                },
                                "id": 14950,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lowPriceRange",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 14822,
                                "src": "5756:20:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 14947,
                                "name": "FixedPoint",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3659,
                                "src": "5736:10:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_FixedPoint_$3659_$",
                                  "typeString": "type(library FixedPoint)"
                                }
                              },
                              "id": 14948,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "Unsigned",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2045,
                              "src": "5736:19:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Unsigned_$2045_storage_ptr_$",
                                "typeString": "type(struct FixedPoint.Unsigned storage pointer)"
                              }
                            },
                            "id": 14951,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5736:41:76",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Unsigned_$2045_memory_ptr",
                              "typeString": "struct FixedPoint.Unsigned memory"
                            }
                          },
                          "id": 14952,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2635,
                          "src": "5736:45:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_Unsigned_$2045_memory_ptr_$_t_struct$_Unsigned_$2045_memory_ptr_$returns$_t_struct$_Unsigned_$2045_memory_ptr_$bound_to$_t_struct$_Unsigned_$2045_memory_ptr_$",
                            "typeString": "function (struct FixedPoint.Unsigned memory,struct FixedPoint.Unsigned memory) pure returns (struct FixedPoint.Unsigned memory)"
                          }
                        },
                        "id": 14957,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5736:87:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Unsigned_$2045_memory_ptr",
                          "typeString": "struct FixedPoint.Unsigned memory"
                        }
                      },
                      "id": 14958,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rawValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2044,
                      "src": "5736:96:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 14898,
                    "id": 14959,
                    "nodeType": "Return",
                    "src": "5729:103:76"
                  }
                },
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 14969,
                                "name": "params",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14901,
                                "src": "6005:6:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RangeBondLongShortPairParameters_$14823_memory_ptr",
                                  "typeString": "struct RangeBondLongShortPairFinancialProductLibrary.RangeBondLongShortPairParameters memory"
                                }
                              },
                              "id": 14970,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "highPriceRange",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14820,
                              "src": "6005:21:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 14967,
                              "name": "FixedPoint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3659,
                              "src": "5985:10:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_FixedPoint_$3659_$",
                                "typeString": "type(library FixedPoint)"
                              }
                            },
                            "id": 14968,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Unsigned",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2045,
                            "src": "5985:19:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Unsigned_$2045_storage_ptr_$",
                              "typeString": "type(struct FixedPoint.Unsigned storage pointer)"
                            }
                          },
                          "id": 14971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5985:42:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Unsigned_$2045_memory_ptr",
                            "typeString": "struct FixedPoint.Unsigned memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Unsigned_$2045_memory_ptr",
                            "typeString": "struct FixedPoint.Unsigned memory"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 14963,
                                "name": "params",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14901,
                                "src": "5959:6:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RangeBondLongShortPairParameters_$14823_memory_ptr",
                                  "typeString": "struct RangeBondLongShortPairFinancialProductLibrary.RangeBondLongShortPairParameters memory"
                                }
                              },
                              "id": 14964,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "lowPriceRange",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14822,
                              "src": "5959:20:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 14961,
                              "name": "FixedPoint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3659,
                              "src": "5939:10:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_FixedPoint_$3659_$",
                                "typeString": "type(library FixedPoint)"
                              }
                            },
                            "id": 14962,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Unsigned",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2045,
                            "src": "5939:19:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Unsigned_$2045_storage_ptr_$",
                              "typeString": "type(struct FixedPoint.Unsigned storage pointer)"
                            }
                          },
                          "id": 14965,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5939:41:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Unsigned_$2045_memory_ptr",
                            "typeString": "struct FixedPoint.Unsigned memory"
                          }
                        },
                        "id": 14966,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2635,
                        "src": "5939:45:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_struct$_Unsigned_$2045_memory_ptr_$_t_struct$_Unsigned_$2045_memory_ptr_$returns$_t_struct$_Unsigned_$2045_memory_ptr_$bound_to$_t_struct$_Unsigned_$2045_memory_ptr_$",
                          "typeString": "function (struct FixedPoint.Unsigned memory,struct FixedPoint.Unsigned memory) pure returns (struct FixedPoint.Unsigned memory)"
                        }
                      },
                      "id": 14972,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5939:89:76",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Unsigned_$2045_memory_ptr",
                        "typeString": "struct FixedPoint.Unsigned memory"
                      }
                    },
                    "id": 14973,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "rawValue",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 2044,
                    "src": "5939:98:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 14898,
                  "id": 14974,
                  "nodeType": "Return",
                  "src": "5932:105:76"
                }
              ]
            },
            "documentation": {
              "id": 14889,
              "nodeType": "StructuredDocumentation",
              "src": "4078:366:76",
              "text": " @notice Returns a number between 0 and 1e18 to indicate how much collateral each long and short token are\n entitled to per collateralPerPair.\n @param expiryPrice price from the optimistic oracle for the LSP price identifier.\n @return expiryPercentLong to indicate how much collateral should be sent between long and short tokens."
            },
            "functionSelector": "2da52361",
            "id": 14976,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 14895,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14894,
                  "name": "nonReentrantView",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3694,
                  "src": "4564:16:76"
                },
                "nodeType": "ModifierInvocation",
                "src": "4564:18:76"
              }
            ],
            "name": "percentageLongCollateralAtExpiry",
            "nameLocation": "4458:32:76",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 14893,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4547:8:76"
            },
            "parameters": {
              "id": 14892,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14891,
                  "mutability": "mutable",
                  "name": "expiryPrice",
                  "nameLocation": "4498:11:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14976,
                  "src": "4491:18:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 14890,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4491:6:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4490:20:76"
            },
            "returnParameters": {
              "id": 14898,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14897,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14976,
                  "src": "4600:7:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14896,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4600:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4599:9:76"
            },
            "scope": 14977,
            "src": "4449:1595:76",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 14978,
        "src": "1882:4164:76",
        "usedErrors": []
      }
    ],
    "src": "42:6005:76"
  },
  "legacyAST": {
    "absolutePath": "/home/circleci/protocol/packages/core/contracts/financial-templates/common/financial-product-libraries/long-short-pair-libraries/RangeBondLongShortPairFinancialProductLibrary.sol",
    "exportedSymbols": {
      "ExpiringContractInterface": [
        14792
      ],
      "FixedPoint": [
        3659
      ],
      "Lockable": [
        3720
      ],
      "LongShortPairFinancialProductLibrary": [
        14800
      ],
      "Math": [
        43408
      ],
      "RangeBondLongShortPairFinancialProductLibrary": [
        14977
      ],
      "SafeMath": [
        44033
      ],
      "SignedSafeMath": [
        44097
      ]
    },
    "id": 14978,
    "license": "AGPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 14802,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:23:76"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SignedSafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SignedSafeMath.sol",
        "id": 14803,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14978,
        "sourceUnit": 44098,
        "src": "67:63:76",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
        "file": "@openzeppelin/contracts/utils/math/Math.sol",
        "id": 14804,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14978,
        "sourceUnit": 43409,
        "src": "131:53:76",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/circleci/protocol/packages/core/contracts/financial-templates/common/financial-product-libraries/long-short-pair-libraries/LongShortPairFinancialProductLibrary.sol",
        "file": "./LongShortPairFinancialProductLibrary.sol",
        "id": 14805,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14978,
        "sourceUnit": 14801,
        "src": "186:52:76",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/circleci/protocol/packages/core/contracts/common/implementation/Lockable.sol",
        "file": "../../../../common/implementation/Lockable.sol",
        "id": 14806,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14978,
        "sourceUnit": 3721,
        "src": "239:56:76",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 14808,
              "name": "LongShortPairFinancialProductLibrary",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14800,
              "src": "1940:36:76"
            },
            "id": 14809,
            "nodeType": "InheritanceSpecifier",
            "src": "1940:36:76"
          },
          {
            "baseName": {
              "id": 14810,
              "name": "Lockable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3720,
              "src": "1978:8:76"
            },
            "id": 14811,
            "nodeType": "InheritanceSpecifier",
            "src": "1978:8:76"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 14807,
          "nodeType": "StructuredDocumentation",
          "src": "297:1584:76",
          "text": " @title Range Bond Long Short Pair Financial Product Library\n @notice Adds settlement logic to create range bond LSPs. A range bond is the combination of a Yield dollar, short put\n option and long call option enabling the token sponsor to issue structured products to unlock DeFi treasuries.\n A range bond is defined as = Yield Dollar - Put Option + Call option. Numerically this is found using:\n N = Notional of bond\n P = price of token\n T = number of tokens\n R1 = low price range\n R2 = high price range\n T = min(N/P,N/R1) + max((N/R2*(P-R2))/P,0)\n - At any price below the low price range (R1) the long side effectively holds a fixed number of collateral equal to\n collateralPerPair from the LSP with the value of expiryPercentLong = 1. This is the max payout in collateral.\n - Any price between R1 and R2 gives a payout equivalent to a yield dollar (bond) of notional N. In this range the\n expiryPercentLong shifts to keep the payout in dollar terms equal to the bond notional.\n - At any price above R2 the long holders are entitled to a fixed, minimum number of collateral equal to N/R2 with a\n expiryPercentLong=(N/R2)/collateralPerPair.\n The expression for the number of tokens paid out to the long side (T above) can be algebraically simplified,\n transformed to remove the notional and reframed to express the expiryPercentLong as [min(max(1/R2,1/P),1/R1)]/(1/R1)\n With this equation, the contract deployer does not need to specify the bond notional N. The notional can be calculated\n by taking R1*collateralPerPair from the LSP."
        },
        "fullyImplemented": true,
        "id": 14977,
        "linearizedBaseContracts": [
          14977,
          3720,
          14800
        ],
        "name": "RangeBondLongShortPairFinancialProductLibrary",
        "nameLocation": "1891:45:76",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 14815,
            "libraryName": {
              "id": 14812,
              "name": "FixedPoint",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3659,
              "src": "1999:10:76"
            },
            "nodeType": "UsingForDirective",
            "src": "1993:41:76",
            "typeName": {
              "id": 14814,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 14813,
                "name": "FixedPoint.Unsigned",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2045,
                "src": "2014:19:76"
              },
              "referencedDeclaration": 2045,
              "src": "2014:19:76",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Unsigned_$2045_storage_ptr",
                "typeString": "struct FixedPoint.Unsigned"
              }
            }
          },
          {
            "id": 14818,
            "libraryName": {
              "id": 14816,
              "name": "SignedSafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 44097,
              "src": "2045:14:76"
            },
            "nodeType": "UsingForDirective",
            "src": "2039:32:76",
            "typeName": {
              "id": 14817,
              "name": "int256",
              "nodeType": "ElementaryTypeName",
              "src": "2064:6:76",
              "typeDescriptions": {
                "typeIdentifier": "t_int256",
                "typeString": "int256"
              }
            }
          },
          {
            "canonicalName": "RangeBondLongShortPairFinancialProductLibrary.RangeBondLongShortPairParameters",
            "id": 14823,
            "members": [
              {
                "constant": false,
                "id": 14820,
                "mutability": "mutable",
                "name": "highPriceRange",
                "nameLocation": "2135:14:76",
                "nodeType": "VariableDeclaration",
                "scope": 14823,
                "src": "2127:22:76",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 14819,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2127:7:76",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14822,
                "mutability": "mutable",
                "name": "lowPriceRange",
                "nameLocation": "2167:13:76",
                "nodeType": "VariableDeclaration",
                "scope": 14823,
                "src": "2159:21:76",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 14821,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2159:7:76",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "RangeBondLongShortPairParameters",
            "nameLocation": "2084:32:76",
            "nodeType": "StructDefinition",
            "scope": 14977,
            "src": "2077:110:76",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9299cbed",
            "id": 14828,
            "mutability": "mutable",
            "name": "longShortPairParameters",
            "nameLocation": "2253:23:76",
            "nodeType": "VariableDeclaration",
            "scope": 14977,
            "src": "2193:83:76",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RangeBondLongShortPairParameters_$14823_storage_$",
              "typeString": "mapping(address => struct RangeBondLongShortPairFinancialProductLibrary.RangeBondLongShortPairParameters)"
            },
            "typeName": {
              "id": 14827,
              "keyType": {
                "id": 14824,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2201:7:76",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2193:52:76",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RangeBondLongShortPairParameters_$14823_storage_$",
                "typeString": "mapping(address => struct RangeBondLongShortPairFinancialProductLibrary.RangeBondLongShortPairParameters)"
              },
              "valueType": {
                "id": 14826,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 14825,
                  "name": "RangeBondLongShortPairParameters",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14823,
                  "src": "2212:32:76"
                },
                "referencedDeclaration": 14823,
                "src": "2212:32:76",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_RangeBondLongShortPairParameters_$14823_storage_ptr",
                  "typeString": "struct RangeBondLongShortPairFinancialProductLibrary.RangeBondLongShortPairParameters"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 14887,
              "nodeType": "Block",
              "src": "3508:564:76",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 14847,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 14842,
                                  "name": "longShortPair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14831,
                                  "src": "3552:13:76",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 14841,
                                "name": "ExpiringContractInterface",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14792,
                                "src": "3526:25:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ExpiringContractInterface_$14792_$",
                                  "typeString": "type(contract ExpiringContractInterface)"
                                }
                              },
                              "id": 14843,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3526:40:76",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ExpiringContractInterface_$14792",
                                "typeString": "contract ExpiringContractInterface"
                              }
                            },
                            "id": 14844,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "expirationTimestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14791,
                            "src": "3526:60:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 14845,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3526:62:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 14846,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3592:1:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3526:67:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964204c53502061646472657373",
                        "id": 14848,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3595:21:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9c7a742eb98e20c17de092129b9e73fedab190e4a1e2e034f7e056503d041914",
                          "typeString": "literal_string \"Invalid LSP address\""
                        },
                        "value": "Invalid LSP address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9c7a742eb98e20c17de092129b9e73fedab190e4a1e2e034f7e056503d041914",
                          "typeString": "literal_string \"Invalid LSP address\""
                        }
                      ],
                      "id": 14840,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3518:7:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14849,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3518:99:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14850,
                  "nodeType": "ExpressionStatement",
                  "src": "3518:99:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 14854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 14852,
                          "name": "highPriceRange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14833,
                          "src": "3636:14:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 14853,
                          "name": "lowPriceRange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14835,
                          "src": "3653:13:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3636:30:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420626f756e6473",
                        "id": 14855,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3668:16:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_247b4a8950cc859ed74b0ac5064161dde897ab929a9a949e360193cf1adc2f3a",
                          "typeString": "literal_string \"Invalid bounds\""
                        },
                        "value": "Invalid bounds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_247b4a8950cc859ed74b0ac5064161dde897ab929a9a949e360193cf1adc2f3a",
                          "typeString": "literal_string \"Invalid bounds\""
                        }
                      ],
                      "id": 14851,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3628:7:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3628:57:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14857,
                  "nodeType": "ExpressionStatement",
                  "src": "3628:57:76"
                },
                {
                  "assignments": [
                    14860
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14860,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "3736:6:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 14887,
                      "src": "3696:46:76",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RangeBondLongShortPairParameters_$14823_memory_ptr",
                        "typeString": "struct RangeBondLongShortPairFinancialProductLibrary.RangeBondLongShortPairParameters"
                      },
                      "typeName": {
                        "id": 14859,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 14858,
                          "name": "RangeBondLongShortPairParameters",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14823,
                          "src": "3696:32:76"
                        },
                        "referencedDeclaration": 14823,
                        "src": "3696:32:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RangeBondLongShortPairParameters_$14823_storage_ptr",
                          "typeString": "struct RangeBondLongShortPairFinancialProductLibrary.RangeBondLongShortPairParameters"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14864,
                  "initialValue": {
                    "baseExpression": {
                      "id": 14861,
                      "name": "longShortPairParameters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14828,
                      "src": "3745:23:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RangeBondLongShortPairParameters_$14823_storage_$",
                        "typeString": "mapping(address => struct RangeBondLongShortPairFinancialProductLibrary.RangeBondLongShortPairParameters storage ref)"
                      }
                    },
                    "id": 14863,
                    "indexExpression": {
                      "id": 14862,
                      "name": "longShortPair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14831,
                      "src": "3769:13:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3745:38:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RangeBondLongShortPairParameters_$14823_storage",
                      "typeString": "struct RangeBondLongShortPairFinancialProductLibrary.RangeBondLongShortPairParameters storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3696:87:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 14874,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 14869,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 14866,
                              "name": "params",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14860,
                              "src": "3801:6:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RangeBondLongShortPairParameters_$14823_memory_ptr",
                                "typeString": "struct RangeBondLongShortPairFinancialProductLibrary.RangeBondLongShortPairParameters memory"
                              }
                            },
                            "id": 14867,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "highPriceRange",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14820,
                            "src": "3801:21:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 14868,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3826:1:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3801:26:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 14873,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 14870,
                              "name": "params",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14860,
                              "src": "3831:6:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RangeBondLongShortPairParameters_$14823_memory_ptr",
                                "typeString": "struct RangeBondLongShortPairFinancialProductLibrary.RangeBondLongShortPairParameters memory"
                              }
                            },
                            "id": 14871,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lowPriceRange",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14822,
                            "src": "3831:20:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 14872,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3855:1:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3831:25:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3801:55:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506172616d657465727320616c726561647920736574",
                        "id": 14875,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3858:24:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1c660ff5672050f49f4504349febd871d9a8af4dbd7a242ac305e556f78030ee",
                          "typeString": "literal_string \"Parameters already set\""
                        },
                        "value": "Parameters already set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1c660ff5672050f49f4504349febd871d9a8af4dbd7a242ac305e556f78030ee",
                          "typeString": "literal_string \"Parameters already set\""
                        }
                      ],
                      "id": 14865,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3793:7:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3793:90:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14877,
                  "nodeType": "ExpressionStatement",
                  "src": "3793:90:76"
                },
                {
                  "expression": {
                    "id": 14885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 14878,
                        "name": "longShortPairParameters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14828,
                        "src": "3894:23:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RangeBondLongShortPairParameters_$14823_storage_$",
                          "typeString": "mapping(address => struct RangeBondLongShortPairFinancialProductLibrary.RangeBondLongShortPairParameters storage ref)"
                        }
                      },
                      "id": 14880,
                      "indexExpression": {
                        "id": 14879,
                        "name": "longShortPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14831,
                        "src": "3918:13:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3894:38:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RangeBondLongShortPairParameters_$14823_storage",
                        "typeString": "struct RangeBondLongShortPairFinancialProductLibrary.RangeBondLongShortPairParameters storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 14882,
                          "name": "highPriceRange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14833,
                          "src": "3998:14:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 14883,
                          "name": "lowPriceRange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14835,
                          "src": "4041:13:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 14881,
                        "name": "RangeBondLongShortPairParameters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14823,
                        "src": "3935:32:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_RangeBondLongShortPairParameters_$14823_storage_ptr_$",
                          "typeString": "type(struct RangeBondLongShortPairFinancialProductLibrary.RangeBondLongShortPairParameters storage pointer)"
                        }
                      },
                      "id": 14884,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "highPriceRange",
                        "lowPriceRange"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "3935:130:76",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RangeBondLongShortPairParameters_$14823_memory_ptr",
                        "typeString": "struct RangeBondLongShortPairFinancialProductLibrary.RangeBondLongShortPairParameters memory"
                      }
                    },
                    "src": "3894:171:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RangeBondLongShortPairParameters_$14823_storage",
                      "typeString": "struct RangeBondLongShortPairFinancialProductLibrary.RangeBondLongShortPairParameters storage ref"
                    }
                  },
                  "id": 14886,
                  "nodeType": "ExpressionStatement",
                  "src": "3894:171:76"
                }
              ]
            },
            "documentation": {
              "id": 14829,
              "nodeType": "StructuredDocumentation",
              "src": "2283:1062:76",
              "text": " @notice Enables any address to set the parameters price for an associated financial product.\n @param longShortPair address of the LSP contract.\n @param highPriceRange high price range after which the payout transforms from a yield dollar to a call option.\n @param lowPriceRange low price range below which the payout transforms from a yield dollar to a short put option.\n @dev between highPriceRange and lowPriceRange the contract will payout a fixed amount of\n lowPriceRange*collateralPerPair (i.e the \"notional\" of the yield dollar).\n @dev Note: a) Any address can set these parameters b) existing LSP parameters for address not set.\n c) highPriceRange > lowPriceRange.\n d) parameters price can only be set once to prevent the deployer from changing the parameters after the fact.\n e) For safety, a parameters should be set before depositing any synthetic tokens in a liquidity pool.\n f) longShortPair must expose an expirationTimestamp method to validate it is correctly deployed."
            },
            "functionSelector": "92a98f53",
            "id": 14888,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 14838,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14837,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3686,
                  "src": "3493:12:76"
                },
                "nodeType": "ModifierInvocation",
                "src": "3493:14:76"
              }
            ],
            "name": "setLongShortPairParameters",
            "nameLocation": "3359:26:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14836,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14831,
                  "mutability": "mutable",
                  "name": "longShortPair",
                  "nameLocation": "3403:13:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14888,
                  "src": "3395:21:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14830,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3395:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14833,
                  "mutability": "mutable",
                  "name": "highPriceRange",
                  "nameLocation": "3434:14:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14888,
                  "src": "3426:22:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14832,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3426:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14835,
                  "mutability": "mutable",
                  "name": "lowPriceRange",
                  "nameLocation": "3466:13:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14888,
                  "src": "3458:21:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14834,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3458:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3385:100:76"
            },
            "returnParameters": {
              "id": 14839,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3508:0:76"
            },
            "scope": 14977,
            "src": "3350:722:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              14799
            ],
            "body": {
              "id": 14975,
              "nodeType": "Block",
              "src": "4613:1431:76",
              "statements": [
                {
                  "assignments": [
                    14901
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14901,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "4663:6:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 14975,
                      "src": "4623:46:76",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RangeBondLongShortPairParameters_$14823_memory_ptr",
                        "typeString": "struct RangeBondLongShortPairFinancialProductLibrary.RangeBondLongShortPairParameters"
                      },
                      "typeName": {
                        "id": 14900,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 14899,
                          "name": "RangeBondLongShortPairParameters",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14823,
                          "src": "4623:32:76"
                        },
                        "referencedDeclaration": 14823,
                        "src": "4623:32:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RangeBondLongShortPairParameters_$14823_storage_ptr",
                          "typeString": "struct RangeBondLongShortPairFinancialProductLibrary.RangeBondLongShortPairParameters"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14906,
                  "initialValue": {
                    "baseExpression": {
                      "id": 14902,
                      "name": "longShortPairParameters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14828,
                      "src": "4672:23:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_RangeBondLongShortPairParameters_$14823_storage_$",
                        "typeString": "mapping(address => struct RangeBondLongShortPairFinancialProductLibrary.RangeBondLongShortPairParameters storage ref)"
                      }
                    },
                    "id": 14905,
                    "indexExpression": {
                      "expression": {
                        "id": 14903,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "4696:3:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 14904,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "4696:10:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4672:35:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RangeBondLongShortPairParameters_$14823_storage",
                      "typeString": "struct RangeBondLongShortPairFinancialProductLibrary.RangeBondLongShortPairParameters storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4623:84:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 14916,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 14911,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 14908,
                              "name": "params",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14901,
                              "src": "4725:6:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RangeBondLongShortPairParameters_$14823_memory_ptr",
                                "typeString": "struct RangeBondLongShortPairFinancialProductLibrary.RangeBondLongShortPairParameters memory"
                              }
                            },
                            "id": 14909,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "highPriceRange",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14820,
                            "src": "4725:21:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 14910,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4750:1:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4725:26:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 14915,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 14912,
                              "name": "params",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14901,
                              "src": "4755:6:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RangeBondLongShortPairParameters_$14823_memory_ptr",
                                "typeString": "struct RangeBondLongShortPairFinancialProductLibrary.RangeBondLongShortPairParameters memory"
                              }
                            },
                            "id": 14913,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lowPriceRange",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14822,
                            "src": "4755:20:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 14914,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4779:1:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4755:25:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4725:55:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506172616d73206e6f742073657420666f722063616c6c696e67204c5350",
                        "id": 14917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4782:32:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_68cc0dd0836e3d636c6d9a388054767b5f98741a714b83391a138d4c0cefe7d2",
                          "typeString": "literal_string \"Params not set for calling LSP\""
                        },
                        "value": "Params not set for calling LSP"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_68cc0dd0836e3d636c6d9a388054767b5f98741a714b83391a138d4c0cefe7d2",
                          "typeString": "literal_string \"Params not set for calling LSP\""
                        }
                      ],
                      "id": 14907,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4717:7:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4717:98:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14919,
                  "nodeType": "ExpressionStatement",
                  "src": "4717:98:76"
                },
                {
                  "assignments": [
                    14921
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14921,
                      "mutability": "mutable",
                      "name": "positiveExpiryPrice",
                      "nameLocation": "5224:19:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 14975,
                      "src": "5216:27:76",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 14920,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5216:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14931,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "id": 14924,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 14922,
                        "name": "expiryPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14891,
                        "src": "5246:11:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 14923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5260:1:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "5246:15:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "30",
                      "id": 14929,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5287:1:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "id": 14930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "5246:42:76",
                    "trueExpression": {
                      "arguments": [
                        {
                          "id": 14927,
                          "name": "expiryPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14891,
                          "src": "5272:11:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        ],
                        "id": 14926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5264:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 14925,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5264:7:76",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 14928,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5264:20:76",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5216:72:76"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 14935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 14932,
                      "name": "positiveExpiryPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14921,
                      "src": "5411:19:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "expression": {
                        "id": 14933,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14901,
                        "src": "5434:6:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RangeBondLongShortPairParameters_$14823_memory_ptr",
                          "typeString": "struct RangeBondLongShortPairFinancialProductLibrary.RangeBondLongShortPairParameters memory"
                        }
                      },
                      "id": 14934,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "lowPriceRange",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14822,
                      "src": "5434:20:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5411:43:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 14942,
                  "nodeType": "IfStatement",
                  "src": "5407:95:76",
                  "trueBody": {
                    "expression": {
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 14938,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5491:1:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "expression": {
                            "id": 14936,
                            "name": "FixedPoint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3659,
                            "src": "5463:10:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_FixedPoint_$3659_$",
                              "typeString": "type(library FixedPoint)"
                            }
                          },
                          "id": 14937,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "fromUnscaledUint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2062,
                          "src": "5463:27:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_Unsigned_$2045_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (struct FixedPoint.Unsigned memory)"
                          }
                        },
                        "id": 14939,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5463:30:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Unsigned_$2045_memory_ptr",
                          "typeString": "struct FixedPoint.Unsigned memory"
                        }
                      },
                      "id": 14940,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rawValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2044,
                      "src": "5463:39:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 14898,
                    "id": 14941,
                    "nodeType": "Return",
                    "src": "5456:46:76"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 14946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 14943,
                      "name": "positiveExpiryPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14921,
                      "src": "5671:19:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "expression": {
                        "id": 14944,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14901,
                        "src": "5694:6:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_RangeBondLongShortPairParameters_$14823_memory_ptr",
                          "typeString": "struct RangeBondLongShortPairFinancialProductLibrary.RangeBondLongShortPairParameters memory"
                        }
                      },
                      "id": 14945,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "highPriceRange",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14820,
                      "src": "5694:21:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5671:44:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 14960,
                  "nodeType": "IfStatement",
                  "src": "5667:165:76",
                  "trueBody": {
                    "expression": {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 14955,
                                "name": "positiveExpiryPrice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14921,
                                "src": "5802:19:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 14953,
                                "name": "FixedPoint",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3659,
                                "src": "5782:10:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_FixedPoint_$3659_$",
                                  "typeString": "type(library FixedPoint)"
                                }
                              },
                              "id": 14954,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "Unsigned",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2045,
                              "src": "5782:19:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Unsigned_$2045_storage_ptr_$",
                                "typeString": "type(struct FixedPoint.Unsigned storage pointer)"
                              }
                            },
                            "id": 14956,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5782:40:76",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Unsigned_$2045_memory_ptr",
                              "typeString": "struct FixedPoint.Unsigned memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Unsigned_$2045_memory_ptr",
                              "typeString": "struct FixedPoint.Unsigned memory"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 14949,
                                  "name": "params",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14901,
                                  "src": "5756:6:76",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_RangeBondLongShortPairParameters_$14823_memory_ptr",
                                    "typeString": "struct RangeBondLongShortPairFinancialProductLibrary.RangeBondLongShortPairParameters memory"
                                  }
                                },
                                "id": 14950,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lowPriceRange",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 14822,
                                "src": "5756:20:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 14947,
                                "name": "FixedPoint",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3659,
                                "src": "5736:10:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_FixedPoint_$3659_$",
                                  "typeString": "type(library FixedPoint)"
                                }
                              },
                              "id": 14948,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "Unsigned",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2045,
                              "src": "5736:19:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Unsigned_$2045_storage_ptr_$",
                                "typeString": "type(struct FixedPoint.Unsigned storage pointer)"
                              }
                            },
                            "id": 14951,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5736:41:76",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Unsigned_$2045_memory_ptr",
                              "typeString": "struct FixedPoint.Unsigned memory"
                            }
                          },
                          "id": 14952,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2635,
                          "src": "5736:45:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_Unsigned_$2045_memory_ptr_$_t_struct$_Unsigned_$2045_memory_ptr_$returns$_t_struct$_Unsigned_$2045_memory_ptr_$bound_to$_t_struct$_Unsigned_$2045_memory_ptr_$",
                            "typeString": "function (struct FixedPoint.Unsigned memory,struct FixedPoint.Unsigned memory) pure returns (struct FixedPoint.Unsigned memory)"
                          }
                        },
                        "id": 14957,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5736:87:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Unsigned_$2045_memory_ptr",
                          "typeString": "struct FixedPoint.Unsigned memory"
                        }
                      },
                      "id": 14958,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rawValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2044,
                      "src": "5736:96:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 14898,
                    "id": 14959,
                    "nodeType": "Return",
                    "src": "5729:103:76"
                  }
                },
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 14969,
                                "name": "params",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14901,
                                "src": "6005:6:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RangeBondLongShortPairParameters_$14823_memory_ptr",
                                  "typeString": "struct RangeBondLongShortPairFinancialProductLibrary.RangeBondLongShortPairParameters memory"
                                }
                              },
                              "id": 14970,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "highPriceRange",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14820,
                              "src": "6005:21:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 14967,
                              "name": "FixedPoint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3659,
                              "src": "5985:10:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_FixedPoint_$3659_$",
                                "typeString": "type(library FixedPoint)"
                              }
                            },
                            "id": 14968,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Unsigned",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2045,
                            "src": "5985:19:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Unsigned_$2045_storage_ptr_$",
                              "typeString": "type(struct FixedPoint.Unsigned storage pointer)"
                            }
                          },
                          "id": 14971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5985:42:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Unsigned_$2045_memory_ptr",
                            "typeString": "struct FixedPoint.Unsigned memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Unsigned_$2045_memory_ptr",
                            "typeString": "struct FixedPoint.Unsigned memory"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 14963,
                                "name": "params",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14901,
                                "src": "5959:6:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_RangeBondLongShortPairParameters_$14823_memory_ptr",
                                  "typeString": "struct RangeBondLongShortPairFinancialProductLibrary.RangeBondLongShortPairParameters memory"
                                }
                              },
                              "id": 14964,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "lowPriceRange",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 14822,
                              "src": "5959:20:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 14961,
                              "name": "FixedPoint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3659,
                              "src": "5939:10:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_FixedPoint_$3659_$",
                                "typeString": "type(library FixedPoint)"
                              }
                            },
                            "id": 14962,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Unsigned",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2045,
                            "src": "5939:19:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Unsigned_$2045_storage_ptr_$",
                              "typeString": "type(struct FixedPoint.Unsigned storage pointer)"
                            }
                          },
                          "id": 14965,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5939:41:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Unsigned_$2045_memory_ptr",
                            "typeString": "struct FixedPoint.Unsigned memory"
                          }
                        },
                        "id": 14966,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2635,
                        "src": "5939:45:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_struct$_Unsigned_$2045_memory_ptr_$_t_struct$_Unsigned_$2045_memory_ptr_$returns$_t_struct$_Unsigned_$2045_memory_ptr_$bound_to$_t_struct$_Unsigned_$2045_memory_ptr_$",
                          "typeString": "function (struct FixedPoint.Unsigned memory,struct FixedPoint.Unsigned memory) pure returns (struct FixedPoint.Unsigned memory)"
                        }
                      },
                      "id": 14972,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5939:89:76",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Unsigned_$2045_memory_ptr",
                        "typeString": "struct FixedPoint.Unsigned memory"
                      }
                    },
                    "id": 14973,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "rawValue",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 2044,
                    "src": "5939:98:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 14898,
                  "id": 14974,
                  "nodeType": "Return",
                  "src": "5932:105:76"
                }
              ]
            },
            "documentation": {
              "id": 14889,
              "nodeType": "StructuredDocumentation",
              "src": "4078:366:76",
              "text": " @notice Returns a number between 0 and 1e18 to indicate how much collateral each long and short token are\n entitled to per collateralPerPair.\n @param expiryPrice price from the optimistic oracle for the LSP price identifier.\n @return expiryPercentLong to indicate how much collateral should be sent between long and short tokens."
            },
            "functionSelector": "2da52361",
            "id": 14976,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 14895,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14894,
                  "name": "nonReentrantView",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3694,
                  "src": "4564:16:76"
                },
                "nodeType": "ModifierInvocation",
                "src": "4564:18:76"
              }
            ],
            "name": "percentageLongCollateralAtExpiry",
            "nameLocation": "4458:32:76",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 14893,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4547:8:76"
            },
            "parameters": {
              "id": 14892,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14891,
                  "mutability": "mutable",
                  "name": "expiryPrice",
                  "nameLocation": "4498:11:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14976,
                  "src": "4491:18:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 14890,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4491:6:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4490:20:76"
            },
            "returnParameters": {
              "id": 14898,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14897,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14976,
                  "src": "4600:7:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14896,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4600:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4599:9:76"
            },
            "scope": 14977,
            "src": "4449:1595:76",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 14978,
        "src": "1882:4164:76",
        "usedErrors": []
      }
    ],
    "src": "42:6005:76"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {
    "1": {
      "events": {},
      "links": {},
      "address": "0xc1f4e05738E5a7B7CB1f22bB689359CCb1610DA4",
      "transactionHash": ""
    },
    "42": {
      "events": {},
      "links": {},
      "address": "0x09381C827438605B5ea3e760A27666Be3497602C",
      "transactionHash": ""
    },
    "137": {
      "events": {},
      "links": {},
      "address": "0x8245545845a664f25cE407ee2EFe73CE6b14a837",
      "transactionHash": ""
    },
    "80001": {
      "events": {},
      "links": {},
      "address": "0xbe96050668dECb6FA0ef5Af919f37221658cfbEf",
      "transactionHash": ""
    }
  },
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-07-16T20:27:09.762Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "percentageLongCollateralAtExpiry(int256)": {
        "params": {
          "expiryPrice": "price from the optimistic oracle for the LSP price identifier."
        },
        "returns": {
          "_0": "expiryPercentLong to indicate how much collateral should be sent between long and short tokens."
        }
      },
      "setLongShortPairParameters(address,uint256,uint256)": {
        "details": "between highPriceRange and lowPriceRange the contract will payout a fixed amount of lowPriceRange*collateralPerPair (i.e the \"notional\" of the yield dollar).Note: a) Any address can set these parameters b) existing LSP parameters for address not set. c) highPriceRange > lowPriceRange. d) parameters price can only be set once to prevent the deployer from changing the parameters after the fact. e) For safety, a parameters should be set before depositing any synthetic tokens in a liquidity pool. f) longShortPair must expose an expirationTimestamp method to validate it is correctly deployed.",
        "params": {
          "highPriceRange": "high price range after which the payout transforms from a yield dollar to a call option.",
          "longShortPair": "address of the LSP contract.",
          "lowPriceRange": "low price range below which the payout transforms from a yield dollar to a short put option."
        }
      }
    },
    "title": "Range Bond Long Short Pair Financial Product Library",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "percentageLongCollateralAtExpiry(int256)": {
        "notice": "Returns a number between 0 and 1e18 to indicate how much collateral each long and short token are entitled to per collateralPerPair."
      },
      "setLongShortPairParameters(address,uint256,uint256)": {
        "notice": "Enables any address to set the parameters price for an associated financial product."
      }
    },
    "notice": "Adds settlement logic to create range bond LSPs. A range bond is the combination of a Yield dollar, short put option and long call option enabling the token sponsor to issue structured products to unlock DeFi treasuries. A range bond is defined as = Yield Dollar - Put Option + Call option. Numerically this is found using: N = Notional of bond P = price of token T = number of tokens R1 = low price range R2 = high price range T = min(N/P,N/R1) + max((N/R2*(P-R2))/P,0) - At any price below the low price range (R1) the long side effectively holds a fixed number of collateral equal to collateralPerPair from the LSP with the value of expiryPercentLong = 1. This is the max payout in collateral. - Any price between R1 and R2 gives a payout equivalent to a yield dollar (bond) of notional N. In this range the expiryPercentLong shifts to keep the payout in dollar terms equal to the bond notional. - At any price above R2 the long holders are entitled to a fixed, minimum number of collateral equal to N/R2 with a expiryPercentLong=(N/R2)/collateralPerPair. The expression for the number of tokens paid out to the long side (T above) can be algebraically simplified, transformed to remove the notional and reframed to express the expiryPercentLong as [min(max(1/R2,1/P),1/R1)]/(1/R1) With this equation, the contract deployer does not need to specify the bond notional N. The notional can be calculated by taking R1*collateralPerPair from the LSP.",
    "version": 1
  }
}