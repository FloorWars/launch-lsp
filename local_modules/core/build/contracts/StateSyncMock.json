{
  "contractName": "StateSyncMock",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "StateSynced",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "syncState",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"StateSynced\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"syncState\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"StateSynced(uint256,address,bytes)\":{\"details\":\"Heimdall bridge listens to this event and sends the data to receiver contract on child chain\",\"params\":{\"contractAddress\":\"the contract receiving data on child chain\",\"data\":\"bytes data to be sent\",\"id\":\"Id of the sync, increamented for each event in case of actual state sender contract\"}}},\"kind\":\"dev\",\"methods\":{\"syncState(address,bytes)\":{\"details\":\"sender and receiver contracts need to be registered in case of actual state sender contract\",\"params\":{\"data\":\"bytes data to be sent\",\"receiver\":\"the contract receiving data on child chain\"}}},\"version\":1},\"userdoc\":{\"events\":{\"StateSynced(uint256,address,bytes)\":{\"notice\":\"Event emitted when when syncState is called\"}},\"kind\":\"user\",\"methods\":{\"syncState(address,bytes)\":{\"notice\":\"called to send data to child chain\"}},\"notice\":\"Dummy State Sender contract to simulate plasma state sender while testing\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/circleci/protocol/packages/core/contracts/external/polygon/test/StateSyncMock.sol\":\"StateSyncMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":199},\"remappings\":[]},\"sources\":{\"/home/circleci/protocol/packages/core/contracts/external/polygon/test/StateSyncMock.sol\":{\"keccak256\":\"0x05023f6f00304ad3172ae502811d24217da4368050957f314441615a35bb6912\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e79f3c4f7f04757c2f29413ff995e09612b21b62e232d4d1265c3b3beaa696c\",\"dweb:/ipfs/QmYQLzyKwsMgFifo1qSE5ymAtDekmkfErJ3XGwZvVRxmsu\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061017f806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806316f1983114610030575b600080fd5b61004361003e36600461008f565b610045565b005b826001600160a01b031660017f103fed9db65eac19c4d870f49ab7520fe03b99f1838e5996caf47e9e43308392848460405161008292919061011a565b60405180910390a3505050565b6000806000604084860312156100a3578283fd5b83356001600160a01b03811681146100b9578384fd5b9250602084013567ffffffffffffffff808211156100d5578384fd5b818601915086601f8301126100e8578384fd5b8135818111156100f6578485fd5b876020828501011115610107578485fd5b6020830194508093505050509250925092565b60208152816020820152818360408301376000818301604090810191909152601f909201601f1916010191905056fea2646970667358221220d27bb59dcab3d549c48744b345745684f5b976f5a5958e6be88ca7eff911468a64736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c806316f1983114610030575b600080fd5b61004361003e36600461008f565b610045565b005b826001600160a01b031660017f103fed9db65eac19c4d870f49ab7520fe03b99f1838e5996caf47e9e43308392848460405161008292919061011a565b60405180910390a3505050565b6000806000604084860312156100a3578283fd5b83356001600160a01b03811681146100b9578384fd5b9250602084013567ffffffffffffffff808211156100d5578384fd5b818601915086601f8301126100e8578384fd5b8135818111156100f6578485fd5b876020828501011115610107578485fd5b6020830194508093505050509250925092565b60208152816020820152818360408301376000818301604090810191909152601f909201601f1916010191905056fea2646970667358221220d27bb59dcab3d549c48744b345745684f5b976f5a5958e6be88ca7eff911468a64736f6c63430008040033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1237:192",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:192",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "120:719:192",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "166:26:192",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "175:6:192"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "183:6:192"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "168:6:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "168:22:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "168:22:192"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "141:7:192"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "150:9:192"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "137:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "137:23:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "162:2:192",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:32:192"
                  },
                  "nodeType": "YulIf",
                  "src": "130:2:192"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "201:36:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "227:9:192"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "214:12:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "214:23:192"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "205:5:192",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "300:26:192",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "309:6:192"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "317:6:192"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "302:6:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "302:22:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "302:22:192"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "259:5:192"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "270:5:192"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "285:3:192",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "290:1:192",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "281:3:192"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "281:11:192"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "294:1:192",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "277:3:192"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "277:19:192"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "266:3:192"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "266:31:192"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "256:2:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "256:42:192"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "249:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "249:50:192"
                  },
                  "nodeType": "YulIf",
                  "src": "246:2:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "335:15:192",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "345:5:192"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "335:6:192"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "359:46:192",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "390:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "401:2:192",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "386:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "386:18:192"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "373:12:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "373:32:192"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "363:6:192",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "414:28:192",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "424:18:192",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "418:2:192",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "469:26:192",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "478:6:192"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "486:6:192"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "471:6:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "471:22:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "471:22:192"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "457:6:192"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "465:2:192"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "454:2:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "454:14:192"
                  },
                  "nodeType": "YulIf",
                  "src": "451:2:192"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "504:32:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "518:9:192"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "529:6:192"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "514:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "514:22:192"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "508:2:192",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "584:26:192",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "593:6:192"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "601:6:192"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "586:6:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "586:22:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "586:22:192"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "563:2:192"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "567:4:192",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "559:3:192"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "559:13:192"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "574:7:192"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "555:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "555:27:192"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "548:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "548:35:192"
                  },
                  "nodeType": "YulIf",
                  "src": "545:2:192"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "619:30:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "646:2:192"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "633:12:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "633:16:192"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "623:6:192",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "676:26:192",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "685:6:192"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "693:6:192"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "678:6:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "678:22:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "678:22:192"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "664:6:192"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "672:2:192"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "661:2:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "661:14:192"
                  },
                  "nodeType": "YulIf",
                  "src": "658:2:192"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "752:26:192",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "761:6:192"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "769:6:192"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "754:6:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "754:22:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "754:22:192"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "725:2:192"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "729:6:192"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "721:3:192"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "721:15:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "738:2:192",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "717:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "717:24:192"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "743:7:192"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "714:2:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "714:37:192"
                  },
                  "nodeType": "YulIf",
                  "src": "711:2:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "787:21:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "801:2:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "805:2:192",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "797:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "797:11:192"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "787:6:192"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "817:16:192",
                  "value": {
                    "name": "length",
                    "nodeType": "YulIdentifier",
                    "src": "827:6:192"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "817:6:192"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_bytes_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "70:9:192",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "81:7:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "93:6:192",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "101:6:192",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "109:6:192",
                "type": ""
              }
            ],
            "src": "14:825:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "973:262:192",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "990:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1001:2:192",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "983:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "983:21:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "983:21:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1024:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1035:2:192",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1020:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1020:18:192"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1040:6:192"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1013:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1013:34:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1013:34:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1073:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1084:2:192",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1069:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1069:18:192"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1089:6:192"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1097:6:192"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "1056:12:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1056:48:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1056:48:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1128:9:192"
                              },
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "1139:6:192"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1124:3:192"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1124:22:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1148:2:192",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1120:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1120:31:192"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "1153:4:192"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1113:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1113:45:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1113:45:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1167:62:192",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1183:9:192"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1202:6:192"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1210:2:192",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1198:3:192"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1198:15:192"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1219:2:192",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "1215:3:192"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1215:7:192"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1194:3:192"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1194:29:192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1179:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1179:45:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1226:2:192",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1175:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1175:54:192"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1167:4:192"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "934:9:192",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "945:6:192",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "953:6:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "964:4:192",
                "type": ""
              }
            ],
            "src": "844:391:192"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_addresst_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value1, value1) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(value1, value1) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(value1, value1) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(value1, value1) }\n        value1 := add(_2, 32)\n        value2 := length\n    }\n    function abi_encode_tuple_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), value1)\n        calldatacopy(add(headStart, 64), value0, value1)\n        mstore(add(add(headStart, value1), 64), tail)\n        tail := add(add(headStart, and(add(value1, 31), not(31))), 64)\n    }\n}",
      "id": 192,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "150:911:57:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "150:911:57:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;940:119;;;;;;:::i;:::-;;:::i;:::-;;;1037:8;-1:-1:-1;;;;;1022:30:57;1034:1;1022:30;1047:4;;1022:30;;;;;;;:::i;:::-;;;;;;;;940:119;;;:::o;14:825:192:-;93:6;101;109;162:2;150:9;141:7;137:23;133:32;130:2;;;183:6;175;168:22;130:2;214:23;;-1:-1:-1;;;;;266:31:192;;256:42;;246:2;;317:6;309;302:22;246:2;345:5;-1:-1:-1;401:2:192;386:18;;373:32;424:18;454:14;;;451:2;;;486:6;478;471:22;451:2;529:6;518:9;514:22;504:32;;574:7;567:4;563:2;559:13;555:27;545:2;;601:6;593;586:22;545:2;646;633:16;672:2;664:6;661:14;658:2;;;693:6;685;678:22;658:2;743:7;738:2;729:6;725:2;721:15;717:24;714:37;711:2;;;769:6;761;754:22;711:2;805;801;797:11;787:21;;827:6;817:16;;;;;120:719;;;;;:::o;844:391::-;1001:2;990:9;983:21;1040:6;1035:2;1024:9;1020:18;1013:34;1097:6;1089;1084:2;1073:9;1069:18;1056:48;964:4;1124:22;;;1148:2;1120:31;;;1113:45;;;;1219:2;1198:15;;;-1:-1:-1;;1194:29:192;1179:45;1175:54;;973:262;-1:-1:-1;973:262:192:o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n/**\n * @notice Dummy State Sender contract to simulate plasma state sender while testing\n */\ncontract StateSyncMock {\n    /**\n     * @notice Event emitted when when syncState is called\n     * @dev Heimdall bridge listens to this event and sends the data to receiver contract on child chain\n     * @param id Id of the sync, increamented for each event in case of actual state sender contract\n     * @param contractAddress the contract receiving data on child chain\n     * @param data bytes data to be sent\n     */\n    event StateSynced(uint256 indexed id, address indexed contractAddress, bytes data);\n\n    /**\n     * @notice called to send data to child chain\n     * @dev sender and receiver contracts need to be registered in case of actual state sender contract\n     * @param receiver the contract receiving data on child chain\n     * @param data bytes data to be sent\n     */\n    function syncState(address receiver, bytes calldata data) external {\n        emit StateSynced(1, receiver, data);\n    }\n}\n",
  "sourcePath": "/home/circleci/protocol/packages/core/contracts/external/polygon/test/StateSyncMock.sol",
  "ast": {
    "absolutePath": "/home/circleci/protocol/packages/core/contracts/external/polygon/test/StateSyncMock.sol",
    "exportedSymbols": {
      "StateSyncMock": [
        11123
      ]
    },
    "id": 11124,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11097,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:57"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 11098,
          "nodeType": "StructuredDocumentation",
          "src": "57:92:57",
          "text": " @notice Dummy State Sender contract to simulate plasma state sender while testing"
        },
        "fullyImplemented": true,
        "id": 11123,
        "linearizedBaseContracts": [
          11123
        ],
        "name": "StateSyncMock",
        "nameLocation": "159:13:57",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": {
              "id": 11099,
              "nodeType": "StructuredDocumentation",
              "src": "179:390:57",
              "text": " @notice Event emitted when when syncState is called\n @dev Heimdall bridge listens to this event and sends the data to receiver contract on child chain\n @param id Id of the sync, increamented for each event in case of actual state sender contract\n @param contractAddress the contract receiving data on child chain\n @param data bytes data to be sent"
            },
            "id": 11107,
            "name": "StateSynced",
            "nameLocation": "580:11:57",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11101,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "608:2:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 11107,
                  "src": "592:18:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11100,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "592:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11103,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nameLocation": "628:15:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 11107,
                  "src": "612:31:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11102,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "612:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11105,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "651:4:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 11107,
                  "src": "645:10:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 11104,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "645:5:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "591:65:57"
            },
            "src": "574:83:57"
          },
          {
            "body": {
              "id": 11121,
              "nodeType": "Block",
              "src": "1007:52:57",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 11116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1034:1:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "id": 11117,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11110,
                        "src": "1037:8:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11118,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11112,
                        "src": "1047:4:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 11115,
                      "name": "StateSynced",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11107,
                      "src": "1022:11:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,address,bytes memory)"
                      }
                    },
                    "id": 11119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1022:30:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11120,
                  "nodeType": "EmitStatement",
                  "src": "1017:35:57"
                }
              ]
            },
            "documentation": {
              "id": 11108,
              "nodeType": "StructuredDocumentation",
              "src": "663:272:57",
              "text": " @notice called to send data to child chain\n @dev sender and receiver contracts need to be registered in case of actual state sender contract\n @param receiver the contract receiving data on child chain\n @param data bytes data to be sent"
            },
            "functionSelector": "16f19831",
            "id": 11122,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "syncState",
            "nameLocation": "949:9:57",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11113,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11110,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "967:8:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 11122,
                  "src": "959:16:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11109,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "959:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11112,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "992:4:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 11122,
                  "src": "977:19:57",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 11111,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "977:5:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "958:39:57"
            },
            "returnParameters": {
              "id": 11114,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1007:0:57"
            },
            "scope": 11123,
            "src": "940:119:57",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 11124,
        "src": "150:911:57",
        "usedErrors": []
      }
    ],
    "src": "32:1030:57"
  },
  "legacyAST": {
    "absolutePath": "/home/circleci/protocol/packages/core/contracts/external/polygon/test/StateSyncMock.sol",
    "exportedSymbols": {
      "StateSyncMock": [
        11123
      ]
    },
    "id": 11124,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11097,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:57"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 11098,
          "nodeType": "StructuredDocumentation",
          "src": "57:92:57",
          "text": " @notice Dummy State Sender contract to simulate plasma state sender while testing"
        },
        "fullyImplemented": true,
        "id": 11123,
        "linearizedBaseContracts": [
          11123
        ],
        "name": "StateSyncMock",
        "nameLocation": "159:13:57",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": {
              "id": 11099,
              "nodeType": "StructuredDocumentation",
              "src": "179:390:57",
              "text": " @notice Event emitted when when syncState is called\n @dev Heimdall bridge listens to this event and sends the data to receiver contract on child chain\n @param id Id of the sync, increamented for each event in case of actual state sender contract\n @param contractAddress the contract receiving data on child chain\n @param data bytes data to be sent"
            },
            "id": 11107,
            "name": "StateSynced",
            "nameLocation": "580:11:57",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11101,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "608:2:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 11107,
                  "src": "592:18:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11100,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "592:7:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11103,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nameLocation": "628:15:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 11107,
                  "src": "612:31:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11102,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "612:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11105,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "651:4:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 11107,
                  "src": "645:10:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 11104,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "645:5:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "591:65:57"
            },
            "src": "574:83:57"
          },
          {
            "body": {
              "id": 11121,
              "nodeType": "Block",
              "src": "1007:52:57",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 11116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1034:1:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "id": 11117,
                        "name": "receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11110,
                        "src": "1037:8:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11118,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11112,
                        "src": "1047:4:57",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 11115,
                      "name": "StateSynced",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11107,
                      "src": "1022:11:57",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,address,bytes memory)"
                      }
                    },
                    "id": 11119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1022:30:57",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11120,
                  "nodeType": "EmitStatement",
                  "src": "1017:35:57"
                }
              ]
            },
            "documentation": {
              "id": 11108,
              "nodeType": "StructuredDocumentation",
              "src": "663:272:57",
              "text": " @notice called to send data to child chain\n @dev sender and receiver contracts need to be registered in case of actual state sender contract\n @param receiver the contract receiving data on child chain\n @param data bytes data to be sent"
            },
            "functionSelector": "16f19831",
            "id": 11122,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "syncState",
            "nameLocation": "949:9:57",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11113,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11110,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "967:8:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 11122,
                  "src": "959:16:57",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11109,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "959:7:57",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11112,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "992:4:57",
                  "nodeType": "VariableDeclaration",
                  "scope": 11122,
                  "src": "977:19:57",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 11111,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "977:5:57",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "958:39:57"
            },
            "returnParameters": {
              "id": 11114,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1007:0:57"
            },
            "scope": 11123,
            "src": "940:119:57",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 11124,
        "src": "150:911:57",
        "usedErrors": []
      }
    ],
    "src": "32:1030:57"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-07-16T20:27:09.705Z",
  "devdoc": {
    "events": {
      "StateSynced(uint256,address,bytes)": {
        "details": "Heimdall bridge listens to this event and sends the data to receiver contract on child chain",
        "params": {
          "contractAddress": "the contract receiving data on child chain",
          "data": "bytes data to be sent",
          "id": "Id of the sync, increamented for each event in case of actual state sender contract"
        }
      }
    },
    "kind": "dev",
    "methods": {
      "syncState(address,bytes)": {
        "details": "sender and receiver contracts need to be registered in case of actual state sender contract",
        "params": {
          "data": "bytes data to be sent",
          "receiver": "the contract receiving data on child chain"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "events": {
      "StateSynced(uint256,address,bytes)": {
        "notice": "Event emitted when when syncState is called"
      }
    },
    "kind": "user",
    "methods": {
      "syncState(address,bytes)": {
        "notice": "called to send data to child chain"
      }
    },
    "notice": "Dummy State Sender contract to simulate plasma state sender while testing",
    "version": 1
  }
}