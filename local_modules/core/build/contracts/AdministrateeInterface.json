{
  "contractName": "AdministrateeInterface",
  "abi": [
    {
      "inputs": [],
      "name": "emergencyShutdown",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "remargin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pfc",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"emergencyShutdown\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pfc\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"remargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"pfc()\":{\"details\":\"This is equivalent to the collateral pool available from which to pay fees. Therefore, derived contracts are expected to implement this so that pay-fee methods can correctly compute the owed fees as a % of PfC.\",\"returns\":{\"_0\":\"pfc value for equal to the current profit from corruption denominated in collateral currency.\"}},\"remargin()\":{\"details\":\"It pays fees and moves money between margin accounts to make sure they reflect the NAV of the contract.\"}},\"title\":\"Interface that all financial contracts expose to the admin.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"emergencyShutdown()\":{\"notice\":\"Initiates the shutdown process, in case of an emergency.\"},\"pfc()\":{\"notice\":\"Gets the current profit from corruption for this contract in terms of the collateral currency.\"},\"remargin()\":{\"notice\":\"A core contract method called independently or as a part of other financial contract transactions.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/circleci/protocol/packages/core/contracts/oracle/interfaces/AdministrateeInterface.sol\":\"AdministrateeInterface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":199},\"remappings\":[]},\"sources\":{\"/home/circleci/protocol/packages/core/contracts/common/implementation/FixedPoint.sol\":{\"keccak256\":\"0x8ea44f1bf5e1efcfc5943ea67c3dc5bf7ce1ba84bf2d6b868baafac7e422cc01\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://94e828e682e9e44991807f5f39c2ed499b451d65155d8a6c6d0fd62b13dbd222\",\"dweb:/ipfs/QmPfPWyR9deca2dHmwVnm3E9Kt2fLXXABQE4WT8iSdKSXm\"]},\"/home/circleci/protocol/packages/core/contracts/oracle/interfaces/AdministrateeInterface.sol\":{\"keccak256\":\"0xf67e14a66980c47191d9cac981d59f285570355c62255f1fd99db1493c56eeff\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://fae8f72d4aa7e84ee773933557f0f4dcc13590d920dfb36aa5843a9ac6d54de9\",\"dweb:/ipfs/QmRqcTZsmi8wAPiqJPoHLuwsBL19p1z1Fym5rDhUxLs26a\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x2526b7c6a366fc211bbc176078ab02b83833e7682abcc5b3bed9d700b34e2a3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f9529d3d365e8415155cee11394e0f7c0de2152b601b7e77508fce16cb4a509\",\"dweb:/ipfs/QmVhbcLVsAzvqfjsdLwy25XMjgVJm7Z3w2JCNiNbZF2GHT\"]},\"@openzeppelin/contracts/utils/math/SignedSafeMath.sol\":{\"keccak256\":\"0xd1ddc24b24f12a347093844dd645c3a96bcdce05d1f51b8650946ad404cb3c40\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://873363c817ef68913ced271e77fc4af21d4a94ffba23de2b205c6e9de8ff6b72\",\"dweb:/ipfs/QmNmN46R3rrvTxMUjDTbZiCiqqTX9TRvWbiaN9qLrWQXPS\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity ^0.8.0;\n\nimport \"../../common/implementation/FixedPoint.sol\";\n\n/**\n * @title Interface that all financial contracts expose to the admin.\n */\ninterface AdministrateeInterface {\n    /**\n     * @notice Initiates the shutdown process, in case of an emergency.\n     */\n    function emergencyShutdown() external;\n\n    /**\n     * @notice A core contract method called independently or as a part of other financial contract transactions.\n     * @dev It pays fees and moves money between margin accounts to make sure they reflect the NAV of the contract.\n     */\n    function remargin() external;\n\n    /**\n     * @notice Gets the current profit from corruption for this contract in terms of the collateral currency.\n     * @dev This is equivalent to the collateral pool available from which to pay fees. Therefore, derived contracts are\n     * expected to implement this so that pay-fee methods can correctly compute the owed fees as a % of PfC.\n     * @return pfc value for equal to the current profit from corruption denominated in collateral currency.\n     */\n    function pfc() external view returns (FixedPoint.Unsigned memory);\n}\n",
  "sourcePath": "/home/circleci/protocol/packages/core/contracts/oracle/interfaces/AdministrateeInterface.sol",
  "ast": {
    "absolutePath": "/home/circleci/protocol/packages/core/contracts/oracle/interfaces/AdministrateeInterface.sol",
    "exportedSymbols": {
      "AdministrateeInterface": [
        33589
      ],
      "FixedPoint": [
        3659
      ],
      "SafeMath": [
        44033
      ],
      "SignedSafeMath": [
        44097
      ]
    },
    "id": 33590,
    "license": "AGPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 33571,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:23:121"
      },
      {
        "absolutePath": "/home/circleci/protocol/packages/core/contracts/common/implementation/FixedPoint.sol",
        "file": "../../common/implementation/FixedPoint.sol",
        "id": 33572,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 33590,
        "sourceUnit": 3660,
        "src": "67:52:121",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 33573,
          "nodeType": "StructuredDocumentation",
          "src": "121:77:121",
          "text": " @title Interface that all financial contracts expose to the admin."
        },
        "fullyImplemented": false,
        "id": 33589,
        "linearizedBaseContracts": [
          33589
        ],
        "name": "AdministrateeInterface",
        "nameLocation": "209:22:121",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 33574,
              "nodeType": "StructuredDocumentation",
              "src": "238:83:121",
              "text": " @notice Initiates the shutdown process, in case of an emergency."
            },
            "functionSelector": "3403c2fc",
            "id": 33577,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "emergencyShutdown",
            "nameLocation": "335:17:121",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33575,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "352:2:121"
            },
            "returnParameters": {
              "id": 33576,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "363:0:121"
            },
            "scope": 33589,
            "src": "326:38:121",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 33578,
              "nodeType": "StructuredDocumentation",
              "src": "370:241:121",
              "text": " @notice A core contract method called independently or as a part of other financial contract transactions.\n @dev It pays fees and moves money between margin accounts to make sure they reflect the NAV of the contract."
            },
            "functionSelector": "bda02e77",
            "id": 33581,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "remargin",
            "nameLocation": "625:8:121",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33579,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "633:2:121"
            },
            "returnParameters": {
              "id": 33580,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "644:0:121"
            },
            "scope": 33589,
            "src": "616:29:121",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 33582,
              "nodeType": "StructuredDocumentation",
              "src": "651:460:121",
              "text": " @notice Gets the current profit from corruption for this contract in terms of the collateral currency.\n @dev This is equivalent to the collateral pool available from which to pay fees. Therefore, derived contracts are\n expected to implement this so that pay-fee methods can correctly compute the owed fees as a % of PfC.\n @return pfc value for equal to the current profit from corruption denominated in collateral currency."
            },
            "functionSelector": "81a10ae1",
            "id": 33588,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "pfc",
            "nameLocation": "1125:3:121",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33583,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1128:2:121"
            },
            "returnParameters": {
              "id": 33587,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33586,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 33588,
                  "src": "1154:26:121",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Unsigned_$2045_memory_ptr",
                    "typeString": "struct FixedPoint.Unsigned"
                  },
                  "typeName": {
                    "id": 33585,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 33584,
                      "name": "FixedPoint.Unsigned",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2045,
                      "src": "1154:19:121"
                    },
                    "referencedDeclaration": 2045,
                    "src": "1154:19:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Unsigned_$2045_storage_ptr",
                      "typeString": "struct FixedPoint.Unsigned"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1153:28:121"
            },
            "scope": 33589,
            "src": "1116:66:121",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 33590,
        "src": "199:985:121",
        "usedErrors": []
      }
    ],
    "src": "42:1143:121"
  },
  "legacyAST": {
    "absolutePath": "/home/circleci/protocol/packages/core/contracts/oracle/interfaces/AdministrateeInterface.sol",
    "exportedSymbols": {
      "AdministrateeInterface": [
        33589
      ],
      "FixedPoint": [
        3659
      ],
      "SafeMath": [
        44033
      ],
      "SignedSafeMath": [
        44097
      ]
    },
    "id": 33590,
    "license": "AGPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 33571,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:23:121"
      },
      {
        "absolutePath": "/home/circleci/protocol/packages/core/contracts/common/implementation/FixedPoint.sol",
        "file": "../../common/implementation/FixedPoint.sol",
        "id": 33572,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 33590,
        "sourceUnit": 3660,
        "src": "67:52:121",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 33573,
          "nodeType": "StructuredDocumentation",
          "src": "121:77:121",
          "text": " @title Interface that all financial contracts expose to the admin."
        },
        "fullyImplemented": false,
        "id": 33589,
        "linearizedBaseContracts": [
          33589
        ],
        "name": "AdministrateeInterface",
        "nameLocation": "209:22:121",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 33574,
              "nodeType": "StructuredDocumentation",
              "src": "238:83:121",
              "text": " @notice Initiates the shutdown process, in case of an emergency."
            },
            "functionSelector": "3403c2fc",
            "id": 33577,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "emergencyShutdown",
            "nameLocation": "335:17:121",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33575,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "352:2:121"
            },
            "returnParameters": {
              "id": 33576,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "363:0:121"
            },
            "scope": 33589,
            "src": "326:38:121",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 33578,
              "nodeType": "StructuredDocumentation",
              "src": "370:241:121",
              "text": " @notice A core contract method called independently or as a part of other financial contract transactions.\n @dev It pays fees and moves money between margin accounts to make sure they reflect the NAV of the contract."
            },
            "functionSelector": "bda02e77",
            "id": 33581,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "remargin",
            "nameLocation": "625:8:121",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33579,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "633:2:121"
            },
            "returnParameters": {
              "id": 33580,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "644:0:121"
            },
            "scope": 33589,
            "src": "616:29:121",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 33582,
              "nodeType": "StructuredDocumentation",
              "src": "651:460:121",
              "text": " @notice Gets the current profit from corruption for this contract in terms of the collateral currency.\n @dev This is equivalent to the collateral pool available from which to pay fees. Therefore, derived contracts are\n expected to implement this so that pay-fee methods can correctly compute the owed fees as a % of PfC.\n @return pfc value for equal to the current profit from corruption denominated in collateral currency."
            },
            "functionSelector": "81a10ae1",
            "id": 33588,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "pfc",
            "nameLocation": "1125:3:121",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33583,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1128:2:121"
            },
            "returnParameters": {
              "id": 33587,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33586,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 33588,
                  "src": "1154:26:121",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Unsigned_$2045_memory_ptr",
                    "typeString": "struct FixedPoint.Unsigned"
                  },
                  "typeName": {
                    "id": 33585,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 33584,
                      "name": "FixedPoint.Unsigned",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2045,
                      "src": "1154:19:121"
                    },
                    "referencedDeclaration": 2045,
                    "src": "1154:19:121",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Unsigned_$2045_storage_ptr",
                      "typeString": "struct FixedPoint.Unsigned"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1153:28:121"
            },
            "scope": 33589,
            "src": "1116:66:121",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 33590,
        "src": "199:985:121",
        "usedErrors": []
      }
    ],
    "src": "42:1143:121"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-07-16T20:27:10.107Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "pfc()": {
        "details": "This is equivalent to the collateral pool available from which to pay fees. Therefore, derived contracts are expected to implement this so that pay-fee methods can correctly compute the owed fees as a % of PfC.",
        "returns": {
          "_0": "pfc value for equal to the current profit from corruption denominated in collateral currency."
        }
      },
      "remargin()": {
        "details": "It pays fees and moves money between margin accounts to make sure they reflect the NAV of the contract."
      }
    },
    "title": "Interface that all financial contracts expose to the admin.",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "emergencyShutdown()": {
        "notice": "Initiates the shutdown process, in case of an emergency."
      },
      "pfc()": {
        "notice": "Gets the current profit from corruption for this contract in terms of the collateral currency."
      },
      "remargin()": {
        "notice": "A core contract method called independently or as a part of other financial contract transactions."
      }
    },
    "version": 1
  }
}