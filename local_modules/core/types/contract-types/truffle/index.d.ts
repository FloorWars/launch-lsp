/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { AccessControlContract } from "./AccessControl";
import { AddressWhitelistContract } from "./AddressWhitelist";
import { AddressWhitelistInterfaceContract } from "./AddressWhitelistInterface";
import { AdministrateeInterfaceContract } from "./AdministrateeInterface";
import { AncillaryDataTestContract } from "./AncillaryDataTest";
import { BalancerContract } from "./Balancer";
import { BalancerMockContract } from "./BalancerMock";
import { BasicERC20Contract } from "./BasicERC20";
import { BeaconOracleContract } from "./BeaconOracle";
import { BeaconOracleMockContract } from "./BeaconOracleMock";
import { BinaryOptionLongShortPairFinancialProductLibraryContract } from "./BinaryOptionLongShortPairFinancialProductLibrary";
import { BridgeContract } from "./Bridge";
import { ConfigStoreContract } from "./ConfigStore";
import { ConfigStoreInterfaceContract } from "./ConfigStoreInterface";
import { CoveredCallFinancialProductLibraryContract } from "./CoveredCallFinancialProductLibrary";
import { CoveredCallLongShortPairFinancialProductLibraryContract } from "./CoveredCallLongShortPairFinancialProductLibrary";
import { DepositBoxContract } from "./DepositBox";
import { DesignatedVotingContract } from "./DesignatedVoting";
import { DesignatedVotingFactoryContract } from "./DesignatedVotingFactory";
import { DSAuthContract } from "./DSAuth";
import { DSAuthEventsContract } from "./DSAuthEvents";
import { DSAuthorityContract } from "./DSAuthority";
import { DSGuardContract } from "./DSGuard";
import { DSGuardEventsContract } from "./DSGuardEvents";
import { DSGuardFactoryContract } from "./DSGuardFactory";
import { DSNoteContract } from "./DSNote";
import { DSProxyContract } from "./DSProxy";
import { DSProxyCacheContract } from "./DSProxyCache";
import { DSProxyFactoryContract } from "./DSProxyFactory";
import { EmergencyShutdownableContract } from "./EmergencyShutdownable";
import { ERC165Contract } from "./ERC165";
import { ERC20Contract } from "./ERC20";
import { ERC20SnapshotContract } from "./ERC20Snapshot";
import { ExpandedERC20Contract } from "./ExpandedERC20";
import { ExpandedIERC20Contract } from "./ExpandedIERC20";
import { ExpiringContractInterfaceContract } from "./ExpiringContractInterface";
import { ExpiringMultiPartyContract } from "./ExpiringMultiParty";
import { ExpiringMultiPartyCreatorContract } from "./ExpiringMultiPartyCreator";
import { ExpiringMultiPartyMockContract } from "./ExpiringMultiPartyMock";
import { FeePayerContract } from "./FeePayer";
import { FinancialContractsAdminContract } from "./FinancialContractsAdmin";
import { FinancialProductLibraryContract } from "./FinancialProductLibrary";
import { FinancialProductLibraryTestContract } from "./FinancialProductLibraryTest";
import { FinderContract } from "./Finder";
import { FinderInterfaceContract } from "./FinderInterface";
import { FundingRateApplierContract } from "./FundingRateApplier";
import { FundingRateApplierTestContract } from "./FundingRateApplierTest";
import { FxBaseChildTunnelContract } from "./FxBaseChildTunnel";
import { FxBaseRootTunnelContract } from "./FxBaseRootTunnel";
import { FxChildMockContract } from "./FxChildMock";
import { FxRootMockContract } from "./FxRootMock";
import { GenericHandlerContract } from "./GenericHandler";
import { GovernorContract } from "./Governor";
import { GovernorChildTunnelContract } from "./GovernorChildTunnel";
import { GovernorRootTunnelContract } from "./GovernorRootTunnel";
import { GovernorTestContract } from "./GovernorTest";
import { HarvestVaultInterfaceContract } from "./HarvestVaultInterface";
import { HarvestVaultMockContract } from "./HarvestVaultMock";
import { IAccessControlContract } from "./IAccessControl";
import { IBridgeContract } from "./IBridge";
import { ICheckpointManagerContract } from "./ICheckpointManager";
import { IdentifierWhitelistContract } from "./IdentifierWhitelist";
import { IdentifierWhitelistInterfaceContract } from "./IdentifierWhitelistInterface";
import { IDepositExecuteContract } from "./IDepositExecute";
import { IERC165Contract } from "./IERC165";
import { IERC20Contract } from "./IERC20";
import { IERC20MetadataContract } from "./IERC20Metadata";
import { IERC20StandardContract } from "./IERC20Standard";
import { IERCHandlerContract } from "./IERCHandler";
import { IFinancialContractContract } from "./IFinancialContract";
import { IFinderContract } from "./IFinder";
import { IFxMessageProcessorContract } from "./IFxMessageProcessor";
import { IFxStateSenderContract } from "./IFxStateSender";
import { IGenericHandlerContract } from "./IGenericHandler";
import { IStateReceiverContract } from "./IStateReceiver";
import { IStateSenderContract } from "./IStateSender";
import { IStoreContract } from "./IStore";
import { ISwapRouterContract } from "./ISwapRouter";
import { IUniswapV2PairContract } from "./IUniswapV2Pair";
import { IUniswapV2Router01Contract } from "./IUniswapV2Router01";
import { IUniswapV3PoolContract } from "./IUniswapV3Pool";
import { IUniswapV3PoolActionsContract } from "./IUniswapV3PoolActions";
import { IUniswapV3PoolDerivedStateContract } from "./IUniswapV3PoolDerivedState";
import { IUniswapV3PoolEventsContract } from "./IUniswapV3PoolEvents";
import { IUniswapV3PoolImmutablesContract } from "./IUniswapV3PoolImmutables";
import { IUniswapV3PoolOwnerActionsContract } from "./IUniswapV3PoolOwnerActions";
import { IUniswapV3PoolStateContract } from "./IUniswapV3PoolState";
import { IUniswapV3SwapCallbackContract } from "./IUniswapV3SwapCallback";
import { KpiOptionsFinancialProductLibraryContract } from "./KpiOptionsFinancialProductLibrary";
import { LinearLongShortPairFinancialProductLibraryContract } from "./LinearLongShortPairFinancialProductLibrary";
import { LiquidatableContract } from "./Liquidatable";
import { LiquidationWithdrawerContract } from "./LiquidationWithdrawer";
import { LockableContract } from "./Lockable";
import { LongShortPairContract } from "./LongShortPair";
import { LongShortPairCreatorContract } from "./LongShortPairCreator";
import { LongShortPairFinancialProductLibraryContract } from "./LongShortPairFinancialProductLibrary";
import { LongShortPairFinancialProjectLibraryTestContract } from "./LongShortPairFinancialProjectLibraryTest";
import { LongShortPairMockContract } from "./LongShortPairMock";
import { LspUniswapV2BrokerContract } from "./LspUniswapV2Broker";
import { MerkleDistributorContract } from "./MerkleDistributor";
import { MigrationsContract } from "./Migrations";
import { MockAdministrateeContract } from "./MockAdministratee";
import { MockOracleContract } from "./MockOracle";
import { MockOracleAncillaryContract } from "./MockOracleAncillary";
import { MulticallContract } from "./Multicall";
import { MulticallMockContract } from "./MulticallMock";
import { MultiRoleContract } from "./MultiRole";
import { MultiRoleTestContract } from "./MultiRoleTest";
import { OptimisticDepositBoxContract } from "./OptimisticDepositBox";
import { OptimisticOracleContract } from "./OptimisticOracle";
import { OptimisticOracleInterfaceContract } from "./OptimisticOracleInterface";
import { OptimisticRequesterContract } from "./OptimisticRequester";
import { OptimisticRequesterTestContract } from "./OptimisticRequesterTest";
import { OracleAncillaryInterfaceContract } from "./OracleAncillaryInterface";
import { OracleBaseTunnelContract } from "./OracleBaseTunnel";
import { OracleBaseTunnelMockContract } from "./OracleBaseTunnelMock";
import { OracleChildTunnelContract } from "./OracleChildTunnel";
import { OracleInterfaceContract } from "./OracleInterface";
import { OracleInterfacesContract } from "./OracleInterfaces";
import { OracleRootTunnelContract } from "./OracleRootTunnel";
import { OracleRootTunnelMockContract } from "./OracleRootTunnelMock";
import { OwnableContract } from "./Ownable";
import { PausableContract } from "./Pausable";
import { PerpetualContract } from "./Perpetual";
import { PerpetualCreatorContract } from "./PerpetualCreator";
import { PerpetualLiquidatableContract } from "./PerpetualLiquidatable";
import { PerpetualMockContract } from "./PerpetualMock";
import { PerpetualPositionManagerContract } from "./PerpetualPositionManager";
import { PositionSettlerContract } from "./PositionSettler";
import { PostExpirationIdentifierTransformationFinancialProductLibraryContract } from "./PostExpirationIdentifierTransformationFinancialProductLibrary";
import { PreExpirationIdentifierTransformationFinancialProductLibraryContract } from "./PreExpirationIdentifierTransformationFinancialProductLibrary";
import { PricelessPositionManagerContract } from "./PricelessPositionManager";
import { RangeBondLongShortPairFinancialProductLibraryContract } from "./RangeBondLongShortPairFinancialProductLibrary";
import { ReentrancyAttackContract } from "./ReentrancyAttack";
import { ReentrancyCheckerContract } from "./ReentrancyChecker";
import { ReentrancyMockContract } from "./ReentrancyMock";
import { RegistryContract } from "./Registry";
import { RegistryInterfaceContract } from "./RegistryInterface";
import { ReserveCurrencyDisputerContract } from "./ReserveCurrencyDisputer";
import { ReserveCurrencyLiquidatorContract } from "./ReserveCurrencyLiquidator";
import { ResultComputationTestContract } from "./ResultComputationTest";
import { SignedFixedPointTestContract } from "./SignedFixedPointTest";
import { SinkGovernorContract } from "./SinkGovernor";
import { SinkOracleContract } from "./SinkOracle";
import { SourceGovernorContract } from "./SourceGovernor";
import { SourceOracleContract } from "./SourceOracle";
import { StateSyncMockContract } from "./StateSyncMock";
import { StoreContract } from "./Store";
import { StoreInterfaceContract } from "./StoreInterface";
import { StructuredNoteFinancialProductLibraryContract } from "./StructuredNoteFinancialProductLibrary";
import { SyntheticTokenContract } from "./SyntheticToken";
import { TestableContract } from "./Testable";
import { TestableTestContract } from "./TestableTest";
import { TestnetERC20Contract } from "./TestnetERC20";
import { TimerContract } from "./Timer";
import { TokenFactoryContract } from "./TokenFactory";
import { TokenMigratorContract } from "./TokenMigrator";
import { TokenRedeemerContract } from "./TokenRedeemer";
import { TokenSenderContract } from "./TokenSender";
import { TransactionBatcherContract } from "./TransactionBatcher";
import { Umip3UpgraderContract } from "./Umip3Upgrader";
import { UniswapV2Contract } from "./UniswapV2";
import { UniswapV2BrokerContract } from "./UniswapV2Broker";
import { UniswapV2MockContract } from "./UniswapV2Mock";
import { UniswapV3Contract } from "./UniswapV3";
import { UniswapV3BrokerContract } from "./UniswapV3Broker";
import { UniswapV3MockContract } from "./UniswapV3Mock";
import { UnsignedFixedPointTestContract } from "./UnsignedFixedPointTest";
import { VaultInterfaceContract } from "./VaultInterface";
import { VaultMockContract } from "./VaultMock";
import { VoteTimingTestContract } from "./VoteTimingTest";
import { VotingContract } from "./Voting";
import { VotingAncillaryInterfaceContract } from "./VotingAncillaryInterface";
import { VotingAncillaryInterfaceTestingContract } from "./VotingAncillaryInterfaceTesting";
import { VotingInterfaceContract } from "./VotingInterface";
import { VotingInterfaceTestingContract } from "./VotingInterfaceTesting";
import { VotingTestContract } from "./VotingTest";
import { VotingTokenContract } from "./VotingToken";
import { VotingUpgraderContract } from "./VotingUpgrader";
import { WETH9Contract } from "./WETH9";
import { WithdrawableContract } from "./Withdrawable";
import { WithdrawableTestContract } from "./WithdrawableTest";

declare global {
  namespace Truffle {
    interface Artifacts {
      require(name: "AccessControl"): AccessControlContract;
      require(name: "AddressWhitelist"): AddressWhitelistContract;
      require(
        name: "AddressWhitelistInterface"
      ): AddressWhitelistInterfaceContract;
      require(name: "AdministrateeInterface"): AdministrateeInterfaceContract;
      require(name: "AncillaryDataTest"): AncillaryDataTestContract;
      require(name: "Balancer"): BalancerContract;
      require(name: "BalancerMock"): BalancerMockContract;
      require(name: "BasicERC20"): BasicERC20Contract;
      require(name: "BeaconOracle"): BeaconOracleContract;
      require(name: "BeaconOracleMock"): BeaconOracleMockContract;
      require(
        name: "BinaryOptionLongShortPairFinancialProductLibrary"
      ): BinaryOptionLongShortPairFinancialProductLibraryContract;
      require(name: "Bridge"): BridgeContract;
      require(name: "ConfigStore"): ConfigStoreContract;
      require(name: "ConfigStoreInterface"): ConfigStoreInterfaceContract;
      require(
        name: "CoveredCallFinancialProductLibrary"
      ): CoveredCallFinancialProductLibraryContract;
      require(
        name: "CoveredCallLongShortPairFinancialProductLibrary"
      ): CoveredCallLongShortPairFinancialProductLibraryContract;
      require(name: "DepositBox"): DepositBoxContract;
      require(name: "DesignatedVoting"): DesignatedVotingContract;
      require(name: "DesignatedVotingFactory"): DesignatedVotingFactoryContract;
      require(name: "DSAuth"): DSAuthContract;
      require(name: "DSAuthEvents"): DSAuthEventsContract;
      require(name: "DSAuthority"): DSAuthorityContract;
      require(name: "DSGuard"): DSGuardContract;
      require(name: "DSGuardEvents"): DSGuardEventsContract;
      require(name: "DSGuardFactory"): DSGuardFactoryContract;
      require(name: "DSNote"): DSNoteContract;
      require(name: "DSProxy"): DSProxyContract;
      require(name: "DSProxyCache"): DSProxyCacheContract;
      require(name: "DSProxyFactory"): DSProxyFactoryContract;
      require(name: "EmergencyShutdownable"): EmergencyShutdownableContract;
      require(name: "ERC165"): ERC165Contract;
      require(name: "ERC20"): ERC20Contract;
      require(name: "ERC20Snapshot"): ERC20SnapshotContract;
      require(name: "ExpandedERC20"): ExpandedERC20Contract;
      require(name: "ExpandedIERC20"): ExpandedIERC20Contract;
      require(
        name: "ExpiringContractInterface"
      ): ExpiringContractInterfaceContract;
      require(name: "ExpiringMultiParty"): ExpiringMultiPartyContract;
      require(
        name: "ExpiringMultiPartyCreator"
      ): ExpiringMultiPartyCreatorContract;
      require(name: "ExpiringMultiPartyMock"): ExpiringMultiPartyMockContract;
      require(name: "FeePayer"): FeePayerContract;
      require(name: "FinancialContractsAdmin"): FinancialContractsAdminContract;
      require(name: "FinancialProductLibrary"): FinancialProductLibraryContract;
      require(
        name: "FinancialProductLibraryTest"
      ): FinancialProductLibraryTestContract;
      require(name: "Finder"): FinderContract;
      require(name: "FinderInterface"): FinderInterfaceContract;
      require(name: "FundingRateApplier"): FundingRateApplierContract;
      require(name: "FundingRateApplierTest"): FundingRateApplierTestContract;
      require(name: "FxBaseChildTunnel"): FxBaseChildTunnelContract;
      require(name: "FxBaseRootTunnel"): FxBaseRootTunnelContract;
      require(name: "FxChildMock"): FxChildMockContract;
      require(name: "FxRootMock"): FxRootMockContract;
      require(name: "GenericHandler"): GenericHandlerContract;
      require(name: "Governor"): GovernorContract;
      require(name: "GovernorChildTunnel"): GovernorChildTunnelContract;
      require(name: "GovernorRootTunnel"): GovernorRootTunnelContract;
      require(name: "GovernorTest"): GovernorTestContract;
      require(name: "HarvestVaultInterface"): HarvestVaultInterfaceContract;
      require(name: "HarvestVaultMock"): HarvestVaultMockContract;
      require(name: "IAccessControl"): IAccessControlContract;
      require(name: "IBridge"): IBridgeContract;
      require(name: "ICheckpointManager"): ICheckpointManagerContract;
      require(name: "IdentifierWhitelist"): IdentifierWhitelistContract;
      require(
        name: "IdentifierWhitelistInterface"
      ): IdentifierWhitelistInterfaceContract;
      require(name: "IDepositExecute"): IDepositExecuteContract;
      require(name: "IERC165"): IERC165Contract;
      require(name: "IERC20"): IERC20Contract;
      require(name: "IERC20Metadata"): IERC20MetadataContract;
      require(name: "IERC20Standard"): IERC20StandardContract;
      require(name: "IERCHandler"): IERCHandlerContract;
      require(name: "IFinancialContract"): IFinancialContractContract;
      require(name: "IFinder"): IFinderContract;
      require(name: "IFxMessageProcessor"): IFxMessageProcessorContract;
      require(name: "IFxStateSender"): IFxStateSenderContract;
      require(name: "IGenericHandler"): IGenericHandlerContract;
      require(name: "IStateReceiver"): IStateReceiverContract;
      require(name: "IStateSender"): IStateSenderContract;
      require(name: "IStore"): IStoreContract;
      require(name: "ISwapRouter"): ISwapRouterContract;
      require(name: "IUniswapV2Pair"): IUniswapV2PairContract;
      require(name: "IUniswapV2Router01"): IUniswapV2Router01Contract;
      require(name: "IUniswapV3Pool"): IUniswapV3PoolContract;
      require(name: "IUniswapV3PoolActions"): IUniswapV3PoolActionsContract;
      require(
        name: "IUniswapV3PoolDerivedState"
      ): IUniswapV3PoolDerivedStateContract;
      require(name: "IUniswapV3PoolEvents"): IUniswapV3PoolEventsContract;
      require(
        name: "IUniswapV3PoolImmutables"
      ): IUniswapV3PoolImmutablesContract;
      require(
        name: "IUniswapV3PoolOwnerActions"
      ): IUniswapV3PoolOwnerActionsContract;
      require(name: "IUniswapV3PoolState"): IUniswapV3PoolStateContract;
      require(name: "IUniswapV3SwapCallback"): IUniswapV3SwapCallbackContract;
      require(
        name: "KpiOptionsFinancialProductLibrary"
      ): KpiOptionsFinancialProductLibraryContract;
      require(
        name: "LinearLongShortPairFinancialProductLibrary"
      ): LinearLongShortPairFinancialProductLibraryContract;
      require(name: "Liquidatable"): LiquidatableContract;
      require(name: "LiquidationWithdrawer"): LiquidationWithdrawerContract;
      require(name: "Lockable"): LockableContract;
      require(name: "LongShortPair"): LongShortPairContract;
      require(name: "LongShortPairCreator"): LongShortPairCreatorContract;
      require(
        name: "LongShortPairFinancialProductLibrary"
      ): LongShortPairFinancialProductLibraryContract;
      require(
        name: "LongShortPairFinancialProjectLibraryTest"
      ): LongShortPairFinancialProjectLibraryTestContract;
      require(name: "LongShortPairMock"): LongShortPairMockContract;
      require(name: "LspUniswapV2Broker"): LspUniswapV2BrokerContract;
      require(name: "MerkleDistributor"): MerkleDistributorContract;
      require(name: "Migrations"): MigrationsContract;
      require(name: "MockAdministratee"): MockAdministrateeContract;
      require(name: "MockOracle"): MockOracleContract;
      require(name: "MockOracleAncillary"): MockOracleAncillaryContract;
      require(name: "Multicall"): MulticallContract;
      require(name: "MulticallMock"): MulticallMockContract;
      require(name: "MultiRole"): MultiRoleContract;
      require(name: "MultiRoleTest"): MultiRoleTestContract;
      require(name: "OptimisticDepositBox"): OptimisticDepositBoxContract;
      require(name: "OptimisticOracle"): OptimisticOracleContract;
      require(
        name: "OptimisticOracleInterface"
      ): OptimisticOracleInterfaceContract;
      require(name: "OptimisticRequester"): OptimisticRequesterContract;
      require(name: "OptimisticRequesterTest"): OptimisticRequesterTestContract;
      require(
        name: "OracleAncillaryInterface"
      ): OracleAncillaryInterfaceContract;
      require(name: "OracleBaseTunnel"): OracleBaseTunnelContract;
      require(name: "OracleBaseTunnelMock"): OracleBaseTunnelMockContract;
      require(name: "OracleChildTunnel"): OracleChildTunnelContract;
      require(name: "OracleInterface"): OracleInterfaceContract;
      require(name: "OracleInterfaces"): OracleInterfacesContract;
      require(name: "OracleRootTunnel"): OracleRootTunnelContract;
      require(name: "OracleRootTunnelMock"): OracleRootTunnelMockContract;
      require(name: "Ownable"): OwnableContract;
      require(name: "Pausable"): PausableContract;
      require(name: "Perpetual"): PerpetualContract;
      require(name: "PerpetualCreator"): PerpetualCreatorContract;
      require(name: "PerpetualLiquidatable"): PerpetualLiquidatableContract;
      require(name: "PerpetualMock"): PerpetualMockContract;
      require(
        name: "PerpetualPositionManager"
      ): PerpetualPositionManagerContract;
      require(name: "PositionSettler"): PositionSettlerContract;
      require(
        name: "PostExpirationIdentifierTransformationFinancialProductLibrary"
      ): PostExpirationIdentifierTransformationFinancialProductLibraryContract;
      require(
        name: "PreExpirationIdentifierTransformationFinancialProductLibrary"
      ): PreExpirationIdentifierTransformationFinancialProductLibraryContract;
      require(
        name: "PricelessPositionManager"
      ): PricelessPositionManagerContract;
      require(
        name: "RangeBondLongShortPairFinancialProductLibrary"
      ): RangeBondLongShortPairFinancialProductLibraryContract;
      require(name: "ReentrancyAttack"): ReentrancyAttackContract;
      require(name: "ReentrancyChecker"): ReentrancyCheckerContract;
      require(name: "ReentrancyMock"): ReentrancyMockContract;
      require(name: "Registry"): RegistryContract;
      require(name: "RegistryInterface"): RegistryInterfaceContract;
      require(name: "ReserveCurrencyDisputer"): ReserveCurrencyDisputerContract;
      require(
        name: "ReserveCurrencyLiquidator"
      ): ReserveCurrencyLiquidatorContract;
      require(name: "ResultComputationTest"): ResultComputationTestContract;
      require(name: "SignedFixedPointTest"): SignedFixedPointTestContract;
      require(name: "SinkGovernor"): SinkGovernorContract;
      require(name: "SinkOracle"): SinkOracleContract;
      require(name: "SourceGovernor"): SourceGovernorContract;
      require(name: "SourceOracle"): SourceOracleContract;
      require(name: "StateSyncMock"): StateSyncMockContract;
      require(name: "Store"): StoreContract;
      require(name: "StoreInterface"): StoreInterfaceContract;
      require(
        name: "StructuredNoteFinancialProductLibrary"
      ): StructuredNoteFinancialProductLibraryContract;
      require(name: "SyntheticToken"): SyntheticTokenContract;
      require(name: "Testable"): TestableContract;
      require(name: "TestableTest"): TestableTestContract;
      require(name: "TestnetERC20"): TestnetERC20Contract;
      require(name: "Timer"): TimerContract;
      require(name: "TokenFactory"): TokenFactoryContract;
      require(name: "TokenMigrator"): TokenMigratorContract;
      require(name: "TokenRedeemer"): TokenRedeemerContract;
      require(name: "TokenSender"): TokenSenderContract;
      require(name: "TransactionBatcher"): TransactionBatcherContract;
      require(name: "Umip3Upgrader"): Umip3UpgraderContract;
      require(name: "UniswapV2"): UniswapV2Contract;
      require(name: "UniswapV2Broker"): UniswapV2BrokerContract;
      require(name: "UniswapV2Mock"): UniswapV2MockContract;
      require(name: "UniswapV3"): UniswapV3Contract;
      require(name: "UniswapV3Broker"): UniswapV3BrokerContract;
      require(name: "UniswapV3Mock"): UniswapV3MockContract;
      require(name: "UnsignedFixedPointTest"): UnsignedFixedPointTestContract;
      require(name: "VaultInterface"): VaultInterfaceContract;
      require(name: "VaultMock"): VaultMockContract;
      require(name: "VoteTimingTest"): VoteTimingTestContract;
      require(name: "Voting"): VotingContract;
      require(
        name: "VotingAncillaryInterface"
      ): VotingAncillaryInterfaceContract;
      require(
        name: "VotingAncillaryInterfaceTesting"
      ): VotingAncillaryInterfaceTestingContract;
      require(name: "VotingInterface"): VotingInterfaceContract;
      require(name: "VotingInterfaceTesting"): VotingInterfaceTestingContract;
      require(name: "VotingTest"): VotingTestContract;
      require(name: "VotingToken"): VotingTokenContract;
      require(name: "VotingUpgrader"): VotingUpgraderContract;
      require(name: "WETH9"): WETH9Contract;
      require(name: "Withdrawable"): WithdrawableContract;
      require(name: "WithdrawableTest"): WithdrawableTestContract;
    }
  }
}

export { AccessControlContract, AccessControlInstance } from "./AccessControl";
export {
  AddressWhitelistContract,
  AddressWhitelistInstance,
} from "./AddressWhitelist";
export {
  AddressWhitelistInterfaceContract,
  AddressWhitelistInterfaceInstance,
} from "./AddressWhitelistInterface";
export {
  AdministrateeInterfaceContract,
  AdministrateeInterfaceInstance,
} from "./AdministrateeInterface";
export {
  AncillaryDataTestContract,
  AncillaryDataTestInstance,
} from "./AncillaryDataTest";
export { BalancerContract, BalancerInstance } from "./Balancer";
export { BalancerMockContract, BalancerMockInstance } from "./BalancerMock";
export { BasicERC20Contract, BasicERC20Instance } from "./BasicERC20";
export { BeaconOracleContract, BeaconOracleInstance } from "./BeaconOracle";
export {
  BeaconOracleMockContract,
  BeaconOracleMockInstance,
} from "./BeaconOracleMock";
export {
  BinaryOptionLongShortPairFinancialProductLibraryContract,
  BinaryOptionLongShortPairFinancialProductLibraryInstance,
} from "./BinaryOptionLongShortPairFinancialProductLibrary";
export { BridgeContract, BridgeInstance } from "./Bridge";
export { ConfigStoreContract, ConfigStoreInstance } from "./ConfigStore";
export {
  ConfigStoreInterfaceContract,
  ConfigStoreInterfaceInstance,
} from "./ConfigStoreInterface";
export {
  CoveredCallFinancialProductLibraryContract,
  CoveredCallFinancialProductLibraryInstance,
} from "./CoveredCallFinancialProductLibrary";
export {
  CoveredCallLongShortPairFinancialProductLibraryContract,
  CoveredCallLongShortPairFinancialProductLibraryInstance,
} from "./CoveredCallLongShortPairFinancialProductLibrary";
export { DepositBoxContract, DepositBoxInstance } from "./DepositBox";
export {
  DesignatedVotingContract,
  DesignatedVotingInstance,
} from "./DesignatedVoting";
export {
  DesignatedVotingFactoryContract,
  DesignatedVotingFactoryInstance,
} from "./DesignatedVotingFactory";
export { DSAuthContract, DSAuthInstance } from "./DSAuth";
export { DSAuthEventsContract, DSAuthEventsInstance } from "./DSAuthEvents";
export { DSAuthorityContract, DSAuthorityInstance } from "./DSAuthority";
export { DSGuardContract, DSGuardInstance } from "./DSGuard";
export { DSGuardEventsContract, DSGuardEventsInstance } from "./DSGuardEvents";
export {
  DSGuardFactoryContract,
  DSGuardFactoryInstance,
} from "./DSGuardFactory";
export { DSNoteContract, DSNoteInstance } from "./DSNote";
export { DSProxyContract, DSProxyInstance } from "./DSProxy";
export { DSProxyCacheContract, DSProxyCacheInstance } from "./DSProxyCache";
export {
  DSProxyFactoryContract,
  DSProxyFactoryInstance,
} from "./DSProxyFactory";
export {
  EmergencyShutdownableContract,
  EmergencyShutdownableInstance,
} from "./EmergencyShutdownable";
export { ERC165Contract, ERC165Instance } from "./ERC165";
export { ERC20Contract, ERC20Instance } from "./ERC20";
export { ERC20SnapshotContract, ERC20SnapshotInstance } from "./ERC20Snapshot";
export { ExpandedERC20Contract, ExpandedERC20Instance } from "./ExpandedERC20";
export {
  ExpandedIERC20Contract,
  ExpandedIERC20Instance,
} from "./ExpandedIERC20";
export {
  ExpiringContractInterfaceContract,
  ExpiringContractInterfaceInstance,
} from "./ExpiringContractInterface";
export {
  ExpiringMultiPartyContract,
  ExpiringMultiPartyInstance,
} from "./ExpiringMultiParty";
export {
  ExpiringMultiPartyCreatorContract,
  ExpiringMultiPartyCreatorInstance,
} from "./ExpiringMultiPartyCreator";
export {
  ExpiringMultiPartyMockContract,
  ExpiringMultiPartyMockInstance,
} from "./ExpiringMultiPartyMock";
export { FeePayerContract, FeePayerInstance } from "./FeePayer";
export {
  FinancialContractsAdminContract,
  FinancialContractsAdminInstance,
} from "./FinancialContractsAdmin";
export {
  FinancialProductLibraryContract,
  FinancialProductLibraryInstance,
} from "./FinancialProductLibrary";
export {
  FinancialProductLibraryTestContract,
  FinancialProductLibraryTestInstance,
} from "./FinancialProductLibraryTest";
export { FinderContract, FinderInstance } from "./Finder";
export {
  FinderInterfaceContract,
  FinderInterfaceInstance,
} from "./FinderInterface";
export {
  FundingRateApplierContract,
  FundingRateApplierInstance,
} from "./FundingRateApplier";
export {
  FundingRateApplierTestContract,
  FundingRateApplierTestInstance,
} from "./FundingRateApplierTest";
export {
  FxBaseChildTunnelContract,
  FxBaseChildTunnelInstance,
} from "./FxBaseChildTunnel";
export {
  FxBaseRootTunnelContract,
  FxBaseRootTunnelInstance,
} from "./FxBaseRootTunnel";
export { FxChildMockContract, FxChildMockInstance } from "./FxChildMock";
export { FxRootMockContract, FxRootMockInstance } from "./FxRootMock";
export {
  GenericHandlerContract,
  GenericHandlerInstance,
} from "./GenericHandler";
export { GovernorContract, GovernorInstance } from "./Governor";
export {
  GovernorChildTunnelContract,
  GovernorChildTunnelInstance,
} from "./GovernorChildTunnel";
export {
  GovernorRootTunnelContract,
  GovernorRootTunnelInstance,
} from "./GovernorRootTunnel";
export { GovernorTestContract, GovernorTestInstance } from "./GovernorTest";
export {
  HarvestVaultInterfaceContract,
  HarvestVaultInterfaceInstance,
} from "./HarvestVaultInterface";
export {
  HarvestVaultMockContract,
  HarvestVaultMockInstance,
} from "./HarvestVaultMock";
export {
  IAccessControlContract,
  IAccessControlInstance,
} from "./IAccessControl";
export { IBridgeContract, IBridgeInstance } from "./IBridge";
export {
  ICheckpointManagerContract,
  ICheckpointManagerInstance,
} from "./ICheckpointManager";
export {
  IdentifierWhitelistContract,
  IdentifierWhitelistInstance,
} from "./IdentifierWhitelist";
export {
  IdentifierWhitelistInterfaceContract,
  IdentifierWhitelistInterfaceInstance,
} from "./IdentifierWhitelistInterface";
export {
  IDepositExecuteContract,
  IDepositExecuteInstance,
} from "./IDepositExecute";
export { IERC165Contract, IERC165Instance } from "./IERC165";
export { IERC20Contract, IERC20Instance } from "./IERC20";
export {
  IERC20MetadataContract,
  IERC20MetadataInstance,
} from "./IERC20Metadata";
export {
  IERC20StandardContract,
  IERC20StandardInstance,
} from "./IERC20Standard";
export { IERCHandlerContract, IERCHandlerInstance } from "./IERCHandler";
export {
  IFinancialContractContract,
  IFinancialContractInstance,
} from "./IFinancialContract";
export { IFinderContract, IFinderInstance } from "./IFinder";
export {
  IFxMessageProcessorContract,
  IFxMessageProcessorInstance,
} from "./IFxMessageProcessor";
export {
  IFxStateSenderContract,
  IFxStateSenderInstance,
} from "./IFxStateSender";
export {
  IGenericHandlerContract,
  IGenericHandlerInstance,
} from "./IGenericHandler";
export {
  IStateReceiverContract,
  IStateReceiverInstance,
} from "./IStateReceiver";
export { IStateSenderContract, IStateSenderInstance } from "./IStateSender";
export { IStoreContract, IStoreInstance } from "./IStore";
export { ISwapRouterContract, ISwapRouterInstance } from "./ISwapRouter";
export {
  IUniswapV2PairContract,
  IUniswapV2PairInstance,
} from "./IUniswapV2Pair";
export {
  IUniswapV2Router01Contract,
  IUniswapV2Router01Instance,
} from "./IUniswapV2Router01";
export {
  IUniswapV3PoolContract,
  IUniswapV3PoolInstance,
} from "./IUniswapV3Pool";
export {
  IUniswapV3PoolActionsContract,
  IUniswapV3PoolActionsInstance,
} from "./IUniswapV3PoolActions";
export {
  IUniswapV3PoolDerivedStateContract,
  IUniswapV3PoolDerivedStateInstance,
} from "./IUniswapV3PoolDerivedState";
export {
  IUniswapV3PoolEventsContract,
  IUniswapV3PoolEventsInstance,
} from "./IUniswapV3PoolEvents";
export {
  IUniswapV3PoolImmutablesContract,
  IUniswapV3PoolImmutablesInstance,
} from "./IUniswapV3PoolImmutables";
export {
  IUniswapV3PoolOwnerActionsContract,
  IUniswapV3PoolOwnerActionsInstance,
} from "./IUniswapV3PoolOwnerActions";
export {
  IUniswapV3PoolStateContract,
  IUniswapV3PoolStateInstance,
} from "./IUniswapV3PoolState";
export {
  IUniswapV3SwapCallbackContract,
  IUniswapV3SwapCallbackInstance,
} from "./IUniswapV3SwapCallback";
export {
  KpiOptionsFinancialProductLibraryContract,
  KpiOptionsFinancialProductLibraryInstance,
} from "./KpiOptionsFinancialProductLibrary";
export {
  LinearLongShortPairFinancialProductLibraryContract,
  LinearLongShortPairFinancialProductLibraryInstance,
} from "./LinearLongShortPairFinancialProductLibrary";
export { LiquidatableContract, LiquidatableInstance } from "./Liquidatable";
export {
  LiquidationWithdrawerContract,
  LiquidationWithdrawerInstance,
} from "./LiquidationWithdrawer";
export { LockableContract, LockableInstance } from "./Lockable";
export { LongShortPairContract, LongShortPairInstance } from "./LongShortPair";
export {
  LongShortPairCreatorContract,
  LongShortPairCreatorInstance,
} from "./LongShortPairCreator";
export {
  LongShortPairFinancialProductLibraryContract,
  LongShortPairFinancialProductLibraryInstance,
} from "./LongShortPairFinancialProductLibrary";
export {
  LongShortPairFinancialProjectLibraryTestContract,
  LongShortPairFinancialProjectLibraryTestInstance,
} from "./LongShortPairFinancialProjectLibraryTest";
export {
  LongShortPairMockContract,
  LongShortPairMockInstance,
} from "./LongShortPairMock";
export {
  LspUniswapV2BrokerContract,
  LspUniswapV2BrokerInstance,
} from "./LspUniswapV2Broker";
export {
  MerkleDistributorContract,
  MerkleDistributorInstance,
} from "./MerkleDistributor";
export { MigrationsContract, MigrationsInstance } from "./Migrations";
export {
  MockAdministrateeContract,
  MockAdministrateeInstance,
} from "./MockAdministratee";
export { MockOracleContract, MockOracleInstance } from "./MockOracle";
export {
  MockOracleAncillaryContract,
  MockOracleAncillaryInstance,
} from "./MockOracleAncillary";
export { MulticallContract, MulticallInstance } from "./Multicall";
export { MulticallMockContract, MulticallMockInstance } from "./MulticallMock";
export { MultiRoleContract, MultiRoleInstance } from "./MultiRole";
export { MultiRoleTestContract, MultiRoleTestInstance } from "./MultiRoleTest";
export {
  OptimisticDepositBoxContract,
  OptimisticDepositBoxInstance,
} from "./OptimisticDepositBox";
export {
  OptimisticOracleContract,
  OptimisticOracleInstance,
} from "./OptimisticOracle";
export {
  OptimisticOracleInterfaceContract,
  OptimisticOracleInterfaceInstance,
} from "./OptimisticOracleInterface";
export {
  OptimisticRequesterContract,
  OptimisticRequesterInstance,
} from "./OptimisticRequester";
export {
  OptimisticRequesterTestContract,
  OptimisticRequesterTestInstance,
} from "./OptimisticRequesterTest";
export {
  OracleAncillaryInterfaceContract,
  OracleAncillaryInterfaceInstance,
} from "./OracleAncillaryInterface";
export {
  OracleBaseTunnelContract,
  OracleBaseTunnelInstance,
} from "./OracleBaseTunnel";
export {
  OracleBaseTunnelMockContract,
  OracleBaseTunnelMockInstance,
} from "./OracleBaseTunnelMock";
export {
  OracleChildTunnelContract,
  OracleChildTunnelInstance,
} from "./OracleChildTunnel";
export {
  OracleInterfaceContract,
  OracleInterfaceInstance,
} from "./OracleInterface";
export {
  OracleInterfacesContract,
  OracleInterfacesInstance,
} from "./OracleInterfaces";
export {
  OracleRootTunnelContract,
  OracleRootTunnelInstance,
} from "./OracleRootTunnel";
export {
  OracleRootTunnelMockContract,
  OracleRootTunnelMockInstance,
} from "./OracleRootTunnelMock";
export { OwnableContract, OwnableInstance } from "./Ownable";
export { PausableContract, PausableInstance } from "./Pausable";
export { PerpetualContract, PerpetualInstance } from "./Perpetual";
export {
  PerpetualCreatorContract,
  PerpetualCreatorInstance,
} from "./PerpetualCreator";
export {
  PerpetualLiquidatableContract,
  PerpetualLiquidatableInstance,
} from "./PerpetualLiquidatable";
export { PerpetualMockContract, PerpetualMockInstance } from "./PerpetualMock";
export {
  PerpetualPositionManagerContract,
  PerpetualPositionManagerInstance,
} from "./PerpetualPositionManager";
export {
  PositionSettlerContract,
  PositionSettlerInstance,
} from "./PositionSettler";
export {
  PostExpirationIdentifierTransformationFinancialProductLibraryContract,
  PostExpirationIdentifierTransformationFinancialProductLibraryInstance,
} from "./PostExpirationIdentifierTransformationFinancialProductLibrary";
export {
  PreExpirationIdentifierTransformationFinancialProductLibraryContract,
  PreExpirationIdentifierTransformationFinancialProductLibraryInstance,
} from "./PreExpirationIdentifierTransformationFinancialProductLibrary";
export {
  PricelessPositionManagerContract,
  PricelessPositionManagerInstance,
} from "./PricelessPositionManager";
export {
  RangeBondLongShortPairFinancialProductLibraryContract,
  RangeBondLongShortPairFinancialProductLibraryInstance,
} from "./RangeBondLongShortPairFinancialProductLibrary";
export {
  ReentrancyAttackContract,
  ReentrancyAttackInstance,
} from "./ReentrancyAttack";
export {
  ReentrancyCheckerContract,
  ReentrancyCheckerInstance,
} from "./ReentrancyChecker";
export {
  ReentrancyMockContract,
  ReentrancyMockInstance,
} from "./ReentrancyMock";
export { RegistryContract, RegistryInstance } from "./Registry";
export {
  RegistryInterfaceContract,
  RegistryInterfaceInstance,
} from "./RegistryInterface";
export {
  ReserveCurrencyDisputerContract,
  ReserveCurrencyDisputerInstance,
} from "./ReserveCurrencyDisputer";
export {
  ReserveCurrencyLiquidatorContract,
  ReserveCurrencyLiquidatorInstance,
} from "./ReserveCurrencyLiquidator";
export {
  ResultComputationTestContract,
  ResultComputationTestInstance,
} from "./ResultComputationTest";
export {
  SignedFixedPointTestContract,
  SignedFixedPointTestInstance,
} from "./SignedFixedPointTest";
export { SinkGovernorContract, SinkGovernorInstance } from "./SinkGovernor";
export { SinkOracleContract, SinkOracleInstance } from "./SinkOracle";
export {
  SourceGovernorContract,
  SourceGovernorInstance,
} from "./SourceGovernor";
export { SourceOracleContract, SourceOracleInstance } from "./SourceOracle";
export { StateSyncMockContract, StateSyncMockInstance } from "./StateSyncMock";
export { StoreContract, StoreInstance } from "./Store";
export {
  StoreInterfaceContract,
  StoreInterfaceInstance,
} from "./StoreInterface";
export {
  StructuredNoteFinancialProductLibraryContract,
  StructuredNoteFinancialProductLibraryInstance,
} from "./StructuredNoteFinancialProductLibrary";
export {
  SyntheticTokenContract,
  SyntheticTokenInstance,
} from "./SyntheticToken";
export { TestableContract, TestableInstance } from "./Testable";
export { TestableTestContract, TestableTestInstance } from "./TestableTest";
export { TestnetERC20Contract, TestnetERC20Instance } from "./TestnetERC20";
export { TimerContract, TimerInstance } from "./Timer";
export { TokenFactoryContract, TokenFactoryInstance } from "./TokenFactory";
export { TokenMigratorContract, TokenMigratorInstance } from "./TokenMigrator";
export { TokenRedeemerContract, TokenRedeemerInstance } from "./TokenRedeemer";
export { TokenSenderContract, TokenSenderInstance } from "./TokenSender";
export {
  TransactionBatcherContract,
  TransactionBatcherInstance,
} from "./TransactionBatcher";
export { Umip3UpgraderContract, Umip3UpgraderInstance } from "./Umip3Upgrader";
export { UniswapV2Contract, UniswapV2Instance } from "./UniswapV2";
export {
  UniswapV2BrokerContract,
  UniswapV2BrokerInstance,
} from "./UniswapV2Broker";
export { UniswapV2MockContract, UniswapV2MockInstance } from "./UniswapV2Mock";
export { UniswapV3Contract, UniswapV3Instance } from "./UniswapV3";
export {
  UniswapV3BrokerContract,
  UniswapV3BrokerInstance,
} from "./UniswapV3Broker";
export { UniswapV3MockContract, UniswapV3MockInstance } from "./UniswapV3Mock";
export {
  UnsignedFixedPointTestContract,
  UnsignedFixedPointTestInstance,
} from "./UnsignedFixedPointTest";
export {
  VaultInterfaceContract,
  VaultInterfaceInstance,
} from "./VaultInterface";
export { VaultMockContract, VaultMockInstance } from "./VaultMock";
export {
  VoteTimingTestContract,
  VoteTimingTestInstance,
} from "./VoteTimingTest";
export { VotingContract, VotingInstance } from "./Voting";
export {
  VotingAncillaryInterfaceContract,
  VotingAncillaryInterfaceInstance,
} from "./VotingAncillaryInterface";
export {
  VotingAncillaryInterfaceTestingContract,
  VotingAncillaryInterfaceTestingInstance,
} from "./VotingAncillaryInterfaceTesting";
export {
  VotingInterfaceContract,
  VotingInterfaceInstance,
} from "./VotingInterface";
export {
  VotingInterfaceTestingContract,
  VotingInterfaceTestingInstance,
} from "./VotingInterfaceTesting";
export { VotingTestContract, VotingTestInstance } from "./VotingTest";
export { VotingTokenContract, VotingTokenInstance } from "./VotingToken";
export {
  VotingUpgraderContract,
  VotingUpgraderInstance,
} from "./VotingUpgrader";
export { WETH9Contract, WETH9Instance } from "./WETH9";
export { WithdrawableContract, WithdrawableInstance } from "./Withdrawable";
export {
  WithdrawableTestContract,
  WithdrawableTestInstance,
} from "./WithdrawableTest";
