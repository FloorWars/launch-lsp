/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import BN from "bn.js";
import { EventData, PastEventOptions } from "web3-eth-contract";

export interface ICheckpointManagerContract
  extends Truffle.Contract<ICheckpointManagerInstance> {
  "new"(meta?: Truffle.TransactionDetails): Promise<ICheckpointManagerInstance>;
}

type AllEvents = never;

export interface ICheckpointManagerInstance extends Truffle.ContractInstance {
  /**
   * mapping of checkpoint header numbers to block details
   */
  headerBlocks(
    arg0: number | BN | string,
    txDetails?: Truffle.TransactionDetails
  ): Promise<{ 0: string; 1: BN; 2: BN; 3: BN; 4: string }>;

  methods: {
    /**
     * mapping of checkpoint header numbers to block details
     */
    headerBlocks(
      arg0: number | BN | string,
      txDetails?: Truffle.TransactionDetails
    ): Promise<{ 0: string; 1: BN; 2: BN; 3: BN; 4: string }>;
  };

  getPastEvents(event: string): Promise<EventData[]>;
  getPastEvents(
    event: string,
    options: PastEventOptions,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
  getPastEvents(event: string, options: PastEventOptions): Promise<EventData[]>;
  getPastEvents(
    event: string,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
}
