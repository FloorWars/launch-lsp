/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import BN from "bn.js";
import { ContractOptions } from "web3-eth-contract";
import { EventLog } from "web3-core";
import { EventEmitter } from "events";
import {
  Callback,
  PayableTransactionObject,
  NonPayableTransactionObject,
  BlockType,
  ContractEventLog,
  BaseContract,
} from "./types";

interface EventOptions {
  filter?: object;
  fromBlock?: BlockType;
  topics?: string[];
}

export type ExecutedGovernanceTransaction = ContractEventLog<{
  to: string;
  data: string;
  0: string;
  1: string;
}>;

export interface SinkGovernor extends BaseContract {
  constructor(
    jsonInterface: any[],
    address?: string,
    options?: ContractOptions
  ): SinkGovernor;
  clone(): SinkGovernor;
  methods: {
    finder(): NonPayableTransactionObject<string>;

    /**
     * This method should send the arbitrary transaction emitted by the L1 governor on this chain.
     * This method will ultimately be called after a governance execution has been bridged cross-chain from Mainnet to this network via an off-chain relayer. The relayer will call `Bridge.executeProposal` on this local network, which call `GenericHandler.executeProposal()` and ultimately this method.
     * @param data Calldata to include in governance transaction.
     * @param to Contract on this network to send governance transaction to.
     */
    executeGovernance(
      to: string,
      data: string | number[]
    ): NonPayableTransactionObject<void>;
  };
  events: {
    ExecutedGovernanceTransaction(
      cb?: Callback<ExecutedGovernanceTransaction>
    ): EventEmitter;
    ExecutedGovernanceTransaction(
      options?: EventOptions,
      cb?: Callback<ExecutedGovernanceTransaction>
    ): EventEmitter;

    allEvents(options?: EventOptions, cb?: Callback<EventLog>): EventEmitter;
  };

  once(
    event: "ExecutedGovernanceTransaction",
    cb: Callback<ExecutedGovernanceTransaction>
  ): void;
  once(
    event: "ExecutedGovernanceTransaction",
    options: EventOptions,
    cb: Callback<ExecutedGovernanceTransaction>
  ): void;
}
