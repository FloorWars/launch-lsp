{
  "contractName": "LinearLongShortPairFinancialProductLibrary",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "longShortPairParameters",
      "outputs": [
        {
          "internalType": "int256",
          "name": "upperBound",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "lowerBound",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "longShortPair",
          "type": "address"
        },
        {
          "internalType": "int256",
          "name": "upperBound",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "lowerBound",
          "type": "int256"
        }
      ],
      "name": "setLongShortPairParameters",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "expiryPrice",
          "type": "int256"
        }
      ],
      "name": "percentageLongCollateralAtExpiry",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"longShortPairParameters\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"upperBound\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lowerBound\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"expiryPrice\",\"type\":\"int256\"}],\"name\":\"percentageLongCollateralAtExpiry\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"longShortPair\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"upperBound\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"lowerBound\",\"type\":\"int256\"}],\"name\":\"setLongShortPairParameters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"percentageLongCollateralAtExpiry(int256)\":{\"params\":{\"expiryPrice\":\"price from the optimistic oracle for the LSP price identifier.\"},\"returns\":{\"_0\":\"expiryPercentLong to indicate how much collateral should be sent between long and short tokens.\"}},\"setLongShortPairParameters(address,int256,int256)\":{\"details\":\"Note: a) Any address can set these parameters b) existing LSP parameters for address not set. c) upperBound > lowerBound. d) parameters can only be set once to prevent the deployer from changing the parameters after the fact. e) For safety, parameters should be set before depositing any synthetic tokens in a liquidity pool. f) longShortPair must expose an expirationTimestamp method to validate it is correctly deployed.\",\"params\":{\"longShortPair\":\"address of the LSP contract.\",\"lowerBound\":\"the lower price that the linear LSP will operate within.\",\"upperBound\":\"the upper price that the linear LSP will operate within.\"}}},\"title\":\"Linear Long Short Pair Financial Product Library.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"percentageLongCollateralAtExpiry(int256)\":{\"notice\":\"Returns a number between 0 and 1e18 to indicate how much collateral each long and short token is entitled to per collateralPerPair.\"},\"setLongShortPairParameters(address,int256,int256)\":{\"notice\":\"Enables any address to set the parameters for an associated financial product.\"}},\"notice\":\"Adds settlement logic to create linear LSPs. The contract will payout a scaled amount of collateral depending on where the settlement price lands within a price range between an upperBound and a lowerBound. If settlement price is within the price range then the expiryPercentLong is defined by (expiryPrice - lowerBound) / (upperBound - lowerBound). This number represent the amount of collateral from the collateralPerPair that will be sent to the long and short side. If the price is higher than the upperBound then expiryPercentLong = 1. if the price is lower than the lower bound then expiryPercentLong = 0. For example, consider a linear LSP on the price of ETH collateralized in USDC with an upperBound = 4000 and lowerBound = 2000 with a collateralPerPair of 1000 (i.e each pair of long and shorts is worth 1000 USDC). At settlement the expiryPercentLong would equal 1 (each long worth 1000 and short worth 0) if ETH price was > 4000 and it would equal 0 if < 2000 (each long is worthless and each short is worth 1000). If between the two (say 3500) then expiryPercentLong = (3500 - 2000) / (4000 - 2000) = 0.75. Therefore each long is worth 750 and each short is worth 250.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/circleci/protocol/packages/core/contracts/financial-templates/common/financial-product-libraries/long-short-pair-libraries/LinearLongShortPairFinancialProductLibrary.sol\":\"LinearLongShortPairFinancialProductLibrary\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":199},\"remappings\":[]},\"sources\":{\"/home/circleci/protocol/packages/core/contracts/common/implementation/FixedPoint.sol\":{\"keccak256\":\"0x8ea44f1bf5e1efcfc5943ea67c3dc5bf7ce1ba84bf2d6b868baafac7e422cc01\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://94e828e682e9e44991807f5f39c2ed499b451d65155d8a6c6d0fd62b13dbd222\",\"dweb:/ipfs/QmPfPWyR9deca2dHmwVnm3E9Kt2fLXXABQE4WT8iSdKSXm\"]},\"/home/circleci/protocol/packages/core/contracts/common/implementation/Lockable.sol\":{\"keccak256\":\"0xcd34b3f83b61a096b53020749f327096d5cacd89c2393d947595afb934496ad4\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://aef5cb31ab23e1e6baad76130c29aff1ee3fcda3c4ffc80e0a5294341a253934\",\"dweb:/ipfs/QmNyso4UszNxE6un3Cqc3R7KiBmZzdWNULvjBDfnLRAmwc\"]},\"/home/circleci/protocol/packages/core/contracts/financial-templates/common/financial-product-libraries/long-short-pair-libraries/LinearLongShortPairFinancialProductLibrary.sol\":{\"keccak256\":\"0xb272546f3b4ae32c1c70d8f6602e62a64d644f5660e9e51946546ea975bfc984\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://3ad2bee0b60372af56ee1b766967d69e89d7d9240d2e7180e2fabc275d06a1cf\",\"dweb:/ipfs/QmVGH4HWnXBqz7ytr2MDwyc4DtrKd2gMGGMTtNYnPeDarv\"]},\"/home/circleci/protocol/packages/core/contracts/financial-templates/common/financial-product-libraries/long-short-pair-libraries/LongShortPairFinancialProductLibrary.sol\":{\"keccak256\":\"0x74229dc41c9be406f5b038f5e7e42403355110559e5f37ade5ed3d547020cfae\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://05bfc5c3dcf36b82db8530b259933c8112dbfa9ca14f287b4bf57209aee5449b\",\"dweb:/ipfs/QmdvWd7xU6FcduDBjzw1QpqRCRe1ogkL4xXYWWMsYT6vYN\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x2526b7c6a366fc211bbc176078ab02b83833e7682abcc5b3bed9d700b34e2a3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f9529d3d365e8415155cee11394e0f7c0de2152b601b7e77508fce16cb4a509\",\"dweb:/ipfs/QmVhbcLVsAzvqfjsdLwy25XMjgVJm7Z3w2JCNiNbZF2GHT\"]},\"@openzeppelin/contracts/utils/math/SignedSafeMath.sol\":{\"keccak256\":\"0xd1ddc24b24f12a347093844dd645c3a96bcdce05d1f51b8650946ad404cb3c40\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://873363c817ef68913ced271e77fc4af21d4a94ffba23de2b205c6e9de8ff6b72\",\"dweb:/ipfs/QmNmN46R3rrvTxMUjDTbZiCiqqTX9TRvWbiaN9qLrWQXPS\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506000805460ff191660011790556105f88061002d6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806325110946146100465780632da523611461005b5780639299cbed14610081575b600080fd5b6100596100543660046104cc565b6100bd565b005b61006e6100693660046104fe565b61029e565b6040519081526020015b60405180910390f35b6100a861008f3660046104b2565b6001602081905260009182526040909120805491015482565b60408051928352602083019190915201610078565b6100c56103ae565b6100d46000805460ff19169055565b826001600160a01b0316639f43ddd26040518163ffffffff1660e01b815260040160206040518083038186803b15801561010d57600080fd5b505afa158015610121573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101459190610516565b61018c5760405162461bcd60e51b8152602060048201526013602482015272496e76616c6964204c5350206164647265737360681b60448201526064015b60405180910390fd5b8082136101cc5760405162461bcd60e51b815260206004820152600e60248201526d496e76616c696420626f756e647360901b6044820152606401610183565b6001600160a01b038316600090815260016020818152604092839020835180850190945280548085529201549083015215801561020b57506020810151155b6102505760405162461bcd60e51b815260206004820152601660248201527514185c985b595d195c9cc8185b1c9958591e481cd95d60521b6044820152606401610183565b5060408051808201825283815260208082018481526001600160a01b0387166000908152600192839052939093209151825591519101556102996000805460ff19166001179055565b505050565b60006102a86103ae565b3360009081526001602081815260409283902083518085019094528054808552920154908301521515806102df5750602081015115155b61032b5760405162461bcd60e51b815260206004820152601e60248201527f506172616d73206e6f742073657420666f722063616c6c696e67204c535000006044820152606401610183565b805183126103475761033d6001610402565b5191506103a99050565b8060200151831361035c5761033d6000610402565b6103a460405180602001604052808360200151846000015161037e919061056d565b815250604051806020016040528084602001518761039c919061056d565b905290610437565b519150505b919050565b60005460ff166104005760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610183565b565b60408051602081019091526000815260408051602081019091528061042f84670de0b6b3a764000061047c565b905292915050565b60408051602081019091526000815260408051602081019091528251845182916104739161046d90670de0b6b3a764000061047c565b9061048f565b90529392505050565b6000610488828461054e565b9392505050565b6000610488828461052e565b80356001600160a01b03811681146103a957600080fd5b6000602082840312156104c3578081fd5b6104888261049b565b6000806000606084860312156104e0578182fd5b6104e98461049b565b95602085013595506040909401359392505050565b60006020828403121561050f578081fd5b5035919050565b600060208284031215610527578081fd5b5051919050565b60008261054957634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610568576105686105ac565b500290565b60008083128015600160ff1b85018412161561058b5761058b6105ac565b6001600160ff1b03840183138116156105a6576105a66105ac565b50500390565b634e487b7160e01b600052601160045260246000fdfea26469706673582212205b63d9f24e08f4271d321e878c6be050fdbc51cedbfde4572ab48d65de5720d664736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c806325110946146100465780632da523611461005b5780639299cbed14610081575b600080fd5b6100596100543660046104cc565b6100bd565b005b61006e6100693660046104fe565b61029e565b6040519081526020015b60405180910390f35b6100a861008f3660046104b2565b6001602081905260009182526040909120805491015482565b60408051928352602083019190915201610078565b6100c56103ae565b6100d46000805460ff19169055565b826001600160a01b0316639f43ddd26040518163ffffffff1660e01b815260040160206040518083038186803b15801561010d57600080fd5b505afa158015610121573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101459190610516565b61018c5760405162461bcd60e51b8152602060048201526013602482015272496e76616c6964204c5350206164647265737360681b60448201526064015b60405180910390fd5b8082136101cc5760405162461bcd60e51b815260206004820152600e60248201526d496e76616c696420626f756e647360901b6044820152606401610183565b6001600160a01b038316600090815260016020818152604092839020835180850190945280548085529201549083015215801561020b57506020810151155b6102505760405162461bcd60e51b815260206004820152601660248201527514185c985b595d195c9cc8185b1c9958591e481cd95d60521b6044820152606401610183565b5060408051808201825283815260208082018481526001600160a01b0387166000908152600192839052939093209151825591519101556102996000805460ff19166001179055565b505050565b60006102a86103ae565b3360009081526001602081815260409283902083518085019094528054808552920154908301521515806102df5750602081015115155b61032b5760405162461bcd60e51b815260206004820152601e60248201527f506172616d73206e6f742073657420666f722063616c6c696e67204c535000006044820152606401610183565b805183126103475761033d6001610402565b5191506103a99050565b8060200151831361035c5761033d6000610402565b6103a460405180602001604052808360200151846000015161037e919061056d565b815250604051806020016040528084602001518761039c919061056d565b905290610437565b519150505b919050565b60005460ff166104005760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610183565b565b60408051602081019091526000815260408051602081019091528061042f84670de0b6b3a764000061047c565b905292915050565b60408051602081019091526000815260408051602081019091528251845182916104739161046d90670de0b6b3a764000061047c565b9061048f565b90529392505050565b6000610488828461054e565b9392505050565b6000610488828461052e565b80356001600160a01b03811681146103a957600080fd5b6000602082840312156104c3578081fd5b6104888261049b565b6000806000606084860312156104e0578182fd5b6104e98461049b565b95602085013595506040909401359392505050565b60006020828403121561050f578081fd5b5035919050565b600060208284031215610527578081fd5b5051919050565b60008261054957634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610568576105686105ac565b500290565b60008083128015600160ff1b85018412161561058b5761058b6105ac565b6001600160ff1b03840183138116156105a6576105a66105ac565b50500390565b634e487b7160e01b600052601160045260246000fdfea26469706673582212205b63d9f24e08f4271d321e878c6be050fdbc51cedbfde4572ab48d65de5720d664736f6c63430008040033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:4112:192",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:192",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "63:124:192",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "73:29:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:192"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "82:12:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:20:192"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "73:5:192"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "165:16:192",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "174:1:192",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "177:1:192",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "167:6:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "167:12:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "167:12:192"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "124:5:192"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "135:5:192"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "150:3:192",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "155:1:192",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "146:3:192"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "146:11:192"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "159:1:192",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "142:3:192"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "142:19:192"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "131:3:192"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "131:31:192"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "121:2:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "121:42:192"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "114:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "114:50:192"
                  },
                  "nodeType": "YulIf",
                  "src": "111:2:192"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "42:6:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:192",
                "type": ""
              }
            ],
            "src": "14:173:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "262:126:192",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "308:26:192",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "317:6:192"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "325:6:192"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "310:6:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "310:22:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "310:22:192"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "283:7:192"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "292:9:192"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "279:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "279:23:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "304:2:192",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "275:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "275:32:192"
                  },
                  "nodeType": "YulIf",
                  "src": "272:2:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "343:39:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "372:9:192"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "353:18:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "353:29:192"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "343:6:192"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "228:9:192",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "239:7:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "251:6:192",
                "type": ""
              }
            ],
            "src": "192:196:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "495:228:192",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "541:26:192",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "550:6:192"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "558:6:192"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "543:6:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "543:22:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "543:22:192"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "516:7:192"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "525:9:192"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "512:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "512:23:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "537:2:192",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "508:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "508:32:192"
                  },
                  "nodeType": "YulIf",
                  "src": "505:2:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "576:39:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "605:9:192"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "586:18:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "586:29:192"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "576:6:192"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "624:42:192",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "651:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "662:2:192",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "647:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "647:18:192"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "634:12:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "634:32:192"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "624:6:192"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "675:42:192",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "702:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "713:2:192",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "698:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "698:18:192"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "685:12:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "685:32:192"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "675:6:192"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_int256t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "445:9:192",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "456:7:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "468:6:192",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "476:6:192",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "484:6:192",
                "type": ""
              }
            ],
            "src": "393:330:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "797:120:192",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "843:26:192",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "852:6:192"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "860:6:192"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "845:6:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "845:22:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "845:22:192"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "818:7:192"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "827:9:192"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "814:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "814:23:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "839:2:192",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "810:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "810:32:192"
                  },
                  "nodeType": "YulIf",
                  "src": "807:2:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "878:33:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "901:9:192"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "888:12:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "888:23:192"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "878:6:192"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "763:9:192",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "774:7:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "786:6:192",
                "type": ""
              }
            ],
            "src": "728:189:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1003:113:192",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1049:26:192",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1058:6:192"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1066:6:192"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1051:6:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1051:22:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1051:22:192"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1024:7:192"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1033:9:192"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1020:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1020:23:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1045:2:192",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1016:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1016:32:192"
                  },
                  "nodeType": "YulIf",
                  "src": "1013:2:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1084:26:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1100:9:192"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1094:5:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1094:16:192"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1084:6:192"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "969:9:192",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "980:7:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "992:6:192",
                "type": ""
              }
            ],
            "src": "922:194:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1246:119:192",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1256:26:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1268:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1279:2:192",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1264:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1264:18:192"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1256:4:192"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1298:9:192"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1309:6:192"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1291:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1291:25:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1291:25:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1336:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1347:2:192",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1332:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1332:18:192"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1352:6:192"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1325:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1325:34:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1325:34:192"
                }
              ]
            },
            "name": "abi_encode_tuple_t_int256_t_int256__to_t_int256_t_int256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1207:9:192",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1218:6:192",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1226:6:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1237:4:192",
                "type": ""
              }
            ],
            "src": "1121:244:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1544:172:192",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1561:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1572:2:192",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1554:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1554:21:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1554:21:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1595:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1606:2:192",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1591:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1591:18:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1611:2:192",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1584:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1584:30:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1584:30:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1634:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1645:2:192",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1630:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1630:18:192"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1650:24:192",
                        "type": "",
                        "value": "Parameters already set"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1623:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1623:52:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1623:52:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1684:26:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1696:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1707:2:192",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1692:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1692:18:192"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1684:4:192"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1c660ff5672050f49f4504349febd871d9a8af4dbd7a242ac305e556f78030ee__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1521:9:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1535:4:192",
                "type": ""
              }
            ],
            "src": "1370:346:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1895:164:192",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1912:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1923:2:192",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1905:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1905:21:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1905:21:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1946:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1957:2:192",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1942:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1942:18:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1962:2:192",
                        "type": "",
                        "value": "14"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1935:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1935:30:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1935:30:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1985:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1996:2:192",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1981:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1981:18:192"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2001:16:192",
                        "type": "",
                        "value": "Invalid bounds"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1974:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1974:44:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1974:44:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2027:26:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2039:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2050:2:192",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2035:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2035:18:192"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2027:4:192"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_247b4a8950cc859ed74b0ac5064161dde897ab929a9a949e360193cf1adc2f3a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1872:9:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1886:4:192",
                "type": ""
              }
            ],
            "src": "1721:338:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2238:180:192",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2255:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2266:2:192",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2248:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2248:21:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2248:21:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2289:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2300:2:192",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2285:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2285:18:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2305:2:192",
                        "type": "",
                        "value": "30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2278:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2278:30:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2278:30:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2328:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2339:2:192",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2324:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2324:18:192"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2344:32:192",
                        "type": "",
                        "value": "Params not set for calling LSP"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2317:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2317:60:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2317:60:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2386:26:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2398:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2409:2:192",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2394:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2394:18:192"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2386:4:192"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_68cc0dd0836e3d636c6d9a388054767b5f98741a714b83391a138d4c0cefe7d2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2215:9:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2229:4:192",
                "type": ""
              }
            ],
            "src": "2064:354:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2597:169:192",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2614:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2625:2:192",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2607:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2607:21:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2607:21:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2648:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2659:2:192",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2644:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2644:18:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2664:2:192",
                        "type": "",
                        "value": "19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2637:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2637:30:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2637:30:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2687:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2698:2:192",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2683:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2683:18:192"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2703:21:192",
                        "type": "",
                        "value": "Invalid LSP address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2676:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2676:49:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2676:49:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2734:26:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2746:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2757:2:192",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2742:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2742:18:192"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2734:4:192"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9c7a742eb98e20c17de092129b9e73fedab190e4a1e2e034f7e056503d041914__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2574:9:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2588:4:192",
                "type": ""
              }
            ],
            "src": "2423:343:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2945:181:192",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2962:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2973:2:192",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2955:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2955:21:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2955:21:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2996:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3007:2:192",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2992:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2992:18:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3012:2:192",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2985:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2985:30:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2985:30:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3035:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3046:2:192",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3031:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3031:18:192"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3051:33:192",
                        "type": "",
                        "value": "ReentrancyGuard: reentrant call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3024:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3024:61:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3024:61:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3094:26:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3106:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3117:2:192",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3102:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3102:18:192"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3094:4:192"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2922:9:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2936:4:192",
                "type": ""
              }
            ],
            "src": "2771:355:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3232:76:192",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3242:26:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3254:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3265:2:192",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3250:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3250:18:192"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3242:4:192"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3284:9:192"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3295:6:192"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3277:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3277:25:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3277:25:192"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3201:9:192",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3212:6:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3223:4:192",
                "type": ""
              }
            ],
            "src": "3131:177:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3359:171:192",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3390:111:192",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "3411:1:192"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3418:3:192",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3423:10:192",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "3414:3:192"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3414:20:192"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3404:6:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3404:31:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3404:31:192"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3455:1:192",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3458:4:192",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3448:6:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3448:15:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3448:15:192"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "3483:1:192"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3486:4:192",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3476:6:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3476:15:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3476:15:192"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3379:1:192"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3372:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3372:9:192"
                  },
                  "nodeType": "YulIf",
                  "src": "3369:2:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3510:14:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3519:1:192"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3522:1:192"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "3515:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3515:9:192"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "3510:1:192"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3344:1:192",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3347:1:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "3353:1:192",
                "type": ""
              }
            ],
            "src": "3313:217:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3587:116:192",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3646:22:192",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "3648:16:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3648:18:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3648:18:192"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "3618:1:192"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "3611:6:192"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3611:9:192"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "3604:6:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3604:17:192"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "3626:1:192"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3637:1:192",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "3633:3:192"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3633:6:192"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "3641:1:192"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "3629:3:192"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3629:14:192"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "3623:2:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3623:21:192"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3600:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3600:45:192"
                  },
                  "nodeType": "YulIf",
                  "src": "3597:2:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3677:20:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3692:1:192"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3695:1:192"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "3688:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3688:9:192"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "3677:7:192"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3566:1:192",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3569:1:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "3575:7:192",
                "type": ""
              }
            ],
            "src": "3535:168:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3756:222:192",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3766:22:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3780:1:192"
                      },
                      {
                        "name": "diff",
                        "nodeType": "YulIdentifier",
                        "src": "3783:4:192"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3776:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3776:12:192"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3770:2:192",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3845:22:192",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "3847:16:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3847:18:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3847:18:192"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3811:2:192"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "3804:6:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3804:10:192"
                      },
                      {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "3820:1:192"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3831:3:192",
                                    "type": "",
                                    "value": "255"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3836:1:192",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3827:3:192"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3827:11:192"
                              },
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "3840:1:192"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3823:3:192"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3823:19:192"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "3816:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3816:27:192"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3800:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3800:44:192"
                  },
                  "nodeType": "YulIf",
                  "src": "3797:2:192"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3924:22:192",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "3926:16:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3926:18:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3926:18:192"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3883:2:192"
                      },
                      {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "3891:1:192"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3906:3:192",
                                        "type": "",
                                        "value": "255"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3911:1:192",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "3902:3:192"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3902:11:192"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3915:1:192",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "3898:3:192"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3898:19:192"
                              },
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "3919:1:192"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3894:3:192"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3894:27:192"
                          }
                        ],
                        "functionName": {
                          "name": "sgt",
                          "nodeType": "YulIdentifier",
                          "src": "3887:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3887:35:192"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3879:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3879:44:192"
                  },
                  "nodeType": "YulIf",
                  "src": "3876:2:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3955:17:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3967:1:192"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3970:1:192"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "3963:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3963:9:192"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "3955:4:192"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3738:1:192",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3741:1:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "3747:4:192",
                "type": ""
              }
            ],
            "src": "3708:270:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4015:95:192",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4032:1:192",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4039:3:192",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4044:10:192",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "4035:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4035:20:192"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4025:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4025:31:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4025:31:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4072:1:192",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4075:4:192",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4065:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4065:15:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4065:15:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4096:1:192",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4099:4:192",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "4089:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4089:15:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4089:15:192"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "3983:127:192"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_int256t_int256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value1, value1) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_int256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_int256_t_int256__to_t_int256_t_int256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_1c660ff5672050f49f4504349febd871d9a8af4dbd7a242ac305e556f78030ee__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Parameters already set\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_247b4a8950cc859ed74b0ac5064161dde897ab929a9a949e360193cf1adc2f3a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Invalid bounds\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_68cc0dd0836e3d636c6d9a388054767b5f98741a714b83391a138d4c0cefe7d2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Params not set for calling LSP\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9c7a742eb98e20c17de092129b9e73fedab190e4a1e2e034f7e056503d041914__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Invalid LSP address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_int256(x, y) -> diff\n    {\n        let _1 := slt(y, diff)\n        if and(iszero(_1), slt(x, add(shl(255, 1), y))) { panic_error_0x11() }\n        if and(_1, sgt(x, add(sub(shl(255, 1), 1), y))) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
      "id": 192,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "1534:3121:74:-:0;;;;;;;;;;;;-1:-1:-1;874:11:11;:18;;-1:-1:-1;;874:18:11;888:4;874:18;;;1534:3121:74;;;;;;",
  "deployedSourceMap": "1534:3121:74:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2711:678;;;;;;:::i;:::-;;:::i;:::-;;3765:888;;;;;;:::i;:::-;;:::i;:::-;;;3277:25:192;;;3265:2;3250:18;3765:888:74;;;;;;;;1830:80;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1291:25:192;;;1347:2;1332:18;;1325:34;;;;1264:18;1830:80:74;1246:119:192;2711:678:74;1317:19:11;:17;:19::i;:::-;1346:17;2459:5;2445:19;;-1:-1:-1;;2445:19:11;;;2335:136;1346:17;2904:13:74::1;-1:-1:-1::0;;;;;2878:60:74::1;;:62;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2870:99;;;::::0;-1:-1:-1;;;2870:99:74;;2625:2:192;2870:99:74::1;::::0;::::1;2607:21:192::0;2664:2;2644:18;;;2637:30;-1:-1:-1;;;2683:18:192;;;2676:49;2742:18;;2870:99:74::1;;;;;;;;;3000:10;2987;:23;2979:50;;;::::0;-1:-1:-1;;;2979:50:74;;1923:2:192;2979:50:74::1;::::0;::::1;1905:21:192::0;1962:2;1942:18;;;1935:30;-1:-1:-1;;;1981:18:192;;;1974:44;2035:18;;2979:50:74::1;1895:164:192::0;2979:50:74::1;-1:-1:-1::0;;;;;3086:38:74;::::1;3040:43;3086:38:::0;;;:23:::1;:38;::::0;;;;;;;;3040:84;;;;::::1;::::0;;;;;;;;;::::1;::::0;;;::::1;::::0;3142:22;:48;::::1;;;-1:-1:-1::0;3168:17:74::1;::::0;::::1;::::0;:22;3142:48:::1;3134:83;;;::::0;-1:-1:-1;;;3134:83:74;;1572:2:192;3134:83:74::1;::::0;::::1;1554:21:192::0;1611:2;1591:18;;;1584:30;-1:-1:-1;;;1630:18:192;;;1623:52;1692:18;;3134:83:74::1;1544:172:192::0;3134:83:74::1;-1:-1:-1::0;3269:113:74::1;::::0;;;;::::1;::::0;;;;;::::1;::::0;;::::1;::::0;;;-1:-1:-1;;;;;3228:38:74;::::1;-1:-1:-1::0;3228:38:74;;;:23:::1;:38:::0;;;;;;;;:154;;;;;;;::::1;::::0;1384:20:11;2658:11;:18;;-1:-1:-1;;2658:18:11;2672:4;2658:18;;;2477:206;1384:20;2711:678:74;;;:::o;3765:888::-;3916:7;1603:19:11;:17;:19::i;:::-;4009:10:74::1;3939:43;3985:35:::0;;;:23:::1;:35;::::0;;;;;;;;3939:81;;;;::::1;::::0;;;;;;;;;::::1;::::0;;;::::1;::::0;4038:22;::::1;::::0;:48:::1;;-1:-1:-1::0;4064:17:74::1;::::0;::::1;::::0;:22;::::1;4038:48;4030:91;;;::::0;-1:-1:-1;;;4030:91:74;;2266:2:192;4030:91:74::1;::::0;::::1;2248:21:192::0;2305:2;2285:18;;;2278:30;2344:32;2324:18;;;2317:60;2394:18;;4030:91:74::1;2238:180:192::0;4030:91:74::1;4151:17:::0;;4136:32;::::1;4132:84;;4177:30;4205:1;4177:27;:30::i;:::-;:39:::0;;-1:-1:-1;4170:46:74::1;::::0;-1:-1:-1;4170:46:74::1;4132:84;4246:6;:17;;;4231:11;:32;4227:84;;4272:30;4300:1;4272:27;:30::i;4227:84::-;4452:168;4552:67;;;;;;;;4600:6;:17;;;4580:6;:17;;;:37;;;;:::i;:::-;4552:67;;::::0;4452:78:::1;;;;;;;;4511:6;:17;;;4497:11;:31;;;;:::i;:::-;4452:78:::0;;:99;::::1;:168::i;:::-;:194:::0;;-1:-1:-1;;1632:1:11::1;3765:888:74::0;;;:::o;2143:186:11:-;2275:11;;;;2267:55;;;;-1:-1:-1;;;2267:55:11;;2973:2:192;2267:55:11;;;2955:21:192;3012:2;2992:18;;;2985:30;3051:33;3031:18;;;3024:61;3102:18;;2267:55:11;2945:181:192;2267:55:11;2143:186::o;1044:135:10:-;-1:-1:-1;;;;;;;;;;;;1138:34:10;;;;;;;;;;1147:24;:1;619:6;1147:5;:24::i;:::-;1138:34;;1131:41;1044:135;-1:-1:-1;;1044:135:10:o;10614:634::-;-1:-1:-1;;;;;;;;;;;;11182:59:10;;;;;;;;;11229:10;;11191;;11182:59;;11191:49;;:33;;619:6;11191:14;:33::i;:::-;:37;;:49::i;:::-;11182:59;;11175:66;10614:634;-1:-1:-1;;;10614:634:10:o;3382:96:172:-;3440:7;3466:5;3470:1;3466;:5;:::i;:::-;3459:12;3382:96;-1:-1:-1;;;3382:96:172:o;3767:::-;3825:7;3851:5;3855:1;3851;:5;:::i;14:173:192:-;82:20;;-1:-1:-1;;;;;131:31:192;;121:42;;111:2;;177:1;174;167:12;192:196;251:6;304:2;292:9;283:7;279:23;275:32;272:2;;;325:6;317;310:22;272:2;353:29;372:9;353:29;:::i;393:330::-;468:6;476;484;537:2;525:9;516:7;512:23;508:32;505:2;;;558:6;550;543:22;505:2;586:29;605:9;586:29;:::i;:::-;576:39;662:2;647:18;;634:32;;-1:-1:-1;713:2:192;698:18;;;685:32;;495:228;-1:-1:-1;;;495:228:192:o;728:189::-;786:6;839:2;827:9;818:7;814:23;810:32;807:2;;;860:6;852;845:22;807:2;-1:-1:-1;888:23:192;;797:120;-1:-1:-1;797:120:192:o;922:194::-;992:6;1045:2;1033:9;1024:7;1020:23;1016:32;1013:2;;;1066:6;1058;1051:22;1013:2;-1:-1:-1;1094:16:192;;1003:113;-1:-1:-1;1003:113:192:o;3313:217::-;3353:1;3379;3369:2;;-1:-1:-1;;;3404:31:192;;3458:4;3455:1;3448:15;3486:4;3411:1;3476:15;3369:2;-1:-1:-1;3515:9:192;;3359:171::o;3535:168::-;3575:7;3641:1;3637;3633:6;3629:14;3626:1;3623:21;3618:1;3611:9;3604:17;3600:45;3597:2;;;3648:18;;:::i;:::-;-1:-1:-1;3688:9:192;;3587:116::o;3708:270::-;3747:4;3776:12;;;3804:10;;-1:-1:-1;;;3823:19:192;;3816:27;;3800:44;3797:2;;;3847:18;;:::i;:::-;-1:-1:-1;;;;;3894:27:192;;3887:35;;3879:44;;3876:2;;;3926:18;;:::i;:::-;-1:-1:-1;;3963:9:192;;3756:222::o;3983:127::-;4044:10;4039:3;4035:20;4032:1;4025:31;4075:4;4072:1;4065:15;4099:4;4096:1;4089:15",
  "source": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/utils/math/SignedSafeMath.sol\";\n\nimport \"./LongShortPairFinancialProductLibrary.sol\";\nimport \"../../../../common/implementation/Lockable.sol\";\n\n/**\n * @title Linear Long Short Pair Financial Product Library.\n * @notice Adds settlement logic to create linear LSPs. The contract will payout a scaled amount of collateral\n * depending on where the settlement price lands within a price range between an upperBound and a lowerBound. If\n * settlement price is within the price range then the expiryPercentLong is defined by\n * (expiryPrice - lowerBound) / (upperBound - lowerBound). This number represent the amount of collateral from the\n * collateralPerPair that will be sent to the long and short side. If the price is higher than the upperBound then\n * expiryPercentLong = 1. if the price is lower than the lower bound then expiryPercentLong = 0. For example, consider\n * a linear LSP on the price of ETH collateralized in USDC with an upperBound = 4000 and lowerBound = 2000 with a\n * collateralPerPair of 1000 (i.e each pair of long and shorts is worth 1000 USDC). At settlement the expiryPercentLong\n * would equal 1 (each long worth 1000 and short worth 0) if ETH price was > 4000 and it would equal 0 if < 2000\n * (each long is worthless and each short is worth 1000). If between the two (say 3500) then expiryPercentLong\n * = (3500 - 2000) / (4000 - 2000) = 0.75. Therefore each long is worth 750 and each short is worth 250.\n */\ncontract LinearLongShortPairFinancialProductLibrary is LongShortPairFinancialProductLibrary, Lockable {\n    using FixedPoint for FixedPoint.Unsigned;\n    using SignedSafeMath for int256;\n\n    struct LinearLongShortPairParameters {\n        int256 upperBound;\n        int256 lowerBound;\n    }\n\n    mapping(address => LinearLongShortPairParameters) public longShortPairParameters;\n\n    /**\n     * @notice Enables any address to set the parameters for an associated financial product.\n     * @param longShortPair address of the LSP contract.\n     * @param upperBound the upper price that the linear LSP will operate within.\n     * @param lowerBound the lower price that the linear LSP will operate within.\n     * @dev Note: a) Any address can set these parameters b) existing LSP parameters for address not set.\n     * c) upperBound > lowerBound.\n     * d) parameters can only be set once to prevent the deployer from changing the parameters after the fact.\n     * e) For safety, parameters should be set before depositing any synthetic tokens in a liquidity pool.\n     * f) longShortPair must expose an expirationTimestamp method to validate it is correctly deployed.\n     */\n    function setLongShortPairParameters(\n        address longShortPair,\n        int256 upperBound,\n        int256 lowerBound\n    ) public nonReentrant() {\n        require(ExpiringContractInterface(longShortPair).expirationTimestamp() != 0, \"Invalid LSP address\");\n        require(upperBound > lowerBound, \"Invalid bounds\");\n\n        LinearLongShortPairParameters memory params = longShortPairParameters[longShortPair];\n        require(params.upperBound == 0 && params.lowerBound == 0, \"Parameters already set\");\n\n        longShortPairParameters[longShortPair] = LinearLongShortPairParameters({\n            upperBound: upperBound,\n            lowerBound: lowerBound\n        });\n    }\n\n    /**\n     * @notice Returns a number between 0 and 1e18 to indicate how much collateral each long and short token is entitled\n     * to per collateralPerPair.\n     * @param expiryPrice price from the optimistic oracle for the LSP price identifier.\n     * @return expiryPercentLong to indicate how much collateral should be sent between long and short tokens.\n     */\n    function percentageLongCollateralAtExpiry(int256 expiryPrice)\n        public\n        view\n        override\n        nonReentrantView()\n        returns (uint256)\n    {\n        LinearLongShortPairParameters memory params = longShortPairParameters[msg.sender];\n        require(params.upperBound != 0 || params.lowerBound != 0, \"Params not set for calling LSP\");\n\n        if (expiryPrice >= params.upperBound) return FixedPoint.fromUnscaledUint(1).rawValue;\n\n        if (expiryPrice <= params.lowerBound) return FixedPoint.fromUnscaledUint(0).rawValue;\n\n        // if not exceeding bounds, expiryPercentLong = (expiryPrice - lowerBound) / (upperBound - lowerBound)\n        return\n            FixedPoint\n                .Unsigned(uint256(expiryPrice - params.lowerBound))\n                .div(FixedPoint.Unsigned(uint256(params.upperBound - params.lowerBound)))\n                .rawValue;\n    }\n}\n",
  "sourcePath": "/home/circleci/protocol/packages/core/contracts/financial-templates/common/financial-product-libraries/long-short-pair-libraries/LinearLongShortPairFinancialProductLibrary.sol",
  "ast": {
    "absolutePath": "/home/circleci/protocol/packages/core/contracts/financial-templates/common/financial-product-libraries/long-short-pair-libraries/LinearLongShortPairFinancialProductLibrary.sol",
    "exportedSymbols": {
      "ExpiringContractInterface": [
        14792
      ],
      "FixedPoint": [
        3659
      ],
      "LinearLongShortPairFinancialProductLibrary": [
        14782
      ],
      "Lockable": [
        3720
      ],
      "LongShortPairFinancialProductLibrary": [
        14800
      ],
      "SafeMath": [
        44033
      ],
      "SignedSafeMath": [
        44097
      ]
    },
    "id": 14783,
    "license": "AGPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 14616,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:23:74"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SignedSafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SignedSafeMath.sol",
        "id": 14617,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14783,
        "sourceUnit": 44098,
        "src": "67:63:74",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/circleci/protocol/packages/core/contracts/financial-templates/common/financial-product-libraries/long-short-pair-libraries/LongShortPairFinancialProductLibrary.sol",
        "file": "./LongShortPairFinancialProductLibrary.sol",
        "id": 14618,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14783,
        "sourceUnit": 14801,
        "src": "132:52:74",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/circleci/protocol/packages/core/contracts/common/implementation/Lockable.sol",
        "file": "../../../../common/implementation/Lockable.sol",
        "id": 14619,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14783,
        "sourceUnit": 3721,
        "src": "185:56:74",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 14621,
              "name": "LongShortPairFinancialProductLibrary",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14800,
              "src": "1589:36:74"
            },
            "id": 14622,
            "nodeType": "InheritanceSpecifier",
            "src": "1589:36:74"
          },
          {
            "baseName": {
              "id": 14623,
              "name": "Lockable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3720,
              "src": "1627:8:74"
            },
            "id": 14624,
            "nodeType": "InheritanceSpecifier",
            "src": "1627:8:74"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 14620,
          "nodeType": "StructuredDocumentation",
          "src": "243:1290:74",
          "text": " @title Linear Long Short Pair Financial Product Library.\n @notice Adds settlement logic to create linear LSPs. The contract will payout a scaled amount of collateral\n depending on where the settlement price lands within a price range between an upperBound and a lowerBound. If\n settlement price is within the price range then the expiryPercentLong is defined by\n (expiryPrice - lowerBound) / (upperBound - lowerBound). This number represent the amount of collateral from the\n collateralPerPair that will be sent to the long and short side. If the price is higher than the upperBound then\n expiryPercentLong = 1. if the price is lower than the lower bound then expiryPercentLong = 0. For example, consider\n a linear LSP on the price of ETH collateralized in USDC with an upperBound = 4000 and lowerBound = 2000 with a\n collateralPerPair of 1000 (i.e each pair of long and shorts is worth 1000 USDC). At settlement the expiryPercentLong\n would equal 1 (each long worth 1000 and short worth 0) if ETH price was > 4000 and it would equal 0 if < 2000\n (each long is worthless and each short is worth 1000). If between the two (say 3500) then expiryPercentLong\n = (3500 - 2000) / (4000 - 2000) = 0.75. Therefore each long is worth 750 and each short is worth 250."
        },
        "fullyImplemented": true,
        "id": 14782,
        "linearizedBaseContracts": [
          14782,
          3720,
          14800
        ],
        "name": "LinearLongShortPairFinancialProductLibrary",
        "nameLocation": "1543:42:74",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 14628,
            "libraryName": {
              "id": 14625,
              "name": "FixedPoint",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3659,
              "src": "1648:10:74"
            },
            "nodeType": "UsingForDirective",
            "src": "1642:41:74",
            "typeName": {
              "id": 14627,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 14626,
                "name": "FixedPoint.Unsigned",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2045,
                "src": "1663:19:74"
              },
              "referencedDeclaration": 2045,
              "src": "1663:19:74",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Unsigned_$2045_storage_ptr",
                "typeString": "struct FixedPoint.Unsigned"
              }
            }
          },
          {
            "id": 14631,
            "libraryName": {
              "id": 14629,
              "name": "SignedSafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 44097,
              "src": "1694:14:74"
            },
            "nodeType": "UsingForDirective",
            "src": "1688:32:74",
            "typeName": {
              "id": 14630,
              "name": "int256",
              "nodeType": "ElementaryTypeName",
              "src": "1713:6:74",
              "typeDescriptions": {
                "typeIdentifier": "t_int256",
                "typeString": "int256"
              }
            }
          },
          {
            "canonicalName": "LinearLongShortPairFinancialProductLibrary.LinearLongShortPairParameters",
            "id": 14636,
            "members": [
              {
                "constant": false,
                "id": 14633,
                "mutability": "mutable",
                "name": "upperBound",
                "nameLocation": "1780:10:74",
                "nodeType": "VariableDeclaration",
                "scope": 14636,
                "src": "1773:17:74",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_int256",
                  "typeString": "int256"
                },
                "typeName": {
                  "id": 14632,
                  "name": "int256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1773:6:74",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14635,
                "mutability": "mutable",
                "name": "lowerBound",
                "nameLocation": "1807:10:74",
                "nodeType": "VariableDeclaration",
                "scope": 14636,
                "src": "1800:17:74",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_int256",
                  "typeString": "int256"
                },
                "typeName": {
                  "id": 14634,
                  "name": "int256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1800:6:74",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "LinearLongShortPairParameters",
            "nameLocation": "1733:29:74",
            "nodeType": "StructDefinition",
            "scope": 14782,
            "src": "1726:98:74",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9299cbed",
            "id": 14641,
            "mutability": "mutable",
            "name": "longShortPairParameters",
            "nameLocation": "1887:23:74",
            "nodeType": "VariableDeclaration",
            "scope": 14782,
            "src": "1830:80:74",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_LinearLongShortPairParameters_$14636_storage_$",
              "typeString": "mapping(address => struct LinearLongShortPairFinancialProductLibrary.LinearLongShortPairParameters)"
            },
            "typeName": {
              "id": 14640,
              "keyType": {
                "id": 14637,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1838:7:74",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1830:49:74",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_LinearLongShortPairParameters_$14636_storage_$",
                "typeString": "mapping(address => struct LinearLongShortPairFinancialProductLibrary.LinearLongShortPairParameters)"
              },
              "valueType": {
                "id": 14639,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 14638,
                  "name": "LinearLongShortPairParameters",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14636,
                  "src": "1849:29:74"
                },
                "referencedDeclaration": 14636,
                "src": "1849:29:74",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_LinearLongShortPairParameters_$14636_storage_ptr",
                  "typeString": "struct LinearLongShortPairFinancialProductLibrary.LinearLongShortPairParameters"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 14700,
              "nodeType": "Block",
              "src": "2860:529:74",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 14660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 14655,
                                  "name": "longShortPair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14644,
                                  "src": "2904:13:74",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 14654,
                                "name": "ExpiringContractInterface",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14792,
                                "src": "2878:25:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ExpiringContractInterface_$14792_$",
                                  "typeString": "type(contract ExpiringContractInterface)"
                                }
                              },
                              "id": 14656,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2878:40:74",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ExpiringContractInterface_$14792",
                                "typeString": "contract ExpiringContractInterface"
                              }
                            },
                            "id": 14657,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "expirationTimestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14791,
                            "src": "2878:60:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 14658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2878:62:74",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 14659,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2944:1:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2878:67:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964204c53502061646472657373",
                        "id": 14661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2947:21:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9c7a742eb98e20c17de092129b9e73fedab190e4a1e2e034f7e056503d041914",
                          "typeString": "literal_string \"Invalid LSP address\""
                        },
                        "value": "Invalid LSP address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9c7a742eb98e20c17de092129b9e73fedab190e4a1e2e034f7e056503d041914",
                          "typeString": "literal_string \"Invalid LSP address\""
                        }
                      ],
                      "id": 14653,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2870:7:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2870:99:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14663,
                  "nodeType": "ExpressionStatement",
                  "src": "2870:99:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "id": 14667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 14665,
                          "name": "upperBound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14646,
                          "src": "2987:10:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 14666,
                          "name": "lowerBound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14648,
                          "src": "3000:10:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "src": "2987:23:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420626f756e6473",
                        "id": 14668,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3012:16:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_247b4a8950cc859ed74b0ac5064161dde897ab929a9a949e360193cf1adc2f3a",
                          "typeString": "literal_string \"Invalid bounds\""
                        },
                        "value": "Invalid bounds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_247b4a8950cc859ed74b0ac5064161dde897ab929a9a949e360193cf1adc2f3a",
                          "typeString": "literal_string \"Invalid bounds\""
                        }
                      ],
                      "id": 14664,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2979:7:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2979:50:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14670,
                  "nodeType": "ExpressionStatement",
                  "src": "2979:50:74"
                },
                {
                  "assignments": [
                    14673
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14673,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "3077:6:74",
                      "nodeType": "VariableDeclaration",
                      "scope": 14700,
                      "src": "3040:43:74",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LinearLongShortPairParameters_$14636_memory_ptr",
                        "typeString": "struct LinearLongShortPairFinancialProductLibrary.LinearLongShortPairParameters"
                      },
                      "typeName": {
                        "id": 14672,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 14671,
                          "name": "LinearLongShortPairParameters",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14636,
                          "src": "3040:29:74"
                        },
                        "referencedDeclaration": 14636,
                        "src": "3040:29:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LinearLongShortPairParameters_$14636_storage_ptr",
                          "typeString": "struct LinearLongShortPairFinancialProductLibrary.LinearLongShortPairParameters"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14677,
                  "initialValue": {
                    "baseExpression": {
                      "id": 14674,
                      "name": "longShortPairParameters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14641,
                      "src": "3086:23:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_LinearLongShortPairParameters_$14636_storage_$",
                        "typeString": "mapping(address => struct LinearLongShortPairFinancialProductLibrary.LinearLongShortPairParameters storage ref)"
                      }
                    },
                    "id": 14676,
                    "indexExpression": {
                      "id": 14675,
                      "name": "longShortPair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14644,
                      "src": "3110:13:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3086:38:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LinearLongShortPairParameters_$14636_storage",
                      "typeString": "struct LinearLongShortPairFinancialProductLibrary.LinearLongShortPairParameters storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3040:84:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 14687,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "id": 14682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 14679,
                              "name": "params",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14673,
                              "src": "3142:6:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LinearLongShortPairParameters_$14636_memory_ptr",
                                "typeString": "struct LinearLongShortPairFinancialProductLibrary.LinearLongShortPairParameters memory"
                              }
                            },
                            "id": 14680,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "upperBound",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14633,
                            "src": "3142:17:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 14681,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3163:1:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3142:22:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "id": 14686,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 14683,
                              "name": "params",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14673,
                              "src": "3168:6:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LinearLongShortPairParameters_$14636_memory_ptr",
                                "typeString": "struct LinearLongShortPairFinancialProductLibrary.LinearLongShortPairParameters memory"
                              }
                            },
                            "id": 14684,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lowerBound",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14635,
                            "src": "3168:17:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 14685,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3189:1:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3168:22:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3142:48:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506172616d657465727320616c726561647920736574",
                        "id": 14688,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3192:24:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1c660ff5672050f49f4504349febd871d9a8af4dbd7a242ac305e556f78030ee",
                          "typeString": "literal_string \"Parameters already set\""
                        },
                        "value": "Parameters already set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1c660ff5672050f49f4504349febd871d9a8af4dbd7a242ac305e556f78030ee",
                          "typeString": "literal_string \"Parameters already set\""
                        }
                      ],
                      "id": 14678,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3134:7:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3134:83:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14690,
                  "nodeType": "ExpressionStatement",
                  "src": "3134:83:74"
                },
                {
                  "expression": {
                    "id": 14698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 14691,
                        "name": "longShortPairParameters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14641,
                        "src": "3228:23:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_LinearLongShortPairParameters_$14636_storage_$",
                          "typeString": "mapping(address => struct LinearLongShortPairFinancialProductLibrary.LinearLongShortPairParameters storage ref)"
                        }
                      },
                      "id": 14693,
                      "indexExpression": {
                        "id": 14692,
                        "name": "longShortPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14644,
                        "src": "3252:13:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3228:38:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LinearLongShortPairParameters_$14636_storage",
                        "typeString": "struct LinearLongShortPairFinancialProductLibrary.LinearLongShortPairParameters storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 14695,
                          "name": "upperBound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14646,
                          "src": "3325:10:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        {
                          "id": 14696,
                          "name": "lowerBound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14648,
                          "src": "3361:10:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        ],
                        "id": 14694,
                        "name": "LinearLongShortPairParameters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14636,
                        "src": "3269:29:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_LinearLongShortPairParameters_$14636_storage_ptr_$",
                          "typeString": "type(struct LinearLongShortPairFinancialProductLibrary.LinearLongShortPairParameters storage pointer)"
                        }
                      },
                      "id": 14697,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "upperBound",
                        "lowerBound"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "3269:113:74",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LinearLongShortPairParameters_$14636_memory_ptr",
                        "typeString": "struct LinearLongShortPairFinancialProductLibrary.LinearLongShortPairParameters memory"
                      }
                    },
                    "src": "3228:154:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LinearLongShortPairParameters_$14636_storage",
                      "typeString": "struct LinearLongShortPairFinancialProductLibrary.LinearLongShortPairParameters storage ref"
                    }
                  },
                  "id": 14699,
                  "nodeType": "ExpressionStatement",
                  "src": "3228:154:74"
                }
              ]
            },
            "documentation": {
              "id": 14642,
              "nodeType": "StructuredDocumentation",
              "src": "1917:789:74",
              "text": " @notice Enables any address to set the parameters for an associated financial product.\n @param longShortPair address of the LSP contract.\n @param upperBound the upper price that the linear LSP will operate within.\n @param lowerBound the lower price that the linear LSP will operate within.\n @dev Note: a) Any address can set these parameters b) existing LSP parameters for address not set.\n c) upperBound > lowerBound.\n d) parameters can only be set once to prevent the deployer from changing the parameters after the fact.\n e) For safety, parameters should be set before depositing any synthetic tokens in a liquidity pool.\n f) longShortPair must expose an expirationTimestamp method to validate it is correctly deployed."
            },
            "functionSelector": "25110946",
            "id": 14701,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 14651,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14650,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3686,
                  "src": "2845:12:74"
                },
                "nodeType": "ModifierInvocation",
                "src": "2845:14:74"
              }
            ],
            "name": "setLongShortPairParameters",
            "nameLocation": "2720:26:74",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14649,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14644,
                  "mutability": "mutable",
                  "name": "longShortPair",
                  "nameLocation": "2764:13:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 14701,
                  "src": "2756:21:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14643,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2756:7:74",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14646,
                  "mutability": "mutable",
                  "name": "upperBound",
                  "nameLocation": "2794:10:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 14701,
                  "src": "2787:17:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 14645,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2787:6:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14648,
                  "mutability": "mutable",
                  "name": "lowerBound",
                  "nameLocation": "2821:10:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 14701,
                  "src": "2814:17:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 14647,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2814:6:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2746:91:74"
            },
            "returnParameters": {
              "id": 14652,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2860:0:74"
            },
            "scope": 14782,
            "src": "2711:678:74",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              14799
            ],
            "body": {
              "id": 14780,
              "nodeType": "Block",
              "src": "3929:724:74",
              "statements": [
                {
                  "assignments": [
                    14714
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14714,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "3976:6:74",
                      "nodeType": "VariableDeclaration",
                      "scope": 14780,
                      "src": "3939:43:74",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LinearLongShortPairParameters_$14636_memory_ptr",
                        "typeString": "struct LinearLongShortPairFinancialProductLibrary.LinearLongShortPairParameters"
                      },
                      "typeName": {
                        "id": 14713,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 14712,
                          "name": "LinearLongShortPairParameters",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14636,
                          "src": "3939:29:74"
                        },
                        "referencedDeclaration": 14636,
                        "src": "3939:29:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LinearLongShortPairParameters_$14636_storage_ptr",
                          "typeString": "struct LinearLongShortPairFinancialProductLibrary.LinearLongShortPairParameters"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14719,
                  "initialValue": {
                    "baseExpression": {
                      "id": 14715,
                      "name": "longShortPairParameters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14641,
                      "src": "3985:23:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_LinearLongShortPairParameters_$14636_storage_$",
                        "typeString": "mapping(address => struct LinearLongShortPairFinancialProductLibrary.LinearLongShortPairParameters storage ref)"
                      }
                    },
                    "id": 14718,
                    "indexExpression": {
                      "expression": {
                        "id": 14716,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "4009:3:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 14717,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "4009:10:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3985:35:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LinearLongShortPairParameters_$14636_storage",
                      "typeString": "struct LinearLongShortPairFinancialProductLibrary.LinearLongShortPairParameters storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3939:81:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 14729,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "id": 14724,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 14721,
                              "name": "params",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14714,
                              "src": "4038:6:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LinearLongShortPairParameters_$14636_memory_ptr",
                                "typeString": "struct LinearLongShortPairFinancialProductLibrary.LinearLongShortPairParameters memory"
                              }
                            },
                            "id": 14722,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "upperBound",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14633,
                            "src": "4038:17:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 14723,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4059:1:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4038:22:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "id": 14728,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 14725,
                              "name": "params",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14714,
                              "src": "4064:6:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LinearLongShortPairParameters_$14636_memory_ptr",
                                "typeString": "struct LinearLongShortPairFinancialProductLibrary.LinearLongShortPairParameters memory"
                              }
                            },
                            "id": 14726,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lowerBound",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14635,
                            "src": "4064:17:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 14727,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4085:1:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4064:22:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4038:48:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506172616d73206e6f742073657420666f722063616c6c696e67204c5350",
                        "id": 14730,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4088:32:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_68cc0dd0836e3d636c6d9a388054767b5f98741a714b83391a138d4c0cefe7d2",
                          "typeString": "literal_string \"Params not set for calling LSP\""
                        },
                        "value": "Params not set for calling LSP"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_68cc0dd0836e3d636c6d9a388054767b5f98741a714b83391a138d4c0cefe7d2",
                          "typeString": "literal_string \"Params not set for calling LSP\""
                        }
                      ],
                      "id": 14720,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4030:7:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4030:91:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14732,
                  "nodeType": "ExpressionStatement",
                  "src": "4030:91:74"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 14736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 14733,
                      "name": "expiryPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14704,
                      "src": "4136:11:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "expression": {
                        "id": 14734,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14714,
                        "src": "4151:6:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LinearLongShortPairParameters_$14636_memory_ptr",
                          "typeString": "struct LinearLongShortPairFinancialProductLibrary.LinearLongShortPairParameters memory"
                        }
                      },
                      "id": 14735,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "upperBound",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14633,
                      "src": "4151:17:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "4136:32:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 14743,
                  "nodeType": "IfStatement",
                  "src": "4132:84:74",
                  "trueBody": {
                    "expression": {
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 14739,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4205:1:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "expression": {
                            "id": 14737,
                            "name": "FixedPoint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3659,
                            "src": "4177:10:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_FixedPoint_$3659_$",
                              "typeString": "type(library FixedPoint)"
                            }
                          },
                          "id": 14738,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "fromUnscaledUint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2062,
                          "src": "4177:27:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_Unsigned_$2045_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (struct FixedPoint.Unsigned memory)"
                          }
                        },
                        "id": 14740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4177:30:74",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Unsigned_$2045_memory_ptr",
                          "typeString": "struct FixedPoint.Unsigned memory"
                        }
                      },
                      "id": 14741,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rawValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2044,
                      "src": "4177:39:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 14711,
                    "id": 14742,
                    "nodeType": "Return",
                    "src": "4170:46:74"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 14747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 14744,
                      "name": "expiryPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14704,
                      "src": "4231:11:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "expression": {
                        "id": 14745,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14714,
                        "src": "4246:6:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LinearLongShortPairParameters_$14636_memory_ptr",
                          "typeString": "struct LinearLongShortPairFinancialProductLibrary.LinearLongShortPairParameters memory"
                        }
                      },
                      "id": 14746,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "lowerBound",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14635,
                      "src": "4246:17:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "4231:32:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 14754,
                  "nodeType": "IfStatement",
                  "src": "4227:84:74",
                  "trueBody": {
                    "expression": {
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 14750,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4300:1:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "expression": {
                            "id": 14748,
                            "name": "FixedPoint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3659,
                            "src": "4272:10:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_FixedPoint_$3659_$",
                              "typeString": "type(library FixedPoint)"
                            }
                          },
                          "id": 14749,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "fromUnscaledUint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2062,
                          "src": "4272:27:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_Unsigned_$2045_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (struct FixedPoint.Unsigned memory)"
                          }
                        },
                        "id": 14751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4272:30:74",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Unsigned_$2045_memory_ptr",
                          "typeString": "struct FixedPoint.Unsigned memory"
                        }
                      },
                      "id": 14752,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rawValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2044,
                      "src": "4272:39:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 14711,
                    "id": 14753,
                    "nodeType": "Return",
                    "src": "4265:46:74"
                  }
                },
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  },
                                  "id": 14774,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 14770,
                                      "name": "params",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 14714,
                                      "src": "4580:6:74",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_LinearLongShortPairParameters_$14636_memory_ptr",
                                        "typeString": "struct LinearLongShortPairFinancialProductLibrary.LinearLongShortPairParameters memory"
                                      }
                                    },
                                    "id": 14771,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "upperBound",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 14633,
                                    "src": "4580:17:74",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 14772,
                                      "name": "params",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 14714,
                                      "src": "4600:6:74",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_LinearLongShortPairParameters_$14636_memory_ptr",
                                        "typeString": "struct LinearLongShortPairFinancialProductLibrary.LinearLongShortPairParameters memory"
                                      }
                                    },
                                    "id": 14773,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "lowerBound",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 14635,
                                    "src": "4600:17:74",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  },
                                  "src": "4580:37:74",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                ],
                                "id": 14769,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4572:7:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 14768,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4572:7:74",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 14775,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4572:46:74",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 14766,
                              "name": "FixedPoint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3659,
                              "src": "4552:10:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_FixedPoint_$3659_$",
                                "typeString": "type(library FixedPoint)"
                              }
                            },
                            "id": 14767,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Unsigned",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2045,
                            "src": "4552:19:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Unsigned_$2045_storage_ptr_$",
                              "typeString": "type(struct FixedPoint.Unsigned storage pointer)"
                            }
                          },
                          "id": 14776,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4552:67:74",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Unsigned_$2045_memory_ptr",
                            "typeString": "struct FixedPoint.Unsigned memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Unsigned_$2045_memory_ptr",
                            "typeString": "struct FixedPoint.Unsigned memory"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  },
                                  "id": 14762,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 14759,
                                    "name": "expiryPrice",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 14704,
                                    "src": "4497:11:74",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 14760,
                                      "name": "params",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 14714,
                                      "src": "4511:6:74",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_LinearLongShortPairParameters_$14636_memory_ptr",
                                        "typeString": "struct LinearLongShortPairFinancialProductLibrary.LinearLongShortPairParameters memory"
                                      }
                                    },
                                    "id": 14761,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "lowerBound",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 14635,
                                    "src": "4511:17:74",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  },
                                  "src": "4497:31:74",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                ],
                                "id": 14758,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4489:7:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 14757,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4489:7:74",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 14763,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4489:40:74",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 14755,
                              "name": "FixedPoint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3659,
                              "src": "4452:10:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_FixedPoint_$3659_$",
                                "typeString": "type(library FixedPoint)"
                              }
                            },
                            "id": 14756,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Unsigned",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2045,
                            "src": "4452:36:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Unsigned_$2045_storage_ptr_$",
                              "typeString": "type(struct FixedPoint.Unsigned storage pointer)"
                            }
                          },
                          "id": 14764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4452:78:74",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Unsigned_$2045_memory_ptr",
                            "typeString": "struct FixedPoint.Unsigned memory"
                          }
                        },
                        "id": 14765,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2635,
                        "src": "4452:99:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_struct$_Unsigned_$2045_memory_ptr_$_t_struct$_Unsigned_$2045_memory_ptr_$returns$_t_struct$_Unsigned_$2045_memory_ptr_$bound_to$_t_struct$_Unsigned_$2045_memory_ptr_$",
                          "typeString": "function (struct FixedPoint.Unsigned memory,struct FixedPoint.Unsigned memory) pure returns (struct FixedPoint.Unsigned memory)"
                        }
                      },
                      "id": 14777,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4452:168:74",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Unsigned_$2045_memory_ptr",
                        "typeString": "struct FixedPoint.Unsigned memory"
                      }
                    },
                    "id": 14778,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "rawValue",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 2044,
                    "src": "4452:194:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 14711,
                  "id": 14779,
                  "nodeType": "Return",
                  "src": "4433:213:74"
                }
              ]
            },
            "documentation": {
              "id": 14702,
              "nodeType": "StructuredDocumentation",
              "src": "3395:365:74",
              "text": " @notice Returns a number between 0 and 1e18 to indicate how much collateral each long and short token is entitled\n to per collateralPerPair.\n @param expiryPrice price from the optimistic oracle for the LSP price identifier.\n @return expiryPercentLong to indicate how much collateral should be sent between long and short tokens."
            },
            "functionSelector": "2da52361",
            "id": 14781,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 14708,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14707,
                  "name": "nonReentrantView",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3694,
                  "src": "3880:16:74"
                },
                "nodeType": "ModifierInvocation",
                "src": "3880:18:74"
              }
            ],
            "name": "percentageLongCollateralAtExpiry",
            "nameLocation": "3774:32:74",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 14706,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3863:8:74"
            },
            "parameters": {
              "id": 14705,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14704,
                  "mutability": "mutable",
                  "name": "expiryPrice",
                  "nameLocation": "3814:11:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 14781,
                  "src": "3807:18:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 14703,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3807:6:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3806:20:74"
            },
            "returnParameters": {
              "id": 14711,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14710,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14781,
                  "src": "3916:7:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14709,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3916:7:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3915:9:74"
            },
            "scope": 14782,
            "src": "3765:888:74",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 14783,
        "src": "1534:3121:74",
        "usedErrors": []
      }
    ],
    "src": "42:4614:74"
  },
  "legacyAST": {
    "absolutePath": "/home/circleci/protocol/packages/core/contracts/financial-templates/common/financial-product-libraries/long-short-pair-libraries/LinearLongShortPairFinancialProductLibrary.sol",
    "exportedSymbols": {
      "ExpiringContractInterface": [
        14792
      ],
      "FixedPoint": [
        3659
      ],
      "LinearLongShortPairFinancialProductLibrary": [
        14782
      ],
      "Lockable": [
        3720
      ],
      "LongShortPairFinancialProductLibrary": [
        14800
      ],
      "SafeMath": [
        44033
      ],
      "SignedSafeMath": [
        44097
      ]
    },
    "id": 14783,
    "license": "AGPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 14616,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:23:74"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SignedSafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SignedSafeMath.sol",
        "id": 14617,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14783,
        "sourceUnit": 44098,
        "src": "67:63:74",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/circleci/protocol/packages/core/contracts/financial-templates/common/financial-product-libraries/long-short-pair-libraries/LongShortPairFinancialProductLibrary.sol",
        "file": "./LongShortPairFinancialProductLibrary.sol",
        "id": 14618,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14783,
        "sourceUnit": 14801,
        "src": "132:52:74",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/circleci/protocol/packages/core/contracts/common/implementation/Lockable.sol",
        "file": "../../../../common/implementation/Lockable.sol",
        "id": 14619,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14783,
        "sourceUnit": 3721,
        "src": "185:56:74",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 14621,
              "name": "LongShortPairFinancialProductLibrary",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14800,
              "src": "1589:36:74"
            },
            "id": 14622,
            "nodeType": "InheritanceSpecifier",
            "src": "1589:36:74"
          },
          {
            "baseName": {
              "id": 14623,
              "name": "Lockable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3720,
              "src": "1627:8:74"
            },
            "id": 14624,
            "nodeType": "InheritanceSpecifier",
            "src": "1627:8:74"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 14620,
          "nodeType": "StructuredDocumentation",
          "src": "243:1290:74",
          "text": " @title Linear Long Short Pair Financial Product Library.\n @notice Adds settlement logic to create linear LSPs. The contract will payout a scaled amount of collateral\n depending on where the settlement price lands within a price range between an upperBound and a lowerBound. If\n settlement price is within the price range then the expiryPercentLong is defined by\n (expiryPrice - lowerBound) / (upperBound - lowerBound). This number represent the amount of collateral from the\n collateralPerPair that will be sent to the long and short side. If the price is higher than the upperBound then\n expiryPercentLong = 1. if the price is lower than the lower bound then expiryPercentLong = 0. For example, consider\n a linear LSP on the price of ETH collateralized in USDC with an upperBound = 4000 and lowerBound = 2000 with a\n collateralPerPair of 1000 (i.e each pair of long and shorts is worth 1000 USDC). At settlement the expiryPercentLong\n would equal 1 (each long worth 1000 and short worth 0) if ETH price was > 4000 and it would equal 0 if < 2000\n (each long is worthless and each short is worth 1000). If between the two (say 3500) then expiryPercentLong\n = (3500 - 2000) / (4000 - 2000) = 0.75. Therefore each long is worth 750 and each short is worth 250."
        },
        "fullyImplemented": true,
        "id": 14782,
        "linearizedBaseContracts": [
          14782,
          3720,
          14800
        ],
        "name": "LinearLongShortPairFinancialProductLibrary",
        "nameLocation": "1543:42:74",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 14628,
            "libraryName": {
              "id": 14625,
              "name": "FixedPoint",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3659,
              "src": "1648:10:74"
            },
            "nodeType": "UsingForDirective",
            "src": "1642:41:74",
            "typeName": {
              "id": 14627,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 14626,
                "name": "FixedPoint.Unsigned",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2045,
                "src": "1663:19:74"
              },
              "referencedDeclaration": 2045,
              "src": "1663:19:74",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Unsigned_$2045_storage_ptr",
                "typeString": "struct FixedPoint.Unsigned"
              }
            }
          },
          {
            "id": 14631,
            "libraryName": {
              "id": 14629,
              "name": "SignedSafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 44097,
              "src": "1694:14:74"
            },
            "nodeType": "UsingForDirective",
            "src": "1688:32:74",
            "typeName": {
              "id": 14630,
              "name": "int256",
              "nodeType": "ElementaryTypeName",
              "src": "1713:6:74",
              "typeDescriptions": {
                "typeIdentifier": "t_int256",
                "typeString": "int256"
              }
            }
          },
          {
            "canonicalName": "LinearLongShortPairFinancialProductLibrary.LinearLongShortPairParameters",
            "id": 14636,
            "members": [
              {
                "constant": false,
                "id": 14633,
                "mutability": "mutable",
                "name": "upperBound",
                "nameLocation": "1780:10:74",
                "nodeType": "VariableDeclaration",
                "scope": 14636,
                "src": "1773:17:74",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_int256",
                  "typeString": "int256"
                },
                "typeName": {
                  "id": 14632,
                  "name": "int256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1773:6:74",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14635,
                "mutability": "mutable",
                "name": "lowerBound",
                "nameLocation": "1807:10:74",
                "nodeType": "VariableDeclaration",
                "scope": 14636,
                "src": "1800:17:74",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_int256",
                  "typeString": "int256"
                },
                "typeName": {
                  "id": 14634,
                  "name": "int256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1800:6:74",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "LinearLongShortPairParameters",
            "nameLocation": "1733:29:74",
            "nodeType": "StructDefinition",
            "scope": 14782,
            "src": "1726:98:74",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9299cbed",
            "id": 14641,
            "mutability": "mutable",
            "name": "longShortPairParameters",
            "nameLocation": "1887:23:74",
            "nodeType": "VariableDeclaration",
            "scope": 14782,
            "src": "1830:80:74",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_LinearLongShortPairParameters_$14636_storage_$",
              "typeString": "mapping(address => struct LinearLongShortPairFinancialProductLibrary.LinearLongShortPairParameters)"
            },
            "typeName": {
              "id": 14640,
              "keyType": {
                "id": 14637,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1838:7:74",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1830:49:74",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_LinearLongShortPairParameters_$14636_storage_$",
                "typeString": "mapping(address => struct LinearLongShortPairFinancialProductLibrary.LinearLongShortPairParameters)"
              },
              "valueType": {
                "id": 14639,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 14638,
                  "name": "LinearLongShortPairParameters",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14636,
                  "src": "1849:29:74"
                },
                "referencedDeclaration": 14636,
                "src": "1849:29:74",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_LinearLongShortPairParameters_$14636_storage_ptr",
                  "typeString": "struct LinearLongShortPairFinancialProductLibrary.LinearLongShortPairParameters"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 14700,
              "nodeType": "Block",
              "src": "2860:529:74",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 14660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 14655,
                                  "name": "longShortPair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14644,
                                  "src": "2904:13:74",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 14654,
                                "name": "ExpiringContractInterface",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14792,
                                "src": "2878:25:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ExpiringContractInterface_$14792_$",
                                  "typeString": "type(contract ExpiringContractInterface)"
                                }
                              },
                              "id": 14656,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2878:40:74",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ExpiringContractInterface_$14792",
                                "typeString": "contract ExpiringContractInterface"
                              }
                            },
                            "id": 14657,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "expirationTimestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14791,
                            "src": "2878:60:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 14658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2878:62:74",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 14659,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2944:1:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2878:67:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964204c53502061646472657373",
                        "id": 14661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2947:21:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9c7a742eb98e20c17de092129b9e73fedab190e4a1e2e034f7e056503d041914",
                          "typeString": "literal_string \"Invalid LSP address\""
                        },
                        "value": "Invalid LSP address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9c7a742eb98e20c17de092129b9e73fedab190e4a1e2e034f7e056503d041914",
                          "typeString": "literal_string \"Invalid LSP address\""
                        }
                      ],
                      "id": 14653,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2870:7:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2870:99:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14663,
                  "nodeType": "ExpressionStatement",
                  "src": "2870:99:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "id": 14667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 14665,
                          "name": "upperBound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14646,
                          "src": "2987:10:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 14666,
                          "name": "lowerBound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14648,
                          "src": "3000:10:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "src": "2987:23:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420626f756e6473",
                        "id": 14668,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3012:16:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_247b4a8950cc859ed74b0ac5064161dde897ab929a9a949e360193cf1adc2f3a",
                          "typeString": "literal_string \"Invalid bounds\""
                        },
                        "value": "Invalid bounds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_247b4a8950cc859ed74b0ac5064161dde897ab929a9a949e360193cf1adc2f3a",
                          "typeString": "literal_string \"Invalid bounds\""
                        }
                      ],
                      "id": 14664,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2979:7:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14669,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2979:50:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14670,
                  "nodeType": "ExpressionStatement",
                  "src": "2979:50:74"
                },
                {
                  "assignments": [
                    14673
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14673,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "3077:6:74",
                      "nodeType": "VariableDeclaration",
                      "scope": 14700,
                      "src": "3040:43:74",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LinearLongShortPairParameters_$14636_memory_ptr",
                        "typeString": "struct LinearLongShortPairFinancialProductLibrary.LinearLongShortPairParameters"
                      },
                      "typeName": {
                        "id": 14672,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 14671,
                          "name": "LinearLongShortPairParameters",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14636,
                          "src": "3040:29:74"
                        },
                        "referencedDeclaration": 14636,
                        "src": "3040:29:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LinearLongShortPairParameters_$14636_storage_ptr",
                          "typeString": "struct LinearLongShortPairFinancialProductLibrary.LinearLongShortPairParameters"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14677,
                  "initialValue": {
                    "baseExpression": {
                      "id": 14674,
                      "name": "longShortPairParameters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14641,
                      "src": "3086:23:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_LinearLongShortPairParameters_$14636_storage_$",
                        "typeString": "mapping(address => struct LinearLongShortPairFinancialProductLibrary.LinearLongShortPairParameters storage ref)"
                      }
                    },
                    "id": 14676,
                    "indexExpression": {
                      "id": 14675,
                      "name": "longShortPair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14644,
                      "src": "3110:13:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3086:38:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LinearLongShortPairParameters_$14636_storage",
                      "typeString": "struct LinearLongShortPairFinancialProductLibrary.LinearLongShortPairParameters storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3040:84:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 14687,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "id": 14682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 14679,
                              "name": "params",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14673,
                              "src": "3142:6:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LinearLongShortPairParameters_$14636_memory_ptr",
                                "typeString": "struct LinearLongShortPairFinancialProductLibrary.LinearLongShortPairParameters memory"
                              }
                            },
                            "id": 14680,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "upperBound",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14633,
                            "src": "3142:17:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 14681,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3163:1:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3142:22:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "id": 14686,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 14683,
                              "name": "params",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14673,
                              "src": "3168:6:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LinearLongShortPairParameters_$14636_memory_ptr",
                                "typeString": "struct LinearLongShortPairFinancialProductLibrary.LinearLongShortPairParameters memory"
                              }
                            },
                            "id": 14684,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lowerBound",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14635,
                            "src": "3168:17:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 14685,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3189:1:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3168:22:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3142:48:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506172616d657465727320616c726561647920736574",
                        "id": 14688,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3192:24:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1c660ff5672050f49f4504349febd871d9a8af4dbd7a242ac305e556f78030ee",
                          "typeString": "literal_string \"Parameters already set\""
                        },
                        "value": "Parameters already set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1c660ff5672050f49f4504349febd871d9a8af4dbd7a242ac305e556f78030ee",
                          "typeString": "literal_string \"Parameters already set\""
                        }
                      ],
                      "id": 14678,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3134:7:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3134:83:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14690,
                  "nodeType": "ExpressionStatement",
                  "src": "3134:83:74"
                },
                {
                  "expression": {
                    "id": 14698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 14691,
                        "name": "longShortPairParameters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14641,
                        "src": "3228:23:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_LinearLongShortPairParameters_$14636_storage_$",
                          "typeString": "mapping(address => struct LinearLongShortPairFinancialProductLibrary.LinearLongShortPairParameters storage ref)"
                        }
                      },
                      "id": 14693,
                      "indexExpression": {
                        "id": 14692,
                        "name": "longShortPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14644,
                        "src": "3252:13:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3228:38:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LinearLongShortPairParameters_$14636_storage",
                        "typeString": "struct LinearLongShortPairFinancialProductLibrary.LinearLongShortPairParameters storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 14695,
                          "name": "upperBound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14646,
                          "src": "3325:10:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        {
                          "id": 14696,
                          "name": "lowerBound",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14648,
                          "src": "3361:10:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        ],
                        "id": 14694,
                        "name": "LinearLongShortPairParameters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14636,
                        "src": "3269:29:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_LinearLongShortPairParameters_$14636_storage_ptr_$",
                          "typeString": "type(struct LinearLongShortPairFinancialProductLibrary.LinearLongShortPairParameters storage pointer)"
                        }
                      },
                      "id": 14697,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "upperBound",
                        "lowerBound"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "3269:113:74",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LinearLongShortPairParameters_$14636_memory_ptr",
                        "typeString": "struct LinearLongShortPairFinancialProductLibrary.LinearLongShortPairParameters memory"
                      }
                    },
                    "src": "3228:154:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LinearLongShortPairParameters_$14636_storage",
                      "typeString": "struct LinearLongShortPairFinancialProductLibrary.LinearLongShortPairParameters storage ref"
                    }
                  },
                  "id": 14699,
                  "nodeType": "ExpressionStatement",
                  "src": "3228:154:74"
                }
              ]
            },
            "documentation": {
              "id": 14642,
              "nodeType": "StructuredDocumentation",
              "src": "1917:789:74",
              "text": " @notice Enables any address to set the parameters for an associated financial product.\n @param longShortPair address of the LSP contract.\n @param upperBound the upper price that the linear LSP will operate within.\n @param lowerBound the lower price that the linear LSP will operate within.\n @dev Note: a) Any address can set these parameters b) existing LSP parameters for address not set.\n c) upperBound > lowerBound.\n d) parameters can only be set once to prevent the deployer from changing the parameters after the fact.\n e) For safety, parameters should be set before depositing any synthetic tokens in a liquidity pool.\n f) longShortPair must expose an expirationTimestamp method to validate it is correctly deployed."
            },
            "functionSelector": "25110946",
            "id": 14701,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 14651,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14650,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3686,
                  "src": "2845:12:74"
                },
                "nodeType": "ModifierInvocation",
                "src": "2845:14:74"
              }
            ],
            "name": "setLongShortPairParameters",
            "nameLocation": "2720:26:74",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14649,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14644,
                  "mutability": "mutable",
                  "name": "longShortPair",
                  "nameLocation": "2764:13:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 14701,
                  "src": "2756:21:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14643,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2756:7:74",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14646,
                  "mutability": "mutable",
                  "name": "upperBound",
                  "nameLocation": "2794:10:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 14701,
                  "src": "2787:17:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 14645,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2787:6:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14648,
                  "mutability": "mutable",
                  "name": "lowerBound",
                  "nameLocation": "2821:10:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 14701,
                  "src": "2814:17:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 14647,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2814:6:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2746:91:74"
            },
            "returnParameters": {
              "id": 14652,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2860:0:74"
            },
            "scope": 14782,
            "src": "2711:678:74",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              14799
            ],
            "body": {
              "id": 14780,
              "nodeType": "Block",
              "src": "3929:724:74",
              "statements": [
                {
                  "assignments": [
                    14714
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14714,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "3976:6:74",
                      "nodeType": "VariableDeclaration",
                      "scope": 14780,
                      "src": "3939:43:74",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LinearLongShortPairParameters_$14636_memory_ptr",
                        "typeString": "struct LinearLongShortPairFinancialProductLibrary.LinearLongShortPairParameters"
                      },
                      "typeName": {
                        "id": 14713,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 14712,
                          "name": "LinearLongShortPairParameters",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14636,
                          "src": "3939:29:74"
                        },
                        "referencedDeclaration": 14636,
                        "src": "3939:29:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LinearLongShortPairParameters_$14636_storage_ptr",
                          "typeString": "struct LinearLongShortPairFinancialProductLibrary.LinearLongShortPairParameters"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14719,
                  "initialValue": {
                    "baseExpression": {
                      "id": 14715,
                      "name": "longShortPairParameters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14641,
                      "src": "3985:23:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_LinearLongShortPairParameters_$14636_storage_$",
                        "typeString": "mapping(address => struct LinearLongShortPairFinancialProductLibrary.LinearLongShortPairParameters storage ref)"
                      }
                    },
                    "id": 14718,
                    "indexExpression": {
                      "expression": {
                        "id": 14716,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "4009:3:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 14717,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "4009:10:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3985:35:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LinearLongShortPairParameters_$14636_storage",
                      "typeString": "struct LinearLongShortPairFinancialProductLibrary.LinearLongShortPairParameters storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3939:81:74"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 14729,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "id": 14724,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 14721,
                              "name": "params",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14714,
                              "src": "4038:6:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LinearLongShortPairParameters_$14636_memory_ptr",
                                "typeString": "struct LinearLongShortPairFinancialProductLibrary.LinearLongShortPairParameters memory"
                              }
                            },
                            "id": 14722,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "upperBound",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14633,
                            "src": "4038:17:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 14723,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4059:1:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4038:22:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          },
                          "id": 14728,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 14725,
                              "name": "params",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14714,
                              "src": "4064:6:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_LinearLongShortPairParameters_$14636_memory_ptr",
                                "typeString": "struct LinearLongShortPairFinancialProductLibrary.LinearLongShortPairParameters memory"
                              }
                            },
                            "id": 14726,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lowerBound",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14635,
                            "src": "4064:17:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 14727,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4085:1:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4064:22:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4038:48:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506172616d73206e6f742073657420666f722063616c6c696e67204c5350",
                        "id": 14730,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4088:32:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_68cc0dd0836e3d636c6d9a388054767b5f98741a714b83391a138d4c0cefe7d2",
                          "typeString": "literal_string \"Params not set for calling LSP\""
                        },
                        "value": "Params not set for calling LSP"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_68cc0dd0836e3d636c6d9a388054767b5f98741a714b83391a138d4c0cefe7d2",
                          "typeString": "literal_string \"Params not set for calling LSP\""
                        }
                      ],
                      "id": 14720,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4030:7:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4030:91:74",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14732,
                  "nodeType": "ExpressionStatement",
                  "src": "4030:91:74"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 14736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 14733,
                      "name": "expiryPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14704,
                      "src": "4136:11:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "expression": {
                        "id": 14734,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14714,
                        "src": "4151:6:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LinearLongShortPairParameters_$14636_memory_ptr",
                          "typeString": "struct LinearLongShortPairFinancialProductLibrary.LinearLongShortPairParameters memory"
                        }
                      },
                      "id": 14735,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "upperBound",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14633,
                      "src": "4151:17:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "4136:32:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 14743,
                  "nodeType": "IfStatement",
                  "src": "4132:84:74",
                  "trueBody": {
                    "expression": {
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 14739,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4205:1:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "expression": {
                            "id": 14737,
                            "name": "FixedPoint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3659,
                            "src": "4177:10:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_FixedPoint_$3659_$",
                              "typeString": "type(library FixedPoint)"
                            }
                          },
                          "id": 14738,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "fromUnscaledUint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2062,
                          "src": "4177:27:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_Unsigned_$2045_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (struct FixedPoint.Unsigned memory)"
                          }
                        },
                        "id": 14740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4177:30:74",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Unsigned_$2045_memory_ptr",
                          "typeString": "struct FixedPoint.Unsigned memory"
                        }
                      },
                      "id": 14741,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rawValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2044,
                      "src": "4177:39:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 14711,
                    "id": 14742,
                    "nodeType": "Return",
                    "src": "4170:46:74"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 14747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 14744,
                      "name": "expiryPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14704,
                      "src": "4231:11:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "expression": {
                        "id": 14745,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14714,
                        "src": "4246:6:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LinearLongShortPairParameters_$14636_memory_ptr",
                          "typeString": "struct LinearLongShortPairFinancialProductLibrary.LinearLongShortPairParameters memory"
                        }
                      },
                      "id": 14746,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "lowerBound",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14635,
                      "src": "4246:17:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "4231:32:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 14754,
                  "nodeType": "IfStatement",
                  "src": "4227:84:74",
                  "trueBody": {
                    "expression": {
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 14750,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4300:1:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "expression": {
                            "id": 14748,
                            "name": "FixedPoint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3659,
                            "src": "4272:10:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_FixedPoint_$3659_$",
                              "typeString": "type(library FixedPoint)"
                            }
                          },
                          "id": 14749,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "fromUnscaledUint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2062,
                          "src": "4272:27:74",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_Unsigned_$2045_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (struct FixedPoint.Unsigned memory)"
                          }
                        },
                        "id": 14751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4272:30:74",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Unsigned_$2045_memory_ptr",
                          "typeString": "struct FixedPoint.Unsigned memory"
                        }
                      },
                      "id": 14752,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rawValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2044,
                      "src": "4272:39:74",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 14711,
                    "id": 14753,
                    "nodeType": "Return",
                    "src": "4265:46:74"
                  }
                },
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  },
                                  "id": 14774,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 14770,
                                      "name": "params",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 14714,
                                      "src": "4580:6:74",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_LinearLongShortPairParameters_$14636_memory_ptr",
                                        "typeString": "struct LinearLongShortPairFinancialProductLibrary.LinearLongShortPairParameters memory"
                                      }
                                    },
                                    "id": 14771,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "upperBound",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 14633,
                                    "src": "4580:17:74",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 14772,
                                      "name": "params",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 14714,
                                      "src": "4600:6:74",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_LinearLongShortPairParameters_$14636_memory_ptr",
                                        "typeString": "struct LinearLongShortPairFinancialProductLibrary.LinearLongShortPairParameters memory"
                                      }
                                    },
                                    "id": 14773,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "lowerBound",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 14635,
                                    "src": "4600:17:74",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  },
                                  "src": "4580:37:74",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                ],
                                "id": 14769,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4572:7:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 14768,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4572:7:74",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 14775,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4572:46:74",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 14766,
                              "name": "FixedPoint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3659,
                              "src": "4552:10:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_FixedPoint_$3659_$",
                                "typeString": "type(library FixedPoint)"
                              }
                            },
                            "id": 14767,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Unsigned",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2045,
                            "src": "4552:19:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Unsigned_$2045_storage_ptr_$",
                              "typeString": "type(struct FixedPoint.Unsigned storage pointer)"
                            }
                          },
                          "id": 14776,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4552:67:74",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Unsigned_$2045_memory_ptr",
                            "typeString": "struct FixedPoint.Unsigned memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Unsigned_$2045_memory_ptr",
                            "typeString": "struct FixedPoint.Unsigned memory"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  },
                                  "id": 14762,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 14759,
                                    "name": "expiryPrice",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 14704,
                                    "src": "4497:11:74",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 14760,
                                      "name": "params",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 14714,
                                      "src": "4511:6:74",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_LinearLongShortPairParameters_$14636_memory_ptr",
                                        "typeString": "struct LinearLongShortPairFinancialProductLibrary.LinearLongShortPairParameters memory"
                                      }
                                    },
                                    "id": 14761,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "lowerBound",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 14635,
                                    "src": "4511:17:74",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  },
                                  "src": "4497:31:74",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  }
                                ],
                                "id": 14758,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4489:7:74",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 14757,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4489:7:74",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 14763,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4489:40:74",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 14755,
                              "name": "FixedPoint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3659,
                              "src": "4452:10:74",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_FixedPoint_$3659_$",
                                "typeString": "type(library FixedPoint)"
                              }
                            },
                            "id": 14756,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Unsigned",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2045,
                            "src": "4452:36:74",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Unsigned_$2045_storage_ptr_$",
                              "typeString": "type(struct FixedPoint.Unsigned storage pointer)"
                            }
                          },
                          "id": 14764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4452:78:74",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Unsigned_$2045_memory_ptr",
                            "typeString": "struct FixedPoint.Unsigned memory"
                          }
                        },
                        "id": 14765,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2635,
                        "src": "4452:99:74",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_struct$_Unsigned_$2045_memory_ptr_$_t_struct$_Unsigned_$2045_memory_ptr_$returns$_t_struct$_Unsigned_$2045_memory_ptr_$bound_to$_t_struct$_Unsigned_$2045_memory_ptr_$",
                          "typeString": "function (struct FixedPoint.Unsigned memory,struct FixedPoint.Unsigned memory) pure returns (struct FixedPoint.Unsigned memory)"
                        }
                      },
                      "id": 14777,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4452:168:74",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Unsigned_$2045_memory_ptr",
                        "typeString": "struct FixedPoint.Unsigned memory"
                      }
                    },
                    "id": 14778,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "rawValue",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 2044,
                    "src": "4452:194:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 14711,
                  "id": 14779,
                  "nodeType": "Return",
                  "src": "4433:213:74"
                }
              ]
            },
            "documentation": {
              "id": 14702,
              "nodeType": "StructuredDocumentation",
              "src": "3395:365:74",
              "text": " @notice Returns a number between 0 and 1e18 to indicate how much collateral each long and short token is entitled\n to per collateralPerPair.\n @param expiryPrice price from the optimistic oracle for the LSP price identifier.\n @return expiryPercentLong to indicate how much collateral should be sent between long and short tokens."
            },
            "functionSelector": "2da52361",
            "id": 14781,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 14708,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14707,
                  "name": "nonReentrantView",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3694,
                  "src": "3880:16:74"
                },
                "nodeType": "ModifierInvocation",
                "src": "3880:18:74"
              }
            ],
            "name": "percentageLongCollateralAtExpiry",
            "nameLocation": "3774:32:74",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 14706,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3863:8:74"
            },
            "parameters": {
              "id": 14705,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14704,
                  "mutability": "mutable",
                  "name": "expiryPrice",
                  "nameLocation": "3814:11:74",
                  "nodeType": "VariableDeclaration",
                  "scope": 14781,
                  "src": "3807:18:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 14703,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3807:6:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3806:20:74"
            },
            "returnParameters": {
              "id": 14711,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14710,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14781,
                  "src": "3916:7:74",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14709,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3916:7:74",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3915:9:74"
            },
            "scope": 14782,
            "src": "3765:888:74",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 14783,
        "src": "1534:3121:74",
        "usedErrors": []
      }
    ],
    "src": "42:4614:74"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {
    "1": {
      "events": {},
      "links": {},
      "address": "0x488211B646b909C490d942f456481BeAE52fde27",
      "transactionHash": ""
    },
    "42": {
      "events": {},
      "links": {},
      "address": "0x3EE1EA84ad75913E02B341FE09630bAedca0658D",
      "transactionHash": ""
    },
    "137": {
      "events": {},
      "links": {},
      "address": "0xcFF28e9E83cEc1BCa8D8619dC7eA60244b433502",
      "transactionHash": ""
    },
    "80001": {
      "events": {},
      "links": {},
      "address": "0xC7B7029373f504949553106c9eb2dAfDd48eF086",
      "transactionHash": ""
    },
    "31337": {
      "events": {},
      "links": {},
      "address" : "0x488211B646b909C490d942f456481BeAE52fde27",
      "transactionHash": ""
    }
  },
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-07-16T20:27:09.758Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "percentageLongCollateralAtExpiry(int256)": {
        "params": {
          "expiryPrice": "price from the optimistic oracle for the LSP price identifier."
        },
        "returns": {
          "_0": "expiryPercentLong to indicate how much collateral should be sent between long and short tokens."
        }
      },
      "setLongShortPairParameters(address,int256,int256)": {
        "details": "Note: a) Any address can set these parameters b) existing LSP parameters for address not set. c) upperBound > lowerBound. d) parameters can only be set once to prevent the deployer from changing the parameters after the fact. e) For safety, parameters should be set before depositing any synthetic tokens in a liquidity pool. f) longShortPair must expose an expirationTimestamp method to validate it is correctly deployed.",
        "params": {
          "longShortPair": "address of the LSP contract.",
          "lowerBound": "the lower price that the linear LSP will operate within.",
          "upperBound": "the upper price that the linear LSP will operate within."
        }
      }
    },
    "title": "Linear Long Short Pair Financial Product Library.",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "percentageLongCollateralAtExpiry(int256)": {
        "notice": "Returns a number between 0 and 1e18 to indicate how much collateral each long and short token is entitled to per collateralPerPair."
      },
      "setLongShortPairParameters(address,int256,int256)": {
        "notice": "Enables any address to set the parameters for an associated financial product."
      }
    },
    "notice": "Adds settlement logic to create linear LSPs. The contract will payout a scaled amount of collateral depending on where the settlement price lands within a price range between an upperBound and a lowerBound. If settlement price is within the price range then the expiryPercentLong is defined by (expiryPrice - lowerBound) / (upperBound - lowerBound). This number represent the amount of collateral from the collateralPerPair that will be sent to the long and short side. If the price is higher than the upperBound then expiryPercentLong = 1. if the price is lower than the lower bound then expiryPercentLong = 0. For example, consider a linear LSP on the price of ETH collateralized in USDC with an upperBound = 4000 and lowerBound = 2000 with a collateralPerPair of 1000 (i.e each pair of long and shorts is worth 1000 USDC). At settlement the expiryPercentLong would equal 1 (each long worth 1000 and short worth 0) if ETH price was > 4000 and it would equal 0 if < 2000 (each long is worthless and each short is worth 1000). If between the two (say 3500) then expiryPercentLong = (3500 - 2000) / (4000 - 2000) = 0.75. Therefore each long is worth 750 and each short is worth 250.",
    "version": 1
  }
}
