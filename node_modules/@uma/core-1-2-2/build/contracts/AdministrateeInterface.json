{
  "contractName": "AdministrateeInterface",
  "abi": [
    {
      "inputs": [],
      "name": "emergencyShutdown",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "remargin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pfc",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"emergencyShutdown\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pfc\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"remargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"pfc()\":{\"details\":\"This is equivalent to the collateral pool available from which to pay fees. Therefore, derived contracts are expected to implement this so that pay-fee methods can correctly compute the owed fees as a % of PfC.\",\"returns\":{\"_0\":\"pfc value for equal to the current profit from corruption denominated in collateral currency.\"}},\"remargin()\":{\"details\":\"It pays fees and moves money between margin accounts to make sure they reflect the NAV of the contract.\"}},\"title\":\"Interface that all financial contracts expose to the admin.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"emergencyShutdown()\":{\"notice\":\"Initiates the shutdown process, in case of an emergency.\"},\"pfc()\":{\"notice\":\"Gets the current profit from corruption for this contract in terms of the collateral currency.\"},\"remargin()\":{\"notice\":\"A core contract method called independently or as a part of other financial contract transactions.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/chris/temp/protocol/packages/core/contracts/oracle/interfaces/AdministrateeInterface.sol\":\"AdministrateeInterface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":199},\"remappings\":[]},\"sources\":{\"/Users/chris/temp/protocol/packages/core/contracts/common/implementation/FixedPoint.sol\":{\"keccak256\":\"0x15636c4d1914553c95712ef01d59e73a2ce6efacbe1a20bab8a513d5897cf96d\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://8b942ab427bf0c45a3d5b3701a8c509fcf01f2aa0ec525fc74f7f01a2aaa18cf\",\"dweb:/ipfs/QmPoSCBrBUQTiaKR6baSYchK863Lu7RY6gqMPEeUbwsgQV\"]},\"/Users/chris/temp/protocol/packages/core/contracts/oracle/interfaces/AdministrateeInterface.sol\":{\"keccak256\":\"0x7d8ea8237206ab15d984ab08a9af9facefd46799a053b94a8937dfe88b66a044\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://e6f456171b754253b66558d35597377631658b1a8c72189f854b7111567a3d33\",\"dweb:/ipfs/QmW7yfuXjUMp8TfKFYP62uscJJHqt9g42Ff1FthivQACoJ\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x04d34b3cd5677bea25f8dfceb6dec0eaa071d4d4b789a43f13fe0c415ba4c296\",\"urls\":[\"bzz-raw://e7e8b526a6839e5ba14f0d23a830387fec47f7043ce01d42c9f285b709a9d080\",\"dweb:/ipfs/QmXmhhFmX5gcAvVzNiDPAGA35iHMPNaYtQkACswRHBVTNw\"]},\"@openzeppelin/contracts/math/SignedSafeMath.sol\":{\"keccak256\":\"0xfadc24a31d75d6b3f955190cffe13bbe6e24a274c12b2b60e8c4004131487ce8\",\"urls\":[\"bzz-raw://0ec35367d49b2ea45f556a439f836e208d2460faeb6e2341e9130d163128b619\",\"dweb:/ipfs/QmTwKCBdkVAarY5hteSdwQ1J4GpogZoxCZHrbieMQVzuQJ\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity ^0.6.0;\npragma experimental ABIEncoderV2;\n\nimport \"../../common/implementation/FixedPoint.sol\";\n\n/**\n * @title Interface that all financial contracts expose to the admin.\n */\ninterface AdministrateeInterface {\n    /**\n     * @notice Initiates the shutdown process, in case of an emergency.\n     */\n    function emergencyShutdown() external;\n\n    /**\n     * @notice A core contract method called independently or as a part of other financial contract transactions.\n     * @dev It pays fees and moves money between margin accounts to make sure they reflect the NAV of the contract.\n     */\n    function remargin() external;\n\n    /**\n     * @notice Gets the current profit from corruption for this contract in terms of the collateral currency.\n     * @dev This is equivalent to the collateral pool available from which to pay fees. Therefore, derived contracts are\n     * expected to implement this so that pay-fee methods can correctly compute the owed fees as a % of PfC.\n     * @return pfc value for equal to the current profit from corruption denominated in collateral currency.\n     */\n    function pfc() external view returns (FixedPoint.Unsigned memory);\n}\n",
  "sourcePath": "/Users/chris/temp/protocol/packages/core/contracts/oracle/interfaces/AdministrateeInterface.sol",
  "ast": {
    "absolutePath": "/Users/chris/temp/protocol/packages/core/contracts/oracle/interfaces/AdministrateeInterface.sol",
    "exportedSymbols": {
      "AdministrateeInterface": [
        21136
      ]
    },
    "id": 21137,
    "license": "AGPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 21118,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:23:75"
      },
      {
        "id": 21119,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "66:33:75"
      },
      {
        "absolutePath": "/Users/chris/temp/protocol/packages/core/contracts/common/implementation/FixedPoint.sol",
        "file": "../../common/implementation/FixedPoint.sol",
        "id": 21120,
        "nodeType": "ImportDirective",
        "scope": 21137,
        "sourceUnit": 1958,
        "src": "101:52:75",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 21121,
          "nodeType": "StructuredDocumentation",
          "src": "155:77:75",
          "text": " @title Interface that all financial contracts expose to the admin."
        },
        "fullyImplemented": false,
        "id": 21136,
        "linearizedBaseContracts": [
          21136
        ],
        "name": "AdministrateeInterface",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": {
              "id": 21122,
              "nodeType": "StructuredDocumentation",
              "src": "272:83:75",
              "text": " @notice Initiates the shutdown process, in case of an emergency."
            },
            "functionSelector": "3403c2fc",
            "id": 21125,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "emergencyShutdown",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 21123,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "386:2:75"
            },
            "returnParameters": {
              "id": 21124,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "397:0:75"
            },
            "scope": 21136,
            "src": "360:38:75",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 21126,
              "nodeType": "StructuredDocumentation",
              "src": "404:241:75",
              "text": " @notice A core contract method called independently or as a part of other financial contract transactions.\n @dev It pays fees and moves money between margin accounts to make sure they reflect the NAV of the contract."
            },
            "functionSelector": "bda02e77",
            "id": 21129,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "remargin",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 21127,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "667:2:75"
            },
            "returnParameters": {
              "id": 21128,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "678:0:75"
            },
            "scope": 21136,
            "src": "650:29:75",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 21130,
              "nodeType": "StructuredDocumentation",
              "src": "685:460:75",
              "text": " @notice Gets the current profit from corruption for this contract in terms of the collateral currency.\n @dev This is equivalent to the collateral pool available from which to pay fees. Therefore, derived contracts are\n expected to implement this so that pay-fee methods can correctly compute the owed fees as a % of PfC.\n @return pfc value for equal to the current profit from corruption denominated in collateral currency."
            },
            "functionSelector": "81a10ae1",
            "id": 21135,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "pfc",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 21131,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1162:2:75"
            },
            "returnParameters": {
              "id": 21134,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21133,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21135,
                  "src": "1188:26:75",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Unsigned_$471_memory_ptr",
                    "typeString": "struct FixedPoint.Unsigned"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 21132,
                    "name": "FixedPoint.Unsigned",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 471,
                    "src": "1188:19:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Unsigned_$471_storage_ptr",
                      "typeString": "struct FixedPoint.Unsigned"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1187:28:75"
            },
            "scope": 21136,
            "src": "1150:66:75",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 21137,
        "src": "233:985:75"
      }
    ],
    "src": "42:1177:75"
  },
  "legacyAST": {
    "absolutePath": "/Users/chris/temp/protocol/packages/core/contracts/oracle/interfaces/AdministrateeInterface.sol",
    "exportedSymbols": {
      "AdministrateeInterface": [
        21136
      ]
    },
    "id": 21137,
    "license": "AGPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 21118,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:23:75"
      },
      {
        "id": 21119,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "66:33:75"
      },
      {
        "absolutePath": "/Users/chris/temp/protocol/packages/core/contracts/common/implementation/FixedPoint.sol",
        "file": "../../common/implementation/FixedPoint.sol",
        "id": 21120,
        "nodeType": "ImportDirective",
        "scope": 21137,
        "sourceUnit": 1958,
        "src": "101:52:75",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 21121,
          "nodeType": "StructuredDocumentation",
          "src": "155:77:75",
          "text": " @title Interface that all financial contracts expose to the admin."
        },
        "fullyImplemented": false,
        "id": 21136,
        "linearizedBaseContracts": [
          21136
        ],
        "name": "AdministrateeInterface",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": {
              "id": 21122,
              "nodeType": "StructuredDocumentation",
              "src": "272:83:75",
              "text": " @notice Initiates the shutdown process, in case of an emergency."
            },
            "functionSelector": "3403c2fc",
            "id": 21125,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "emergencyShutdown",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 21123,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "386:2:75"
            },
            "returnParameters": {
              "id": 21124,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "397:0:75"
            },
            "scope": 21136,
            "src": "360:38:75",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 21126,
              "nodeType": "StructuredDocumentation",
              "src": "404:241:75",
              "text": " @notice A core contract method called independently or as a part of other financial contract transactions.\n @dev It pays fees and moves money between margin accounts to make sure they reflect the NAV of the contract."
            },
            "functionSelector": "bda02e77",
            "id": 21129,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "remargin",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 21127,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "667:2:75"
            },
            "returnParameters": {
              "id": 21128,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "678:0:75"
            },
            "scope": 21136,
            "src": "650:29:75",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 21130,
              "nodeType": "StructuredDocumentation",
              "src": "685:460:75",
              "text": " @notice Gets the current profit from corruption for this contract in terms of the collateral currency.\n @dev This is equivalent to the collateral pool available from which to pay fees. Therefore, derived contracts are\n expected to implement this so that pay-fee methods can correctly compute the owed fees as a % of PfC.\n @return pfc value for equal to the current profit from corruption denominated in collateral currency."
            },
            "functionSelector": "81a10ae1",
            "id": 21135,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "pfc",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 21131,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1162:2:75"
            },
            "returnParameters": {
              "id": 21134,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21133,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 21135,
                  "src": "1188:26:75",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Unsigned_$471_memory_ptr",
                    "typeString": "struct FixedPoint.Unsigned"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 21132,
                    "name": "FixedPoint.Unsigned",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 471,
                    "src": "1188:19:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Unsigned_$471_storage_ptr",
                      "typeString": "struct FixedPoint.Unsigned"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1187:28:75"
            },
            "scope": 21136,
            "src": "1150:66:75",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 21137,
        "src": "233:985:75"
      }
    ],
    "src": "42:1177:75"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2020-12-21T06:57:53.507Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "pfc()": {
        "details": "This is equivalent to the collateral pool available from which to pay fees. Therefore, derived contracts are expected to implement this so that pay-fee methods can correctly compute the owed fees as a % of PfC.",
        "returns": {
          "_0": "pfc value for equal to the current profit from corruption denominated in collateral currency."
        }
      },
      "remargin()": {
        "details": "It pays fees and moves money between margin accounts to make sure they reflect the NAV of the contract."
      }
    },
    "title": "Interface that all financial contracts expose to the admin.",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "emergencyShutdown()": {
        "notice": "Initiates the shutdown process, in case of an emergency."
      },
      "pfc()": {
        "notice": "Gets the current profit from corruption for this contract in terms of the collateral currency."
      },
      "remargin()": {
        "notice": "A core contract method called independently or as a part of other financial contract transactions."
      }
    },
    "version": 1
  }
}