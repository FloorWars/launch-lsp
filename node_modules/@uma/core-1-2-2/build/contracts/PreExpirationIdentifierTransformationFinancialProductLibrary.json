{
  "contractName": "PreExpirationIdentifierTransformationFinancialProductLibrary",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "oraclePrice",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "collateralRequirement",
          "type": "tuple"
        }
      ],
      "name": "transformCollateralRequirement",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "oraclePrice",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "requestTime",
          "type": "uint256"
        }
      ],
      "name": "transformPrice",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "financialProduct",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "transformedIdentifier",
          "type": "bytes32"
        }
      ],
      "name": "setFinancialProductTransformedIdentifier",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "financialProduct",
          "type": "address"
        }
      ],
      "name": "getTransformedIdentifierForFinancialProduct",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "requestTime",
          "type": "uint256"
        }
      ],
      "name": "transformPriceIdentifier",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"financialProduct\",\"type\":\"address\"}],\"name\":\"getTransformedIdentifierForFinancialProduct\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"financialProduct\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"transformedIdentifier\",\"type\":\"bytes32\"}],\"name\":\"setFinancialProductTransformedIdentifier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"oraclePrice\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"collateralRequirement\",\"type\":\"tuple\"}],\"name\":\"transformCollateralRequirement\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"oraclePrice\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"requestTime\",\"type\":\"uint256\"}],\"name\":\"transformPrice\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"requestTime\",\"type\":\"uint256\"}],\"name\":\"transformPriceIdentifier\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getTransformedIdentifierForFinancialProduct(address)\":{\"params\":{\"financialProduct\":\"address of the financial product.\"},\"returns\":{\"_0\":\"transformed identifier for the associated financial product.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setFinancialProductTransformedIdentifier(address,bytes32)\":{\"details\":\"Note: a) Only the owner (deployer) of this library can set identifier transformations b) The identifier Cant be set to blank. c) A transformed price can only be set once to prevent the deployer from changing it after the fact. d)  financialProduct must exposes an expirationTimestamp method.\",\"params\":{\"financialProduct\":\"address of the financial product.\",\"transformedIdentifier\":\"the identifier for the financial product to be used if the contract is post expiration.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"transformCollateralRequirement((uint256),(uint256))\":{\"params\":{\"collateralRequirement\":\"input collateral requirement to be transformed.\",\"oraclePrice\":\"input price returned by DVM used to transform the collateral requirement.\"},\"returns\":{\"_0\":\"transformedCollateralRequirement input collateral requirement with the transformation function applied.\"}},\"transformPrice((uint256),uint256)\":{\"params\":{\"oraclePrice\":\"input price returned by the DVM to be transformed.\",\"requestTime\":\"timestamp the oraclePrice was requested at.\"},\"returns\":{\"_0\":\"transformedPrice input oraclePrice with the transformation function applied.\"}},\"transformPriceIdentifier(bytes32,uint256)\":{\"params\":{\"identifier\":\"input price identifier to be transformed.\",\"requestTime\":\"timestamp the identifier is to be used at.\"},\"returns\":{\"_0\":\"transformedPriceIdentifier the input price identifier with the transformation logic applied to it.\"}}},\"title\":\"Pre-Expiration Identifier Transformation Financial Product Library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getTransformedIdentifierForFinancialProduct(address)\":{\"notice\":\"Returns the transformed identifier associated with a given financial product address.\"},\"setFinancialProductTransformedIdentifier(address,bytes32)\":{\"notice\":\"Enables the deployer of the library to set the transformed identifier for an associated financial product.\"},\"transformCollateralRequirement((uint256),(uint256))\":{\"notice\":\"Transforms a given collateral requirement using the financial product libraries transformation logic.\"},\"transformPrice((uint256),uint256)\":{\"notice\":\"Transforms a given oracle price using the financial product libraries transformation logic.\"},\"transformPriceIdentifier(bytes32,uint256)\":{\"notice\":\"Returns a transformed price identifier if the contract is pre-expiration and no transformation if post.\"}},\"notice\":\"Adds custom identifier transformation to enable a financial contract to use two different identifiers, depending on when a price request is made. If the request is made before expiration than a transformation is made to the identifier & if it is at or after expiration then the original identifier is returned. This library enables self referential TWAP identifier to be used on synthetics pre-expiration, in conjunction with a separate identifier at expiration.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/chris/temp/protocol/packages/core/contracts/financial-templates/common/financial-product-libraries/PreExpirationIdentifierTransformationFinancialProductLibrary.sol\":\"PreExpirationIdentifierTransformationFinancialProductLibrary\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":199},\"remappings\":[]},\"sources\":{\"/Users/chris/temp/protocol/packages/core/contracts/common/implementation/FixedPoint.sol\":{\"keccak256\":\"0x15636c4d1914553c95712ef01d59e73a2ce6efacbe1a20bab8a513d5897cf96d\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://8b942ab427bf0c45a3d5b3701a8c509fcf01f2aa0ec525fc74f7f01a2aaa18cf\",\"dweb:/ipfs/QmPoSCBrBUQTiaKR6baSYchK863Lu7RY6gqMPEeUbwsgQV\"]},\"/Users/chris/temp/protocol/packages/core/contracts/common/implementation/Lockable.sol\":{\"keccak256\":\"0xe766fe78267c8f589f9510a6e258b69287ed455c18d6b3f393d8e9d96f2d71cf\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://2e78bb200ecd01e863bfd57583941561f09993f902b83aa5d362387746578209\",\"dweb:/ipfs/QmNX2pLdH4p4HtJTKqSY4LwenRUPwJKa22ZSF2yc3cTMq4\"]},\"/Users/chris/temp/protocol/packages/core/contracts/financial-templates/common/financial-product-libraries/FinancialProductLibrary.sol\":{\"keccak256\":\"0xe98a57be3faff7006a751112beb72add5d554322672c04438d1c8faa6e221870\",\"urls\":[\"bzz-raw://4e8dbfe62773ba2414b68d7a876f6f6ed484ac379b043283859edc8c0c0ecb18\",\"dweb:/ipfs/QmX4UDK9T7qeTjcMMgJvkhrKW7urqVLzM6H3HSTfjyHy6g\"]},\"/Users/chris/temp/protocol/packages/core/contracts/financial-templates/common/financial-product-libraries/PreExpirationIdentifierTransformationFinancialProductLibrary.sol\":{\"keccak256\":\"0x471161e4ab3921a105c41ff6da979c1f6a731255e1a0762332aafa80f8ed8b7a\",\"urls\":[\"bzz-raw://86bb46ef8984d38d7ba028cfd4928b78929ce22c69a2cad8bef22f7ba74cfac8\",\"dweb:/ipfs/QmeajvsAkA3B1cupgxJWUrBgs65fBUACKbkJbYpHdtCNZv\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x0de74dfa6b37943c1b834cbd8fb7a8d052e5ff80c7adb33692102dd6cd2985e9\",\"urls\":[\"bzz-raw://9d2d827fcf4a838f5821732c0acd6a40d21c2a5a2cfe2563feec91465f47bb60\",\"dweb:/ipfs/Qmex3wMKf5Sghbfvr288RUg1kP2uAyTMf11w83WbMbpQQc\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x9a8c691b81a4a48adbbd5b010faa56a168c189e711495c16347d93b60b805f82\",\"urls\":[\"bzz-raw://d951d626ed7bfe1a2d7a6bd4af315ff8691929bd567594d6ab53599fe9e17e4e\",\"dweb:/ipfs/QmYkGeowpa6Bjr9aaDirWdDo7hSfShzzZhanKC4nTfRhLj\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x04d34b3cd5677bea25f8dfceb6dec0eaa071d4d4b789a43f13fe0c415ba4c296\",\"urls\":[\"bzz-raw://e7e8b526a6839e5ba14f0d23a830387fec47f7043ce01d42c9f285b709a9d080\",\"dweb:/ipfs/QmXmhhFmX5gcAvVzNiDPAGA35iHMPNaYtQkACswRHBVTNw\"]},\"@openzeppelin/contracts/math/SignedSafeMath.sol\":{\"keccak256\":\"0xfadc24a31d75d6b3f955190cffe13bbe6e24a274c12b2b60e8c4004131487ce8\",\"urls\":[\"bzz-raw://0ec35367d49b2ea45f556a439f836e208d2460faeb6e2341e9130d163128b619\",\"dweb:/ipfs/QmTwKCBdkVAarY5hteSdwQ1J4GpogZoxCZHrbieMQVzuQJ\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50600061001b61007d565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506000805460ff60a01b1916600160a01b179055610081565b3390565b610859806100906000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100e6578063bc2ac858146100fb578063f19371b71461011b578063f2fde38b1461012e57610088565b80630ff49b901461008d57806316bed30e146100b65780632a312637146100cb578063715018a6146100de575b600080fd5b6100a061009b366004610645565b610141565b6040516100ad9190610819565b60405180910390f35b6100c96100c43660046105c6565b610152565b005b6100a06100d9366004610611565b6102a7565b6100c96102b5565b6100ee610334565b6040516100ad9190610679565b61010e6101093660046105a4565b610343565b6040516100ad919061068d565b61010e6101293660046105f0565b610369565b6100c961013c3660046105a4565b610434565b61014961053d565b50815b92915050565b61015a6104ea565b6000546001600160a01b039081169116146101905760405162461bcd60e51b815260040161018790610776565b60405180910390fd5b6101986104ee565b6101a0610519565b806101bd5760405162461bcd60e51b815260040161018790610741565b6001600160a01b038216600090815260016020526040902054156101f35760405162461bcd60e51b81526004016101879061070a565b816001600160a01b0316639f43ddd26040518163ffffffff1660e01b815260040160206040518083038186803b15801561022c57600080fd5b505afa158015610240573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102649190610661565b6102805760405162461bcd60e51b8152600401610187906106dc565b6001600160a01b03821660009081526001602052604090208190556102a3610528565b5050565b6102af61053d565b50919050565b6102bd6104ea565b6000546001600160a01b039081169116146102ea5760405162461bcd60e51b815260040161018790610776565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b600061034d6104ee565b506001600160a01b031660009081526001602052604090205490565b60006103736104ee565b3360009081526001602052604090205461039f5760405162461bcd60e51b8152600401610187906107ab565b336001600160a01b0316639f43ddd26040518163ffffffff1660e01b815260040160206040518083038186803b1580156103d857600080fd5b505afa1580156103ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104109190610661565b82101561042d57503360009081526001602052604090205461014c565b508161014c565b61043c6104ea565b6000546001600160a01b039081169116146104695760405162461bcd60e51b815260040161018790610776565b6001600160a01b03811661048f5760405162461bcd60e51b815260040161018790610696565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b600054600160a01b900460ff166105175760405162461bcd60e51b8152600401610187906107e2565b565b6000805460ff60a01b19169055565b6000805460ff60a01b1916600160a01b179055565b6040518060200160405280600081525090565b80356001600160a01b038116811461014c57600080fd5b600060208284031215610578578081fd5b6040516020810181811067ffffffffffffffff82111715610597578283fd5b6040529135825250919050565b6000602082840312156105b5578081fd5b6105bf8383610550565b9392505050565b600080604083850312156105d8578081fd5b6105e28484610550565b946020939093013593505050565b60008060408385031215610602578182fd5b50508035926020909101359150565b60008060408385031215610623578182fd5b61062d8484610567565b915061063c8460208501610567565b90509250929050565b60008060408385031215610657578182fd5b6105e28484610567565b600060208284031215610672578081fd5b5051919050565b6001600160a01b0391909116815260200190565b90815260200190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b602080825260149082015273125b9d985b1a59081153540818dbdb9d1c9858dd60621b604082015260600190565b6020808252601a908201527f5472616e73666f726d6174696f6e20616c726561647920736574000000000000604082015260600190565b6020808252818101527f43616e742073657420746f20656d707479207472616e73666f726d6174696f6e604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601c908201527f43616c6c657220686173206e6f207472616e73666f726d6174696f6e00000000604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b905181526020019056fea2646970667358221220ca5f04933ea531dfec22169189a34e88345ea74a94db4aa7055cf1206116d4ff64736f6c634300060c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100e6578063bc2ac858146100fb578063f19371b71461011b578063f2fde38b1461012e57610088565b80630ff49b901461008d57806316bed30e146100b65780632a312637146100cb578063715018a6146100de575b600080fd5b6100a061009b366004610645565b610141565b6040516100ad9190610819565b60405180910390f35b6100c96100c43660046105c6565b610152565b005b6100a06100d9366004610611565b6102a7565b6100c96102b5565b6100ee610334565b6040516100ad9190610679565b61010e6101093660046105a4565b610343565b6040516100ad919061068d565b61010e6101293660046105f0565b610369565b6100c961013c3660046105a4565b610434565b61014961053d565b50815b92915050565b61015a6104ea565b6000546001600160a01b039081169116146101905760405162461bcd60e51b815260040161018790610776565b60405180910390fd5b6101986104ee565b6101a0610519565b806101bd5760405162461bcd60e51b815260040161018790610741565b6001600160a01b038216600090815260016020526040902054156101f35760405162461bcd60e51b81526004016101879061070a565b816001600160a01b0316639f43ddd26040518163ffffffff1660e01b815260040160206040518083038186803b15801561022c57600080fd5b505afa158015610240573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102649190610661565b6102805760405162461bcd60e51b8152600401610187906106dc565b6001600160a01b03821660009081526001602052604090208190556102a3610528565b5050565b6102af61053d565b50919050565b6102bd6104ea565b6000546001600160a01b039081169116146102ea5760405162461bcd60e51b815260040161018790610776565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031690565b600061034d6104ee565b506001600160a01b031660009081526001602052604090205490565b60006103736104ee565b3360009081526001602052604090205461039f5760405162461bcd60e51b8152600401610187906107ab565b336001600160a01b0316639f43ddd26040518163ffffffff1660e01b815260040160206040518083038186803b1580156103d857600080fd5b505afa1580156103ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104109190610661565b82101561042d57503360009081526001602052604090205461014c565b508161014c565b61043c6104ea565b6000546001600160a01b039081169116146104695760405162461bcd60e51b815260040161018790610776565b6001600160a01b03811661048f5760405162461bcd60e51b815260040161018790610696565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b3390565b600054600160a01b900460ff166105175760405162461bcd60e51b8152600401610187906107e2565b565b6000805460ff60a01b19169055565b6000805460ff60a01b1916600160a01b179055565b6040518060200160405280600081525090565b80356001600160a01b038116811461014c57600080fd5b600060208284031215610578578081fd5b6040516020810181811067ffffffffffffffff82111715610597578283fd5b6040529135825250919050565b6000602082840312156105b5578081fd5b6105bf8383610550565b9392505050565b600080604083850312156105d8578081fd5b6105e28484610550565b946020939093013593505050565b60008060408385031215610602578182fd5b50508035926020909101359150565b60008060408385031215610623578182fd5b61062d8484610567565b915061063c8460208501610567565b90509250929050565b60008060408385031215610657578182fd5b6105e28484610567565b600060208284031215610672578081fd5b5051919050565b6001600160a01b0391909116815260200190565b90815260200190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b602080825260149082015273125b9d985b1a59081153540818dbdb9d1c9858dd60621b604082015260600190565b6020808252601a908201527f5472616e73666f726d6174696f6e20616c726561647920736574000000000000604082015260600190565b6020808252818101527f43616e742073657420746f20656d707479207472616e73666f726d6174696f6e604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601c908201527f43616c6c657220686173206e6f207472616e73666f726d6174696f6e00000000604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b905181526020019056fea2646970667358221220ca5f04933ea531dfec22169189a34e88345ea74a94db4aa7055cf1206116d4ff64736f6c634300060c0033",
  "immutableReferences": {},
  "sourceMap": "774:2979:34:-:0;;;;;;;;;;;;-1:-1:-1;832:17:91;852:12;:10;:12::i;:::-;874:6;:18;;-1:-1:-1;;;;;;874:18:91;-1:-1:-1;;;;;874:18:91;;;;;;;907:43;;874:18;;-1:-1:-1;874:18:91;907:43;;874:6;;907:43;-1:-1:-1;905:11:4;:18;;-1:-1:-1;;;;905:18:4;-1:-1:-1;;;905:18:4;;;774:2979:34;;735:104:90;822:10;735:104;:::o;774:2979:34:-;;;;;;;",
  "deployedSourceMap": "774:2979:34:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;892:213:33;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1614:570:34;;;;;;:::i;:::-;;:::i;:::-;;1547:254:33;;;;;;:::i;:::-;;:::i;1656:145:91:-;;;:::i;1033:77::-;;;:::i;:::-;;;;;;;:::i;2448:244:34:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3083:668::-;;;;;;:::i;:::-;;:::i;1950:240:91:-;;;;;;:::i;:::-;;:::i;892:213:33:-;1038:26;;:::i;:::-;-1:-1:-1;1087:11:33;892:213;;;;;:::o;1614:570:34:-;1247:12:91;:10;:12::i;:::-;1237:6;;-1:-1:-1;;;;;1237:6:91;;;:22;;;1229:67;;;;-1:-1:-1;;;1229:67:91;;;;;;;:::i;:::-;;;;;;;;;1339:19:4::1;:17;:19::i;:::-;1368:17;:15;:17::i;:::-;1799:27:34::0;1791:72:::2;;;;-1:-1:-1::0;;;1791:72:34::2;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;1881:56:34;::::2;;::::0;;;:38:::2;:56;::::0;;;;;:62;1873:101:::2;;;;-1:-1:-1::0;;;1873:101:34::2;;;;;;;:::i;:::-;2018:16;-1:-1:-1::0;;;;;1992:63:34::2;;:65;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1984:103;;;;-1:-1:-1::0;;;1984:103:34::2;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;2097:56:34;::::2;;::::0;;;:38:::2;:56;::::0;;;;:80;;;1406:20:4::1;:18;:20::i;:::-;1614:570:34::0;;:::o;1547:254:33:-;1728:26;;:::i;:::-;-1:-1:-1;1773:21:33;1547:254;-1:-1:-1;1547:254:33:o;1656:145:91:-;1247:12;:10;:12::i;:::-;1237:6;;-1:-1:-1;;;;;1237:6:91;;;:22;;;1229:67;;;;-1:-1:-1;;;1229:67:91;;;;;;;:::i;:::-;1762:1:::1;1746:6:::0;;1725:40:::1;::::0;-1:-1:-1;;;;;1746:6:91;;::::1;::::0;1725:40:::1;::::0;1762:1;;1725:40:::1;1792:1;1775:19:::0;;-1:-1:-1;;;;;;1775:19:91::1;::::0;;1656:145::o;1033:77::-;1071:7;1097:6;-1:-1:-1;;;;;1097:6:91;1033:77;:::o;2448:244:34:-;2599:7;1625:19:4;:17;:19::i;:::-;-1:-1:-1;;;;;;2629:56:34::1;;::::0;;;:38:::1;:56;::::0;;;;;;2448:244::o;3083:668::-;3247:7;1625:19:4;:17;:19::i;:::-;3317:10:34::1;3278:50;::::0;;;:38:::1;:50;::::0;;;;;3270:97:::1;;;;-1:-1:-1::0;;;3270:97:34::1;;;;;;;:::i;:::-;3580:10;-1:-1:-1::0;;;;;3554:57:34::1;;:59;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3540:11;:73;3536:209;;;-1:-1:-1::0;3675:10:34::1;3636:50;::::0;;;:38:::1;:50;::::0;;;;;3629:57:::1;;3536:209;-1:-1:-1::0;3724:10:34;3717:17:::1;;1950:240:91::0;1247:12;:10;:12::i;:::-;1237:6;;-1:-1:-1;;;;;1237:6:91;;;:22;;;1229:67;;;;-1:-1:-1;;;1229:67:91;;;;;;;:::i;:::-;-1:-1:-1;;;;;2038:22:91;::::1;2030:73;;;;-1:-1:-1::0;;;2030:73:91::1;;;;;;;:::i;:::-;2139:6;::::0;;2118:38:::1;::::0;-1:-1:-1;;;;;2118:38:91;;::::1;::::0;2139:6;::::1;::::0;2118:38:::1;::::0;::::1;2166:6;:17:::0;;-1:-1:-1;;;;;;2166:17:91::1;-1:-1:-1::0;;;;;2166:17:91;;;::::1;::::0;;;::::1;::::0;;1950:240::o;735:104:90:-;822:10;735:104;:::o;2158:186:4:-;2290:11;;-1:-1:-1;;;2290:11:4;;;;2282:55;;;;-1:-1:-1;;;2282:55:4;;;;;;;:::i;:::-;2158:186::o;2350:136::-;2474:5;2460:19;;-1:-1:-1;;;;2460:19:4;;;2350:136::o;2492:206::-;2673:11;:18;;-1:-1:-1;;;;2673:18:4;-1:-1:-1;;;2673:18:4;;;2492:206::o;-1:-1:-1:-;;;;;;;;;;;;;;:::o;5:130::-;72:20;;-1:-1;;;;;10659:54;;10863:35;;10853:2;;10912:1;;10902:12;312:327;;426:4;414:9;409:3;405:19;401:30;398:2;;;-1:-1;;434:12;398:2;10047;10041:9;426:4;10077:6;10073:17;10184:6;10172:10;10169:22;10148:18;10136:10;10133:34;10130:62;10127:2;;;-1:-1;;10195:12;10127:2;10047;10214:22;713:20;;543:75;;-1:-1;453:29;392:247;-1:-1;392:247::o;924:241::-;;1028:2;1016:9;1007:7;1003:23;999:32;996:2;;;-1:-1;;1034:12;996:2;1096:53;1141:7;1117:22;1096:53;:::i;:::-;1086:63;990:175;-1:-1;;;990:175::o;1172:366::-;;;1293:2;1281:9;1272:7;1268:23;1264:32;1261:2;;;-1:-1;;1299:12;1261:2;1361:53;1406:7;1382:22;1361:53;:::i;:::-;1351:63;1451:2;1490:22;;;;209:20;;-1:-1;;;1255:283::o;1545:366::-;;;1666:2;1654:9;1645:7;1641:23;1637:32;1634:2;;;-1:-1;;1672:12;1634:2;-1:-1;;209:20;;;1824:2;1863:22;;;713:20;;-1:-1;1628:283::o;1918:466::-;;;2089:2;2077:9;2068:7;2064:23;2060:32;2057:2;;;-1:-1;;2095:12;2057:2;2157:78;2227:7;2203:22;2157:78;:::i;:::-;2147:88;;2290:78;2360:7;2272:2;2340:9;2336:22;2290:78;:::i;:::-;2280:88;;2051:333;;;;;:::o;2391:416::-;;;2537:2;2525:9;2516:7;2512:23;2508:32;2505:2;;;-1:-1;;2543:12;2505:2;2605:78;2675:7;2651:22;2605:78;:::i;2814:263::-;;2929:2;2917:9;2908:7;2904:23;2900:32;2897:2;;;-1:-1;;2935:12;2897:2;-1:-1;861:13;;2891:186;-1:-1;2891:186::o;6237:222::-;-1:-1;;;;;10659:54;;;;3155:37;;6364:2;6349:18;;6335:124::o;6466:222::-;3275:37;;;6593:2;6578:18;;6564:124::o;6695:416::-;6895:2;6909:47;;;3549:2;6880:18;;;10352:19;3585:34;10392:14;;;3565:55;-1:-1;;;3640:12;;;3633:30;3682:12;;;6866:245::o;7118:416::-;7318:2;7332:47;;;3933:2;7303:18;;;10352:19;-1:-1;;;10392:14;;;3949:43;4011:12;;;7289:245::o;7541:416::-;7741:2;7755:47;;;4262:2;7726:18;;;10352:19;4298:28;10392:14;;;4278:49;4346:12;;;7712:245::o;7964:416::-;8164:2;8178:47;;;8149:18;;;10352:19;4633:34;10392:14;;;4613:55;4687:12;;;8135:245::o;8387:416::-;8587:2;8601:47;;;8572:18;;;10352:19;4974:34;10392:14;;;4954:55;5028:12;;;8558:245::o;8810:416::-;9010:2;9024:47;;;5279:2;8995:18;;;10352:19;5315:30;10392:14;;;5295:51;5365:12;;;8981:245::o;9233:416::-;9433:2;9447:47;;;5616:2;9418:18;;;10352:19;5652:33;10392:14;;;5632:54;5705:12;;;9404:245::o;9656:322::-;6007:23;;3275:37;;9833:2;9818:18;;9804:174::o",
  "source": "pragma solidity ^0.6.0;\npragma experimental ABIEncoderV2;\nimport \"./FinancialProductLibrary.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"../../../common/implementation/Lockable.sol\";\n\n/**\n * @title Pre-Expiration Identifier Transformation Financial Product Library\n * @notice Adds custom identifier transformation to enable a financial contract to use two different identifiers, depending\n * on when a price request is made. If the request is made before expiration than a transformation is made to the identifier\n * & if it is at or after expiration then the original identifier is returned. This library enables self referential\n * TWAP identifier to be used on synthetics pre-expiration, in conjunction with a separate identifier at expiration.\n */\ncontract PreExpirationIdentifierTransformationFinancialProductLibrary is FinancialProductLibrary, Ownable, Lockable {\n    mapping(address => bytes32) financialProductTransformedIdentifiers;\n\n    /**\n     * @notice Enables the deployer of the library to set the transformed identifier for an associated financial product.\n     * @param financialProduct address of the financial product.\n     * @param transformedIdentifier the identifier for the financial product to be used if the contract is post expiration.\n     * @dev Note: a) Only the owner (deployer) of this library can set identifier transformations b) The identifier Cant\n     * be set to blank. c) A transformed price can only be set once to prevent the deployer from changing it after the fact.\n     * d)  financialProduct must exposes an expirationTimestamp method.\n     */\n    function setFinancialProductTransformedIdentifier(address financialProduct, bytes32 transformedIdentifier)\n        public\n        onlyOwner\n        nonReentrant()\n    {\n        require(transformedIdentifier != \"\", \"Cant set to empty transformation\");\n        require(financialProductTransformedIdentifiers[financialProduct] == \"\", \"Transformation already set\");\n        require(ExpiringContractInterface(financialProduct).expirationTimestamp() != 0, \"Invalid EMP contract\");\n        financialProductTransformedIdentifiers[financialProduct] = transformedIdentifier;\n    }\n\n    /**\n     * @notice Returns the transformed identifier associated with a given financial product address.\n     * @param financialProduct address of the financial product.\n     * @return transformed identifier for the associated financial product.\n     */\n    function getTransformedIdentifierForFinancialProduct(address financialProduct)\n        public\n        view\n        nonReentrantView()\n        returns (bytes32)\n    {\n        return financialProductTransformedIdentifiers[financialProduct];\n    }\n\n    /**\n     * @notice Returns a transformed price identifier if the contract is pre-expiration and no transformation if post.\n     * @param identifier input price identifier to be transformed.\n     * @param requestTime timestamp the identifier is to be used at.\n     * @return transformedPriceIdentifier the input price identifier with the transformation logic applied to it.\n     */\n    function transformPriceIdentifier(bytes32 identifier, uint256 requestTime)\n        public\n        view\n        override\n        nonReentrantView()\n        returns (bytes32)\n    {\n        require(financialProductTransformedIdentifiers[msg.sender] != \"\", \"Caller has no transformation\");\n        // If the request time is before contract expiration then return the transformed identifier. Else, return the\n        // transformed price identifier.\n        if (requestTime < ExpiringContractInterface(msg.sender).expirationTimestamp()) {\n            return financialProductTransformedIdentifiers[msg.sender];\n        } else {\n            return identifier;\n        }\n    }\n}\n",
  "sourcePath": "/Users/chris/temp/protocol/packages/core/contracts/financial-templates/common/financial-product-libraries/PreExpirationIdentifierTransformationFinancialProductLibrary.sol",
  "ast": {
    "absolutePath": "/Users/chris/temp/protocol/packages/core/contracts/financial-templates/common/financial-product-libraries/PreExpirationIdentifierTransformationFinancialProductLibrary.sol",
    "exportedSymbols": {
      "PreExpirationIdentifierTransformationFinancialProductLibrary": [
        7046
      ]
    },
    "id": 7047,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6927,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:34"
      },
      {
        "id": 6928,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:34"
      },
      {
        "absolutePath": "/Users/chris/temp/protocol/packages/core/contracts/financial-templates/common/financial-product-libraries/FinancialProductLibrary.sol",
        "file": "./FinancialProductLibrary.sol",
        "id": 6929,
        "nodeType": "ImportDirective",
        "scope": 7047,
        "sourceUnit": 6926,
        "src": "58:39:34",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 6930,
        "nodeType": "ImportDirective",
        "scope": 7047,
        "sourceUnit": 24640,
        "src": "98:52:34",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chris/temp/protocol/packages/core/contracts/common/implementation/Lockable.sol",
        "file": "../../../common/implementation/Lockable.sol",
        "id": 6931,
        "nodeType": "ImportDirective",
        "scope": 7047,
        "sourceUnit": 2019,
        "src": "151:53:34",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6933,
              "name": "FinancialProductLibrary",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6925,
              "src": "847:23:34",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FinancialProductLibrary_$6925",
                "typeString": "contract FinancialProductLibrary"
              }
            },
            "id": 6934,
            "nodeType": "InheritanceSpecifier",
            "src": "847:23:34"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6935,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 24639,
              "src": "872:7:34",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$24639",
                "typeString": "contract Ownable"
              }
            },
            "id": 6936,
            "nodeType": "InheritanceSpecifier",
            "src": "872:7:34"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6937,
              "name": "Lockable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2018,
              "src": "881:8:34",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Lockable_$2018",
                "typeString": "contract Lockable"
              }
            },
            "id": 6938,
            "nodeType": "InheritanceSpecifier",
            "src": "881:8:34"
          }
        ],
        "contractDependencies": [
          2018,
          6925,
          24530,
          24639
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 6932,
          "nodeType": "StructuredDocumentation",
          "src": "206:567:34",
          "text": " @title Pre-Expiration Identifier Transformation Financial Product Library\n @notice Adds custom identifier transformation to enable a financial contract to use two different identifiers, depending\n on when a price request is made. If the request is made before expiration than a transformation is made to the identifier\n & if it is at or after expiration then the original identifier is returned. This library enables self referential\n TWAP identifier to be used on synthetics pre-expiration, in conjunction with a separate identifier at expiration."
        },
        "fullyImplemented": true,
        "id": 7046,
        "linearizedBaseContracts": [
          7046,
          2018,
          24639,
          24530,
          6925
        ],
        "name": "PreExpirationIdentifierTransformationFinancialProductLibrary",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6942,
            "mutability": "mutable",
            "name": "financialProductTransformedIdentifiers",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 7046,
            "src": "896:66:34",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
              "typeString": "mapping(address => bytes32)"
            },
            "typeName": {
              "id": 6941,
              "keyType": {
                "id": 6939,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "904:7:34",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "896:27:34",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                "typeString": "mapping(address => bytes32)"
              },
              "valueType": {
                "id": 6940,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "915:7:34",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6987,
              "nodeType": "Block",
              "src": "1781:403:34",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 6957,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 6955,
                          "name": "transformedIdentifier",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6947,
                          "src": "1799:21:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "",
                          "id": 6956,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1824:2:34",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          },
                          "value": ""
                        },
                        "src": "1799:27:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43616e742073657420746f20656d707479207472616e73666f726d6174696f6e",
                        "id": 6958,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1828:34:34",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5e8cb7451b17e33d06f17284b8f305e2c47c7f858abb8be4e15d86ea42cec4ff",
                          "typeString": "literal_string \"Cant set to empty transformation\""
                        },
                        "value": "Cant set to empty transformation"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5e8cb7451b17e33d06f17284b8f305e2c47c7f858abb8be4e15d86ea42cec4ff",
                          "typeString": "literal_string \"Cant set to empty transformation\""
                        }
                      ],
                      "id": 6954,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1791:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1791:72:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6960,
                  "nodeType": "ExpressionStatement",
                  "src": "1791:72:34"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 6966,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 6962,
                            "name": "financialProductTransformedIdentifiers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6942,
                            "src": "1881:38:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                              "typeString": "mapping(address => bytes32)"
                            }
                          },
                          "id": 6964,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 6963,
                            "name": "financialProduct",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6945,
                            "src": "1920:16:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1881:56:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "",
                          "id": 6965,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1941:2:34",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          },
                          "value": ""
                        },
                        "src": "1881:62:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5472616e73666f726d6174696f6e20616c726561647920736574",
                        "id": 6967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1945:28:34",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_56e4fc2ed1ba559245e42b2b5a203df681a8cd6d03c25502ed78ff6452ca8e47",
                          "typeString": "literal_string \"Transformation already set\""
                        },
                        "value": "Transformation already set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_56e4fc2ed1ba559245e42b2b5a203df681a8cd6d03c25502ed78ff6452ca8e47",
                          "typeString": "literal_string \"Transformation already set\""
                        }
                      ],
                      "id": 6961,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1873:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1873:101:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6969,
                  "nodeType": "ExpressionStatement",
                  "src": "1873:101:34"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 6972,
                                  "name": "financialProduct",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6945,
                                  "src": "2018:16:34",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 6971,
                                "name": "ExpiringContractInterface",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6881,
                                "src": "1992:25:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ExpiringContractInterface_$6881_$",
                                  "typeString": "type(contract ExpiringContractInterface)"
                                }
                              },
                              "id": 6973,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1992:43:34",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ExpiringContractInterface_$6881",
                                "typeString": "contract ExpiringContractInterface"
                              }
                            },
                            "id": 6974,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "expirationTimestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6880,
                            "src": "1992:63:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 6975,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1992:65:34",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 6976,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2061:1:34",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1992:70:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c696420454d5020636f6e7472616374",
                        "id": 6978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2064:22:34",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_414057ca04fb0eac83f93a4edb2bbafd68669ee9198c65b64b7b3051f2873eed",
                          "typeString": "literal_string \"Invalid EMP contract\""
                        },
                        "value": "Invalid EMP contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_414057ca04fb0eac83f93a4edb2bbafd68669ee9198c65b64b7b3051f2873eed",
                          "typeString": "literal_string \"Invalid EMP contract\""
                        }
                      ],
                      "id": 6970,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1984:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1984:103:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6980,
                  "nodeType": "ExpressionStatement",
                  "src": "1984:103:34"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 6981,
                        "name": "financialProductTransformedIdentifiers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6942,
                        "src": "2097:38:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                          "typeString": "mapping(address => bytes32)"
                        }
                      },
                      "id": 6983,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 6982,
                        "name": "financialProduct",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6945,
                        "src": "2136:16:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2097:56:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 6984,
                      "name": "transformedIdentifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6947,
                      "src": "2156:21:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2097:80:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 6986,
                  "nodeType": "ExpressionStatement",
                  "src": "2097:80:34"
                }
              ]
            },
            "documentation": {
              "id": 6943,
              "nodeType": "StructuredDocumentation",
              "src": "969:640:34",
              "text": " @notice Enables the deployer of the library to set the transformed identifier for an associated financial product.\n @param financialProduct address of the financial product.\n @param transformedIdentifier the identifier for the financial product to be used if the contract is post expiration.\n @dev Note: a) Only the owner (deployer) of this library can set identifier transformations b) The identifier Cant\n be set to blank. c) A transformed price can only be set once to prevent the deployer from changing it after the fact.\n d)  financialProduct must exposes an expirationTimestamp method."
            },
            "functionSelector": "16bed30e",
            "id": 6988,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 6950,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6949,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 24588,
                  "src": "1744:9:34",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1744:9:34"
              },
              {
                "arguments": [],
                "id": 6952,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6951,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1984,
                  "src": "1762:12:34",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1762:14:34"
              }
            ],
            "name": "setFinancialProductTransformedIdentifier",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6948,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6945,
                  "mutability": "mutable",
                  "name": "financialProduct",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6988,
                  "src": "1664:24:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6944,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1664:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6947,
                  "mutability": "mutable",
                  "name": "transformedIdentifier",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6988,
                  "src": "1690:29:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6946,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1690:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1663:57:34"
            },
            "returnParameters": {
              "id": 6953,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1781:0:34"
            },
            "scope": 7046,
            "src": "1614:570:34",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7002,
              "nodeType": "Block",
              "src": "2612:80:34",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 6998,
                      "name": "financialProductTransformedIdentifiers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6942,
                      "src": "2629:38:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                        "typeString": "mapping(address => bytes32)"
                      }
                    },
                    "id": 7000,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 6999,
                      "name": "financialProduct",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6991,
                      "src": "2668:16:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2629:56:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 6997,
                  "id": 7001,
                  "nodeType": "Return",
                  "src": "2622:63:34"
                }
              ]
            },
            "documentation": {
              "id": 6989,
              "nodeType": "StructuredDocumentation",
              "src": "2190:253:34",
              "text": " @notice Returns the transformed identifier associated with a given financial product address.\n @param financialProduct address of the financial product.\n @return transformed identifier for the associated financial product."
            },
            "functionSelector": "bc2ac858",
            "id": 7003,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 6994,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6993,
                  "name": "nonReentrantView",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1992,
                  "src": "2563:16:34",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2563:18:34"
              }
            ],
            "name": "getTransformedIdentifierForFinancialProduct",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6992,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6991,
                  "mutability": "mutable",
                  "name": "financialProduct",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7003,
                  "src": "2501:24:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6990,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2501:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2500:26:34"
            },
            "returnParameters": {
              "id": 6997,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6996,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7003,
                  "src": "2599:7:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6995,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2599:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2598:9:34"
            },
            "scope": 7046,
            "src": "2448:244:34",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              6924
            ],
            "body": {
              "id": 7044,
              "nodeType": "Block",
              "src": "3260:491:34",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 7022,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 7017,
                            "name": "financialProductTransformedIdentifiers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6942,
                            "src": "3278:38:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                              "typeString": "mapping(address => bytes32)"
                            }
                          },
                          "id": 7020,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 7018,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3317:3:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 7019,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3317:10:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3278:50:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "",
                          "id": 7021,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3332:2:34",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          },
                          "value": ""
                        },
                        "src": "3278:56:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43616c6c657220686173206e6f207472616e73666f726d6174696f6e",
                        "id": 7023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3336:30:34",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9d97f4c58f4755cb397a46d3af93b164e3f42de2f963c53e0ed406637291b1f8",
                          "typeString": "literal_string \"Caller has no transformation\""
                        },
                        "value": "Caller has no transformation"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9d97f4c58f4755cb397a46d3af93b164e3f42de2f963c53e0ed406637291b1f8",
                          "typeString": "literal_string \"Caller has no transformation\""
                        }
                      ],
                      "id": 7016,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3270:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3270:97:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7025,
                  "nodeType": "ExpressionStatement",
                  "src": "3270:97:34"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 7026,
                      "name": "requestTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7008,
                      "src": "3540:11:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 7028,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3580:3:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 7029,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3580:10:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 7027,
                            "name": "ExpiringContractInterface",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6881,
                            "src": "3554:25:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ExpiringContractInterface_$6881_$",
                              "typeString": "type(contract ExpiringContractInterface)"
                            }
                          },
                          "id": 7030,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3554:37:34",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ExpiringContractInterface_$6881",
                            "typeString": "contract ExpiringContractInterface"
                          }
                        },
                        "id": 7031,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "expirationTimestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6880,
                        "src": "3554:57:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                          "typeString": "function () view external returns (uint256)"
                        }
                      },
                      "id": 7032,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3554:59:34",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3540:73:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 7042,
                    "nodeType": "Block",
                    "src": "3703:42:34",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 7040,
                          "name": "identifier",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7006,
                          "src": "3724:10:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 7015,
                        "id": 7041,
                        "nodeType": "Return",
                        "src": "3717:17:34"
                      }
                    ]
                  },
                  "id": 7043,
                  "nodeType": "IfStatement",
                  "src": "3536:209:34",
                  "trueBody": {
                    "id": 7039,
                    "nodeType": "Block",
                    "src": "3615:82:34",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 7034,
                            "name": "financialProductTransformedIdentifiers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6942,
                            "src": "3636:38:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                              "typeString": "mapping(address => bytes32)"
                            }
                          },
                          "id": 7037,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 7035,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3675:3:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 7036,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3675:10:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3636:50:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 7015,
                        "id": 7038,
                        "nodeType": "Return",
                        "src": "3629:57:34"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 7004,
              "nodeType": "StructuredDocumentation",
              "src": "2698:380:34",
              "text": " @notice Returns a transformed price identifier if the contract is pre-expiration and no transformation if post.\n @param identifier input price identifier to be transformed.\n @param requestTime timestamp the identifier is to be used at.\n @return transformedPriceIdentifier the input price identifier with the transformation logic applied to it."
            },
            "functionSelector": "f19371b7",
            "id": 7045,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 7012,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7011,
                  "name": "nonReentrantView",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1992,
                  "src": "3211:16:34",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3211:18:34"
              }
            ],
            "name": "transformPriceIdentifier",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7010,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3194:8:34"
            },
            "parameters": {
              "id": 7009,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7006,
                  "mutability": "mutable",
                  "name": "identifier",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7045,
                  "src": "3117:18:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7005,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3117:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7008,
                  "mutability": "mutable",
                  "name": "requestTime",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7045,
                  "src": "3137:19:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7007,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3137:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3116:41:34"
            },
            "returnParameters": {
              "id": 7015,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7014,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7045,
                  "src": "3247:7:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7013,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3247:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3246:9:34"
            },
            "scope": 7046,
            "src": "3083:668:34",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 7047,
        "src": "774:2979:34"
      }
    ],
    "src": "0:3754:34"
  },
  "legacyAST": {
    "absolutePath": "/Users/chris/temp/protocol/packages/core/contracts/financial-templates/common/financial-product-libraries/PreExpirationIdentifierTransformationFinancialProductLibrary.sol",
    "exportedSymbols": {
      "PreExpirationIdentifierTransformationFinancialProductLibrary": [
        7046
      ]
    },
    "id": 7047,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6927,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:34"
      },
      {
        "id": 6928,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "24:33:34"
      },
      {
        "absolutePath": "/Users/chris/temp/protocol/packages/core/contracts/financial-templates/common/financial-product-libraries/FinancialProductLibrary.sol",
        "file": "./FinancialProductLibrary.sol",
        "id": 6929,
        "nodeType": "ImportDirective",
        "scope": 7047,
        "sourceUnit": 6926,
        "src": "58:39:34",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 6930,
        "nodeType": "ImportDirective",
        "scope": 7047,
        "sourceUnit": 24640,
        "src": "98:52:34",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chris/temp/protocol/packages/core/contracts/common/implementation/Lockable.sol",
        "file": "../../../common/implementation/Lockable.sol",
        "id": 6931,
        "nodeType": "ImportDirective",
        "scope": 7047,
        "sourceUnit": 2019,
        "src": "151:53:34",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6933,
              "name": "FinancialProductLibrary",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6925,
              "src": "847:23:34",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FinancialProductLibrary_$6925",
                "typeString": "contract FinancialProductLibrary"
              }
            },
            "id": 6934,
            "nodeType": "InheritanceSpecifier",
            "src": "847:23:34"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6935,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 24639,
              "src": "872:7:34",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$24639",
                "typeString": "contract Ownable"
              }
            },
            "id": 6936,
            "nodeType": "InheritanceSpecifier",
            "src": "872:7:34"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6937,
              "name": "Lockable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2018,
              "src": "881:8:34",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Lockable_$2018",
                "typeString": "contract Lockable"
              }
            },
            "id": 6938,
            "nodeType": "InheritanceSpecifier",
            "src": "881:8:34"
          }
        ],
        "contractDependencies": [
          2018,
          6925,
          24530,
          24639
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 6932,
          "nodeType": "StructuredDocumentation",
          "src": "206:567:34",
          "text": " @title Pre-Expiration Identifier Transformation Financial Product Library\n @notice Adds custom identifier transformation to enable a financial contract to use two different identifiers, depending\n on when a price request is made. If the request is made before expiration than a transformation is made to the identifier\n & if it is at or after expiration then the original identifier is returned. This library enables self referential\n TWAP identifier to be used on synthetics pre-expiration, in conjunction with a separate identifier at expiration."
        },
        "fullyImplemented": true,
        "id": 7046,
        "linearizedBaseContracts": [
          7046,
          2018,
          24639,
          24530,
          6925
        ],
        "name": "PreExpirationIdentifierTransformationFinancialProductLibrary",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6942,
            "mutability": "mutable",
            "name": "financialProductTransformedIdentifiers",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 7046,
            "src": "896:66:34",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
              "typeString": "mapping(address => bytes32)"
            },
            "typeName": {
              "id": 6941,
              "keyType": {
                "id": 6939,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "904:7:34",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "896:27:34",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                "typeString": "mapping(address => bytes32)"
              },
              "valueType": {
                "id": 6940,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "915:7:34",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6987,
              "nodeType": "Block",
              "src": "1781:403:34",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 6957,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 6955,
                          "name": "transformedIdentifier",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6947,
                          "src": "1799:21:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "",
                          "id": 6956,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1824:2:34",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          },
                          "value": ""
                        },
                        "src": "1799:27:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43616e742073657420746f20656d707479207472616e73666f726d6174696f6e",
                        "id": 6958,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1828:34:34",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5e8cb7451b17e33d06f17284b8f305e2c47c7f858abb8be4e15d86ea42cec4ff",
                          "typeString": "literal_string \"Cant set to empty transformation\""
                        },
                        "value": "Cant set to empty transformation"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5e8cb7451b17e33d06f17284b8f305e2c47c7f858abb8be4e15d86ea42cec4ff",
                          "typeString": "literal_string \"Cant set to empty transformation\""
                        }
                      ],
                      "id": 6954,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1791:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1791:72:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6960,
                  "nodeType": "ExpressionStatement",
                  "src": "1791:72:34"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 6966,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 6962,
                            "name": "financialProductTransformedIdentifiers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6942,
                            "src": "1881:38:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                              "typeString": "mapping(address => bytes32)"
                            }
                          },
                          "id": 6964,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 6963,
                            "name": "financialProduct",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6945,
                            "src": "1920:16:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1881:56:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "",
                          "id": 6965,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1941:2:34",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          },
                          "value": ""
                        },
                        "src": "1881:62:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5472616e73666f726d6174696f6e20616c726561647920736574",
                        "id": 6967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1945:28:34",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_56e4fc2ed1ba559245e42b2b5a203df681a8cd6d03c25502ed78ff6452ca8e47",
                          "typeString": "literal_string \"Transformation already set\""
                        },
                        "value": "Transformation already set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_56e4fc2ed1ba559245e42b2b5a203df681a8cd6d03c25502ed78ff6452ca8e47",
                          "typeString": "literal_string \"Transformation already set\""
                        }
                      ],
                      "id": 6961,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1873:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1873:101:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6969,
                  "nodeType": "ExpressionStatement",
                  "src": "1873:101:34"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 6977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 6972,
                                  "name": "financialProduct",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 6945,
                                  "src": "2018:16:34",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 6971,
                                "name": "ExpiringContractInterface",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 6881,
                                "src": "1992:25:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ExpiringContractInterface_$6881_$",
                                  "typeString": "type(contract ExpiringContractInterface)"
                                }
                              },
                              "id": 6973,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1992:43:34",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ExpiringContractInterface_$6881",
                                "typeString": "contract ExpiringContractInterface"
                              }
                            },
                            "id": 6974,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "expirationTimestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 6880,
                            "src": "1992:63:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 6975,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1992:65:34",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 6976,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2061:1:34",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1992:70:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c696420454d5020636f6e7472616374",
                        "id": 6978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2064:22:34",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_414057ca04fb0eac83f93a4edb2bbafd68669ee9198c65b64b7b3051f2873eed",
                          "typeString": "literal_string \"Invalid EMP contract\""
                        },
                        "value": "Invalid EMP contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_414057ca04fb0eac83f93a4edb2bbafd68669ee9198c65b64b7b3051f2873eed",
                          "typeString": "literal_string \"Invalid EMP contract\""
                        }
                      ],
                      "id": 6970,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1984:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1984:103:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6980,
                  "nodeType": "ExpressionStatement",
                  "src": "1984:103:34"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 6985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 6981,
                        "name": "financialProductTransformedIdentifiers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6942,
                        "src": "2097:38:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                          "typeString": "mapping(address => bytes32)"
                        }
                      },
                      "id": 6983,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 6982,
                        "name": "financialProduct",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6945,
                        "src": "2136:16:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2097:56:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 6984,
                      "name": "transformedIdentifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6947,
                      "src": "2156:21:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2097:80:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 6986,
                  "nodeType": "ExpressionStatement",
                  "src": "2097:80:34"
                }
              ]
            },
            "documentation": {
              "id": 6943,
              "nodeType": "StructuredDocumentation",
              "src": "969:640:34",
              "text": " @notice Enables the deployer of the library to set the transformed identifier for an associated financial product.\n @param financialProduct address of the financial product.\n @param transformedIdentifier the identifier for the financial product to be used if the contract is post expiration.\n @dev Note: a) Only the owner (deployer) of this library can set identifier transformations b) The identifier Cant\n be set to blank. c) A transformed price can only be set once to prevent the deployer from changing it after the fact.\n d)  financialProduct must exposes an expirationTimestamp method."
            },
            "functionSelector": "16bed30e",
            "id": 6988,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 6950,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6949,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 24588,
                  "src": "1744:9:34",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1744:9:34"
              },
              {
                "arguments": [],
                "id": 6952,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6951,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1984,
                  "src": "1762:12:34",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1762:14:34"
              }
            ],
            "name": "setFinancialProductTransformedIdentifier",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6948,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6945,
                  "mutability": "mutable",
                  "name": "financialProduct",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6988,
                  "src": "1664:24:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6944,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1664:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6947,
                  "mutability": "mutable",
                  "name": "transformedIdentifier",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6988,
                  "src": "1690:29:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6946,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1690:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1663:57:34"
            },
            "returnParameters": {
              "id": 6953,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1781:0:34"
            },
            "scope": 7046,
            "src": "1614:570:34",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7002,
              "nodeType": "Block",
              "src": "2612:80:34",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 6998,
                      "name": "financialProductTransformedIdentifiers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6942,
                      "src": "2629:38:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                        "typeString": "mapping(address => bytes32)"
                      }
                    },
                    "id": 7000,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 6999,
                      "name": "financialProduct",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6991,
                      "src": "2668:16:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2629:56:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 6997,
                  "id": 7001,
                  "nodeType": "Return",
                  "src": "2622:63:34"
                }
              ]
            },
            "documentation": {
              "id": 6989,
              "nodeType": "StructuredDocumentation",
              "src": "2190:253:34",
              "text": " @notice Returns the transformed identifier associated with a given financial product address.\n @param financialProduct address of the financial product.\n @return transformed identifier for the associated financial product."
            },
            "functionSelector": "bc2ac858",
            "id": 7003,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 6994,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6993,
                  "name": "nonReentrantView",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1992,
                  "src": "2563:16:34",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2563:18:34"
              }
            ],
            "name": "getTransformedIdentifierForFinancialProduct",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6992,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6991,
                  "mutability": "mutable",
                  "name": "financialProduct",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7003,
                  "src": "2501:24:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6990,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2501:7:34",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2500:26:34"
            },
            "returnParameters": {
              "id": 6997,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6996,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7003,
                  "src": "2599:7:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6995,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2599:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2598:9:34"
            },
            "scope": 7046,
            "src": "2448:244:34",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              6924
            ],
            "body": {
              "id": 7044,
              "nodeType": "Block",
              "src": "3260:491:34",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 7022,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 7017,
                            "name": "financialProductTransformedIdentifiers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6942,
                            "src": "3278:38:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                              "typeString": "mapping(address => bytes32)"
                            }
                          },
                          "id": 7020,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 7018,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3317:3:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 7019,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3317:10:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3278:50:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "",
                          "id": 7021,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3332:2:34",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          },
                          "value": ""
                        },
                        "src": "3278:56:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43616c6c657220686173206e6f207472616e73666f726d6174696f6e",
                        "id": 7023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3336:30:34",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9d97f4c58f4755cb397a46d3af93b164e3f42de2f963c53e0ed406637291b1f8",
                          "typeString": "literal_string \"Caller has no transformation\""
                        },
                        "value": "Caller has no transformation"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9d97f4c58f4755cb397a46d3af93b164e3f42de2f963c53e0ed406637291b1f8",
                          "typeString": "literal_string \"Caller has no transformation\""
                        }
                      ],
                      "id": 7016,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3270:7:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3270:97:34",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7025,
                  "nodeType": "ExpressionStatement",
                  "src": "3270:97:34"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 7033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 7026,
                      "name": "requestTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7008,
                      "src": "3540:11:34",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 7028,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3580:3:34",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 7029,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "3580:10:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 7027,
                            "name": "ExpiringContractInterface",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6881,
                            "src": "3554:25:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ExpiringContractInterface_$6881_$",
                              "typeString": "type(contract ExpiringContractInterface)"
                            }
                          },
                          "id": 7030,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3554:37:34",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ExpiringContractInterface_$6881",
                            "typeString": "contract ExpiringContractInterface"
                          }
                        },
                        "id": 7031,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "expirationTimestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 6880,
                        "src": "3554:57:34",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                          "typeString": "function () view external returns (uint256)"
                        }
                      },
                      "id": 7032,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3554:59:34",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3540:73:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 7042,
                    "nodeType": "Block",
                    "src": "3703:42:34",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 7040,
                          "name": "identifier",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7006,
                          "src": "3724:10:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 7015,
                        "id": 7041,
                        "nodeType": "Return",
                        "src": "3717:17:34"
                      }
                    ]
                  },
                  "id": 7043,
                  "nodeType": "IfStatement",
                  "src": "3536:209:34",
                  "trueBody": {
                    "id": 7039,
                    "nodeType": "Block",
                    "src": "3615:82:34",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 7034,
                            "name": "financialProductTransformedIdentifiers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6942,
                            "src": "3636:38:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                              "typeString": "mapping(address => bytes32)"
                            }
                          },
                          "id": 7037,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 7035,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3675:3:34",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 7036,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3675:10:34",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3636:50:34",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 7015,
                        "id": 7038,
                        "nodeType": "Return",
                        "src": "3629:57:34"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 7004,
              "nodeType": "StructuredDocumentation",
              "src": "2698:380:34",
              "text": " @notice Returns a transformed price identifier if the contract is pre-expiration and no transformation if post.\n @param identifier input price identifier to be transformed.\n @param requestTime timestamp the identifier is to be used at.\n @return transformedPriceIdentifier the input price identifier with the transformation logic applied to it."
            },
            "functionSelector": "f19371b7",
            "id": 7045,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 7012,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7011,
                  "name": "nonReentrantView",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1992,
                  "src": "3211:16:34",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3211:18:34"
              }
            ],
            "name": "transformPriceIdentifier",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 7010,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3194:8:34"
            },
            "parameters": {
              "id": 7009,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7006,
                  "mutability": "mutable",
                  "name": "identifier",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7045,
                  "src": "3117:18:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7005,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3117:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7008,
                  "mutability": "mutable",
                  "name": "requestTime",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7045,
                  "src": "3137:19:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7007,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3137:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3116:41:34"
            },
            "returnParameters": {
              "id": 7015,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7014,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 7045,
                  "src": "3247:7:34",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7013,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3247:7:34",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3246:9:34"
            },
            "scope": 7046,
            "src": "3083:668:34",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 7047,
        "src": "774:2979:34"
      }
    ],
    "src": "0:3754:34"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2020-12-09T10:40:25.503Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getTransformedIdentifierForFinancialProduct(address)": {
        "params": {
          "financialProduct": "address of the financial product."
        },
        "returns": {
          "_0": "transformed identifier for the associated financial product."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setFinancialProductTransformedIdentifier(address,bytes32)": {
        "details": "Note: a) Only the owner (deployer) of this library can set identifier transformations b) The identifier Cant be set to blank. c) A transformed price can only be set once to prevent the deployer from changing it after the fact. d)  financialProduct must exposes an expirationTimestamp method.",
        "params": {
          "financialProduct": "address of the financial product.",
          "transformedIdentifier": "the identifier for the financial product to be used if the contract is post expiration."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "transformCollateralRequirement((uint256),(uint256))": {
        "params": {
          "collateralRequirement": "input collateral requirement to be transformed.",
          "oraclePrice": "input price returned by DVM used to transform the collateral requirement."
        },
        "returns": {
          "_0": "transformedCollateralRequirement input collateral requirement with the transformation function applied."
        }
      },
      "transformPrice((uint256),uint256)": {
        "params": {
          "oraclePrice": "input price returned by the DVM to be transformed.",
          "requestTime": "timestamp the oraclePrice was requested at."
        },
        "returns": {
          "_0": "transformedPrice input oraclePrice with the transformation function applied."
        }
      },
      "transformPriceIdentifier(bytes32,uint256)": {
        "params": {
          "identifier": "input price identifier to be transformed.",
          "requestTime": "timestamp the identifier is to be used at."
        },
        "returns": {
          "_0": "transformedPriceIdentifier the input price identifier with the transformation logic applied to it."
        }
      }
    },
    "title": "Pre-Expiration Identifier Transformation Financial Product Library",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "getTransformedIdentifierForFinancialProduct(address)": {
        "notice": "Returns the transformed identifier associated with a given financial product address."
      },
      "setFinancialProductTransformedIdentifier(address,bytes32)": {
        "notice": "Enables the deployer of the library to set the transformed identifier for an associated financial product."
      },
      "transformCollateralRequirement((uint256),(uint256))": {
        "notice": "Transforms a given collateral requirement using the financial product libraries transformation logic."
      },
      "transformPrice((uint256),uint256)": {
        "notice": "Transforms a given oracle price using the financial product libraries transformation logic."
      },
      "transformPriceIdentifier(bytes32,uint256)": {
        "notice": "Returns a transformed price identifier if the contract is pre-expiration and no transformation if post."
      }
    },
    "notice": "Adds custom identifier transformation to enable a financial contract to use two different identifiers, depending on when a price request is made. If the request is made before expiration than a transformation is made to the identifier & if it is at or after expiration then the original identifier is returned. This library enables self referential TWAP identifier to be used on synthetics pre-expiration, in conjunction with a separate identifier at expiration.",
    "version": 1
  }
}