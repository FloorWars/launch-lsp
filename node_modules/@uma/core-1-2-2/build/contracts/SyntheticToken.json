{
  "contractName": "SyntheticToken",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "tokenName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "tokenSymbol",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "tokenDecimals",
          "type": "uint8"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newMember",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "manager",
          "type": "address"
        }
      ],
      "name": "AddedSharedMember",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldMember",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "manager",
          "type": "address"
        }
      ],
      "name": "RemovedSharedMember",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newMember",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "manager",
          "type": "address"
        }
      ],
      "name": "ResetExclusiveMember",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "newMember",
          "type": "address"
        }
      ],
      "name": "addMember",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        }
      ],
      "name": "getMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "memberToCheck",
          "type": "address"
        }
      ],
      "name": "holdsRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "memberToRemove",
          "type": "address"
        }
      ],
      "name": "removeMember",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        }
      ],
      "name": "renounceMembership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "newMember",
          "type": "address"
        }
      ],
      "name": "resetMember",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removeMinter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addBurner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removeBurner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "resetOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isBurner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"tokenDecimals\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newMember\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"AddedSharedMember\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldMember\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"RemovedSharedMember\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newMember\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"ResetExclusiveMember\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addBurner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newMember\",\"type\":\"address\"}],\"name\":\"addMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"}],\"name\":\"getMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"memberToCheck\",\"type\":\"address\"}],\"name\":\"holdsRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isBurner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeBurner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"memberToRemove\",\"type\":\"address\"}],\"name\":\"removeMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"}],\"name\":\"renounceMembership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newMember\",\"type\":\"address\"}],\"name\":\"resetMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"resetOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The contract deployer will initially be the only minter, burner and owner capable of adding new roles.\",\"kind\":\"dev\",\"methods\":{\"addBurner(address)\":{\"details\":\"The caller must have the Owner role.\",\"params\":{\"account\":\"The address to which the Burner role is added.\"}},\"addMember(uint256,address)\":{\"details\":\"Reverts if `roleId` does not represent an initialized, SharedRole or if the caller is not a member of the managing role for `roleId`.\",\"params\":{\"newMember\":\"the new SharedRole member.\",\"roleId\":\"the SharedRole membership to modify.\"}},\"addMinter(address)\":{\"details\":\"The caller must have the Owner role.\",\"params\":{\"account\":\"The address to which the Minter role is added.\"}},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Burns `value` tokens owned by `msg.sender`.\",\"params\":{\"value\":\"amount of tokens to burn.\"}},\"constructor\":{\"params\":{\"tokenDecimals\":\"The number of decimals to define token precision.\",\"tokenName\":\"The name which describes the new token.\",\"tokenSymbol\":\"The ticker abbreviation of the name. Ideally < 5 chars.\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getMember(uint256)\":{\"details\":\"Reverts if `roleId` does not represent an initialized, exclusive role.\",\"params\":{\"roleId\":\"the ExclusiveRole membership to check.\"},\"returns\":{\"_0\":\"the address of the current ExclusiveRole member.\"}},\"holdsRole(uint256,address)\":{\"details\":\"Reverts if roleId does not correspond to an initialized role.\",\"params\":{\"memberToCheck\":\"the address to check.\",\"roleId\":\"the Role to check.\"},\"returns\":{\"_0\":\"True if `memberToCheck` is a member of `roleId`.\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"isBurner(address)\":{\"params\":{\"account\":\"The address which is checked for the Burner role.\"},\"returns\":{\"_0\":\"bool True if the provided account is a Burner.\"}},\"isMinter(address)\":{\"params\":{\"account\":\"The address which is checked for the Minter role.\"},\"returns\":{\"_0\":\"bool True if the provided account is a Minter.\"}},\"mint(address,uint256)\":{\"details\":\"Mints `value` tokens to `recipient`, returning true on success.\",\"params\":{\"recipient\":\"address to mint to.\",\"value\":\"amount of tokens to mint.\"},\"returns\":{\"_0\":\"True if the mint succeeded, or False.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"removeBurner(address)\":{\"details\":\"The caller must have the Owner role.\",\"params\":{\"account\":\"The address from which the Burner role is removed.\"}},\"removeMember(uint256,address)\":{\"details\":\"Reverts if `roleId` does not represent an initialized, SharedRole or if the caller is not a member of the managing role for `roleId`.\",\"params\":{\"memberToRemove\":\"the current SharedRole member to remove.\",\"roleId\":\"the SharedRole membership to modify.\"}},\"removeMinter(address)\":{\"details\":\"The caller must have the Owner role.\",\"params\":{\"account\":\"The address from which the Minter role is removed.\"}},\"renounceMembership(uint256)\":{\"details\":\"Reverts if the caller is not a member of the role for `roleId` or if `roleId` is not an initialized, SharedRole.\",\"params\":{\"roleId\":\"the SharedRole membership to modify.\"}},\"resetMember(uint256,address)\":{\"details\":\"Reverts if the caller is not a member of the managing role for `roleId` or if `roleId` is not an initialized, ExclusiveRole.\",\"params\":{\"newMember\":\"the new ExclusiveRole member.\",\"roleId\":\"the ExclusiveRole membership to modify.\"}},\"resetOwner(address)\":{\"details\":\"The caller must have the Owner role.\",\"params\":{\"account\":\"The new holder of the Owner role.\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"title\":\"Burnable and mintable ERC20.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addBurner(address)\":{\"notice\":\"Add Burner role to account.\"},\"addMember(uint256,address)\":{\"notice\":\"Adds `newMember` to the shared role, `roleId`.\"},\"addMinter(address)\":{\"notice\":\"Add Minter role to account.\"},\"constructor\":\"Constructs the SyntheticToken.\",\"getMember(uint256)\":{\"notice\":\"Gets the current holder of the exclusive role, `roleId`.\"},\"holdsRole(uint256,address)\":{\"notice\":\"Whether `memberToCheck` is a member of roleId.\"},\"isBurner(address)\":{\"notice\":\"Checks if a given account holds the Burner role.\"},\"isMinter(address)\":{\"notice\":\"Checks if a given account holds the Minter role.\"},\"removeBurner(address)\":{\"notice\":\"Removes Burner role from account.\"},\"removeMember(uint256,address)\":{\"notice\":\"Removes `memberToRemove` from the shared role, `roleId`.\"},\"removeMinter(address)\":{\"notice\":\"Remove Minter role from account.\"},\"renounceMembership(uint256)\":{\"notice\":\"Removes caller from the role, `roleId`.\"},\"resetMember(uint256,address)\":{\"notice\":\"Changes the exclusive role holder of `roleId` to `newMember`.\"},\"resetOwner(address)\":{\"notice\":\"Reset Owner role to account.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/chris/temp/protocol/packages/core/contracts/financial-templates/common/SyntheticToken.sol\":\"SyntheticToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":199},\"remappings\":[]},\"sources\":{\"/Users/chris/temp/protocol/packages/core/contracts/common/implementation/ExpandedERC20.sol\":{\"keccak256\":\"0x0b42526a6373e8b14d488537e05bd9919cca6cb1fae3b14f2429a5062b083997\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://06cfe7f58991110a9ce32b82a5d0deb5f762da7010dc55298430ec6f45cdec4b\",\"dweb:/ipfs/QmQKbe8vyQ742YmnzkHSNLRsjucEjfJa8d5vfgdV6Fxm4k\"]},\"/Users/chris/temp/protocol/packages/core/contracts/common/implementation/Lockable.sol\":{\"keccak256\":\"0xe766fe78267c8f589f9510a6e258b69287ed455c18d6b3f393d8e9d96f2d71cf\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://2e78bb200ecd01e863bfd57583941561f09993f902b83aa5d362387746578209\",\"dweb:/ipfs/QmNX2pLdH4p4HtJTKqSY4LwenRUPwJKa22ZSF2yc3cTMq4\"]},\"/Users/chris/temp/protocol/packages/core/contracts/common/implementation/MultiRole.sol\":{\"keccak256\":\"0xc35f4e028196f04a47b2456ed7efd825be3406688a314d75916f57680eae1795\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://29edb6ac3a5e5146fe262f77431d55571379cf0265925060d15f27b1b927cdd6\",\"dweb:/ipfs/QmUg31ey8b53pXdUpUBUrHx46nC3p2XChwmhLXw1h9ooyi\"]},\"/Users/chris/temp/protocol/packages/core/contracts/common/interfaces/ExpandedIERC20.sol\":{\"keccak256\":\"0x7ecd92b537bb1776f65bc0414e732c97559d07e309bd41e666bc65f143f2d895\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://d1794951b316e87eedfd212fc54abe0261fe9defd62aca71f9a36452c3092abd\",\"dweb:/ipfs/QmXz4w3nVxSc9VTtLUa5mSTsb2btvdhgB72UrVbEdiJoFy\"]},\"/Users/chris/temp/protocol/packages/core/contracts/financial-templates/common/SyntheticToken.sol\":{\"keccak256\":\"0x265068895fbc7847fab52da307cc4ba79b979c5a61ddaba6174efd6bb8382796\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://68102d92902409d699d108a73006c1d58dc2902fbc5a3a93bd7c5ee92d5cca2e\",\"dweb:/ipfs/QmTXsphzs7KTqbrXCNbqcwEQfT4sqoUj4XxpHpnomE99gD\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x0de74dfa6b37943c1b834cbd8fb7a8d052e5ff80c7adb33692102dd6cd2985e9\",\"urls\":[\"bzz-raw://9d2d827fcf4a838f5821732c0acd6a40d21c2a5a2cfe2563feec91465f47bb60\",\"dweb:/ipfs/Qmex3wMKf5Sghbfvr288RUg1kP2uAyTMf11w83WbMbpQQc\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x04d34b3cd5677bea25f8dfceb6dec0eaa071d4d4b789a43f13fe0c415ba4c296\",\"urls\":[\"bzz-raw://e7e8b526a6839e5ba14f0d23a830387fec47f7043ce01d42c9f285b709a9d080\",\"dweb:/ipfs/QmXmhhFmX5gcAvVzNiDPAGA35iHMPNaYtQkACswRHBVTNw\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x3211de52f707a62a356a34fdea9d6a7bed46402d5ce45f1891a16fe2132fbb47\",\"urls\":[\"bzz-raw://45dfe794ad43a3674fab38a378c57eb6ed3353949f6529ccad4a4cbc91d45fc5\",\"dweb:/ipfs/QmReFGciE9fgsb6Nas1Fx593pzKWMjaDa1VQg4CEJQaD6U\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x6cc1cb934a3ac2137a7dcaed018af9e235392236ceecfd3687259702b9c767ad\",\"urls\":[\"bzz-raw://0055fa88138cd1c3c6440370f8580f85857f8fe9dec41c99af9eafbeb8d9c3ce\",\"dweb:/ipfs/QmX1xDh8vwGLLCH8ti45eXjQ7Wcxv1FEGTR3jkFnd5Nv6F\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x5f7da58ee3d9faa9b8999a93d49c8ff978f1afc88ae9bcfc6f9cbb44da011c2b\",\"urls\":[\"bzz-raw://4f089d954b3ecaa26949412fe63e9a184b056562c6c13dd4a0529a5d9a2e685a\",\"dweb:/ipfs/QmVK5iCNAMcEJQxT59bsC5E53JQASDQPU6khHox3d5ZXCn\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200209138038062002091833981810160405260608110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82516401000000008111828201881017156200008957600080fd5b82525081516020918201929091019080838360005b83811015620000b85781810151838201526020016200009e565b50505050905090810190601f168015620000e65780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200010a57600080fd5b9083019060208201858111156200012057600080fd5b82516401000000008111828201881017156200013b57600080fd5b82525081516020918201929091019080838360005b838110156200016a57818101518382015260200162000150565b50505050905090810190601f168015620001985780820380516001836020036101000a031916815260200191505b5060405260209081015185519093508592508491849184918491620001c4916003919085019062000654565b508051620001da90600490602084019062000654565b50506005805460ff1916601217905550620001f58162000263565b620002036000803362000279565b6200022060015b6040805160008082526020820190925262000394565b6200022c60026200020a565b50506007805460ff191660011790555062000246620004a9565b6200025062000503565b6200025a6200050f565b505050620006f0565b6005805460ff191660ff92909216919091179055565b826000808281526006602052604090206001015460ff1660028111156200029c57fe5b14620002ef576040805162461bcd60e51b815260206004820152601e60248201527f43616e6e6f74207573652061207072652d6578697374696e6720726f6c650000604482015290519081900360640190fd5b60008481526006602052604090206001808201805460ff1916828002179055508381556200032d60028201846200051e602090811b62000f5b17901c565b60008481526006602052604081206001015460ff1660028111156200034e57fe5b14156200038d5760405162461bcd60e51b815260040180806020018281038252603c81526020018062001ffa603c913960400191505060405180910390fd5b5050505050565b826000808281526006602052604090206001015460ff166002811115620003b757fe5b146200040a576040805162461bcd60e51b815260206004820152601e60248201527f43616e6e6f74207573652061207072652d6578697374696e6720726f6c650000604482015290519081900360640190fd5b600084815260066020908152604090912060018101805460ff191660021790558481559062000449906003830190859062000f656200052e821b17901c565b60008481526006602052604081206001015460ff1660028111156200046a57fe5b14156200038d5760405162461bcd60e51b8152600401808060200182810382526038815260200180620020596038913960400191505060405180910390fd5b60075460ff1662000501576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b565b6007805460ff19169055565b6007805460ff19166001179055565b6200052a82826200056f565b5050565b60005b81518110156200056a5762000561838383815181106200054d57fe5b6020026020010151620005d360201b60201c565b60010162000531565b505050565b6001600160a01b038116620005b65760405162461bcd60e51b8152600401808060200182810382526023815260200180620020366023913960400191505060405180910390fd5b81546001600160a01b0319166001600160a01b0391909116179055565b6001600160a01b0381166200062f576040805162461bcd60e51b815260206004820152601f60248201527f43616e6e6f74206164642030783020746f20612073686172656420726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200069757805160ff1916838001178555620006c7565b82800160010185558215620006c7579182015b82811115620006c7578251825591602001919060010190620006aa565b50620006d5929150620006d9565b5090565b5b80821115620006d55760008155600101620006da565b6118fa80620007006000396000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c806373cc802a116100de578063a9059cbb11610097578063ab3545e511610071578063ab3545e514610540578063d97c05be14610579578063dd62ed3e146105a5578063f44637ba146105d35761018e565b8063a9059cbb146104d1578063aa271e1a146104fd578063aaa14ca3146105235761018e565b806373cc802a146103f957806374d0a6761461041f5780637cdc1cb91461044b57806395d89b4114610477578063983b2d561461047f578063a457c2d7146104a55761018e565b8063313ce5671161014b57806342966c681161012557806342966c68146103645780634334614a146103815780636be7658b146103a757806370a08231146103d35761018e565b8063313ce567146102ee578063395093511461030c57806340c10f19146103385761018e565b8063028468581461019357806306fdde03146101bb578063095ea7b31461023857806318160ddd1461027857806323b872dd146102925780633092afd5146102c8575b600080fd5b6101b9600480360360208110156101a957600080fd5b50356001600160a01b03166105f9565b005b6101c3610620565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101fd5781810151838201526020016101e5565b50505050905090810190601f16801561022a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102646004803603604081101561024e57600080fd5b506001600160a01b0381351690602001356106b6565b604080519115158252519081900360200190f35b6102806106d4565b60408051918252519081900360200190f35b610264600480360360608110156102a857600080fd5b506001600160a01b038135811691602081013590911690604001356106da565b6101b9600480360360208110156102de57600080fd5b50356001600160a01b0316610761565b6102f661077b565b6040805160ff9092168252519081900360200190f35b6102646004803603604081101561032257600080fd5b506001600160a01b038135169060200135610784565b6102646004803603604081101561034e57600080fd5b506001600160a01b0381351690602001356107d2565b6101b96004803603602081101561037a57600080fd5b5035610825565b6102646004803603602081101561039757600080fd5b50356001600160a01b031661087a565b6101b9600480360360408110156103bd57600080fd5b50803590602001356001600160a01b0316610890565b610280600480360360208110156103e957600080fd5b50356001600160a01b031661099e565b6101b96004803603602081101561040f57600080fd5b50356001600160a01b03166109b9565b6101b96004803603604081101561043557600080fd5b50803590602001356001600160a01b03166109d4565b6102646004803603604081101561046157600080fd5b50803590602001356001600160a01b0316610ae2565b6101c3610b85565b6101b96004803603602081101561049557600080fd5b50356001600160a01b0316610be6565b610264600480360360408110156104bb57600080fd5b506001600160a01b038135169060200135610c02565b610264600480360360408110156104e757600080fd5b506001600160a01b038135169060200135610c6a565b6102646004803603602081101561051357600080fd5b50356001600160a01b0316610c7e565b6101b96004803603602081101561053957600080fd5b5035610c92565b61055d6004803603602081101561055657600080fd5b5035610d86565b604080516001600160a01b039092168252519081900360200190f35b6101b96004803603604081101561058f57600080fd5b50803590602001356001600160a01b0316610e08565b610280600480360360408110156105bb57600080fd5b506001600160a01b0381358116916020013516610f16565b6101b9600480360360208110156105e957600080fd5b50356001600160a01b0316610f41565b610601610f9b565b610609610ff4565b61061560025b82610890565b61061d611000565b50565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106ac5780601f10610681576101008083540402835291602001916106ac565b820191906000526020600020905b81548152906001019060200180831161068f57829003601f168201915b5050505050905090565b60006106ca6106c361100f565b8484611013565b5060015b92915050565b60025490565b60006106e78484846110ff565b610757846106f361100f565b610752856040518060600160405280602881526020016117c7602891396001600160a01b038a1660009081526001602052604081209061073161100f565b6001600160a01b03168152602081019190915260400160002054919061125a565b611013565b5060019392505050565b610769610f9b565b610771610ff4565b610615600161060f565b60055460ff1690565b60006106ca61079161100f565b8461075285600160006107a261100f565b6001600160a01b03908116825260208083019390935260409182016000908120918c1681529252902054906112f1565b600060016107e08133610ae2565b61081b5760405162461bcd60e51b81526004018080602001828103825260228152602001806117a56022913960400191505060405180910390fd5b610757848461134b565b60026108318133610ae2565b61086c5760405162461bcd60e51b81526004018080602001828103825260228152602001806117a56022913960400191505060405180910390fd5b610876338361143b565b5050565b6000610884610f9b565b6106ce60025b83610ae2565b81600260008281526006602052604090206001015460ff1660028111156108b357fe5b146108ef5760405162461bcd60e51b815260040180806020018281038252602c815260200180611779602c913960400191505060405180910390fd5b600083815260066020526040902054839061090a9033610ae2565b6109455760405162461bcd60e51b815260040180806020018281038252602481526020018061187c6024913960400191505060405180910390fd5b60008481526006602052604090206109609060030184611537565b60405133906001600160a01b0385169086907feb3e33034c392e69263b04ec0fa376dc12784a41b6676c7f31b936cbc0fbb5af90600090a450505050565b6001600160a01b031660009081526020819052604090205490565b6109c1610f9b565b6109c9610ff4565b610615600082610e08565b81600260008281526006602052604090206001015460ff1660028111156109f757fe5b14610a335760405162461bcd60e51b815260040180806020018281038252602c815260200180611779602c913960400191505060405180910390fd5b6000838152600660205260409020548390610a4e9033610ae2565b610a895760405162461bcd60e51b815260040180806020018281038252602481526020018061187c6024913960400191505060405180910390fd5b6000848152600660205260409020610aa49060030184611559565b60405133906001600160a01b0385169086907f63502af7324ff6db91ab38f8236a648727d9385ea6c782073dd4882d8a61a48f90600090a450505050565b600082815260066020526040812060018082015460ff166002811115610b0457fe5b1415610b1f57610b1760028201846115d9565b9150506106ce565b6002600182015460ff166002811115610b3457fe5b1415610b4757610b1760038201846115ec565b6040805162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081c9bdb19525960921b604482015290519081900360640190fd5b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156106ac5780601f10610681576101008083540402835291602001916106ac565b610bee610f9b565b610bf6610ff4565b61061560015b826109d4565b60006106ca610c0f61100f565b84610752856040518060600160405280602581526020016118a06025913960016000610c3961100f565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919061125a565b60006106ca610c7761100f565b84846110ff565b6000610c88610f9b565b6106ce600161088a565b80600260008281526006602052604090206001015460ff166002811115610cb557fe5b14610cf15760405162461bcd60e51b815260040180806020018281038252602c815260200180611779602c913960400191505060405180910390fd5b81610cfc8133610ae2565b610d375760405162461bcd60e51b81526004018080602001828103825260228152602001806117a56022913960400191505060405180910390fd5b6000838152600660205260409020610d529060030133611537565b6040513390819085907feb3e33034c392e69263b04ec0fa376dc12784a41b6676c7f31b936cbc0fbb5af90600090a4505050565b600081600160008281526006602052604090206001015460ff166002811115610dab57fe5b14610de75760405162461bcd60e51b815260040180806020018281038252602f81526020018061174a602f913960400191505060405180910390fd5b6000838152600660205260409020610e019060020161160b565b9392505050565b81600160008281526006602052604090206001015460ff166002811115610e2b57fe5b14610e675760405162461bcd60e51b815260040180806020018281038252602f81526020018061174a602f913960400191505060405180910390fd5b6000838152600660205260409020548390610e829033610ae2565b610ebd5760405162461bcd60e51b815260040180806020018281038252602481526020018061187c6024913960400191505060405180910390fd5b6000848152600660205260409020610ed89060020184611618565b60405133906001600160a01b0385169086907f3b855c56b409b671c7112789d022675eb639d0bcb8896f1b6197c132f799e74690600090a450505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610f49610f9b565b610f51610ff4565b6106156002610bfc565b6108768282611618565b60005b8151811015610f9657610f8e83838381518110610f8157fe5b6020026020010151611559565b600101610f68565b505050565b60075460ff16610ff2576040805162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015290519081900360640190fd5b565b6007805460ff19169055565b6007805460ff19166001179055565b3390565b6001600160a01b0383166110585760405162461bcd60e51b81526004018080602001828103825260248152602001806118586024913960400191505060405180910390fd5b6001600160a01b03821661109d5760405162461bcd60e51b81526004018080602001828103825260228152602001806117026022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166111445760405162461bcd60e51b81526004018080602001828103825260258152602001806118336025913960400191505060405180910390fd5b6001600160a01b0382166111895760405162461bcd60e51b81526004018080602001828103825260238152602001806116bd6023913960400191505060405180910390fd5b611194838383610f96565b6111d181604051806060016040528060268152602001611724602691396001600160a01b038616600090815260208190526040902054919061125a565b6001600160a01b03808516600090815260208190526040808220939093559084168152205461120090826112f1565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600081848411156112e95760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156112ae578181015183820152602001611296565b50505050905090810190601f1680156112db5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610e01576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6001600160a01b0382166113a6576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b6113b260008383610f96565b6002546113bf90826112f1565b6002556001600160a01b0382166000908152602081905260409020546113e590826112f1565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b0382166114805760405162461bcd60e51b81526004018080602001828103825260218152602001806117ef6021913960400191505060405180910390fd5b61148c82600083610f96565b6114c9816040518060600160405280602281526020016116e0602291396001600160a01b038516600090815260208190526040902054919061125a565b6001600160a01b0383166000908152602081905260409020556002546114ef908261167a565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b6001600160a01b0316600090815260209190915260409020805460ff19169055565b6001600160a01b0381166115b4576040805162461bcd60e51b815260206004820152601f60248201527f43616e6e6f74206164642030783020746f20612073686172656420726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b90546001600160a01b0391821691161490565b6001600160a01b03166000908152602091909152604090205460ff1690565b546001600160a01b031690565b6001600160a01b03811661165d5760405162461bcd60e51b81526004018080602001828103825260238152602001806118106023913960400191505060405180910390fd5b81546001600160a01b0319166001600160a01b0391909116179055565b6000610e0183836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061125a56fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63654d7573742062652063616c6c6564206f6e20616e20696e697469616c697a6564204578636c757369766520726f6c654d7573742062652063616c6c6564206f6e20616e20696e697469616c697a65642053686172656420726f6c6553656e64657220646f6573206e6f7420686f6c6420726571756972656420726f6c6545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737343616e6e6f742073657420616e206578636c757369766520726f6c6520746f2030783045524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737343616e206f6e6c792062652063616c6c6564206279206120726f6c65206d616e6167657245524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212203544aea3824f6f53de58b5c8ec68f81f7b1e65d4a793d4e8c4c36be534760ebb64736f6c634300060c0033417474656d7074656420746f2075736520616e20696e76616c696420726f6c6520746f206d616e61676520616e206578636c757369766520726f6c6543616e6e6f742073657420616e206578636c757369766520726f6c6520746f20307830417474656d7074656420746f2075736520616e20696e76616c696420726f6c6520746f206d616e61676520612073686172656420726f6c65",
  "deployedBytecode": "",
  "immutableReferences": {},
  "sourceMap": "333:2822:30:-:0;;;676:192;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;676:192:30;;;;;;;;;;-1:-1:-1;676:192:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;676:192:30;;;;;;;;;;-1:-1:-1;676:192:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;676:192:30;;;;;;;2046:12:96;;676:192:30;;-1:-1:-1;812:9:30;;-1:-1:-1;823:11:30;;676:192;;812:9;;823:11;;2046:12:96;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;2068:16:96;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;;2094:9:96;:14;;-1:-1:-1;;2094:14:96;2106:2;2094:14;;;-1:-1:-1;1088:30:2::1;1103:14:::0;1088::::1;:30::i;:::-;1128:76;1157:11;1179::::0;1193:10:::1;1128:20;:76::i;:::-;1214:80;1240:12;1232:21;1277:16;::::0;;1263:11:::1;1277:16:::0;;;::::1;::::0;::::1;::::0;;;1214:17:::1;:80::i;:::-;1304;1330:12;1322:21;::::0;1304:80:::1;-1:-1:-1::0;;905:11:4;:18;;-1:-1:-1;;905:18:4;919:4;905:18;;;-1:-1:-1;1339:19:4::1;:17;:19::i;:::-;1368:17;:15;:17::i;:::-;1406:20;:18;:20::i;:::-;676:192:30::0;;;333:2822;;9983:88:96;10043:9;:21;;-1:-1:-1;;10043:21:96;;;;;;;;;;;;9983:88::o;8816:519:5:-;8964:6;7559:16;7533:13;;;;:5;:13;;;;;:22;;;;;:42;;;;;;;;;7525:85;;;;;-1:-1:-1;;;7525:85:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;8982:17:::1;9002:13:::0;;;:5:::1;:13;::::0;;;;9041:18:::1;9025:13:::0;;::::1;:34:::0;;-1:-1:-1;;9025:34:5::1;9041:18:::0;;9025:34:::1;;::::0;;-1:-1:-1;9069:34:5;;;9113:48:::1;:28;::::0;::::1;9147:13:::0;9113:33:::1;;::::0;;::::1;;;:48:::0;::::1;:::i;:::-;9226:16;9192:21:::0;;;:5:::1;:21;::::0;;;;:30:::1;;::::0;::::1;;:50;::::0;::::1;;;;;;;;9171:157;;;;-1:-1:-1::0;;;9171:157:5::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7620:1;8816:519:::0;;;;:::o;7962:517::-;8117:6;7559:16;7533:13;;;;:5;:13;;;;;:22;;;;;:42;;;;;;;;;7525:85;;;;;-1:-1:-1;;;7525:85:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;8135:17:::1;8155:13:::0;;;:5:::1;:13;::::0;;;;;;;8178::::1;::::0;::::1;:31:::0;;-1:-1:-1;;8178:31:5::1;8194:15;8178:31;::::0;;8219:34;;;8155:13;8263:46:::1;::::0;:25:::1;::::0;::::1;::::0;8294:14;;8263:30:::1;;::::0;::::1;;:46:::0;::::1;:::i;:::-;8374:16;8340:21:::0;;;:5:::1;:21;::::0;;;;:30:::1;;::::0;::::1;;:50;::::0;::::1;;;;;;;;8319:153;;;;-1:-1:-1::0;;;8319:153:5::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:186:4::0;2290:11;;;;2282:55;;;;;-1:-1:-1;;;2282:55:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:186::o;2350:136::-;2460:11;:19;;-1:-1:-1;;2460:19:4;;;2350:136::o;2492:206::-;2673:11;:18;;-1:-1:-1;;2673:18:4;2687:4;2673:18;;;2492:206::o;695:144:5:-;790:42;802:14;818:13;790:11;:42::i;:::-;695:144;;:::o;1514:232::-;1624:9;1619:121;1643:14;:21;1639:1;:25;1619:121;;;1685:44;1695:14;1711;1726:1;1711:17;;;;;;;;;;;;;;1685:9;;;:44;;:::i;:::-;1666:3;;1619:121;;;;1514:232;;:::o;327:221::-;-1:-1:-1;;;;;433:25:5;;425:73;;;;-1:-1:-1;;;425:73:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;508:33;;-1:-1:-1;;;;;;508:33:5;-1:-1:-1;;;;;508:33:5;;;;;;;327:221::o;1117:228::-;-1:-1:-1;;;;;1223:27:5;;1215:71;;;;;-1:-1:-1;;;1215:71:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1296:35:5;:22;:35;;;;;;;;;;;:42;;-1:-1:-1;;1296:42:5;-1:-1:-1;1296:42:5;;;1117:228::o;333:2822:30:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;333:2822:30;;;-1:-1:-1;333:2822:30;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "333:2822:30:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1997:124;;;;;;;;;;;;;;;;-1:-1:-1;1997:124:30;-1:-1:-1;;;;;1997:124:30;;:::i;:::-;;2180:81:96;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4216:166;;;;;;;;;;;;;;;;-1:-1:-1;4216:166:96;;-1:-1:-1;;;;;4216:166:96;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3223:98;;;:::i;:::-;;;;;;;;;;;;;;;;4842:317;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4842:317:96;;;;;;;;;;;;;;;;;:::i;1370:124:30:-;;;;;;;;;;;;;;;;-1:-1:-1;1370:124:30;-1:-1:-1;;;;;1370:124:30;;:::i;3082:81:96:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5554:215;;;;;;;;;;;;;;;;-1:-1:-1;5554:215:96;;-1:-1:-1;;;;;5554:215:96;;;;;;:::i;1632:216:2:-;;;;;;;;;;;;;;;;-1:-1:-1;1632:216:2;;-1:-1:-1;;;;;1632:216:2;;;;;;:::i;1972:126::-;;;;;;;;;;;;;;;;-1:-1:-1;1972:126:2;;:::i;3007:146:30:-;;;;;;;;;;;;;;;;-1:-1:-1;3007:146:30;-1:-1:-1;;;;;3007:146:30;;:::i;6404:262:5:-;;;;;;;;;;;;;;;;-1:-1:-1;6404:262:5;;;;;;-1:-1:-1;;;;;6404:262:5;;:::i;3379:117:96:-;;;;;;;;;;;;;;;;-1:-1:-1;3379:117:96;-1:-1:-1;;;;;3379:117:96;;:::i;2292:129:30:-;;;;;;;;;;;;;;;;-1:-1:-1;2292:129:30;-1:-1:-1;;;;;2292:129:30;;:::i;5790:239:5:-;;;;;;;;;;;;;;;;-1:-1:-1;5790:239:5;;;;;;-1:-1:-1;;;;;5790:239:5;;:::i;3945:428::-;;;;;;;;;;;;;;;;-1:-1:-1;3945:428:5;;;;;;-1:-1:-1;;;;;3945:428:5;;:::i;2374:85:96:-;;;:::i;1051:127:30:-;;;;;;;;;;;;;;;;-1:-1:-1;1051:127:30;-1:-1:-1;;;;;1051:127:30;;:::i;6256:266:96:-;;;;;;;;;;;;;;;;-1:-1:-1;6256:266:96;;-1:-1:-1;;;;;6256:266:96;;;;;;:::i;3699:172::-;;;;;;;;;;;;;;;;-1:-1:-1;3699:172:96;;-1:-1:-1;;;;;3699:172:96;;;;;;:::i;2641:146:30:-;;;;;;;;;;;;;;;;-1:-1:-1;2641:146:30;-1:-1:-1;;;;;2641:146:30;;:::i;6933:235:5:-;;;;;;;;;;;;;;;;-1:-1:-1;6933:235:5;;:::i;5284:160::-;;;;;;;;;;;;;;;;-1:-1:-1;5284:160:5;;:::i;:::-;;;;-1:-1:-1;;;;;5284:160:5;;;;;;;;;;;;;;4731:252;;;;;;;;;;;;;;;;-1:-1:-1;4731:252:5;;;;;;-1:-1:-1;;;;;4731:252:5;;:::i;3929:149:96:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3929:149:96;;;;;;;;;;:::i;1677:127:30:-;;;;;;;;;;;;;;;;-1:-1:-1;1677:127:30;-1:-1:-1;;;;;1677:127:30;;:::i;1997:124::-;1339:19:4;:17;:19::i;:::-;1368:17;:15;:17::i;:::-;2070:44:30::1;2091:12;2083:21;2106:7;2070:12;:44::i;:::-;1406:20:4::0;:18;:20::i;:::-;1997:124:30;:::o;2180:81:96:-;2249:5;2242:12;;;;;;;;;;;;;-1:-1:-1;;2242:12:96;;;;;;;;;;;;;;;;;;;;;;;;;;2217:13;;2242:12;;2249:5;;2242:12;;;2249:5;2242:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2180:81;:::o;4216:166::-;4299:4;4315:39;4324:12;:10;:12::i;:::-;4338:7;4347:6;4315:8;:39::i;:::-;-1:-1:-1;4371:4:96;4216:166;;;;;:::o;3223:98::-;3302:12;;3223:98;:::o;4842:317::-;4948:4;4964:36;4974:6;4982:9;4993:6;4964:9;:36::i;:::-;5010:121;5019:6;5027:12;:10;:12::i;:::-;5041:89;5079:6;5041:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5041:19:96;;;;;;-1:-1:-1;5041:19:96;;;;;;5061:12;:10;:12::i;:::-;-1:-1:-1;;;;;5041:33:96;;;;;;;;;;;;-1:-1:-1;5041:33:96;;;;:37;:89::i;:::-;5010:8;:121::i;:::-;-1:-1:-1;5148:4:96;4842:317;;;;;:::o;1370:124:30:-;1339:19:4;:17;:19::i;:::-;1368:17;:15;:17::i;:::-;1443:44:30::1;1464:12;1456:21;::::0;3082:81:96;3147:9;;;;3082:81;:::o;5554:215::-;5642:4;5658:83;5667:12;:10;:12::i;:::-;5681:7;5690:50;5729:10;5690:11;:25;5702:12;:10;:12::i;:::-;-1:-1:-1;;;;;5690:25:96;;;;;;;;;;;;;;;;;-1:-1:-1;5690:25:96;;;:34;;;;;;;;;;;:38;:50::i;1632:216:2:-;1777:4;1745:12;2713:29:5;2723:6;2731:10;2713:9;:29::i;:::-;2705:76;;;;-1:-1:-1;;;2705:76:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1797:23:2::1;1803:9;1814:5;1797;:23::i;1972:126::-:0;2042:12;2713:29:5;2723:6;2731:10;2713:9;:29::i;:::-;2705:76;;;;-1:-1:-1;;;2705:76:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2067:24:2::1;2073:10;2085:5;2067;:24::i;:::-;1972:126:::0;;:::o;3007:146:30:-;3082:4;1625:19:4;:17;:19::i;:::-;3105:41:30::1;3123:12;3115:21;3138:7;3105:9;:41::i;6404:262:5:-:0;6484:6;3551:15;3525:13;;;;:5;:13;;;;;:22;;;;;:41;;;;;;;;;3517:98;;;;-1:-1:-1;;;3517:98:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2989:13:::1;::::0;;;:5:::1;:13;::::0;;;;:26;6508:6;;2979:49:::1;::::0;3017:10:::1;2979:9;:49::i;:::-;2971:98;;;;-1:-1:-1::0;;;2971:98:5::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6526:13:::2;::::0;;;:5:::2;:13;::::0;;;;:63:::2;::::0;:34:::2;;6574:14:::0;6526:47:::2;:63::i;:::-;6604:55;::::0;6648:10:::2;::::0;-1:-1:-1;;;;;6604:55:5;::::2;::::0;6624:6;;6604:55:::2;::::0;;;::::2;3625:1:::1;6404:262:::0;;;:::o;3379:117:96:-;-1:-1:-1;;;;;3471:18:96;3445:7;3471:18;;;;;;;;;;;;3379:117::o;2292:129:30:-;1339:19:4;:17;:19::i;:::-;1368:17;:15;:17::i;:::-;2372:42:30::1;2392:11;2406:7;2372:11;:42::i;5790:239:5:-:0;5862:6;3551:15;3525:13;;;;:5;:13;;;;;:22;;;;;:41;;;;;;;;;3517:98;;;;-1:-1:-1;;;3517:98:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2989:13:::1;::::0;;;:5:::1;:13;::::0;;;;:26;5886:6;;2979:49:::1;::::0;3017:10:::1;2979:9;:49::i;:::-;2971:98;;;;-1:-1:-1::0;;;2971:98:5::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5904:13:::2;::::0;;;:5:::2;:13;::::0;;;;:55:::2;::::0;:34:::2;;5949:9:::0;5904:44:::2;:55::i;:::-;5974:48;::::0;6011:10:::2;::::0;-1:-1:-1;;;;;5974:48:5;::::2;::::0;5992:6;;5974:48:::2;::::0;;;::::2;3625:1:::1;5790:239:::0;;;:::o;3945:428::-;4024:4;4060:13;;;:5;:13;;;;;4104:18;4087:13;;;;;;:35;;;;;;;;;4083:250;;;4145:52;:28;;;4183:13;4145:37;:52::i;:::-;4138:59;;;;;4083:250;4235:15;4218:13;;;;;;:32;;;;;;;;;4214:119;;;4273:49;:25;;;4308:13;4273:34;:49::i;4214:119::-;4342:24;;;-1:-1:-1;;;4342:24:5;;;;;;;;;;;;-1:-1:-1;;;4342:24:5;;;;;;;;;;;;;;2374:85:96;2445:7;2438:14;;;;;;;;;;;;;-1:-1:-1;;2438:14:96;;;;;;;;;;;;;;;;;;;;;;;;;;2413:13;;2438:14;;2445:7;;2438:14;;;2445:7;2438:14;;;;;;;;;;;;;;;;;;;;;;;;1051:127:30;1339:19:4;:17;:19::i;:::-;1368:17;:15;:17::i;:::-;1130:41:30::1;1148:12;1140:21;1163:7;1130:9;:41::i;6256:266:96:-:0;6349:4;6365:129;6374:12;:10;:12::i;:::-;6388:7;6397:96;6436:15;6397:96;;;;;;;;;;;;;;;;;:11;:25;6409:12;:10;:12::i;:::-;-1:-1:-1;;;;;6397:25:96;;;;;;;;;;;;;;;;;-1:-1:-1;6397:25:96;;;:34;;;;;;;;;;;;:38;:96::i;3699:172::-;3785:4;3801:42;3811:12;:10;:12::i;:::-;3825:9;3836:6;3801:9;:42::i;2641:146:30:-;2716:4;1625:19:4;:17;:19::i;:::-;2739:41:30::1;2757:12;2749:21;::::0;6933:235:5;6995:6;3551:15;3525:13;;;;:5;:13;;;;;:22;;;;;:41;;;;;;;;;3517:98;;;;-1:-1:-1;;;3517:98:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7018:6:::1;2713:29;2723:6;2731:10;2713:9;:29::i;:::-;2705:76;;;;-1:-1:-1::0;;;2705:76:5::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7036:13:::2;::::0;;;:5:::2;:13;::::0;;;;:59:::2;::::0;:34:::2;;7084:10;7036:47;:59::i;:::-;7110:51;::::0;7150:10:::2;::::0;;;7130:6;;7110:51:::2;::::0;;;::::2;3625:1:::1;6933:235:::0;;:::o;5284:160::-;5362:7;5345:6;3278:18;3252:13;;;;:5;:13;;;;;:22;;;;;:44;;;;;;;;;3244:104;;;;-1:-1:-1;;;3244:104:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5388:13:::1;::::0;;;:5:::1;:13;::::0;;;;:49:::1;::::0;:37:::1;;:47;:49::i;:::-;5381:56:::0;5284:160;-1:-1:-1;;;5284:160:5:o;4731:252::-;4808:6;3278:18;3252:13;;;;:5;:13;;;;;:22;;;;;:44;;;;;;;;;3244:104;;;;-1:-1:-1;;;3244:104:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2989:13:::1;::::0;;;:5:::1;:13;::::0;;;;:26;4832:6;;2979:49:::1;::::0;3017:10:::1;2979:9;:49::i;:::-;2971:98;;;;-1:-1:-1::0;;;2971:98:5::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4850:13:::2;::::0;;;:5:::2;:13;::::0;;;;:60:::2;::::0;:37:::2;;4900:9:::0;4850:49:::2;:60::i;:::-;4925:51;::::0;4965:10:::2;::::0;-1:-1:-1;;;;;4925:51:5;::::2;::::0;4946:6;;4925:51:::2;::::0;;;::::2;3358:1:::1;4731:252:::0;;;:::o;3929:149:96:-;-1:-1:-1;;;;;4044:18:96;;;4018:7;4044:18;;;-1:-1:-1;4044:18:96;;;;;;;;:27;;;;;;;;;;;;;3929:149::o;1677:127:30:-;1339:19:4;:17;:19::i;:::-;1368:17;:15;:17::i;:::-;1756:41:30::1;1774:12;1766:21;::::0;695:144:5;790:42;802:14;818:13;790:11;:42::i;1514:232::-;1624:9;1619:121;1643:14;:21;1639:1;:25;1619:121;;;1685:44;1695:14;1711;1726:1;1711:17;;;;;;;;;;;;;;1685:9;:44::i;:::-;1666:3;;1619:121;;;;1514:232;;:::o;2158:186:4:-;2290:11;;;;2282:55;;;;;-1:-1:-1;;;2282:55:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:186::o;2350:136::-;2460:11;:19;;-1:-1:-1;;2460:19:4;;;2350:136::o;2492:206::-;2673:11;:18;;-1:-1:-1;;2673:18:4;2687:4;2673:18;;;2492:206::o;735:104:90:-;822:10;735:104;:::o;9320:340:96:-;-1:-1:-1;;;;;9421:19:96;;9413:68;;;;-1:-1:-1;;;9413:68:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9499:21:96;;9491:68;;;;-1:-1:-1;;;9491:68:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9570:18:96;;;;;;;-1:-1:-1;9570:18:96;;;;;;;;:27;;;;;;;;;;;;;:36;;;9621:32;;;;;;;;;;;;;;;;;9320:340;;;:::o;6996:530::-;-1:-1:-1;;;;;7101:20:96;;7093:70;;;;-1:-1:-1;;;7093:70:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7181:23:96;;7173:71;;;;-1:-1:-1;;;7173:71:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7255:47;7276:6;7284:9;7295:6;7255:20;:47::i;:::-;7333:71;7355:6;7333:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7333:17:96;;:9;:17;;;;;;;;;;;;;:21;:71::i;:::-;-1:-1:-1;;;;;7313:17:96;;;:9;:17;;;;;;;;;;;:91;;;;7437:20;;;;;;;:32;;7462:6;7437:24;:32::i;:::-;-1:-1:-1;;;;;7414:20:96;;;:9;:20;;;;;;;;;;;;:55;;;;7484:35;;;;;;;7414:20;;7484:35;;;;;;;;;;;;;6996:530;;;:::o;1692:187:94:-;1778:7;1813:12;1805:6;;;;1797:29;;;;-1:-1:-1;;;1797:29:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1848:5:94;;;1692:187::o;834:176::-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:94;;;;;;;;;;;;;;;;;;;;;;;;;;;7796:370:96;-1:-1:-1;;;;;7879:21:96;;7871:65;;;;;-1:-1:-1;;;7871:65:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;7947:49;7976:1;7980:7;7989:6;7947:20;:49::i;:::-;8022:12;;:24;;8039:6;8022:16;:24::i;:::-;8007:12;:39;-1:-1:-1;;;;;8077:18:96;;:9;:18;;;;;;;;;;;:30;;8100:6;8077:22;:30::i;:::-;-1:-1:-1;;;;;8056:18:96;;:9;:18;;;;;;;;;;;:51;;;;8122:37;;;;;;;8056:18;;:9;;8122:37;;;;;;;;;;7796:370;;:::o;8485:410::-;-1:-1:-1;;;;;8568:21:96;;8560:67;;;;-1:-1:-1;;;8560:67:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8638:49;8659:7;8676:1;8680:6;8638:20;:49::i;:::-;8719:68;8742:6;8719:68;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8719:18:96;;:9;:18;;;;;;;;;;;;;:22;:68::i;:::-;-1:-1:-1;;;;;8698:18:96;;:9;:18;;;;;;;;;;:89;8812:12;;:24;;8829:6;8812:16;:24::i;:::-;8797:12;:39;8851:37;;;;;;;;8877:1;;-1:-1:-1;;;;;8851:37:96;;;;;;;;;;;;8485:410;;:::o;1351:157:5:-;-1:-1:-1;;;;;1455:38:5;1496:5;1455:38;;;;;;;;;;;:46;;-1:-1:-1;;1455:46:5;;;1351:157::o;1117:228::-;-1:-1:-1;;;;;1223:27:5;;1215:71;;;;;-1:-1:-1;;;1215:71:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1296:35:5;:22;:35;;;;;;;;;;;:42;;-1:-1:-1;;1296:42:5;-1:-1:-1;1296:42:5;;;1117:228::o;150:171::-;276:21;;-1:-1:-1;;;;;276:21:5;;;:38;;;;150:171::o;941:170::-;-1:-1:-1;;;;;1067:37:5;1044:4;1067:37;;;;;;;;;;;;;;;941:170::o;554:135::-;661:21;-1:-1:-1;;;;;661:21:5;;554:135::o;327:221::-;-1:-1:-1;;;;;433:25:5;;425:73;;;;-1:-1:-1;;;425:73:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;508:33;;-1:-1:-1;;;;;;508:33:5;-1:-1:-1;;;;;508:33:5;;;;;;;327:221::o;1274:134:94:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i",
  "source": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity ^0.6.0;\nimport \"../../common/implementation/ExpandedERC20.sol\";\nimport \"../../common/implementation/Lockable.sol\";\n\n/**\n * @title Burnable and mintable ERC20.\n * @dev The contract deployer will initially be the only minter, burner and owner capable of adding new roles.\n */\n\ncontract SyntheticToken is ExpandedERC20, Lockable {\n    /**\n     * @notice Constructs the SyntheticToken.\n     * @param tokenName The name which describes the new token.\n     * @param tokenSymbol The ticker abbreviation of the name. Ideally < 5 chars.\n     * @param tokenDecimals The number of decimals to define token precision.\n     */\n    constructor(\n        string memory tokenName,\n        string memory tokenSymbol,\n        uint8 tokenDecimals\n    ) public ExpandedERC20(tokenName, tokenSymbol, tokenDecimals) nonReentrant() {}\n\n    /**\n     * @notice Add Minter role to account.\n     * @dev The caller must have the Owner role.\n     * @param account The address to which the Minter role is added.\n     */\n    function addMinter(address account) external override nonReentrant() {\n        addMember(uint256(Roles.Minter), account);\n    }\n\n    /**\n     * @notice Remove Minter role from account.\n     * @dev The caller must have the Owner role.\n     * @param account The address from which the Minter role is removed.\n     */\n    function removeMinter(address account) external nonReentrant() {\n        removeMember(uint256(Roles.Minter), account);\n    }\n\n    /**\n     * @notice Add Burner role to account.\n     * @dev The caller must have the Owner role.\n     * @param account The address to which the Burner role is added.\n     */\n    function addBurner(address account) external override nonReentrant() {\n        addMember(uint256(Roles.Burner), account);\n    }\n\n    /**\n     * @notice Removes Burner role from account.\n     * @dev The caller must have the Owner role.\n     * @param account The address from which the Burner role is removed.\n     */\n    function removeBurner(address account) external nonReentrant() {\n        removeMember(uint256(Roles.Burner), account);\n    }\n\n    /**\n     * @notice Reset Owner role to account.\n     * @dev The caller must have the Owner role.\n     * @param account The new holder of the Owner role.\n     */\n    function resetOwner(address account) external override nonReentrant() {\n        resetMember(uint256(Roles.Owner), account);\n    }\n\n    /**\n     * @notice Checks if a given account holds the Minter role.\n     * @param account The address which is checked for the Minter role.\n     * @return bool True if the provided account is a Minter.\n     */\n    function isMinter(address account) public view nonReentrantView() returns (bool) {\n        return holdsRole(uint256(Roles.Minter), account);\n    }\n\n    /**\n     * @notice Checks if a given account holds the Burner role.\n     * @param account The address which is checked for the Burner role.\n     * @return bool True if the provided account is a Burner.\n     */\n    function isBurner(address account) public view nonReentrantView() returns (bool) {\n        return holdsRole(uint256(Roles.Burner), account);\n    }\n}\n",
  "sourcePath": "/Users/chris/temp/protocol/packages/core/contracts/financial-templates/common/SyntheticToken.sol",
  "ast": {
    "absolutePath": "/Users/chris/temp/protocol/packages/core/contracts/financial-templates/common/SyntheticToken.sol",
    "exportedSymbols": {
      "SyntheticToken": [
        6553
      ]
    },
    "id": 6554,
    "license": "AGPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6394,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:23:30"
      },
      {
        "absolutePath": "/Users/chris/temp/protocol/packages/core/contracts/common/implementation/ExpandedERC20.sol",
        "file": "../../common/implementation/ExpandedERC20.sol",
        "id": 6395,
        "nodeType": "ImportDirective",
        "scope": 6554,
        "sourceUnit": 453,
        "src": "66:55:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chris/temp/protocol/packages/core/contracts/common/implementation/Lockable.sol",
        "file": "../../common/implementation/Lockable.sol",
        "id": 6396,
        "nodeType": "ImportDirective",
        "scope": 6554,
        "sourceUnit": 2019,
        "src": "122:50:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6398,
              "name": "ExpandedERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 452,
              "src": "360:13:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ExpandedERC20_$452",
                "typeString": "contract ExpandedERC20"
              }
            },
            "id": 6399,
            "nodeType": "InheritanceSpecifier",
            "src": "360:13:30"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6400,
              "name": "Lockable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2018,
              "src": "375:8:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Lockable_$2018",
                "typeString": "contract Lockable"
              }
            },
            "id": 6401,
            "nodeType": "InheritanceSpecifier",
            "src": "375:8:30"
          }
        ],
        "contractDependencies": [
          452,
          2018,
          2626,
          2917,
          24530,
          25692,
          26103
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 6397,
          "nodeType": "StructuredDocumentation",
          "src": "174:157:30",
          "text": " @title Burnable and mintable ERC20.\n @dev The contract deployer will initially be the only minter, burner and owner capable of adding new roles."
        },
        "fullyImplemented": true,
        "id": 6553,
        "linearizedBaseContracts": [
          6553,
          2018,
          452,
          2626,
          25692,
          2917,
          26103,
          24530
        ],
        "name": "SyntheticToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 6418,
              "nodeType": "Block",
              "src": "866:2:30",
              "statements": []
            },
            "documentation": {
              "id": 6402,
              "nodeType": "StructuredDocumentation",
              "src": "390:281:30",
              "text": " @notice Constructs the SyntheticToken.\n @param tokenName The name which describes the new token.\n @param tokenSymbol The ticker abbreviation of the name. Ideally < 5 chars.\n @param tokenDecimals The number of decimals to define token precision."
            },
            "id": 6419,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 6411,
                    "name": "tokenName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6404,
                    "src": "812:9:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 6412,
                    "name": "tokenSymbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6406,
                    "src": "823:11:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 6413,
                    "name": "tokenDecimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6408,
                    "src": "836:13:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 6414,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6410,
                  "name": "ExpandedERC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 452,
                  "src": "798:13:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ExpandedERC20_$452_$",
                    "typeString": "type(contract ExpandedERC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "798:52:30"
              },
              {
                "arguments": [],
                "id": 6416,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6415,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1984,
                  "src": "851:12:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "851:14:30"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6409,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6404,
                  "mutability": "mutable",
                  "name": "tokenName",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6419,
                  "src": "697:23:30",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6403,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "697:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6406,
                  "mutability": "mutable",
                  "name": "tokenSymbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6419,
                  "src": "730:25:30",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6405,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "730:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6408,
                  "mutability": "mutable",
                  "name": "tokenDecimals",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6419,
                  "src": "765:19:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 6407,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "765:5:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "687:103:30"
            },
            "returnParameters": {
              "id": 6417,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "866:0:30"
            },
            "scope": 6553,
            "src": "676:192:30",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              417
            ],
            "body": {
              "id": 6437,
              "nodeType": "Block",
              "src": "1120:58:30",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 6431,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 283,
                              "src": "1148:5:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$283_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 6432,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Minter",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1148:12:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$283",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$283",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 6430,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1140:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 6429,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1140:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 6433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1140:21:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6434,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6422,
                        "src": "1163:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 6428,
                      "name": "addMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2424,
                      "src": "1130:9:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 6435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1130:41:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6436,
                  "nodeType": "ExpressionStatement",
                  "src": "1130:41:30"
                }
              ]
            },
            "documentation": {
              "id": 6420,
              "nodeType": "StructuredDocumentation",
              "src": "874:172:30",
              "text": " @notice Add Minter role to account.\n @dev The caller must have the Owner role.\n @param account The address to which the Minter role is added."
            },
            "functionSelector": "983b2d56",
            "id": 6438,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 6426,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6425,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1984,
                  "src": "1105:12:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1105:14:30"
              }
            ],
            "name": "addMinter",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 6424,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1096:8:30"
            },
            "parameters": {
              "id": 6423,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6422,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6438,
                  "src": "1070:15:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6421,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1070:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1069:17:30"
            },
            "returnParameters": {
              "id": 6427,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1120:0:30"
            },
            "scope": 6553,
            "src": "1051:127:30",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6455,
              "nodeType": "Block",
              "src": "1433:61:30",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 6449,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 283,
                              "src": "1464:5:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$283_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 6450,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Minter",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1464:12:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$283",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$283",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 6448,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1456:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 6447,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1456:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 6451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1456:21:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6452,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6441,
                        "src": "1479:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 6446,
                      "name": "removeMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2454,
                      "src": "1443:12:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 6453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1443:44:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6454,
                  "nodeType": "ExpressionStatement",
                  "src": "1443:44:30"
                }
              ]
            },
            "documentation": {
              "id": 6439,
              "nodeType": "StructuredDocumentation",
              "src": "1184:181:30",
              "text": " @notice Remove Minter role from account.\n @dev The caller must have the Owner role.\n @param account The address from which the Minter role is removed."
            },
            "functionSelector": "3092afd5",
            "id": 6456,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 6444,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6443,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1984,
                  "src": "1418:12:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1418:14:30"
              }
            ],
            "name": "removeMinter",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6442,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6441,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6456,
                  "src": "1392:15:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6440,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1392:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1391:17:30"
            },
            "returnParameters": {
              "id": 6445,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1433:0:30"
            },
            "scope": 6553,
            "src": "1370:124:30",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              434
            ],
            "body": {
              "id": 6474,
              "nodeType": "Block",
              "src": "1746:58:30",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 6468,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 283,
                              "src": "1774:5:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$283_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 6469,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Burner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1774:12:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$283",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$283",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 6467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1766:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 6466,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1766:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 6470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1766:21:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6471,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6459,
                        "src": "1789:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 6465,
                      "name": "addMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2424,
                      "src": "1756:9:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 6472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1756:41:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6473,
                  "nodeType": "ExpressionStatement",
                  "src": "1756:41:30"
                }
              ]
            },
            "documentation": {
              "id": 6457,
              "nodeType": "StructuredDocumentation",
              "src": "1500:172:30",
              "text": " @notice Add Burner role to account.\n @dev The caller must have the Owner role.\n @param account The address to which the Burner role is added."
            },
            "functionSelector": "f44637ba",
            "id": 6475,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 6463,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6462,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1984,
                  "src": "1731:12:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1731:14:30"
              }
            ],
            "name": "addBurner",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 6461,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1722:8:30"
            },
            "parameters": {
              "id": 6460,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6459,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6475,
                  "src": "1696:15:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6458,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1696:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1695:17:30"
            },
            "returnParameters": {
              "id": 6464,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1746:0:30"
            },
            "scope": 6553,
            "src": "1677:127:30",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6492,
              "nodeType": "Block",
              "src": "2060:61:30",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 6486,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 283,
                              "src": "2091:5:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$283_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 6487,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Burner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2091:12:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$283",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$283",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 6485,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2083:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 6484,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2083:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 6488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2083:21:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6489,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6478,
                        "src": "2106:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 6483,
                      "name": "removeMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2454,
                      "src": "2070:12:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 6490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2070:44:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6491,
                  "nodeType": "ExpressionStatement",
                  "src": "2070:44:30"
                }
              ]
            },
            "documentation": {
              "id": 6476,
              "nodeType": "StructuredDocumentation",
              "src": "1810:182:30",
              "text": " @notice Removes Burner role from account.\n @dev The caller must have the Owner role.\n @param account The address from which the Burner role is removed."
            },
            "functionSelector": "02846858",
            "id": 6493,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 6481,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6480,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1984,
                  "src": "2045:12:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2045:14:30"
              }
            ],
            "name": "removeBurner",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6479,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6478,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6493,
                  "src": "2019:15:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6477,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2019:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2018:17:30"
            },
            "returnParameters": {
              "id": 6482,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2060:0:30"
            },
            "scope": 6553,
            "src": "1997:124:30",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              451
            ],
            "body": {
              "id": 6511,
              "nodeType": "Block",
              "src": "2362:59:30",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 6505,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 283,
                              "src": "2392:5:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$283_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 6506,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2392:11:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$283",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$283",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 6504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2384:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 6503,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2384:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 6507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2384:20:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6508,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6496,
                        "src": "2406:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 6502,
                      "name": "resetMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2375,
                      "src": "2372:11:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 6509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2372:42:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6510,
                  "nodeType": "ExpressionStatement",
                  "src": "2372:42:30"
                }
              ]
            },
            "documentation": {
              "id": 6494,
              "nodeType": "StructuredDocumentation",
              "src": "2127:160:30",
              "text": " @notice Reset Owner role to account.\n @dev The caller must have the Owner role.\n @param account The new holder of the Owner role."
            },
            "functionSelector": "73cc802a",
            "id": 6512,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 6500,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6499,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1984,
                  "src": "2347:12:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2347:14:30"
              }
            ],
            "name": "resetOwner",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 6498,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2338:8:30"
            },
            "parameters": {
              "id": 6497,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6496,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6512,
                  "src": "2312:15:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6495,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2312:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2311:17:30"
            },
            "returnParameters": {
              "id": 6501,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2362:0:30"
            },
            "scope": 6553,
            "src": "2292:129:30",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6531,
              "nodeType": "Block",
              "src": "2722:65:30",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 6525,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 283,
                              "src": "2757:5:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$283_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 6526,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Minter",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2757:12:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$283",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$283",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 6524,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2749:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 6523,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2749:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 6527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2749:21:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6528,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6515,
                        "src": "2772:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 6522,
                      "name": "holdsRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2345,
                      "src": "2739:9:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (uint256,address) view returns (bool)"
                      }
                    },
                    "id": 6529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2739:41:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 6521,
                  "id": 6530,
                  "nodeType": "Return",
                  "src": "2732:48:30"
                }
              ]
            },
            "documentation": {
              "id": 6513,
              "nodeType": "StructuredDocumentation",
              "src": "2427:209:30",
              "text": " @notice Checks if a given account holds the Minter role.\n @param account The address which is checked for the Minter role.\n @return bool True if the provided account is a Minter."
            },
            "functionSelector": "aa271e1a",
            "id": 6532,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 6518,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6517,
                  "name": "nonReentrantView",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1992,
                  "src": "2688:16:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2688:18:30"
              }
            ],
            "name": "isMinter",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6516,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6515,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6532,
                  "src": "2659:15:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6514,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2659:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2658:17:30"
            },
            "returnParameters": {
              "id": 6521,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6520,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6532,
                  "src": "2716:4:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6519,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2716:4:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2715:6:30"
            },
            "scope": 6553,
            "src": "2641:146:30",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6551,
              "nodeType": "Block",
              "src": "3088:65:30",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 6545,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 283,
                              "src": "3123:5:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$283_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 6546,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Burner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3123:12:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$283",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$283",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 6544,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3115:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 6543,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "3115:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 6547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3115:21:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6548,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6535,
                        "src": "3138:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 6542,
                      "name": "holdsRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2345,
                      "src": "3105:9:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (uint256,address) view returns (bool)"
                      }
                    },
                    "id": 6549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3105:41:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 6541,
                  "id": 6550,
                  "nodeType": "Return",
                  "src": "3098:48:30"
                }
              ]
            },
            "documentation": {
              "id": 6533,
              "nodeType": "StructuredDocumentation",
              "src": "2793:209:30",
              "text": " @notice Checks if a given account holds the Burner role.\n @param account The address which is checked for the Burner role.\n @return bool True if the provided account is a Burner."
            },
            "functionSelector": "4334614a",
            "id": 6552,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 6538,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6537,
                  "name": "nonReentrantView",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1992,
                  "src": "3054:16:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3054:18:30"
              }
            ],
            "name": "isBurner",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6536,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6535,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6552,
                  "src": "3025:15:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6534,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3025:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3024:17:30"
            },
            "returnParameters": {
              "id": 6541,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6540,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6552,
                  "src": "3082:4:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6539,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3082:4:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3081:6:30"
            },
            "scope": 6553,
            "src": "3007:146:30",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 6554,
        "src": "333:2822:30"
      }
    ],
    "src": "42:3114:30"
  },
  "legacyAST": {
    "absolutePath": "/Users/chris/temp/protocol/packages/core/contracts/financial-templates/common/SyntheticToken.sol",
    "exportedSymbols": {
      "SyntheticToken": [
        6553
      ]
    },
    "id": 6554,
    "license": "AGPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6394,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:23:30"
      },
      {
        "absolutePath": "/Users/chris/temp/protocol/packages/core/contracts/common/implementation/ExpandedERC20.sol",
        "file": "../../common/implementation/ExpandedERC20.sol",
        "id": 6395,
        "nodeType": "ImportDirective",
        "scope": 6554,
        "sourceUnit": 453,
        "src": "66:55:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/chris/temp/protocol/packages/core/contracts/common/implementation/Lockable.sol",
        "file": "../../common/implementation/Lockable.sol",
        "id": 6396,
        "nodeType": "ImportDirective",
        "scope": 6554,
        "sourceUnit": 2019,
        "src": "122:50:30",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6398,
              "name": "ExpandedERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 452,
              "src": "360:13:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ExpandedERC20_$452",
                "typeString": "contract ExpandedERC20"
              }
            },
            "id": 6399,
            "nodeType": "InheritanceSpecifier",
            "src": "360:13:30"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6400,
              "name": "Lockable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2018,
              "src": "375:8:30",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Lockable_$2018",
                "typeString": "contract Lockable"
              }
            },
            "id": 6401,
            "nodeType": "InheritanceSpecifier",
            "src": "375:8:30"
          }
        ],
        "contractDependencies": [
          452,
          2018,
          2626,
          2917,
          24530,
          25692,
          26103
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 6397,
          "nodeType": "StructuredDocumentation",
          "src": "174:157:30",
          "text": " @title Burnable and mintable ERC20.\n @dev The contract deployer will initially be the only minter, burner and owner capable of adding new roles."
        },
        "fullyImplemented": true,
        "id": 6553,
        "linearizedBaseContracts": [
          6553,
          2018,
          452,
          2626,
          25692,
          2917,
          26103,
          24530
        ],
        "name": "SyntheticToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 6418,
              "nodeType": "Block",
              "src": "866:2:30",
              "statements": []
            },
            "documentation": {
              "id": 6402,
              "nodeType": "StructuredDocumentation",
              "src": "390:281:30",
              "text": " @notice Constructs the SyntheticToken.\n @param tokenName The name which describes the new token.\n @param tokenSymbol The ticker abbreviation of the name. Ideally < 5 chars.\n @param tokenDecimals The number of decimals to define token precision."
            },
            "id": 6419,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 6411,
                    "name": "tokenName",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6404,
                    "src": "812:9:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 6412,
                    "name": "tokenSymbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6406,
                    "src": "823:11:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 6413,
                    "name": "tokenDecimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 6408,
                    "src": "836:13:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 6414,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6410,
                  "name": "ExpandedERC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 452,
                  "src": "798:13:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ExpandedERC20_$452_$",
                    "typeString": "type(contract ExpandedERC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "798:52:30"
              },
              {
                "arguments": [],
                "id": 6416,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6415,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1984,
                  "src": "851:12:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "851:14:30"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6409,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6404,
                  "mutability": "mutable",
                  "name": "tokenName",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6419,
                  "src": "697:23:30",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6403,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "697:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6406,
                  "mutability": "mutable",
                  "name": "tokenSymbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6419,
                  "src": "730:25:30",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6405,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "730:6:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6408,
                  "mutability": "mutable",
                  "name": "tokenDecimals",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6419,
                  "src": "765:19:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 6407,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "765:5:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "687:103:30"
            },
            "returnParameters": {
              "id": 6417,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "866:0:30"
            },
            "scope": 6553,
            "src": "676:192:30",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              417
            ],
            "body": {
              "id": 6437,
              "nodeType": "Block",
              "src": "1120:58:30",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 6431,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 283,
                              "src": "1148:5:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$283_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 6432,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Minter",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1148:12:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$283",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$283",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 6430,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1140:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 6429,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1140:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 6433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1140:21:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6434,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6422,
                        "src": "1163:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 6428,
                      "name": "addMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2424,
                      "src": "1130:9:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 6435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1130:41:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6436,
                  "nodeType": "ExpressionStatement",
                  "src": "1130:41:30"
                }
              ]
            },
            "documentation": {
              "id": 6420,
              "nodeType": "StructuredDocumentation",
              "src": "874:172:30",
              "text": " @notice Add Minter role to account.\n @dev The caller must have the Owner role.\n @param account The address to which the Minter role is added."
            },
            "functionSelector": "983b2d56",
            "id": 6438,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 6426,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6425,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1984,
                  "src": "1105:12:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1105:14:30"
              }
            ],
            "name": "addMinter",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 6424,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1096:8:30"
            },
            "parameters": {
              "id": 6423,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6422,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6438,
                  "src": "1070:15:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6421,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1070:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1069:17:30"
            },
            "returnParameters": {
              "id": 6427,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1120:0:30"
            },
            "scope": 6553,
            "src": "1051:127:30",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6455,
              "nodeType": "Block",
              "src": "1433:61:30",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 6449,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 283,
                              "src": "1464:5:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$283_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 6450,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Minter",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1464:12:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$283",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$283",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 6448,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1456:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 6447,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1456:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 6451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1456:21:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6452,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6441,
                        "src": "1479:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 6446,
                      "name": "removeMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2454,
                      "src": "1443:12:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 6453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1443:44:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6454,
                  "nodeType": "ExpressionStatement",
                  "src": "1443:44:30"
                }
              ]
            },
            "documentation": {
              "id": 6439,
              "nodeType": "StructuredDocumentation",
              "src": "1184:181:30",
              "text": " @notice Remove Minter role from account.\n @dev The caller must have the Owner role.\n @param account The address from which the Minter role is removed."
            },
            "functionSelector": "3092afd5",
            "id": 6456,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 6444,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6443,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1984,
                  "src": "1418:12:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1418:14:30"
              }
            ],
            "name": "removeMinter",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6442,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6441,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6456,
                  "src": "1392:15:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6440,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1392:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1391:17:30"
            },
            "returnParameters": {
              "id": 6445,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1433:0:30"
            },
            "scope": 6553,
            "src": "1370:124:30",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              434
            ],
            "body": {
              "id": 6474,
              "nodeType": "Block",
              "src": "1746:58:30",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 6468,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 283,
                              "src": "1774:5:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$283_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 6469,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Burner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "1774:12:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$283",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$283",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 6467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1766:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 6466,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1766:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 6470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1766:21:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6471,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6459,
                        "src": "1789:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 6465,
                      "name": "addMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2424,
                      "src": "1756:9:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 6472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1756:41:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6473,
                  "nodeType": "ExpressionStatement",
                  "src": "1756:41:30"
                }
              ]
            },
            "documentation": {
              "id": 6457,
              "nodeType": "StructuredDocumentation",
              "src": "1500:172:30",
              "text": " @notice Add Burner role to account.\n @dev The caller must have the Owner role.\n @param account The address to which the Burner role is added."
            },
            "functionSelector": "f44637ba",
            "id": 6475,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 6463,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6462,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1984,
                  "src": "1731:12:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1731:14:30"
              }
            ],
            "name": "addBurner",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 6461,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1722:8:30"
            },
            "parameters": {
              "id": 6460,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6459,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6475,
                  "src": "1696:15:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6458,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1696:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1695:17:30"
            },
            "returnParameters": {
              "id": 6464,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1746:0:30"
            },
            "scope": 6553,
            "src": "1677:127:30",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6492,
              "nodeType": "Block",
              "src": "2060:61:30",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 6486,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 283,
                              "src": "2091:5:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$283_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 6487,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Burner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2091:12:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$283",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$283",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 6485,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2083:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 6484,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2083:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 6488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2083:21:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6489,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6478,
                        "src": "2106:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 6483,
                      "name": "removeMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2454,
                      "src": "2070:12:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 6490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2070:44:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6491,
                  "nodeType": "ExpressionStatement",
                  "src": "2070:44:30"
                }
              ]
            },
            "documentation": {
              "id": 6476,
              "nodeType": "StructuredDocumentation",
              "src": "1810:182:30",
              "text": " @notice Removes Burner role from account.\n @dev The caller must have the Owner role.\n @param account The address from which the Burner role is removed."
            },
            "functionSelector": "02846858",
            "id": 6493,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 6481,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6480,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1984,
                  "src": "2045:12:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2045:14:30"
              }
            ],
            "name": "removeBurner",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6479,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6478,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6493,
                  "src": "2019:15:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6477,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2019:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2018:17:30"
            },
            "returnParameters": {
              "id": 6482,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2060:0:30"
            },
            "scope": 6553,
            "src": "1997:124:30",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              451
            ],
            "body": {
              "id": 6511,
              "nodeType": "Block",
              "src": "2362:59:30",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 6505,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 283,
                              "src": "2392:5:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$283_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 6506,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2392:11:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$283",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$283",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 6504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2384:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 6503,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2384:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 6507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2384:20:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6508,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6496,
                        "src": "2406:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 6502,
                      "name": "resetMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2375,
                      "src": "2372:11:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 6509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2372:42:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6510,
                  "nodeType": "ExpressionStatement",
                  "src": "2372:42:30"
                }
              ]
            },
            "documentation": {
              "id": 6494,
              "nodeType": "StructuredDocumentation",
              "src": "2127:160:30",
              "text": " @notice Reset Owner role to account.\n @dev The caller must have the Owner role.\n @param account The new holder of the Owner role."
            },
            "functionSelector": "73cc802a",
            "id": 6512,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 6500,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6499,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1984,
                  "src": "2347:12:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2347:14:30"
              }
            ],
            "name": "resetOwner",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 6498,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2338:8:30"
            },
            "parameters": {
              "id": 6497,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6496,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6512,
                  "src": "2312:15:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6495,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2312:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2311:17:30"
            },
            "returnParameters": {
              "id": 6501,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2362:0:30"
            },
            "scope": 6553,
            "src": "2292:129:30",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 6531,
              "nodeType": "Block",
              "src": "2722:65:30",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 6525,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 283,
                              "src": "2757:5:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$283_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 6526,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Minter",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "2757:12:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$283",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$283",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 6524,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2749:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 6523,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2749:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 6527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2749:21:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6528,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6515,
                        "src": "2772:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 6522,
                      "name": "holdsRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2345,
                      "src": "2739:9:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (uint256,address) view returns (bool)"
                      }
                    },
                    "id": 6529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2739:41:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 6521,
                  "id": 6530,
                  "nodeType": "Return",
                  "src": "2732:48:30"
                }
              ]
            },
            "documentation": {
              "id": 6513,
              "nodeType": "StructuredDocumentation",
              "src": "2427:209:30",
              "text": " @notice Checks if a given account holds the Minter role.\n @param account The address which is checked for the Minter role.\n @return bool True if the provided account is a Minter."
            },
            "functionSelector": "aa271e1a",
            "id": 6532,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 6518,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6517,
                  "name": "nonReentrantView",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1992,
                  "src": "2688:16:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2688:18:30"
              }
            ],
            "name": "isMinter",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6516,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6515,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6532,
                  "src": "2659:15:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6514,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2659:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2658:17:30"
            },
            "returnParameters": {
              "id": 6521,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6520,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6532,
                  "src": "2716:4:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6519,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2716:4:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2715:6:30"
            },
            "scope": 6553,
            "src": "2641:146:30",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6551,
              "nodeType": "Block",
              "src": "3088:65:30",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 6545,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 283,
                              "src": "3123:5:30",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$283_$",
                                "typeString": "type(enum ExpandedERC20.Roles)"
                              }
                            },
                            "id": 6546,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Burner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "3123:12:30",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$283",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$283",
                              "typeString": "enum ExpandedERC20.Roles"
                            }
                          ],
                          "id": 6544,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3115:7:30",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 6543,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "3115:7:30",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 6547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3115:21:30",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 6548,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6535,
                        "src": "3138:7:30",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 6542,
                      "name": "holdsRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2345,
                      "src": "3105:9:30",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$returns$_t_bool_$",
                        "typeString": "function (uint256,address) view returns (bool)"
                      }
                    },
                    "id": 6549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3105:41:30",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 6541,
                  "id": 6550,
                  "nodeType": "Return",
                  "src": "3098:48:30"
                }
              ]
            },
            "documentation": {
              "id": 6533,
              "nodeType": "StructuredDocumentation",
              "src": "2793:209:30",
              "text": " @notice Checks if a given account holds the Burner role.\n @param account The address which is checked for the Burner role.\n @return bool True if the provided account is a Burner."
            },
            "functionSelector": "4334614a",
            "id": 6552,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 6538,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6537,
                  "name": "nonReentrantView",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1992,
                  "src": "3054:16:30",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3054:18:30"
              }
            ],
            "name": "isBurner",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 6536,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6535,
                  "mutability": "mutable",
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6552,
                  "src": "3025:15:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6534,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3025:7:30",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3024:17:30"
            },
            "returnParameters": {
              "id": 6541,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6540,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 6552,
                  "src": "3082:4:30",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6539,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3082:4:30",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3081:6:30"
            },
            "scope": 6553,
            "src": "3007:146:30",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 6554,
        "src": "333:2822:30"
      }
    ],
    "src": "42:3114:30"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2020-12-09T10:40:25.491Z",
  "devdoc": {
    "details": "The contract deployer will initially be the only minter, burner and owner capable of adding new roles.",
    "kind": "dev",
    "methods": {
      "addBurner(address)": {
        "details": "The caller must have the Owner role.",
        "params": {
          "account": "The address to which the Burner role is added."
        }
      },
      "addMember(uint256,address)": {
        "details": "Reverts if `roleId` does not represent an initialized, SharedRole or if the caller is not a member of the managing role for `roleId`.",
        "params": {
          "newMember": "the new SharedRole member.",
          "roleId": "the SharedRole membership to modify."
        }
      },
      "addMinter(address)": {
        "details": "The caller must have the Owner role.",
        "params": {
          "account": "The address to which the Minter role is added."
        }
      },
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "burn(uint256)": {
        "details": "Burns `value` tokens owned by `msg.sender`.",
        "params": {
          "value": "amount of tokens to burn."
        }
      },
      "constructor": {
        "params": {
          "tokenDecimals": "The number of decimals to define token precision.",
          "tokenName": "The name which describes the new token.",
          "tokenSymbol": "The ticker abbreviation of the name. Ideally < 5 chars."
        }
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "getMember(uint256)": {
        "details": "Reverts if `roleId` does not represent an initialized, exclusive role.",
        "params": {
          "roleId": "the ExclusiveRole membership to check."
        },
        "returns": {
          "_0": "the address of the current ExclusiveRole member."
        }
      },
      "holdsRole(uint256,address)": {
        "details": "Reverts if roleId does not correspond to an initialized role.",
        "params": {
          "memberToCheck": "the address to check.",
          "roleId": "the Role to check."
        },
        "returns": {
          "_0": "True if `memberToCheck` is a member of `roleId`."
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "isBurner(address)": {
        "params": {
          "account": "The address which is checked for the Burner role."
        },
        "returns": {
          "_0": "bool True if the provided account is a Burner."
        }
      },
      "isMinter(address)": {
        "params": {
          "account": "The address which is checked for the Minter role."
        },
        "returns": {
          "_0": "bool True if the provided account is a Minter."
        }
      },
      "mint(address,uint256)": {
        "details": "Mints `value` tokens to `recipient`, returning true on success.",
        "params": {
          "recipient": "address to mint to.",
          "value": "amount of tokens to mint."
        },
        "returns": {
          "_0": "True if the mint succeeded, or False."
        }
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "removeBurner(address)": {
        "details": "The caller must have the Owner role.",
        "params": {
          "account": "The address from which the Burner role is removed."
        }
      },
      "removeMember(uint256,address)": {
        "details": "Reverts if `roleId` does not represent an initialized, SharedRole or if the caller is not a member of the managing role for `roleId`.",
        "params": {
          "memberToRemove": "the current SharedRole member to remove.",
          "roleId": "the SharedRole membership to modify."
        }
      },
      "removeMinter(address)": {
        "details": "The caller must have the Owner role.",
        "params": {
          "account": "The address from which the Minter role is removed."
        }
      },
      "renounceMembership(uint256)": {
        "details": "Reverts if the caller is not a member of the role for `roleId` or if `roleId` is not an initialized, SharedRole.",
        "params": {
          "roleId": "the SharedRole membership to modify."
        }
      },
      "resetMember(uint256,address)": {
        "details": "Reverts if the caller is not a member of the managing role for `roleId` or if `roleId` is not an initialized, ExclusiveRole.",
        "params": {
          "newMember": "the new ExclusiveRole member.",
          "roleId": "the ExclusiveRole membership to modify."
        }
      },
      "resetOwner(address)": {
        "details": "The caller must have the Owner role.",
        "params": {
          "account": "The new holder of the Owner role."
        }
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "title": "Burnable and mintable ERC20.",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addBurner(address)": {
        "notice": "Add Burner role to account."
      },
      "addMember(uint256,address)": {
        "notice": "Adds `newMember` to the shared role, `roleId`."
      },
      "addMinter(address)": {
        "notice": "Add Minter role to account."
      },
      "constructor": "Constructs the SyntheticToken.",
      "getMember(uint256)": {
        "notice": "Gets the current holder of the exclusive role, `roleId`."
      },
      "holdsRole(uint256,address)": {
        "notice": "Whether `memberToCheck` is a member of roleId."
      },
      "isBurner(address)": {
        "notice": "Checks if a given account holds the Burner role."
      },
      "isMinter(address)": {
        "notice": "Checks if a given account holds the Minter role."
      },
      "removeBurner(address)": {
        "notice": "Removes Burner role from account."
      },
      "removeMember(uint256,address)": {
        "notice": "Removes `memberToRemove` from the shared role, `roleId`."
      },
      "removeMinter(address)": {
        "notice": "Remove Minter role from account."
      },
      "renounceMembership(uint256)": {
        "notice": "Removes caller from the role, `roleId`."
      },
      "resetMember(uint256,address)": {
        "notice": "Changes the exclusive role holder of `roleId` to `newMember`."
      },
      "resetOwner(address)": {
        "notice": "Reset Owner role to account."
      }
    },
    "version": 1
  }
}