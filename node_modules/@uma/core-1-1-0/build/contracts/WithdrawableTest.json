{
  "contractName": "WithdrawableTest",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newMember",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "manager",
          "type": "address"
        }
      ],
      "name": "AddedSharedMember",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldMember",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "manager",
          "type": "address"
        }
      ],
      "name": "RemovedSharedMember",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newMember",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "manager",
          "type": "address"
        }
      ],
      "name": "ResetExclusiveMember",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "newMember",
          "type": "address"
        }
      ],
      "name": "addMember",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        }
      ],
      "name": "getMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "memberToCheck",
          "type": "address"
        }
      ],
      "name": "holdsRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "memberToRemove",
          "type": "address"
        }
      ],
      "name": "removeMember",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        }
      ],
      "name": "renounceMembership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "roleId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "newMember",
          "type": "address"
        }
      ],
      "name": "resetMember",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "erc20Address",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawErc20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pay",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "setRoleId",
          "type": "uint256"
        }
      ],
      "name": "setInternalWithdrawRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newMember\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"AddedSharedMember\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldMember\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"RemovedSharedMember\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newMember\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"manager\",\"type\":\"address\"}],\"name\":\"ResetExclusiveMember\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newMember\",\"type\":\"address\"}],\"name\":\"addMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"}],\"name\":\"getMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"memberToCheck\",\"type\":\"address\"}],\"name\":\"holdsRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pay\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"memberToRemove\",\"type\":\"address\"}],\"name\":\"removeMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"}],\"name\":\"renounceMembership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"roleId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newMember\",\"type\":\"address\"}],\"name\":\"resetMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"setRoleId\",\"type\":\"uint256\"}],\"name\":\"setInternalWithdrawRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc20Address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawErc20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addMember(uint256,address)\":{\"details\":\"Reverts if `roleId` does not represent an initialized, SharedRole or if the caller is not a member of the managing role for `roleId`.\",\"params\":{\"newMember\":\"the new SharedRole member.\",\"roleId\":\"the SharedRole membership to modify.\"}},\"getMember(uint256)\":{\"details\":\"Reverts if `roleId` does not represent an initialized, exclusive role.\",\"params\":{\"roleId\":\"the ExclusiveRole membership to check.\"},\"returns\":{\"_0\":\"the address of the current ExclusiveRole member.\"}},\"holdsRole(uint256,address)\":{\"details\":\"Reverts if roleId does not correspond to an initialized role.\",\"params\":{\"memberToCheck\":\"the address to check.\",\"roleId\":\"the Role to check.\"},\"returns\":{\"_0\":\"True if `memberToCheck` is a member of `roleId`.\"}},\"removeMember(uint256,address)\":{\"details\":\"Reverts if `roleId` does not represent an initialized, SharedRole or if the caller is not a member of the managing role for `roleId`.\",\"params\":{\"memberToRemove\":\"the current SharedRole member to remove.\",\"roleId\":\"the SharedRole membership to modify.\"}},\"renounceMembership(uint256)\":{\"details\":\"Reverts if the caller is not a member of the role for `roleId` or if `roleId` is not an initialized, SharedRole.\",\"params\":{\"roleId\":\"the SharedRole membership to modify.\"}},\"resetMember(uint256,address)\":{\"details\":\"Reverts if the caller is not a member of the managing role for `roleId` or if `roleId` is not an initialized, ExclusiveRole.\",\"params\":{\"newMember\":\"the new ExclusiveRole member.\",\"roleId\":\"the ExclusiveRole membership to modify.\"}},\"withdrawErc20(address,uint256)\":{\"params\":{\"amount\":\"amount of tokens to withdraw.\",\"erc20Address\":\"ERC20 token to withdraw.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addMember(uint256,address)\":{\"notice\":\"Adds `newMember` to the shared role, `roleId`.\"},\"getMember(uint256)\":{\"notice\":\"Gets the current holder of the exclusive role, `roleId`.\"},\"holdsRole(uint256,address)\":{\"notice\":\"Whether `memberToCheck` is a member of roleId.\"},\"removeMember(uint256,address)\":{\"notice\":\"Removes `memberToRemove` from the shared role, `roleId`.\"},\"renounceMembership(uint256)\":{\"notice\":\"Removes caller from the role, `roleId`.\"},\"resetMember(uint256,address)\":{\"notice\":\"Changes the exclusive role holder of `roleId` to `newMember`.\"},\"withdraw(uint256)\":{\"notice\":\"Withdraws ETH from the contract.\"},\"withdrawErc20(address,uint256)\":{\"notice\":\"Withdraws ERC20 tokens from the contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/circleci/protocol/packages/core/contracts/common/test/WithdrawableTest.sol\":\"WithdrawableTest\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":199},\"remappings\":[]},\"sources\":{\"/home/circleci/protocol/packages/core/contracts/common/implementation/MultiRole.sol\":{\"keccak256\":\"0x93b7932a9bf98defef8cd3dedfd7a11d8054107f123014cfd98970f491e96ed4\",\"urls\":[\"bzz-raw://f4d0201fe3e21a78bb805b9add2d0184be86a0bb706fdfcfd75ac95f8ac4aab9\",\"dweb:/ipfs/QmXjFT3zUMZ1T1omL8d8RTr7MDhCoLuAqFpCKJs3D6tJmy\"]},\"/home/circleci/protocol/packages/core/contracts/common/implementation/Withdrawable.sol\":{\"keccak256\":\"0x14ee8a3748c18299f330c86e802af4520528e8e999e69961fdaed4bd7dfdbe22\",\"urls\":[\"bzz-raw://ac15e925f11f5b09d5665ebf941df67b0b5c5a90715b79bb5afbaf84469201ea\",\"dweb:/ipfs/QmZUKbxXx1cTmNnSTbuBwpu9beUCD8Fi5Nfg86sf99m1ZB\"]},\"/home/circleci/protocol/packages/core/contracts/common/test/WithdrawableTest.sol\":{\"keccak256\":\"0xcfbc2969d7ccb7189b139130271d4f015f25f477abe274c38d0c272831556d8e\",\"urls\":[\"bzz-raw://1432fc10da33302fb5bb834721eab9ee47350ca83bafaba4423e6944ab0515cf\",\"dweb:/ipfs/QmP9WQejH3XJhEqPYoxf4Ro86sTugp2vy3pXHAATH7Z1Es\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x04d34b3cd5677bea25f8dfceb6dec0eaa071d4d4b789a43f13fe0c415ba4c296\",\"urls\":[\"bzz-raw://e7e8b526a6839e5ba14f0d23a830387fec47f7043ce01d42c9f285b709a9d080\",\"dweb:/ipfs/QmXmhhFmX5gcAvVzNiDPAGA35iHMPNaYtQkACswRHBVTNw\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x6cc1cb934a3ac2137a7dcaed018af9e235392236ceecfd3687259702b9c767ad\",\"urls\":[\"bzz-raw://0055fa88138cd1c3c6440370f8580f85857f8fe9dec41c99af9eafbeb8d9c3ce\",\"dweb:/ipfs/QmX1xDh8vwGLLCH8ti45eXjQ7Wcxv1FEGTR3jkFnd5Nv6F\"]},\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xa27d8d0bf389702f2b124fff3d86238b17ec0abd47d1401e81dc48a1509dbb9a\",\"urls\":[\"bzz-raw://899c25b79e783c1e4ccdd06928e332e2b37f3ecaa487f49ef68ef9fde6b18f82\",\"dweb:/ipfs/QmV3rZDWabetVSmZ2iviS5tajKzvR3AEwsicKZao4ptTg2\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x5f7da58ee3d9faa9b8999a93d49c8ff978f1afc88ae9bcfc6f9cbb44da011c2b\",\"urls\":[\"bzz-raw://4f089d954b3ecaa26949412fe63e9a184b056562c6c13dd4a0529a5d9a2e685a\",\"dweb:/ipfs/QmVK5iCNAMcEJQxT59bsC5E53JQASDQPU6khHox3d5ZXCn\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50620000206000803362000035565b6200002f600160003362000150565b620001db565b826000808281526020819052604090206001015460ff1660028111156200005857fe5b14620000ab576040805162461bcd60e51b815260206004820152601e60248201527f43616e6e6f74207573652061207072652d6578697374696e6720726f6c650000604482015290519081900360640190fd5b60008481526020819052604090206001808201805460ff191682800217905550838155620000e9600282018462000167602090811b620008b217901c565b60008481526020819052604081206001015460ff1660028111156200010a57fe5b1415620001495760405162461bcd60e51b815260040180806020018281038252603c815260200180620010ff603c913960400191505060405180910390fd5b5050505050565b60018390556200016283838362000035565b505050565b62000173828262000177565b5050565b6001600160a01b038116620001be5760405162461bcd60e51b81526004018080602001828103825260238152602001806200113b6023913960400191505060405180910390fd5b81546001600160a01b0319166001600160a01b0391909116179055565b610f1480620001eb6000396000f3fe6080604052600436106100915760003560e01c80637cdc1cb9116100595780637cdc1cb914610166578063aaa14ca3146101b3578063ab3545e5146101dd578063bd1f4b5214610223578063d97c05be1461025c57610091565b80631b9265b8146100965780632e1a7d4d146100a05780636b85f1b0146100ca5780636be7658b146100f457806374d0a6761461012d575b600080fd5b61009e610295565b005b3480156100ac57600080fd5b5061009e600480360360208110156100c357600080fd5b50356102a4565b3480156100d657600080fd5b5061009e600480360360208110156100ed57600080fd5b50356102fa565b34801561010057600080fd5b5061009e6004803603604081101561011757600080fd5b50803590602001356001600160a01b0316610306565b34801561013957600080fd5b5061009e6004803603604081101561015057600080fd5b50803590602001356001600160a01b0316610414565b34801561017257600080fd5b5061019f6004803603604081101561018957600080fd5b50803590602001356001600160a01b0316610522565b604080519115158252519081900360200190f35b3480156101bf57600080fd5b5061009e600480360360208110156101d657600080fd5b50356105cb565b3480156101e957600080fd5b506102076004803603602081101561020057600080fd5b50356106bf565b604080516001600160a01b039092168252519081900360200190f35b34801561022f57600080fd5b5061009e6004803603604081101561024657600080fd5b506001600160a01b038135169060200135610741565b34801561026857600080fd5b5061009e6004803603604081101561027f57600080fd5b50803590602001356001600160a01b03166107a4565b600034116102a257600080fd5b565b6001546102b18133610522565b6102ec5760405162461bcd60e51b8152600401808060200182810382526022815260200180610e4c6022913960400191505060405180910390fd5b6102f633836108bc565b5050565b610303816109a6565b50565b81600260008281526020819052604090206001015460ff16600281111561032957fe5b146103655760405162461bcd60e51b815260040180806020018281038252602c815260200180610e20602c913960400191505060405180910390fd5b60008381526020819052604090205483906103809033610522565b6103bb5760405162461bcd60e51b8152600401808060200182810382526024815260200180610e916024913960400191505060405180910390fd5b60008481526020819052604090206103d69060030184610a0b565b60405133906001600160a01b0385169086907feb3e33034c392e69263b04ec0fa376dc12784a41b6676c7f31b936cbc0fbb5af90600090a450505050565b81600260008281526020819052604090206001015460ff16600281111561043757fe5b146104735760405162461bcd60e51b815260040180806020018281038252602c815260200180610e20602c913960400191505060405180910390fd5b600083815260208190526040902054839061048e9033610522565b6104c95760405162461bcd60e51b8152600401808060200182810382526024815260200180610e916024913960400191505060405180910390fd5b60008481526020819052604090206104e49060030184610a2d565b60405133906001600160a01b0385169086907f63502af7324ff6db91ab38f8236a648727d9385ea6c782073dd4882d8a61a48f90600090a450505050565b600082815260208190526040812060018082015460ff16600281111561054457fe5b141561055f576105576002820184610aad565b9150506105c5565b6002600182015460ff16600281111561057457fe5b1415610587576105576003820184610ac0565b6040805162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081c9bdb19525960921b604482015290519081900360640190fd5b92915050565b80600260008281526020819052604090206001015460ff1660028111156105ee57fe5b1461062a5760405162461bcd60e51b815260040180806020018281038252602c815260200180610e20602c913960400191505060405180910390fd5b816106358133610522565b6106705760405162461bcd60e51b8152600401808060200182810382526022815260200180610e4c6022913960400191505060405180910390fd5b600083815260208190526040902061068b9060030133610a0b565b6040513390819085907feb3e33034c392e69263b04ec0fa376dc12784a41b6676c7f31b936cbc0fbb5af90600090a4505050565b600081600160008281526020819052604090206001015460ff1660028111156106e457fe5b146107205760405162461bcd60e51b815260040180806020018281038252602f815260200180610db7602f913960400191505060405180910390fd5b600083815260208190526040902061073a90600201610adf565b9392505050565b60015461074e8133610522565b6107895760405162461bcd60e51b8152600401808060200182810382526022815260200180610e4c6022913960400191505060405180910390fd5b8261079e6001600160a01b0382163385610aec565b50505050565b81600160008281526020819052604090206001015460ff1660028111156107c757fe5b146108035760405162461bcd60e51b815260040180806020018281038252602f815260200180610db7602f913960400191505060405180910390fd5b600083815260208190526040902054839061081e9033610522565b6108595760405162461bcd60e51b8152600401808060200182810382526024815260200180610e916024913960400191505060405180910390fd5b60008481526020819052604090206108749060020184610b3e565b60405133906001600160a01b0385169086907f3b855c56b409b671c7112789d022675eb639d0bcb8896f1b6197c132f799e74690600090a450505050565b6102f68282610b3e565b80471015610911576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015290519081900360640190fd5b6040516000906001600160a01b0384169083908381818185875af1925050503d806000811461095c576040519150601f19603f3d011682016040523d82523d6000602084013e610961565b606091505b50509050806109a15760405162461bcd60e51b815260040180806020018281038252603a815260200180610de6603a913960400191505060405180910390fd5b505050565b806000808281526020819052604090206001015460ff1660028111156109c857fe5b1415610a055760405162461bcd60e51b8152600401808060200182810382526022815260200180610d956022913960400191505060405180910390fd5b50600155565b6001600160a01b0316600090815260209190915260409020805460ff19169055565b6001600160a01b038116610a88576040805162461bcd60e51b815260206004820152601f60248201527f43616e6e6f74206164642030783020746f20612073686172656420726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b90546001600160a01b0391821691161490565b6001600160a01b03166000908152602091909152604090205460ff1690565b546001600160a01b031690565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526109a1908490610ba0565b6001600160a01b038116610b835760405162461bcd60e51b8152600401808060200182810382526023815260200180610e6e6023913960400191505060405180910390fd5b81546001600160a01b0319166001600160a01b0391909116179055565b610bb2826001600160a01b0316610d58565b610c03576040805162461bcd60e51b815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604482015290519081900360640190fd5b60006060836001600160a01b0316836040518082805190602001908083835b60208310610c415780518252601f199092019160209182019101610c22565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610ca3576040519150601f19603f3d011682016040523d82523d6000602084013e610ca8565b606091505b509150915081610cff576040805162461bcd60e51b815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604482015290519081900360640190fd5b80511561079e57808060200190516020811015610d1b57600080fd5b505161079e5760405162461bcd60e51b815260040180806020018281038252602a815260200180610eb5602a913960400191505060405180910390fd5b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590610d8c57508115155b94935050505056fe417474656d7074656420746f2075736520616e20696e76616c696420726f6c6549644d7573742062652063616c6c6564206f6e20616e20696e697469616c697a6564204578636c757369766520726f6c65416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d617920686176652072657665727465644d7573742062652063616c6c6564206f6e20616e20696e697469616c697a65642053686172656420726f6c6553656e64657220646f6573206e6f7420686f6c6420726571756972656420726f6c6543616e6e6f742073657420616e206578636c757369766520726f6c6520746f2030783043616e206f6e6c792062652063616c6c6564206279206120726f6c65206d616e616765725361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a2646970667358221220bb77577254abab66622cd2251cacab03312ef6e0156d5811b33f83e98574aa5564736f6c634300060c0033417474656d7074656420746f2075736520616e20696e76616c696420726f6c6520746f206d616e61676520616e206578636c757369766520726f6c6543616e6e6f742073657420616e206578636c757369766520726f6c6520746f20307830",
  "deployedBytecode": "0x6080604052600436106100915760003560e01c80637cdc1cb9116100595780637cdc1cb914610166578063aaa14ca3146101b3578063ab3545e5146101dd578063bd1f4b5214610223578063d97c05be1461025c57610091565b80631b9265b8146100965780632e1a7d4d146100a05780636b85f1b0146100ca5780636be7658b146100f457806374d0a6761461012d575b600080fd5b61009e610295565b005b3480156100ac57600080fd5b5061009e600480360360208110156100c357600080fd5b50356102a4565b3480156100d657600080fd5b5061009e600480360360208110156100ed57600080fd5b50356102fa565b34801561010057600080fd5b5061009e6004803603604081101561011757600080fd5b50803590602001356001600160a01b0316610306565b34801561013957600080fd5b5061009e6004803603604081101561015057600080fd5b50803590602001356001600160a01b0316610414565b34801561017257600080fd5b5061019f6004803603604081101561018957600080fd5b50803590602001356001600160a01b0316610522565b604080519115158252519081900360200190f35b3480156101bf57600080fd5b5061009e600480360360208110156101d657600080fd5b50356105cb565b3480156101e957600080fd5b506102076004803603602081101561020057600080fd5b50356106bf565b604080516001600160a01b039092168252519081900360200190f35b34801561022f57600080fd5b5061009e6004803603604081101561024657600080fd5b506001600160a01b038135169060200135610741565b34801561026857600080fd5b5061009e6004803603604081101561027f57600080fd5b50803590602001356001600160a01b03166107a4565b600034116102a257600080fd5b565b6001546102b18133610522565b6102ec5760405162461bcd60e51b8152600401808060200182810382526022815260200180610e4c6022913960400191505060405180910390fd5b6102f633836108bc565b5050565b610303816109a6565b50565b81600260008281526020819052604090206001015460ff16600281111561032957fe5b146103655760405162461bcd60e51b815260040180806020018281038252602c815260200180610e20602c913960400191505060405180910390fd5b60008381526020819052604090205483906103809033610522565b6103bb5760405162461bcd60e51b8152600401808060200182810382526024815260200180610e916024913960400191505060405180910390fd5b60008481526020819052604090206103d69060030184610a0b565b60405133906001600160a01b0385169086907feb3e33034c392e69263b04ec0fa376dc12784a41b6676c7f31b936cbc0fbb5af90600090a450505050565b81600260008281526020819052604090206001015460ff16600281111561043757fe5b146104735760405162461bcd60e51b815260040180806020018281038252602c815260200180610e20602c913960400191505060405180910390fd5b600083815260208190526040902054839061048e9033610522565b6104c95760405162461bcd60e51b8152600401808060200182810382526024815260200180610e916024913960400191505060405180910390fd5b60008481526020819052604090206104e49060030184610a2d565b60405133906001600160a01b0385169086907f63502af7324ff6db91ab38f8236a648727d9385ea6c782073dd4882d8a61a48f90600090a450505050565b600082815260208190526040812060018082015460ff16600281111561054457fe5b141561055f576105576002820184610aad565b9150506105c5565b6002600182015460ff16600281111561057457fe5b1415610587576105576003820184610ac0565b6040805162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a59081c9bdb19525960921b604482015290519081900360640190fd5b92915050565b80600260008281526020819052604090206001015460ff1660028111156105ee57fe5b1461062a5760405162461bcd60e51b815260040180806020018281038252602c815260200180610e20602c913960400191505060405180910390fd5b816106358133610522565b6106705760405162461bcd60e51b8152600401808060200182810382526022815260200180610e4c6022913960400191505060405180910390fd5b600083815260208190526040902061068b9060030133610a0b565b6040513390819085907feb3e33034c392e69263b04ec0fa376dc12784a41b6676c7f31b936cbc0fbb5af90600090a4505050565b600081600160008281526020819052604090206001015460ff1660028111156106e457fe5b146107205760405162461bcd60e51b815260040180806020018281038252602f815260200180610db7602f913960400191505060405180910390fd5b600083815260208190526040902061073a90600201610adf565b9392505050565b60015461074e8133610522565b6107895760405162461bcd60e51b8152600401808060200182810382526022815260200180610e4c6022913960400191505060405180910390fd5b8261079e6001600160a01b0382163385610aec565b50505050565b81600160008281526020819052604090206001015460ff1660028111156107c757fe5b146108035760405162461bcd60e51b815260040180806020018281038252602f815260200180610db7602f913960400191505060405180910390fd5b600083815260208190526040902054839061081e9033610522565b6108595760405162461bcd60e51b8152600401808060200182810382526024815260200180610e916024913960400191505060405180910390fd5b60008481526020819052604090206108749060020184610b3e565b60405133906001600160a01b0385169086907f3b855c56b409b671c7112789d022675eb639d0bcb8896f1b6197c132f799e74690600090a450505050565b6102f68282610b3e565b80471015610911576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015290519081900360640190fd5b6040516000906001600160a01b0384169083908381818185875af1925050503d806000811461095c576040519150601f19603f3d011682016040523d82523d6000602084013e610961565b606091505b50509050806109a15760405162461bcd60e51b815260040180806020018281038252603a815260200180610de6603a913960400191505060405180910390fd5b505050565b806000808281526020819052604090206001015460ff1660028111156109c857fe5b1415610a055760405162461bcd60e51b8152600401808060200182810382526022815260200180610d956022913960400191505060405180910390fd5b50600155565b6001600160a01b0316600090815260209190915260409020805460ff19169055565b6001600160a01b038116610a88576040805162461bcd60e51b815260206004820152601f60248201527f43616e6e6f74206164642030783020746f20612073686172656420726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b90546001600160a01b0391821691161490565b6001600160a01b03166000908152602091909152604090205460ff1690565b546001600160a01b031690565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526109a1908490610ba0565b6001600160a01b038116610b835760405162461bcd60e51b8152600401808060200182810382526023815260200180610e6e6023913960400191505060405180910390fd5b81546001600160a01b0319166001600160a01b0391909116179055565b610bb2826001600160a01b0316610d58565b610c03576040805162461bcd60e51b815260206004820152601f60248201527f5361666545524332303a2063616c6c20746f206e6f6e2d636f6e747261637400604482015290519081900360640190fd5b60006060836001600160a01b0316836040518082805190602001908083835b60208310610c415780518252601f199092019160209182019101610c22565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114610ca3576040519150601f19603f3d011682016040523d82523d6000602084013e610ca8565b606091505b509150915081610cff576040805162461bcd60e51b815260206004820181905260248201527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564604482015290519081900360640190fd5b80511561079e57808060200190516020811015610d1b57600080fd5b505161079e5760405162461bcd60e51b815260040180806020018281038252602a815260200180610eb5602a913960400191505060405180910390fd5b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590610d8c57508115155b94935050505056fe417474656d7074656420746f2075736520616e20696e76616c696420726f6c6549644d7573742062652063616c6c6564206f6e20616e20696e697469616c697a6564204578636c757369766520726f6c65416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d617920686176652072657665727465644d7573742062652063616c6c6564206f6e20616e20696e697469616c697a65642053686172656420726f6c6553656e64657220646f6573206e6f7420686f6c6420726571756972656420726f6c6543616e6e6f742073657420616e206578636c757369766520726f6c6520746f2030783043616e206f6e6c792062652063616c6c6564206279206120726f6c65206d616e616765725361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a2646970667358221220bb77577254abab66622cd2251cacab03312ef6e0156d5811b33f83e98574aa5564736f6c634300060c0033",
  "immutableReferences": {},
  "sourceMap": "165:543:24:-:0;;;303:217;;;;;;;;;-1:-1:-1;334:86:24;363:16;390;409:10;334:20;:86::i;:::-;430:83;458:14;483:16;502:10;430:19;:83::i;:::-;165:543;;8777:519:5;8925:6;7520:16;7494:5;:13;;;;;;;;;;:22;;;;;:42;;;;;;;;;7486:85;;;;;-1:-1:-1;;;7486:85:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;8943:17:::1;8963:13:::0;;;::::1;::::0;;;;;;9002:18:::1;8986:13:::0;;::::1;:34:::0;;-1:-1:-1;;8986:34:5::1;9002:18:::0;;8986:34:::1;;::::0;;-1:-1:-1;9030:34:5;;;9074:48:::1;:28;::::0;::::1;9108:13:::0;9074:33:::1;;::::0;;::::1;;;:48:::0;::::1;:::i;:::-;9187:16;9153:21:::0;;;::::1;::::0;;;;;;:30:::1;;::::0;::::1;;:50;::::0;::::1;;;;;;;;9132:157;;;;-1:-1:-1::0;;;9132:157:5::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7581:1;8777:519:::0;;;;:::o;1563:249:9:-;1711:6;:18;;;1739:66;1720:9;1771:14;1787:17;1739:20;:66::i;:::-;1563:249;;;:::o;654:144:5:-;749:42;761:14;777:13;749:11;:42::i;:::-;654:144;;:::o;286:221::-;-1:-1:-1;;;;;392:25:5;;384:73;;;;-1:-1:-1;;;384:73:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;467:33;;-1:-1:-1;;;;;;467:33:5;-1:-1:-1;;;;;467:33:5;;;;;;;286:221::o;165:543:24:-;;;;;;;",
  "deployedSourceMap": "165:543:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;526:71;;;:::i;:::-;;559:120:9;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;559:120:9;;:::i;603:103:24:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;603:103:24;;:::i;6365:262:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6365:262:5;;;;;;-1:-1:-1;;;;;6365:262:5;;:::i;5751:239::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5751:239:5;;;;;;-1:-1:-1;;;;;5751:239:5;;:::i;3906:428::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3906:428:5;;;;;;-1:-1:-1;;;;;3906:428:5;;:::i;:::-;;;;;;;;;;;;;;;;;;6894:235;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6894:235:5;;:::i;5245:160::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5245:160:5;;:::i;:::-;;;;-1:-1:-1;;;;;5245:160:5;;;;;;;;;;;;;;861:193:9;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;861:193:9;;;;;;;;:::i;4692:252:5:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4692:252:5;;;;;;-1:-1:-1;;;;;4692:252:5;;:::i;526:71:24:-;588:1;576:9;:13;568:22;;;;;;526:71::o;559:120:9:-;617:6;;2674:29:5;2684:6;2692:10;2674:9;:29::i;:::-;2666:76;;;;-1:-1:-1;;;2666:76:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;635:37:9::1;653:10;665:6;635:17;:37::i;:::-;559:120:::0;;:::o;603:103:24:-;672:27;689:9;672:16;:27::i;:::-;603:103;:::o;6365:262:5:-;6445:6;3512:15;3486:5;:13;;;;;;;;;;:22;;;;;:41;;;;;;;;;3478:98;;;;-1:-1:-1;;;3478:98:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2950:5:::1;:13:::0;;;::::1;::::0;;;;;;:26;6469:6;;2940:49:::1;::::0;2978:10:::1;2940:9;:49::i;:::-;2932:98;;;;-1:-1:-1::0;;;2932:98:5::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6487:5:::2;:13:::0;;;::::2;::::0;;;;;;:63:::2;::::0;:34:::2;;6535:14:::0;6487:47:::2;:63::i;:::-;6565:55;::::0;6609:10:::2;::::0;-1:-1:-1;;;;;6565:55:5;::::2;::::0;6585:6;;6565:55:::2;::::0;;;::::2;3586:1:::1;6365:262:::0;;;:::o;5751:239::-;5823:6;3512:15;3486:5;:13;;;;;;;;;;:22;;;;;:41;;;;;;;;;3478:98;;;;-1:-1:-1;;;3478:98:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2950:5:::1;:13:::0;;;::::1;::::0;;;;;;:26;5847:6;;2940:49:::1;::::0;2978:10:::1;2940:9;:49::i;:::-;2932:98;;;;-1:-1:-1::0;;;2932:98:5::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5865:5:::2;:13:::0;;;::::2;::::0;;;;;;:55:::2;::::0;:34:::2;;5910:9:::0;5865:44:::2;:55::i;:::-;5935:48;::::0;5972:10:::2;::::0;-1:-1:-1;;;;;5935:48:5;::::2;::::0;5953:6;;5935:48:::2;::::0;;;::::2;3586:1:::1;5751:239:::0;;;:::o;3906:428::-;3985:4;4021:13;;;;;;;;;;4065:18;4048:13;;;;;;:35;;;;;;;;;4044:250;;;4106:52;:28;;;4144:13;4106:37;:52::i;:::-;4099:59;;;;;4044:250;4196:15;4179:13;;;;;;:32;;;;;;;;;4175:119;;;4234:49;:25;;;4269:13;4234:34;:49::i;4175:119::-;4303:24;;;-1:-1:-1;;;4303:24:5;;;;;;;;;;;;-1:-1:-1;;;4303:24:5;;;;;;;;;;;;;;3906:428;;;;;:::o;6894:235::-;6956:6;3512:15;3486:5;:13;;;;;;;;;;:22;;;;;:41;;;;;;;;;3478:98;;;;-1:-1:-1;;;3478:98:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6979:6:::1;2674:29;2684:6;2692:10;2674:9;:29::i;:::-;2666:76;;;;-1:-1:-1::0;;;2666:76:5::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6997:5:::2;:13:::0;;;::::2;::::0;;;;;;:59:::2;::::0;:34:::2;;7045:10;6997:47;:59::i;:::-;7071:51;::::0;7111:10:::2;::::0;;;7091:6;;7071:51:::2;::::0;;;::::2;3586:1:::1;6894:235:::0;;:::o;5245:160::-;5323:7;5306:6;3239:18;3213:5;:13;;;;;;;;;;:22;;;;;:44;;;;;;;;;3205:104;;;;-1:-1:-1;;;3205:104:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5349:5:::1;:13:::0;;;::::1;::::0;;;;;;:49:::1;::::0;:37:::1;;:47;:49::i;:::-;5342:56:::0;5245:160;-1:-1:-1;;;5245:160:5:o;861:193:9:-;946:6;;2674:29:5;2684:6;2692:10;2674:9;:29::i;:::-;2666:76;;;;-1:-1:-1;;;2666:76:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;986:12:9;1009:38:::1;-1:-1:-1::0;;;;;1009:18:9;::::1;1028:10;1040:6:::0;1009:18:::1;:38::i;:::-;2752:1:5;861:193:9::0;;;:::o;4692:252:5:-;4769:6;3239:18;3213:5;:13;;;;;;;;;;:22;;;;;:44;;;;;;;;;3205:104;;;;-1:-1:-1;;;3205:104:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2950:5:::1;:13:::0;;;::::1;::::0;;;;;;:26;4793:6;;2940:49:::1;::::0;2978:10:::1;2940:9;:49::i;:::-;2932:98;;;;-1:-1:-1::0;;;2932:98:5::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4811:5:::2;:13:::0;;;::::2;::::0;;;;;;:60:::2;::::0;:37:::2;;4861:9:::0;4811:49:::2;:60::i;:::-;4886:51;::::0;4926:10:::2;::::0;-1:-1:-1;;;;;4886:51:5;::::2;::::0;4907:6;;4886:51:::2;::::0;;;::::2;3319:1:::1;4692:252:::0;;;:::o;654:144::-;749:42;761:14;777:13;749:11;:42::i;2212:391:75:-;2326:6;2301:21;:31;;2293:73;;;;;-1:-1:-1;;;2293:73:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;2473:35;;2455:12;;-1:-1:-1;;;;;2473:14:75;;;2496:6;;2455:12;2473:35;2455:12;2473:35;2496:6;2473:14;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2454:54;;;2526:7;2518:78;;;;-1:-1:-1;;;2518:78:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2212:391;;;:::o;2179:114:9:-;2247:9;7289:16:5;7263:5;:13;;;;;;;;;;:22;;;;;:42;;;;;;;;;;7255:89;;;;-1:-1:-1;;;7255:89:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2268:6:9::1;:18:::0;2179:114::o;1311:157:5:-;-1:-1:-1;;;;;1415:38:5;1456:5;1415:38;;;;;;;;;;;:46;;-1:-1:-1;;1415:46:5;;;1311:157::o;1077:228::-;-1:-1:-1;;;;;1183:27:5;;1175:71;;;;;-1:-1:-1;;;1175:71:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1256:35:5;:22;:35;;;;;;;;;;;:42;;-1:-1:-1;;1256:42:5;1294:4;1256:42;;;1077:228::o;109:171::-;235:21;;-1:-1:-1;;;;;235:38:5;;;:21;;:38;;109:171::o;901:170::-;-1:-1:-1;;;;;1027:37:5;1004:4;1027:37;;;;;;;;;;;;;;;901:170::o;513:135::-;620:21;-1:-1:-1;;;;;620:21:5;;513:135::o;662:175:74:-;771:58;;;-1:-1:-1;;;;;771:58:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;771:58:74;-1:-1:-1;;;771:58:74;;;744:86;;764:5;;744:19;:86::i;286:221:5:-;-1:-1:-1;;;;;392:25:5;;384:73;;;;-1:-1:-1;;;384:73:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;467:33;;-1:-1:-1;;;;;;467:33:5;-1:-1:-1;;;;;467:33:5;;;;;;;286:221::o;2671:1096:74:-;3267:27;3275:5;-1:-1:-1;;;;;3267:25:74;;:27::i;:::-;3259:71;;;;;-1:-1:-1;;;3259:71:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;3401:12;3415:23;3450:5;-1:-1:-1;;;;;3442:19:74;3462:4;3442:25;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3442:25:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3400:67;;;;3485:7;3477:52;;;;;-1:-1:-1;;;3477:52:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3544:17;;:21;3540:221;;3684:10;3673:30;;;;;;;;;;;;;;;-1:-1:-1;3673:30:74;3665:85;;;;-1:-1:-1;;;3665:85:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;685:610:75;745:4;1206:20;;1051:66;1245:23;;;;;;:42;;-1:-1:-1;1272:15:75;;;1245:42;1237:51;685:610;-1:-1:-1;;;;685:610:75:o",
  "source": "pragma solidity ^0.6.0;\n\nimport \"../implementation/Withdrawable.sol\";\n\n\n// WithdrawableTest is derived from the abstract contract Withdrawable for testing purposes.\ncontract WithdrawableTest is Withdrawable {\n    enum Roles { Governance, Withdraw }\n\n    // solhint-disable-next-line no-empty-blocks\n    constructor() public {\n        _createExclusiveRole(uint256(Roles.Governance), uint256(Roles.Governance), msg.sender);\n        _createWithdrawRole(uint256(Roles.Withdraw), uint256(Roles.Governance), msg.sender);\n    }\n\n    function pay() external payable {\n        require(msg.value > 0);\n    }\n\n    function setInternalWithdrawRole(uint256 setRoleId) public {\n        _setWithdrawRole(setRoleId);\n    }\n}\n",
  "sourcePath": "/home/circleci/protocol/packages/core/contracts/common/test/WithdrawableTest.sol",
  "ast": {
    "absolutePath": "/home/circleci/protocol/packages/core/contracts/common/test/WithdrawableTest.sol",
    "exportedSymbols": {
      "WithdrawableTest": [
        3373
      ]
    },
    "id": 3374,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3311,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:24"
      },
      {
        "absolutePath": "/home/circleci/protocol/packages/core/contracts/common/implementation/Withdrawable.sol",
        "file": "../implementation/Withdrawable.sol",
        "id": 3312,
        "nodeType": "ImportDirective",
        "scope": 3374,
        "sourceUnit": 2013,
        "src": "25:44:24",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3313,
              "name": "Withdrawable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2012,
              "src": "194:12:24",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Withdrawable_$2012",
                "typeString": "contract Withdrawable"
              }
            },
            "id": 3314,
            "nodeType": "InheritanceSpecifier",
            "src": "194:12:24"
          }
        ],
        "contractDependencies": [
          1772,
          2012
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 3373,
        "linearizedBaseContracts": [
          3373,
          2012,
          1772
        ],
        "name": "WithdrawableTest",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "WithdrawableTest.Roles",
            "id": 3317,
            "members": [
              {
                "id": 3315,
                "name": "Governance",
                "nodeType": "EnumValue",
                "src": "226:10:24"
              },
              {
                "id": 3316,
                "name": "Withdraw",
                "nodeType": "EnumValue",
                "src": "238:8:24"
              }
            ],
            "name": "Roles",
            "nodeType": "EnumDefinition",
            "src": "213:35:24"
          },
          {
            "body": {
              "id": 3350,
              "nodeType": "Block",
              "src": "324:196:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3323,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3317,
                              "src": "363:5:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$3317_$",
                                "typeString": "type(enum WithdrawableTest.Roles)"
                              }
                            },
                            "id": 3324,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Governance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "363:16:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$3317",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$3317",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          ],
                          "id": 3322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "355:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 3321,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "355:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "355:25:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3328,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3317,
                              "src": "390:5:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$3317_$",
                                "typeString": "type(enum WithdrawableTest.Roles)"
                              }
                            },
                            "id": 3329,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Governance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "390:16:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$3317",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$3317",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          ],
                          "id": 3327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "382:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 3326,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "382:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "382:25:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3331,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "409:3:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "409:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 3320,
                      "name": "_createExclusiveRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1771,
                      "src": "334:20:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256,address)"
                      }
                    },
                    "id": 3333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "334:86:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3334,
                  "nodeType": "ExpressionStatement",
                  "src": "334:86:24"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3338,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3317,
                              "src": "458:5:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$3317_$",
                                "typeString": "type(enum WithdrawableTest.Roles)"
                              }
                            },
                            "id": 3339,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Withdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "458:14:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$3317",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$3317",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          ],
                          "id": 3337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "450:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 3336,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "450:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "450:23:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3343,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3317,
                              "src": "483:5:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$3317_$",
                                "typeString": "type(enum WithdrawableTest.Roles)"
                              }
                            },
                            "id": 3344,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Governance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "483:16:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$3317",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$3317",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          ],
                          "id": 3342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "475:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 3341,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "475:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "475:25:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3346,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "502:3:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "502:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 3335,
                      "name": "_createWithdrawRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1997,
                      "src": "430:19:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256,address)"
                      }
                    },
                    "id": 3348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "430:83:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3349,
                  "nodeType": "ExpressionStatement",
                  "src": "430:83:24"
                }
              ]
            },
            "documentation": null,
            "id": 3351,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3318,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "314:2:24"
            },
            "returnParameters": {
              "id": 3319,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "324:0:24"
            },
            "scope": 3373,
            "src": "303:217:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3361,
              "nodeType": "Block",
              "src": "558:39:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3355,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "576:3:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3356,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "576:9:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 3357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "588:1:24",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "576:13:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3354,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "568:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "568:22:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3360,
                  "nodeType": "ExpressionStatement",
                  "src": "568:22:24"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "1b9265b8",
            "id": 3362,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pay",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3352,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "538:2:24"
            },
            "returnParameters": {
              "id": 3353,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "558:0:24"
            },
            "scope": 3373,
            "src": "526:71:24",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3371,
              "nodeType": "Block",
              "src": "662:44:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3368,
                        "name": "setRoleId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3364,
                        "src": "689:9:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3367,
                      "name": "_setWithdrawRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2011,
                      "src": "672:16:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "672:27:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3370,
                  "nodeType": "ExpressionStatement",
                  "src": "672:27:24"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "6b85f1b0",
            "id": 3372,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setInternalWithdrawRole",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3365,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3364,
                  "mutability": "mutable",
                  "name": "setRoleId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3372,
                  "src": "636:17:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3363,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "636:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "635:19:24"
            },
            "returnParameters": {
              "id": 3366,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "662:0:24"
            },
            "scope": 3373,
            "src": "603:103:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 3374,
        "src": "165:543:24"
      }
    ],
    "src": "0:709:24"
  },
  "legacyAST": {
    "absolutePath": "/home/circleci/protocol/packages/core/contracts/common/test/WithdrawableTest.sol",
    "exportedSymbols": {
      "WithdrawableTest": [
        3373
      ]
    },
    "id": 3374,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3311,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:24"
      },
      {
        "absolutePath": "/home/circleci/protocol/packages/core/contracts/common/implementation/Withdrawable.sol",
        "file": "../implementation/Withdrawable.sol",
        "id": 3312,
        "nodeType": "ImportDirective",
        "scope": 3374,
        "sourceUnit": 2013,
        "src": "25:44:24",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3313,
              "name": "Withdrawable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2012,
              "src": "194:12:24",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Withdrawable_$2012",
                "typeString": "contract Withdrawable"
              }
            },
            "id": 3314,
            "nodeType": "InheritanceSpecifier",
            "src": "194:12:24"
          }
        ],
        "contractDependencies": [
          1772,
          2012
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 3373,
        "linearizedBaseContracts": [
          3373,
          2012,
          1772
        ],
        "name": "WithdrawableTest",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "WithdrawableTest.Roles",
            "id": 3317,
            "members": [
              {
                "id": 3315,
                "name": "Governance",
                "nodeType": "EnumValue",
                "src": "226:10:24"
              },
              {
                "id": 3316,
                "name": "Withdraw",
                "nodeType": "EnumValue",
                "src": "238:8:24"
              }
            ],
            "name": "Roles",
            "nodeType": "EnumDefinition",
            "src": "213:35:24"
          },
          {
            "body": {
              "id": 3350,
              "nodeType": "Block",
              "src": "324:196:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3323,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3317,
                              "src": "363:5:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$3317_$",
                                "typeString": "type(enum WithdrawableTest.Roles)"
                              }
                            },
                            "id": 3324,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Governance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "363:16:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$3317",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$3317",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          ],
                          "id": 3322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "355:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 3321,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "355:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "355:25:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3328,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3317,
                              "src": "390:5:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$3317_$",
                                "typeString": "type(enum WithdrawableTest.Roles)"
                              }
                            },
                            "id": 3329,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Governance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "390:16:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$3317",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$3317",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          ],
                          "id": 3327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "382:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 3326,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "382:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "382:25:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3331,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "409:3:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "409:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 3320,
                      "name": "_createExclusiveRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1771,
                      "src": "334:20:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256,address)"
                      }
                    },
                    "id": 3333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "334:86:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3334,
                  "nodeType": "ExpressionStatement",
                  "src": "334:86:24"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3338,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3317,
                              "src": "458:5:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$3317_$",
                                "typeString": "type(enum WithdrawableTest.Roles)"
                              }
                            },
                            "id": 3339,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Withdraw",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "458:14:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$3317",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$3317",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          ],
                          "id": 3337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "450:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 3336,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "450:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "450:23:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 3343,
                              "name": "Roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3317,
                              "src": "483:5:24",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_Roles_$3317_$",
                                "typeString": "type(enum WithdrawableTest.Roles)"
                              }
                            },
                            "id": 3344,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Governance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "483:16:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Roles_$3317",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_Roles_$3317",
                              "typeString": "enum WithdrawableTest.Roles"
                            }
                          ],
                          "id": 3342,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "475:7:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 3341,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "475:7:24",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 3345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "475:25:24",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3346,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "502:3:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "502:10:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 3335,
                      "name": "_createWithdrawRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1997,
                      "src": "430:19:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,uint256,address)"
                      }
                    },
                    "id": 3348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "430:83:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3349,
                  "nodeType": "ExpressionStatement",
                  "src": "430:83:24"
                }
              ]
            },
            "documentation": null,
            "id": 3351,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3318,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "314:2:24"
            },
            "returnParameters": {
              "id": 3319,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "324:0:24"
            },
            "scope": 3373,
            "src": "303:217:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3361,
              "nodeType": "Block",
              "src": "558:39:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3358,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3355,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "576:3:24",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3356,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "576:9:24",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 3357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "588:1:24",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "576:13:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3354,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "568:7:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "568:22:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3360,
                  "nodeType": "ExpressionStatement",
                  "src": "568:22:24"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "1b9265b8",
            "id": 3362,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pay",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3352,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "538:2:24"
            },
            "returnParameters": {
              "id": 3353,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "558:0:24"
            },
            "scope": 3373,
            "src": "526:71:24",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3371,
              "nodeType": "Block",
              "src": "662:44:24",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3368,
                        "name": "setRoleId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3364,
                        "src": "689:9:24",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3367,
                      "name": "_setWithdrawRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2011,
                      "src": "672:16:24",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "672:27:24",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3370,
                  "nodeType": "ExpressionStatement",
                  "src": "672:27:24"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "6b85f1b0",
            "id": 3372,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setInternalWithdrawRole",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3365,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3364,
                  "mutability": "mutable",
                  "name": "setRoleId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3372,
                  "src": "636:17:24",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3363,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "636:7:24",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "635:19:24"
            },
            "returnParameters": {
              "id": 3366,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "662:0:24"
            },
            "scope": 3373,
            "src": "603:103:24",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 3374,
        "src": "165:543:24"
      }
    ],
    "src": "0:709:24"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2020-10-06T21:03:39.018Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addMember(uint256,address)": {
        "details": "Reverts if `roleId` does not represent an initialized, SharedRole or if the caller is not a member of the managing role for `roleId`.",
        "params": {
          "newMember": "the new SharedRole member.",
          "roleId": "the SharedRole membership to modify."
        }
      },
      "getMember(uint256)": {
        "details": "Reverts if `roleId` does not represent an initialized, exclusive role.",
        "params": {
          "roleId": "the ExclusiveRole membership to check."
        },
        "returns": {
          "_0": "the address of the current ExclusiveRole member."
        }
      },
      "holdsRole(uint256,address)": {
        "details": "Reverts if roleId does not correspond to an initialized role.",
        "params": {
          "memberToCheck": "the address to check.",
          "roleId": "the Role to check."
        },
        "returns": {
          "_0": "True if `memberToCheck` is a member of `roleId`."
        }
      },
      "removeMember(uint256,address)": {
        "details": "Reverts if `roleId` does not represent an initialized, SharedRole or if the caller is not a member of the managing role for `roleId`.",
        "params": {
          "memberToRemove": "the current SharedRole member to remove.",
          "roleId": "the SharedRole membership to modify."
        }
      },
      "renounceMembership(uint256)": {
        "details": "Reverts if the caller is not a member of the role for `roleId` or if `roleId` is not an initialized, SharedRole.",
        "params": {
          "roleId": "the SharedRole membership to modify."
        }
      },
      "resetMember(uint256,address)": {
        "details": "Reverts if the caller is not a member of the managing role for `roleId` or if `roleId` is not an initialized, ExclusiveRole.",
        "params": {
          "newMember": "the new ExclusiveRole member.",
          "roleId": "the ExclusiveRole membership to modify."
        }
      },
      "withdrawErc20(address,uint256)": {
        "params": {
          "amount": "amount of tokens to withdraw.",
          "erc20Address": "ERC20 token to withdraw."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addMember(uint256,address)": {
        "notice": "Adds `newMember` to the shared role, `roleId`."
      },
      "getMember(uint256)": {
        "notice": "Gets the current holder of the exclusive role, `roleId`."
      },
      "holdsRole(uint256,address)": {
        "notice": "Whether `memberToCheck` is a member of roleId."
      },
      "removeMember(uint256,address)": {
        "notice": "Removes `memberToRemove` from the shared role, `roleId`."
      },
      "renounceMembership(uint256)": {
        "notice": "Removes caller from the role, `roleId`."
      },
      "resetMember(uint256,address)": {
        "notice": "Changes the exclusive role holder of `roleId` to `newMember`."
      },
      "withdraw(uint256)": {
        "notice": "Withdraws ETH from the contract."
      },
      "withdrawErc20(address,uint256)": {
        "notice": "Withdraws ERC20 tokens from the contract."
      }
    },
    "version": 1
  }
}