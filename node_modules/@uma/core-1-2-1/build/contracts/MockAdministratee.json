{
  "contractName": "MockAdministratee",
  "abi": [
    {
      "inputs": [],
      "name": "timesEmergencyShutdown",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timesRemargined",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "remargin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "emergencyShutdown",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pfc",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"emergencyShutdown\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pfc\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"remargin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timesEmergencyShutdown\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timesRemargined\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"pfc()\":{\"details\":\"This is equivalent to the collateral pool available from which to pay fees. Therefore, derived contracts are expected to implement this so that pay-fee methods can correctly compute the owed fees as a % of PfC.\",\"returns\":{\"_0\":\"pfc value for equal to the current profit from corruption denominated in collateral currency.\"}},\"remargin()\":{\"details\":\"It pays fees and moves money between margin accounts to make sure they reflect the NAV of the contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"emergencyShutdown()\":{\"notice\":\"Initiates the shutdown process, in case of an emergency.\"},\"pfc()\":{\"notice\":\"Gets the current profit from corruption for this contract in terms of the collateral currency.\"},\"remargin()\":{\"notice\":\"A core contract method called independently or as a part of other financial contract transactions.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/matt/git/protocol/packages/core/contracts/oracle/implementation/test/MockAdministratee.sol\":\"MockAdministratee\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":199},\"remappings\":[]},\"sources\":{\"/Users/matt/git/protocol/packages/core/contracts/common/implementation/FixedPoint.sol\":{\"keccak256\":\"0x15636c4d1914553c95712ef01d59e73a2ce6efacbe1a20bab8a513d5897cf96d\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://8b942ab427bf0c45a3d5b3701a8c509fcf01f2aa0ec525fc74f7f01a2aaa18cf\",\"dweb:/ipfs/QmPoSCBrBUQTiaKR6baSYchK863Lu7RY6gqMPEeUbwsgQV\"]},\"/Users/matt/git/protocol/packages/core/contracts/oracle/implementation/test/MockAdministratee.sol\":{\"keccak256\":\"0xe57b5418c5990e142eff25b5fb08a3f9152df8eb79f6721a78d357a9d431938d\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://44ab6b8439e7a1638d202daef5bc0d0a8035d828d2bd8d8a7709e325c67506df\",\"dweb:/ipfs/QmeN5sx8tUNgh2SoAzVuuSGchPkxaf7kNNnkTHA8i9QnDX\"]},\"/Users/matt/git/protocol/packages/core/contracts/oracle/interfaces/AdministrateeInterface.sol\":{\"keccak256\":\"0x7d8ea8237206ab15d984ab08a9af9facefd46799a053b94a8937dfe88b66a044\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://e6f456171b754253b66558d35597377631658b1a8c72189f854b7111567a3d33\",\"dweb:/ipfs/QmW7yfuXjUMp8TfKFYP62uscJJHqt9g42Ff1FthivQACoJ\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x04d34b3cd5677bea25f8dfceb6dec0eaa071d4d4b789a43f13fe0c415ba4c296\",\"urls\":[\"bzz-raw://e7e8b526a6839e5ba14f0d23a830387fec47f7043ce01d42c9f285b709a9d080\",\"dweb:/ipfs/QmXmhhFmX5gcAvVzNiDPAGA35iHMPNaYtQkACswRHBVTNw\"]},\"@openzeppelin/contracts/math/SignedSafeMath.sol\":{\"keccak256\":\"0xfadc24a31d75d6b3f955190cffe13bbe6e24a274c12b2b60e8c4004131487ce8\",\"urls\":[\"bzz-raw://0ec35367d49b2ea45f556a439f836e208d2460faeb6e2341e9130d163128b619\",\"dweb:/ipfs/QmTwKCBdkVAarY5hteSdwQ1J4GpogZoxCZHrbieMQVzuQJ\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506101f8806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80633403c2fc1461005c5780635d21f1531461006657806381a10ae114610084578063bda02e7714610099578063bea002bc146100a1575b600080fd5b6100646100a9565b005b61006e6100b3565b60405161007b91906101b9565b60405180910390f35b61008c6100b9565b60405161007b91906101af565b6100646100d0565b61006e6100db565b6001805481019055565b60015481565b6100c161015b565b6100cb60006100e1565b905090565b600080546001019055565b60005481565b6100e961015b565b60408051602081019091528061010784670de0b6b3a764000061010f565b905292915050565b60008261011e57506000610155565b8282028284828161012b57fe5b04146101525760405162461bcd60e51b81526004016101499061016e565b60405180910390fd5b90505b92915050565b6040518060200160405280600081525090565b60208082526021908201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6040820152607760f81b606082015260800190565b9051815260200190565b9081526020019056fea2646970667358221220859c0d50d54a91c644319e93a5a3ad591ee94e94057e4785a3a117747b3378a364736f6c634300060c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c80633403c2fc1461005c5780635d21f1531461006657806381a10ae114610084578063bda02e7714610099578063bea002bc146100a1575b600080fd5b6100646100a9565b005b61006e6100b3565b60405161007b91906101b9565b60405180910390f35b61008c6100b9565b60405161007b91906101af565b6100646100d0565b61006e6100db565b6001805481019055565b60015481565b6100c161015b565b6100cb60006100e1565b905090565b600080546001019055565b60005481565b6100e961015b565b60408051602081019091528061010784670de0b6b3a764000061010f565b905292915050565b60008261011e57506000610155565b8282028284828161012b57fe5b04146101525760405162461bcd60e51b81526004016101499061016e565b60405180910390fd5b90505b92915050565b6040518060200160405280600081525090565b60208082526021908201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6040820152607760f81b606082015260800190565b9051815260200190565b9081526020019056fea2646970667358221220859c0d50d54a91c644319e93a5a3ad591ee94e94057e4785a3a117747b3378a364736f6c634300060c0033",
  "immutableReferences": {},
  "sourceMap": "250:442:71:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "250:442:71:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;467:88;;;:::i;:::-;;345:37;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;561:129;;;:::i;:::-;;;;;;;:::i;389:72::-;;;:::i;309:30::-;;;:::i;467:88::-;524:22;:24;;;;;;467:88::o;345:37::-;;;;:::o;561:129::-;608:26;;:::i;:::-;653:30;681:1;653:27;:30::i;:::-;646:37;;561:129;:::o;389:72::-;437:15;:17;;;;;;389:72::o;309:30::-;;;;:::o;1027:135:3:-;1087:15;;:::i;:::-;1121:34;;;;;;;;;;1130:24;:1;607:6;1130:5;:24::i;:::-;1121:34;;1114:41;1027:135;-1:-1:-1;;1027:135:3:o;2119:459:89:-;2177:7;2418:6;2414:45;;-1:-1:-1;2447:1:89;2440:8;;2414:45;2481:5;;;2485:1;2481;:5;:1;2504:5;;;;;:10;2496:56;;;;-1:-1:-1;;;2496:56:89;;;;;;;:::i;:::-;;;;;;;;;2570:1;-1:-1:-1;2119:459:89;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;:::o;1010:416::-;1210:2;1224:47;;;230:2;1195:18;;;2095:19;266:34;2135:14;;;246:55;-1:-1;;;321:12;;;314:25;358:12;;;1181:245::o;1433:322::-;660:23;;841:37;;1610:2;1595:18;;1581:174::o;1762:222::-;841:37;;;1889:2;1874:18;;1860:124::o",
  "source": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity ^0.6.0;\npragma experimental ABIEncoderV2;\n\nimport \"../../interfaces/AdministrateeInterface.sol\";\n\n// A mock implementation of AdministrateeInterface, taking the place of a financial contract.\ncontract MockAdministratee is AdministrateeInterface {\n    uint256 public timesRemargined;\n    uint256 public timesEmergencyShutdown;\n\n    function remargin() external override {\n        timesRemargined++;\n    }\n\n    function emergencyShutdown() external override {\n        timesEmergencyShutdown++;\n    }\n\n    function pfc() external view override returns (FixedPoint.Unsigned memory) {\n        return FixedPoint.fromUnscaledUint(0);\n    }\n}\n",
  "sourcePath": "/Users/matt/git/protocol/packages/core/contracts/oracle/implementation/test/MockAdministratee.sol",
  "ast": {
    "absolutePath": "/Users/matt/git/protocol/packages/core/contracts/oracle/implementation/test/MockAdministratee.sol",
    "exportedSymbols": {
      "MockAdministratee": [
        20943
      ]
    },
    "id": 20944,
    "license": "AGPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 20906,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:23:71"
      },
      {
        "id": 20907,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "66:33:71"
      },
      {
        "absolutePath": "/Users/matt/git/protocol/packages/core/contracts/oracle/interfaces/AdministrateeInterface.sol",
        "file": "../../interfaces/AdministrateeInterface.sol",
        "id": 20908,
        "nodeType": "ImportDirective",
        "scope": 20944,
        "sourceUnit": 21137,
        "src": "101:53:71",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 20909,
              "name": "AdministrateeInterface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 21136,
              "src": "280:22:71",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AdministrateeInterface_$21136",
                "typeString": "contract AdministrateeInterface"
              }
            },
            "id": 20910,
            "nodeType": "InheritanceSpecifier",
            "src": "280:22:71"
          }
        ],
        "contractDependencies": [
          21136
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 20943,
        "linearizedBaseContracts": [
          20943,
          21136
        ],
        "name": "MockAdministratee",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "bea002bc",
            "id": 20912,
            "mutability": "mutable",
            "name": "timesRemargined",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 20943,
            "src": "309:30:71",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 20911,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "309:7:71",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5d21f153",
            "id": 20914,
            "mutability": "mutable",
            "name": "timesEmergencyShutdown",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 20943,
            "src": "345:37:71",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 20913,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "345:7:71",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              21129
            ],
            "body": {
              "id": 20921,
              "nodeType": "Block",
              "src": "427:34:71",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 20919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "437:17:71",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 20918,
                      "name": "timesRemargined",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20912,
                      "src": "437:15:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 20920,
                  "nodeType": "ExpressionStatement",
                  "src": "437:17:71"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "bda02e77",
            "id": 20922,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "remargin",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 20916,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "418:8:71"
            },
            "parameters": {
              "id": 20915,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "406:2:71"
            },
            "returnParameters": {
              "id": 20917,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "427:0:71"
            },
            "scope": 20943,
            "src": "389:72:71",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              21125
            ],
            "body": {
              "id": 20929,
              "nodeType": "Block",
              "src": "514:41:71",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 20927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "524:24:71",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 20926,
                      "name": "timesEmergencyShutdown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20914,
                      "src": "524:22:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 20928,
                  "nodeType": "ExpressionStatement",
                  "src": "524:24:71"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "3403c2fc",
            "id": 20930,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "emergencyShutdown",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 20924,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "505:8:71"
            },
            "parameters": {
              "id": 20923,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "493:2:71"
            },
            "returnParameters": {
              "id": 20925,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "514:0:71"
            },
            "scope": 20943,
            "src": "467:88:71",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              21135
            ],
            "body": {
              "id": 20941,
              "nodeType": "Block",
              "src": "636:54:71",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 20938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "681:1:71",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 20936,
                        "name": "FixedPoint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1957,
                        "src": "653:10:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_FixedPoint_$1957_$",
                          "typeString": "type(library FixedPoint)"
                        }
                      },
                      "id": 20937,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "fromUnscaledUint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 487,
                      "src": "653:27:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_Unsigned_$471_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct FixedPoint.Unsigned memory)"
                      }
                    },
                    "id": 20939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "653:30:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Unsigned_$471_memory_ptr",
                      "typeString": "struct FixedPoint.Unsigned memory"
                    }
                  },
                  "functionReturnParameters": 20935,
                  "id": 20940,
                  "nodeType": "Return",
                  "src": "646:37:71"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "81a10ae1",
            "id": 20942,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pfc",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 20932,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "590:8:71"
            },
            "parameters": {
              "id": 20931,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "573:2:71"
            },
            "returnParameters": {
              "id": 20935,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20934,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 20942,
                  "src": "608:26:71",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Unsigned_$471_memory_ptr",
                    "typeString": "struct FixedPoint.Unsigned"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 20933,
                    "name": "FixedPoint.Unsigned",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 471,
                    "src": "608:19:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Unsigned_$471_storage_ptr",
                      "typeString": "struct FixedPoint.Unsigned"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "607:28:71"
            },
            "scope": 20943,
            "src": "561:129:71",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 20944,
        "src": "250:442:71"
      }
    ],
    "src": "42:651:71"
  },
  "legacyAST": {
    "absolutePath": "/Users/matt/git/protocol/packages/core/contracts/oracle/implementation/test/MockAdministratee.sol",
    "exportedSymbols": {
      "MockAdministratee": [
        20943
      ]
    },
    "id": 20944,
    "license": "AGPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 20906,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:23:71"
      },
      {
        "id": 20907,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "66:33:71"
      },
      {
        "absolutePath": "/Users/matt/git/protocol/packages/core/contracts/oracle/interfaces/AdministrateeInterface.sol",
        "file": "../../interfaces/AdministrateeInterface.sol",
        "id": 20908,
        "nodeType": "ImportDirective",
        "scope": 20944,
        "sourceUnit": 21137,
        "src": "101:53:71",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 20909,
              "name": "AdministrateeInterface",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 21136,
              "src": "280:22:71",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AdministrateeInterface_$21136",
                "typeString": "contract AdministrateeInterface"
              }
            },
            "id": 20910,
            "nodeType": "InheritanceSpecifier",
            "src": "280:22:71"
          }
        ],
        "contractDependencies": [
          21136
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 20943,
        "linearizedBaseContracts": [
          20943,
          21136
        ],
        "name": "MockAdministratee",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "bea002bc",
            "id": 20912,
            "mutability": "mutable",
            "name": "timesRemargined",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 20943,
            "src": "309:30:71",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 20911,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "309:7:71",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5d21f153",
            "id": 20914,
            "mutability": "mutable",
            "name": "timesEmergencyShutdown",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 20943,
            "src": "345:37:71",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 20913,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "345:7:71",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              21129
            ],
            "body": {
              "id": 20921,
              "nodeType": "Block",
              "src": "427:34:71",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 20919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "437:17:71",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 20918,
                      "name": "timesRemargined",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20912,
                      "src": "437:15:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 20920,
                  "nodeType": "ExpressionStatement",
                  "src": "437:17:71"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "bda02e77",
            "id": 20922,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "remargin",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 20916,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "418:8:71"
            },
            "parameters": {
              "id": 20915,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "406:2:71"
            },
            "returnParameters": {
              "id": 20917,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "427:0:71"
            },
            "scope": 20943,
            "src": "389:72:71",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              21125
            ],
            "body": {
              "id": 20929,
              "nodeType": "Block",
              "src": "514:41:71",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 20927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "524:24:71",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 20926,
                      "name": "timesEmergencyShutdown",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20914,
                      "src": "524:22:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 20928,
                  "nodeType": "ExpressionStatement",
                  "src": "524:24:71"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "3403c2fc",
            "id": 20930,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "emergencyShutdown",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 20924,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "505:8:71"
            },
            "parameters": {
              "id": 20923,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "493:2:71"
            },
            "returnParameters": {
              "id": 20925,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "514:0:71"
            },
            "scope": 20943,
            "src": "467:88:71",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              21135
            ],
            "body": {
              "id": 20941,
              "nodeType": "Block",
              "src": "636:54:71",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 20938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "681:1:71",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 20936,
                        "name": "FixedPoint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1957,
                        "src": "653:10:71",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_FixedPoint_$1957_$",
                          "typeString": "type(library FixedPoint)"
                        }
                      },
                      "id": 20937,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "fromUnscaledUint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 487,
                      "src": "653:27:71",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_Unsigned_$471_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct FixedPoint.Unsigned memory)"
                      }
                    },
                    "id": 20939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "653:30:71",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Unsigned_$471_memory_ptr",
                      "typeString": "struct FixedPoint.Unsigned memory"
                    }
                  },
                  "functionReturnParameters": 20935,
                  "id": 20940,
                  "nodeType": "Return",
                  "src": "646:37:71"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "81a10ae1",
            "id": 20942,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pfc",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 20932,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "590:8:71"
            },
            "parameters": {
              "id": 20931,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "573:2:71"
            },
            "returnParameters": {
              "id": 20935,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20934,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 20942,
                  "src": "608:26:71",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Unsigned_$471_memory_ptr",
                    "typeString": "struct FixedPoint.Unsigned"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 20933,
                    "name": "FixedPoint.Unsigned",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 471,
                    "src": "608:19:71",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Unsigned_$471_storage_ptr",
                      "typeString": "struct FixedPoint.Unsigned"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "607:28:71"
            },
            "scope": 20943,
            "src": "561:129:71",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 20944,
        "src": "250:442:71"
      }
    ],
    "src": "42:651:71"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2020-12-19T00:28:52.752Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "pfc()": {
        "details": "This is equivalent to the collateral pool available from which to pay fees. Therefore, derived contracts are expected to implement this so that pay-fee methods can correctly compute the owed fees as a % of PfC.",
        "returns": {
          "_0": "pfc value for equal to the current profit from corruption denominated in collateral currency."
        }
      },
      "remargin()": {
        "details": "It pays fees and moves money between margin accounts to make sure they reflect the NAV of the contract."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "emergencyShutdown()": {
        "notice": "Initiates the shutdown process, in case of an emergency."
      },
      "pfc()": {
        "notice": "Gets the current profit from corruption for this contract in terms of the collateral currency."
      },
      "remargin()": {
        "notice": "A core contract method called independently or as a part of other financial contract transactions."
      }
    },
    "version": 1
  }
}