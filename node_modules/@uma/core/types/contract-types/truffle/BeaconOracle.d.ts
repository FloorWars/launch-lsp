/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import BN from "bn.js";
import { EventData, PastEventOptions } from "web3-eth-contract";

export interface BeaconOracleContract
  extends Truffle.Contract<BeaconOracleInstance> {
  "new"(meta?: Truffle.TransactionDetails): Promise<BeaconOracleInstance>;
}

export interface PriceRequestAdded {
  name: "PriceRequestAdded";
  args: {
    chainID: BN;
    identifier: string;
    time: BN;
    ancillaryData: string;
    0: BN;
    1: string;
    2: BN;
    3: string;
  };
}

export interface PushedPrice {
  name: "PushedPrice";
  args: {
    chainID: BN;
    identifier: string;
    time: BN;
    ancillaryData: string;
    price: BN;
    0: BN;
    1: string;
    2: BN;
    3: string;
    4: BN;
  };
}

type AllEvents = PriceRequestAdded | PushedPrice;

export interface BeaconOracleInstance extends Truffle.ContractInstance {
  currentChainID(txDetails?: Truffle.TransactionDetails): Promise<BN>;

  finder(txDetails?: Truffle.TransactionDetails): Promise<string>;

  methods: {
    currentChainID(txDetails?: Truffle.TransactionDetails): Promise<BN>;

    finder(txDetails?: Truffle.TransactionDetails): Promise<string>;
  };

  getPastEvents(event: string): Promise<EventData[]>;
  getPastEvents(
    event: string,
    options: PastEventOptions,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
  getPastEvents(event: string, options: PastEventOptions): Promise<EventData[]>;
  getPastEvents(
    event: string,
    callback: (error: Error, event: EventData) => void
  ): Promise<EventData[]>;
}
