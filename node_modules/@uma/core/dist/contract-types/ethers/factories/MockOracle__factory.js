"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.MockOracle__factory = void 0;
const ethers_1 = require("ethers");
class MockOracle__factory extends ethers_1.ContractFactory {
    constructor(signer) {
        super(_abi, _bytecode, signer);
    }
    deploy(_finderAddress, _timerAddress, overrides) {
        return super.deploy(_finderAddress, _timerAddress, overrides || {});
    }
    getDeployTransaction(_finderAddress, _timerAddress, overrides) {
        return super.getDeployTransaction(_finderAddress, _timerAddress, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.MockOracle__factory = MockOracle__factory;
const _abi = [
    {
        inputs: [
            {
                internalType: "address",
                name: "_finderAddress",
                type: "address",
            },
            {
                internalType: "address",
                name: "_timerAddress",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "getCurrentTime",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "time",
                type: "uint256",
            },
        ],
        name: "setCurrentTime",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "timerAddress",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "identifier",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "time",
                type: "uint256",
            },
        ],
        name: "requestPrice",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "identifier",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "time",
                type: "uint256",
            },
            {
                internalType: "int256",
                name: "price",
                type: "int256",
            },
        ],
        name: "pushPrice",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "identifier",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "time",
                type: "uint256",
            },
        ],
        name: "hasPrice",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "identifier",
                type: "bytes32",
            },
            {
                internalType: "uint256",
                name: "time",
                type: "uint256",
            },
        ],
        name: "getPrice",
        outputs: [
            {
                internalType: "int256",
                name: "",
                type: "int256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getPendingQueries",
        outputs: [
            {
                components: [
                    {
                        internalType: "bytes32",
                        name: "identifier",
                        type: "bytes32",
                    },
                    {
                        internalType: "uint256",
                        name: "time",
                        type: "uint256",
                    },
                ],
                internalType: "struct MockOracle.QueryPoint[]",
                name: "",
                type: "tuple[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b50604051610a67380380610a6783398101604081905261002f9161007f565b600080546001600160a01b039283166001600160a01b031991821617909155600180549390921692169190911790556100b1565b80516001600160a01b038116811461007a57600080fd5b919050565b60008060408385031215610091578182fd5b61009a83610063565b91506100a860208401610063565b90509250929050565b6109a7806100c06000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c806368ad8ae31161005b57806368ad8ae3146100fb578063a03e881a1461010e578063b555d60814610131578063c9280f061461014657600080fd5b8063051fd48c1461008d5780631c39c38d146100a257806322f8e566146100d257806329cb924d146100e5575b600080fd5b6100a061009b3660046108a4565b610159565b005b6000546100b5906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100a06100e03660046108cf565b61031d565b6100ed610393565b6040519081526020016100c9565b6100a0610109366004610883565b610433565b61012161011c366004610883565b6105c2565b60405190151581526020016100c9565b610139610673565b6040516100c991906108ff565b6100ed610154366004610883565b6106e6565b604051806060016040528060011515815260200182815260200161017b610393565b9052600084815260026020818152604080842087855282528084208551815460ff19169015151781558583015160018201559481015194909201939093558582526003835280822085835290925220805460ff166102355760405162461bcd60e51b815260206004820152602d60248201527f43616e2774207075736820707269636573207468617420686176656e2774206260448201526c19595b881c995c5d595cdd1959609a1b606482015260840160405180910390fd5b60018082015460008681526003602090815260408083208884529091528120805460ff19168155830181905560045491929091610272919061094e565b90508181146103155760006004828154811061029e57634e487b7160e01b600052603260045260246000fd5b600091825260208083206002909202909101805483526003825260408084206001808401548652935290922001849055600480549192508291859081106102f557634e487b7160e01b600052603260045260246000fd5b600091825260209091208254600290920201908155600191820154910155505b505050505050565b6000546001600160a01b031661033257600080fd5b60005460405163117c72b360e11b8152600481018390526001600160a01b03909116906322f8e56690602401600060405180830381600087803b15801561037857600080fd5b505af115801561038c573d6000803e3d6000fd5b5050505050565b600080546001600160a01b03161561042e5760008054906101000a90046001600160a01b03166001600160a01b03166329cb924d6040518163ffffffff1660e01b815260040160206040518083038186803b1580156103f157600080fd5b505afa158015610405573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042991906108e7565b905090565b504290565b61043b6107a8565b6001600160a01b03166390978d1b836040518263ffffffff1660e01b815260040161046891815260200190565b60206040518083038186803b15801561048057600080fd5b505afa158015610494573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b89190610863565b6104c157600080fd5b60008281526002602090815260408083208484529091529020805460ff161580156105065750600083815260036020908152604080832085845290915290205460ff16155b156105bd57604080518082018252600180825260048054602080850191825260008981526003825286812089825282528681209551865460ff1916901515178655915194840194909455845180860190955287855292840186815281549283018255925291517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b600290930292830155517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19c909101555b505050565b60006105cc6107a8565b6001600160a01b03166390978d1b846040518263ffffffff1660e01b81526004016105f991815260200190565b60206040518083038186803b15801561061157600080fd5b505afa158015610625573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106499190610863565b61065257600080fd5b50600091825260026020908152604080842092845291905290205460ff1690565b60606004805480602002602001604051908101604052809291908181526020016000905b828210156106dd57838290600052602060002090600202016040518060400160405290816000820154815260200160018201548152505081526020019060010190610697565b50505050905090565b60006106f06107a8565b6001600160a01b03166390978d1b846040518263ffffffff1660e01b815260040161071d91815260200190565b60206040518083038186803b15801561073557600080fd5b505afa158015610749573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061076d9190610863565b61077657600080fd5b60008381526002602090815260408083208584529091529020805460ff1661079d57600080fd5b600101549392505050565b6001546040516302abf57960e61b8152721259195b9d1a599a595c95da1a5d195b1a5cdd606a1b60048201526000916001600160a01b03169063aafd5e409060240160206040518083038186803b15801561080257600080fd5b505afa158015610816573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104299190600060208284031215610846578081fd5b81516001600160a01b038116811461085c578182fd5b9392505050565b600060208284031215610874578081fd5b8151801515811461085c578182fd5b60008060408385031215610895578081fd5b50508035926020909101359150565b6000806000606084860312156108b8578081fd5b505081359360208301359350604090920135919050565b6000602082840312156108e0578081fd5b5035919050565b6000602082840312156108f8578081fd5b5051919050565b602080825282518282018190526000919060409081850190868401855b828110156109415781518051855286015186850152928401929085019060010161091c565b5091979650505050505050565b60008282101561096c57634e487b7160e01b81526011600452602481fd5b50039056fea2646970667358221220ae1527165c2eb4aab3b5ca1097b257045bee746e78dbe55f4df4011091daf78b64736f6c63430008040033";
