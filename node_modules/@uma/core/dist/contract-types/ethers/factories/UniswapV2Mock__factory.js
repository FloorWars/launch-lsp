"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.UniswapV2Mock__factory = void 0;
const ethers_1 = require("ethers");
class UniswapV2Mock__factory extends ethers_1.ContractFactory {
    constructor(signer) {
        super(_abi, _bytecode, signer);
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.UniswapV2Mock__factory = UniswapV2Mock__factory;
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint112",
                name: "reserve0",
                type: "uint112",
            },
            {
                indexed: false,
                internalType: "uint112",
                name: "reserve1",
                type: "uint112",
            },
        ],
        name: "Sync",
        type: "event",
    },
    {
        inputs: [],
        name: "token0",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "token1",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_token0",
                type: "address",
            },
            {
                internalType: "address",
                name: "_token1",
                type: "address",
            },
        ],
        name: "setTokens",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint112",
                name: "reserve0",
                type: "uint112",
            },
            {
                internalType: "uint112",
                name: "reserve1",
                type: "uint112",
            },
        ],
        name: "setPrice",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b506101ef806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630dfe1681146100515780638fa07a1114610080578063cbc7854e14610095578063d21220a7146100d1575b600080fd5b600054610064906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b61009361008e366004610190565b6100e4565b005b6100936100a336600461015e565b600080546001600160a01b039384166001600160a01b03199182161790915560018054929093169116179055565b600154610064906001600160a01b031681565b604080516001600160701b038085168252831660208201527f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1910160405180910390a15050565b80356001600160a01b038116811461014257600080fd5b919050565b80356001600160701b038116811461014257600080fd5b60008060408385031215610170578182fd5b6101798361012b565b91506101876020840161012b565b90509250929050565b600080604083850312156101a2578182fd5b6101ab83610147565b91506101876020840161014756fea26469706673582212202c88b193c9b48a71b37f5365fc699d4a1682dd0382264eec171d7f80e74a1c1664736f6c63430008040033";
