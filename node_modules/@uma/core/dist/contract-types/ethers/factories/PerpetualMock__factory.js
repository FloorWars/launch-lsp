"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PerpetualMock__factory = void 0;
const ethers_1 = require("ethers");
class PerpetualMock__factory extends ethers_1.ContractFactory {
    constructor(signer) {
        super(_abi, _bytecode, signer);
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.PerpetualMock__factory = PerpetualMock__factory;
const _abi = [
    {
        anonymous: false,
        inputs: [],
        name: "EndedSponsorPosition",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [],
        name: "LiquidationCreated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "sponsor",
                type: "address",
            },
        ],
        name: "NewSponsor",
        type: "event",
    },
    {
        inputs: [],
        name: "collateralRequirement",
        outputs: [
            {
                internalType: "uint256",
                name: "rawValue",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "cumulativeFeeMultiplier",
        outputs: [
            {
                internalType: "uint256",
                name: "rawValue",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "fundingRate",
        outputs: [
            {
                components: [
                    {
                        internalType: "int256",
                        name: "rawValue",
                        type: "int256",
                    },
                ],
                internalType: "struct FixedPoint.Signed",
                name: "rate",
                type: "tuple",
            },
            {
                internalType: "bytes32",
                name: "identifier",
                type: "bytes32",
            },
            {
                components: [
                    {
                        internalType: "uint256",
                        name: "rawValue",
                        type: "uint256",
                    },
                ],
                internalType: "struct FixedPoint.Unsigned",
                name: "cumulativeMultiplier",
                type: "tuple",
            },
            {
                internalType: "uint256",
                name: "updateTime",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "applicationTime",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "proposalTime",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "liquidationLiveness",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        name: "liquidations",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        name: "positions",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getCurrentTime",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        components: [
                            {
                                internalType: "int256",
                                name: "rawValue",
                                type: "int256",
                            },
                        ],
                        internalType: "struct FixedPoint.Signed",
                        name: "rate",
                        type: "tuple",
                    },
                    {
                        internalType: "bytes32",
                        name: "identifier",
                        type: "bytes32",
                    },
                    {
                        components: [
                            {
                                internalType: "uint256",
                                name: "rawValue",
                                type: "uint256",
                            },
                        ],
                        internalType: "struct FixedPoint.Unsigned",
                        name: "cumulativeMultiplier",
                        type: "tuple",
                    },
                    {
                        internalType: "uint256",
                        name: "updateTime",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "applicationTime",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "proposalTime",
                        type: "uint256",
                    },
                ],
                internalType: "struct PerpetualMock.FundingRate",
                name: "_fundingRate",
                type: "tuple",
            },
        ],
        name: "setFundingRate",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "applyFundingRate",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561001057600080fd5b506105c3806100206000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806355f575101161006657806355f575101461012757806371f3c1b714610147578063937d4c4214610151578063beb4dada14610171578063dd0eef3d146101af57600080fd5b806329cb924d146100985780632d5436cf146100ad57806341d3c84c146100b657806348e30c3f1461011d575b600080fd5b425b6040519081526020015b60405180910390f35b61009a60075481565b60408051602080820183526000548252600154835191820190935260025481526003546004546005546100ea959392919086565b604080519651875260208701959095529251938501939093526060840152608083019190915260a082015260c0016100a4565b60065461009a9081565b61009a61013536600461036f565b60096020526000908152604090205481565b61014f6101b9565b005b61009a61015f36600461036f565b600a6020526000908152604090205481565b61014f61017f366004610396565b80515160005560208101516001556040810151516002556060810151600355608081015160045560a00151600555565b60085461009a9081565b4260045560408051602081019091526000548152610204906101ee906101e9906101e3600161020a565b9061023f565b610272565b60408051602081019091526002548152906102e4565b51600255565b60408051602081019091526000815260408051602081019091528061023784670de0b6b3a7640000610321565b905292915050565b60408051602081019091526000815260408051602081019091528251845182916102699190610334565b90529392505050565b6040805160208101909152600081528151600013156102d15760405162461bcd60e51b8152602060048201526017602482015276139959d85d1a5d99481d985b1d59481c1c9bdd9a591959604a1b604482015260640160405180910390fd5b5060408051602081019091529051815290565b6040805160208101909152600081526040805160208101909152825184518291670de0b6b3a76400009161031791610340565b61026991906104b5565b600061032d82846104d5565b9392505050565b600061032d8284610474565b600061032d8284610558565b60006020828403121561035d578081fd5b61036561043d565b9135825250919050565b600060208284031215610380578081fd5b81356001600160a01b038116811461032d578182fd5b600081830360c08112156103a8578182fd5b60405160c0810181811067ffffffffffffffff821117156103d757634e487b7160e01b84526041600452602484fd5b60405260208212156103e7578283fd5b6103ef61043d565b9150833582528181526020840135602082015261040f856040860161034c565b6040820152606084013560608201526080840135608082015260a084013560a0820152809250505092915050565b6040516020810167ffffffffffffffff8111828210171561046e57634e487b7160e01b600052604160045260246000fd5b60405290565b600080821280156001600160ff1b038490038513161561049657610496610577565b600160ff1b83900384128116156104af576104af610577565b50500190565b6000826104d057634e487b7160e01b81526012600452602481fd5b500490565b60006001600160ff1b03818413828413808216868404861116156104fb576104fb610577565b600160ff1b8487128281168783058912161561051957610519610577565b85871292508782058712848416161561053457610534610577565b8785058712818416161561054a5761054a610577565b505050929093029392505050565b600081600019048311821515161561057257610572610577565b500290565b634e487b7160e01b600052601160045260246000fdfea264697066735822122059094665a3862a1ff244586f293687f0b9d9a1c90771f6fc3bee9a4f845cb16264736f6c63430008040033";
