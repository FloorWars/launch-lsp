{
  "contractName": "OptimisticDepositBox",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_collateralAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_finderAddress",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_priceIdentifier",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "_timerAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "EndedOptimisticDepositBox",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "NewOptimisticDepositBox",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "withdrawalRequestTimestamp",
          "type": "uint256"
        }
      ],
      "name": "RequestWithdrawal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "withdrawalRequestTimestamp",
          "type": "uint256"
        }
      ],
      "name": "RequestWithdrawalCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "exchangeRate",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "withdrawalRequestTimestamp",
          "type": "uint256"
        }
      ],
      "name": "RequestWithdrawalExecuted",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "collateralCurrency",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "setCurrentTime",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timerAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalOptimisticDepositBoxCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "denominatedCollateralAmount",
          "type": "uint256"
        }
      ],
      "name": "requestWithdrawal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "executeWithdrawal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountWithdrawn",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cancelWithdrawal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getCollateral",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collateralAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_finderAddress\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_priceIdentifier\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"_timerAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"EndedOptimisticDepositBox\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"NewOptimisticDepositBox\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawalRequestTimestamp\",\"type\":\"uint256\"}],\"name\":\"RequestWithdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawalRequestTimestamp\",\"type\":\"uint256\"}],\"name\":\"RequestWithdrawalCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"exchangeRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"withdrawalRequestTimestamp\",\"type\":\"uint256\"}],\"name\":\"RequestWithdrawalExecuted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"cancelWithdrawal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collateralCurrency\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"executeWithdrawal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountWithdrawn\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"denominatedCollateralAmount\",\"type\":\"uint256\"}],\"name\":\"requestWithdrawal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"setCurrentTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalOptimisticDepositBoxCollateral\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_collateralAddress\":\"ERC20 token to be deposited.\",\"_finderAddress\":\"UMA protocol Finder used to discover other protocol contracts.\",\"_priceIdentifier\":\"registered in the DVM, used to price the ERC20 deposited. The price identifier consists of a \\\"base\\\" asset and a \\\"quote\\\" asset. The \\\"base\\\" asset corresponds to the collateral ERC20 currency deposited into this account, and it is denominated in the \\\"quote\\\" asset on withdrawals. An example price identifier would be \\\"ETH/USD\\\" which will resolve and return the USD price of ETH.\",\"_timerAddress\":\"contract that stores the current time in a testing environment. Must be set to 0x0 for production environments that use live time.\"}},\"deposit(uint256)\":{\"details\":\"This contract must be approved to spend at least `collateralAmount` of `collateralCurrency`.\",\"params\":{\"collateralAmount\":\"total amount of collateral tokens to be sent to the sponsor's position.\"}},\"executeWithdrawal()\":{\"details\":\"Might not withdraw the full requested amount in order to account for precision loss.\",\"returns\":{\"amountWithdrawn\":\"The actual amount of collateral withdrawn.\"}},\"getCollateral(address)\":{\"params\":{\"user\":\"address whose collateral amount is retrieved.\"},\"returns\":{\"_0\":\"the collateral amount in the deposit box (i.e. available for withdrawal).\"}},\"getCurrentTime()\":{\"returns\":{\"_0\":\"uint for the current Testable timestamp.\"}},\"requestWithdrawal(uint256)\":{\"details\":\"The request will be pending for the duration of the liveness period and can be cancelled at any time. Only one withdrawal request can exist for the user.\",\"params\":{\"denominatedCollateralAmount\":\"the quote-asset denominated amount of collateral requested to withdraw.\"}},\"setCurrentTime(uint256)\":{\"details\":\"Will revert if not running in test mode.\",\"params\":{\"time\":\"timestamp to set current Testable time to.\"}}},\"title\":\"Optimistic Token Deposit Box\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"cancelWithdrawal()\":{\"notice\":\"Cancels a pending withdrawal request.\"},\"constructor\":{\"notice\":\"Construct the OptimisticDepositBox.\"},\"deposit(uint256)\":{\"notice\":\"Transfers `collateralAmount` of `collateralCurrency` into caller's deposit box.\"},\"executeWithdrawal()\":{\"notice\":\"After a withdrawal request (i.e., by a call to `requestWithdrawal`) and optimistic oracle price resolution, withdraws `depositBoxData.withdrawalRequestAmount` of collateral currency denominated in the quote asset.\"},\"getCollateral(address)\":{\"notice\":\"Accessor method for a user's collateral.\"},\"getCurrentTime()\":{\"notice\":\"Gets the current time. Will return the last time set in `setCurrentTime` if running in test mode. Otherwise, it will return the block timestamp.\"},\"requestWithdrawal(uint256)\":{\"notice\":\"Starts a withdrawal request that allows the sponsor to withdraw `denominatedCollateralAmount` from their position denominated in the quote asset of the price identifier, following a Optimistic Oracle price resolution.\"},\"setCurrentTime(uint256)\":{\"notice\":\"Sets the current time.\"}},\"notice\":\"This is a minimal example of a financial template that depends on price requests from the Optimistic Oracle. This contract should be thought of as a \\\"Deposit Box\\\" into which the user deposits some ERC20 collateral. The main feature of this box is that the user can withdraw their ERC20 corresponding to a desired USD amount. When the user wants to make a withdrawal, a price request is made to the Optimistic Oracle. For simplicity, the user is constrained to have one outstanding withdrawal request at any given time. Final fees are charged to the proposer of a price but not to the contract making a price request. This example is intended to accompany a technical tutorial for how to integrate the Optimistic Oracle into a project. The main feature this demo serves to showcase is how to build a financial product on-chain that \\\"pulls\\\" price requests from the Optimistic Oracle on-demand, which is an implementation of the \\\"priceless\\\" oracle framework. The typical user flow would be: - User sets up a deposit box for the ETH/USD price-identifier.   The \\\"collateral currency\\\" in this deposit box is therefore wETH.   The user can subsequently make withdrawal requests for USD-denominated amounts of wETH. - User deposits 10 wETH into their deposit box. - User later requests to withdraw $10,000 USD of wETH. - OptimisticDepositBox asks Optimistic Oracle for latest ETH/USD exchange rate. - Optimistic Oracle resolves the exchange rate at: 1 wETH is worth 2000 USD. - OptimisticDepositBox transfers 5 wETH to user.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/circleci/protocol/packages/core/contracts/financial-templates/demo/OptimisticDepositBox.sol\":\"OptimisticDepositBox\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":199},\"remappings\":[]},\"sources\":{\"/home/circleci/protocol/packages/core/contracts/common/implementation/AddressWhitelist.sol\":{\"keccak256\":\"0xc1f20b925f9d37230aaf7bbee536f9a9b08e4772864f0a243ff1b69b54710fee\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://55bc6782bd269463214dbafa8702b2ff33910fd4a51ab24d775aabb15e278bcc\",\"dweb:/ipfs/QmV41DnGByGBtg8gk7MG6Nr3xYo5R5varZ8cewywdKNATQ\"]},\"/home/circleci/protocol/packages/core/contracts/common/implementation/FixedPoint.sol\":{\"keccak256\":\"0x8ea44f1bf5e1efcfc5943ea67c3dc5bf7ce1ba84bf2d6b868baafac7e422cc01\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://94e828e682e9e44991807f5f39c2ed499b451d65155d8a6c6d0fd62b13dbd222\",\"dweb:/ipfs/QmPfPWyR9deca2dHmwVnm3E9Kt2fLXXABQE4WT8iSdKSXm\"]},\"/home/circleci/protocol/packages/core/contracts/common/implementation/Lockable.sol\":{\"keccak256\":\"0xcd34b3f83b61a096b53020749f327096d5cacd89c2393d947595afb934496ad4\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://aef5cb31ab23e1e6baad76130c29aff1ee3fcda3c4ffc80e0a5294341a253934\",\"dweb:/ipfs/QmNyso4UszNxE6un3Cqc3R7KiBmZzdWNULvjBDfnLRAmwc\"]},\"/home/circleci/protocol/packages/core/contracts/common/implementation/MultiRole.sol\":{\"keccak256\":\"0x134c5a2f847832705be631f2b4eb2a3e23a91a2f0e63560abb481e85eeebfae6\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://f1267c6ad560d1eb896575919ecca13759bf50bb82d1215e03fc1f0424ec37a6\",\"dweb:/ipfs/QmXewGxpSmSMGYmT6ZUyxCVzy2cybxicbnyCn8w87m5mo3\"]},\"/home/circleci/protocol/packages/core/contracts/common/implementation/Testable.sol\":{\"keccak256\":\"0xc8c2806fa5c7898d8f69f0c860e4cdc62bba5f349e067d67da44e29e02042017\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://5c5a09efecfeecca33ebcaf69b4790e37dc221385308c872afd33830e093ef80\",\"dweb:/ipfs/QmYny7WeDJ9ntr8FKVp74xdq7kvQ2ina4si5uBj1DAk2ua\"]},\"/home/circleci/protocol/packages/core/contracts/common/implementation/Timer.sol\":{\"keccak256\":\"0x9e0dd7389718bd5d1da910273a6f4cee98ee22bfc0c92bde0f0955c0e23adb5e\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://7ddac8d3cb76f8811156a11a7702d7c05b15a0f18c22b5abdc318723193f9266\",\"dweb:/ipfs/QmPxL7AU8NkURJaZ6WxXNcw88wGMSoPX4jbt7SMdPJqtYv\"]},\"/home/circleci/protocol/packages/core/contracts/common/interfaces/AddressWhitelistInterface.sol\":{\"keccak256\":\"0x1931bd12ae010b36a8c3426611e05929305e11a578989f9353405d4f72617213\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://0e3641755e87dab4945a8e5ede0db029a3738ba551b58b690bf36ab8f92a64bc\",\"dweb:/ipfs/QmcmiTRmVTLXBRznN1mK9CEW7kJtHhGo79LfW4hJTYJ3So\"]},\"/home/circleci/protocol/packages/core/contracts/financial-templates/demo/OptimisticDepositBox.sol\":{\"keccak256\":\"0x24aeb2fbdc1f3c3aa7006e4acc8449835af93042cb02914e43d0cb1bc53a82c2\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://814ed16e65fa9b55ffa589221f8bb969aefd2091c68999d4a430e90ca06e99ce\",\"dweb:/ipfs/QmXKoLgu76CmT1jjQP6oLJyTUgFZs9Cd1ncmF9dypRbLFR\"]},\"/home/circleci/protocol/packages/core/contracts/oracle/implementation/Constants.sol\":{\"keccak256\":\"0x5d1abdfd3904f6b26addd5b5dbaf8d68591cbb8ec461d566c081d2a6d931c8d3\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://fd2b0df2c7cd4d518f2516a554a6e0e599d262dda0c84a23ae207a8e6261c9f3\",\"dweb:/ipfs/QmPfg6aJQvy8LRVoG5b9QknNiuB1SaHeQh8Fh23LjmR7A6\"]},\"/home/circleci/protocol/packages/core/contracts/oracle/implementation/ContractCreator.sol\":{\"keccak256\":\"0x8e7465ac555b6241a467cc0fae718b752b00113d5690be93f1e2dbb1ac26faa2\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://5cddd158d45b63fa93f13176ceb3707bb145bf274c9bba2970d6c1154118d4cd\",\"dweb:/ipfs/QmQ8fxXDUbBJVbutcNkd2PNGpMXGyktGmvZzkmk1gPTYpC\"]},\"/home/circleci/protocol/packages/core/contracts/oracle/implementation/Registry.sol\":{\"keccak256\":\"0x4c8a06a285774f9d95cd4ffdd17b2829b8dc40a174775b3be9c032e5a3be87f0\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://d958337f7f60b8c653accc7c5ce76d9ba12195bd21d27df0c8812677b902d8dd\",\"dweb:/ipfs/QmZCznHse5DQaqy8QuXw8EdzzcLXHvCroZZRSPVAbqVRs7\"]},\"/home/circleci/protocol/packages/core/contracts/oracle/interfaces/FinderInterface.sol\":{\"keccak256\":\"0x9166fbfe08e954eb86d33c114fcde7ce4fd0dda5d9d28b31210582bfc769fa86\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://e611e12bcaaebfdf65b67c566ff1d34708e757f01a445bd87c55862e89383b81\",\"dweb:/ipfs/QmYNSq5oopTShdS6j4VWKqoLxmQSRKmWebCxw6K4LfmKrf\"]},\"/home/circleci/protocol/packages/core/contracts/oracle/interfaces/IdentifierWhitelistInterface.sol\":{\"keccak256\":\"0x9ae86a30dd1a8c03fb2c6d27be570bb30c4c0b13ac63cde8620b7e4b51d88dc9\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://a71d2aff48e075ecab56a9c9767775d1d77e04ec9191fed124e71003220549e3\",\"dweb:/ipfs/QmYPWsZXro6fzqpZY6UxQ5X8znEXfLp2sun8oXzdz8bTyc\"]},\"/home/circleci/protocol/packages/core/contracts/oracle/interfaces/OptimisticOracleInterface.sol\":{\"keccak256\":\"0x92e7280c1abd5f0c4fcd20247fc1b8428aaf4eeea59439c074d15fdaf9c64989\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://8d12bbcf0a91cef63c4767bffd047254599c5a1fce38e5e81d3005e102fdeef8\",\"dweb:/ipfs/QmTkd3AG9gdvBZq3HKCUW8eErvkguM2QqE3nUDGfvye3Yi\"]},\"/home/circleci/protocol/packages/core/contracts/oracle/interfaces/RegistryInterface.sol\":{\"keccak256\":\"0x6cfbe07afe35ce4c35ee2a265e015eb6caefdc224f17d7d3c3b751b4bd6c6d31\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://3b2bbdc14e0206bd0d368938c993938c8afd12b9a679fed93490b2b883318d5a\",\"dweb:/ipfs/Qmdki42FiX5dPNjae8YLiJSBvWbceSyYDCXLMbzZXvJZ8L\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ff16b336ce8f906478d5f2eecc6435e00833bdc0b92f6b209cf9e92cb5b2b7\",\"dweb:/ipfs/QmRD1rAZEqQ73C33cdA3QoUyBDMEWnNKNMc6PNkAZWHeQQ\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x99f5c21018d796db7833a2100bb0e7411999e248a3c950fb526eee5d2bf47cb7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b31b80dd57f8c28320b01fa4f3ed98ac1aa678f61846c1db2771c996b77a9451\",\"dweb:/ipfs/QmcT2Di5L9t82A9XdYDZ4tWMEPGFVFazKDwC2Vrd135AA3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a4c96fafff76deda5697c3c5c98cade6e6e1b178254544c106bf360c079ce4e\",\"dweb:/ipfs/QmXmxubE3jnatFgZuN8ay1VV6hZ8WRmhvUjNpeVjki15HX\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x2526b7c6a366fc211bbc176078ab02b83833e7682abcc5b3bed9d700b34e2a3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f9529d3d365e8415155cee11394e0f7c0de2152b601b7e77508fce16cb4a509\",\"dweb:/ipfs/QmVhbcLVsAzvqfjsdLwy25XMjgVJm7Z3w2JCNiNbZF2GHT\"]},\"@openzeppelin/contracts/utils/math/SignedSafeMath.sol\":{\"keccak256\":\"0xd1ddc24b24f12a347093844dd645c3a96bcdce05d1f51b8650946ad404cb3c40\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://873363c817ef68913ced271e77fc4af21d4a94ffba23de2b205c6e9de8ff6b72\",\"dweb:/ipfs/QmNmN46R3rrvTxMUjDTbZiCiqqTX9TRvWbiaN9qLrWQXPS\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620014943803806200149483398101604081905262000034916200041b565b600080546001600160a81b0319166001600160a01b03831617600160a01b1790556200005f62000285565b620000726000805460ff60a01b19169055565b600380546001600160a01b0319166001600160a01b03851617905562000097620002e2565b6001600160a01b03166390978d1b836040518263ffffffff1660e01b8152600401620000c591815260200190565b60206040518083038186803b158015620000de57600080fd5b505afa158015620000f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200011991906200046e565b6200016b5760405162461bcd60e51b815260206004820152601c60248201527f556e737570706f72746564207072696365206964656e7469666965720000000060448201526064015b60405180910390fd5b6200017562000388565b604051631d1d5b3960e11b81526001600160a01b0386811660048301529190911690633a3ab6729060240160206040518083038186803b158015620001b957600080fd5b505afa158015620001ce573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001f491906200046e565b620002425760405162461bcd60e51b815260206004820152601b60248201527f556e737570706f7274656420636f6c6c61746572616c20747970650000000000604482015260640162000162565b600480546001600160a01b0319166001600160a01b03861617905560028290556200027b6000805460ff60a01b1916600160a01b179055565b5050505062000490565b600054600160a01b900460ff16620002e05760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640162000162565b565b6003546040516302abf57960e61b81527f4964656e74696669657257686974656c6973740000000000000000000000000060048201526000916001600160a01b03169063aafd5e40906024015b60206040518083038186803b1580156200034857600080fd5b505afa1580156200035d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003839190620003f7565b905090565b6003546040516302abf57960e61b81527f436f6c6c61746572616c57686974656c6973740000000000000000000000000060048201526000916001600160a01b03169063aafd5e40906024016200032f565b80516001600160a01b0381168114620003f257600080fd5b919050565b60006020828403121562000409578081fd5b6200041482620003da565b9392505050565b6000806000806080858703121562000431578283fd5b6200043c85620003da565b93506200044c60208601620003da565b9250604085015191506200046360608601620003da565b905092959194509250565b60006020828403121562000480578081fd5b8151801515811462000414578182fd5b610ff480620004a06000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80639b56d6c9116100665780639b56d6c9146101195780639ee679e81461012c578063b6b55f251461013f578063dfddabaa14610152578063fa45aa001461015b57600080fd5b80630de15fd9146100a35780631c39c38d146100d357806322611280146100e657806322f8e566146100f057806329cb924d14610103575b600080fd5b6004546100b6906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6000546100b6906001600160a01b031681565b6100ee610163565b005b6100ee6100fe366004610e92565b61022d565b61010b6102a3565b6040519081526020016100ca565b61010b610127366004610e22565b610346565b6100ee61013a366004610e92565b61036f565b6100ee61014d366004610e92565b61044e565b61010b60055481565b61010b61056d565b61016b610712565b61017d6000805460ff60a01b19169055565b336000908152600160208190526040909120908101546101dc5760405162461bcd60e51b8152602060048201526015602482015274139bc81c195b991a5b99c81dda5d1a191c985dd85b605a1b60448201526064015b60405180910390fd5b8054600182015460405190815233907fb158ea6c33db5aec992a08be94850f984ed987f3d524e5ec7d0662b689093b149060200160405180910390a3600080825560018201555061022b61076b565b565b6000546001600160a01b031661024257600080fd5b60005460405163117c72b360e11b8152600481018390526001600160a01b03909116906322f8e56690602401600060405180830381600087803b15801561028857600080fd5b505af115801561029c573d6000803e3d6000fd5b5050505050565b600080546001600160a01b03161561033e5760008054906101000a90046001600160a01b03166001600160a01b03166329cb924d6040518163ffffffff1660e01b815260040160206040518083038186803b15801561030157600080fd5b505afa158015610315573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103399190610e7a565b905090565b504290565b90565b6000610350610712565b506001600160a01b031660009081526001602052604090206002015490565b3361037981610780565b610381610712565b6103936000805460ff60a01b19169055565b336000908152600160205260409020826103eb5760405162461bcd60e51b8152602060048201526019602482015278125b9d985b1a590818dbdb1b185d195c985b08185b5bdd5b9d603a1b60448201526064016101d3565b8281556103f66102a3565b60018201819055604051908152839033907fadf0d81321571e1d83f52cfa9faf7add412d39431677ee21583f0d8998a9c8389060200160405180910390a361044181600101546107df565b5061044a61076b565b5050565b610456610712565b6104686000805460ff60a01b19169055565b600081116104b45760405162461bcd60e51b8152602060048201526019602482015278125b9d985b1a590818dbdb1b185d195c985b08185b5bdd5b9d603a1b60448201526064016101d3565b33600090815260016020526040902060028101546104f85760405133907f5b4f05768e926839c662b50d15b54a8dc09e7bcecdc5555797b36befc536be7990600090a25b60028101546105079083610896565b60028201556005546105199083610896565b600555604051829033907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c90600090a3600454610561906001600160a01b03163330856108a9565b5061056a61076b565b50565b6000610577610712565b6105896000805460ff60a01b19169055565b33600090815260016020819052604090912090810154158015906105b857506105b06102a3565b816001015411155b6106045760405162461bcd60e51b815260206004820152601860248201527f496e76616c69642077697468647261772072657175657374000000000000000060448201526064016101d3565b6000610613826001015461091a565b604080516020808201835283825282519081019092528454825291925060009161063d9190610ab0565b516002840154909150811061067e5750600282015460405133907ffaef2b8b7c70f0da0a2ba1eb9e2b903a20a3b6004f0199a097e39be70119f5a890600090a25b600283015461068d9082610af5565b600284015560055461069f9082610af5565b6005556001830154604080518481526020810192909252829133917f1489278b1433363140f0068698af68fad66f0f617b6cabe5710540b57397de42910160405180910390a360008084556001840155600454610706906001600160a01b03163383610b01565b9250505061034361076b565b600054600160a01b900460ff1661022b5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016101d3565b6000805460ff60a01b1916600160a01b179055565b6001600160a01b038116600090815260016020819052604090912001541561056a5760405162461bcd60e51b815260206004820152601260248201527114195b991a5b99c81dda5d1a191c985dd85b60721b60448201526064016101d3565b60006107e9610b31565b600254600480546040516311df92f160e01b8152918201929092526024810185905260a06044820152600060a482018190526001600160a01b03928316606483015260848201529192508216906311df92f19060c401602060405180830381600087803b15801561085957600080fd5b505af115801561086d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108919190610e7a565b505050565b60006108a28284610ef9565b9392505050565b6040516001600160a01b03808516602483015283166044820152606481018290526109149085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610bc0565b50505050565b600080610925610b31565b600254604051635e2c665560e11b815230600482015260248101919091526044810185905260806064820152600060848201529091506001600160a01b0382169063bc58ccaa9060a40160206040518083038186803b15801561098757600080fd5b505afa15801561099b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109bf9190610e5a565b610a055760405162461bcd60e51b8152602060048201526017602482015276556e7265736f6c766564206f7261636c6520707269636560481b60448201526064016101d3565b6002546040516353b5923960e01b815260048101919091526024810184905260606044820152600060648201819052906001600160a01b038316906353b5923990608401602060405180830381600087803b158015610a6357600080fd5b505af1158015610a77573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9b9190610e7a565b905060008112156108a2575060009392505050565b6040805160208101909152600081526040805160208101909152825184518291610aec91610ae690670de0b6b3a7640000610c92565b90610c9e565b90529392505050565b60006108a28284610f50565b6040516001600160a01b03831660248201526044810182905261089190849063a9059cbb60e01b906064016108dd565b6003546040516302abf57960e61b81526f4f7074696d69737469634f7261636c6560801b60048201526000916001600160a01b03169063aafd5e409060240160206040518083038186803b158015610b8857600080fd5b505afa158015610b9c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103399190610e3e565b6000610c15826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610caa9092919063ffffffff16565b8051909150156108915780806020019051810190610c339190610e5a565b6108915760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016101d3565b60006108a28284610f31565b60006108a28284610f11565b6060610cb98484600085610cc1565b949350505050565b606082471015610d225760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016101d3565b843b610d705760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016101d3565b600080866001600160a01b03168587604051610d8c9190610eaa565b60006040518083038185875af1925050503d8060008114610dc9576040519150601f19603f3d011682016040523d82523d6000602084013e610dce565b606091505b5091509150610dde828286610de9565b979650505050505050565b60608315610df85750816108a2565b825115610e085782518084602001fd5b8160405162461bcd60e51b81526004016101d39190610ec6565b600060208284031215610e33578081fd5b81356108a281610fa9565b600060208284031215610e4f578081fd5b81516108a281610fa9565b600060208284031215610e6b578081fd5b815180151581146108a2578182fd5b600060208284031215610e8b578081fd5b5051919050565b600060208284031215610ea3578081fd5b5035919050565b60008251610ebc818460208701610f67565b9190910192915050565b6020815260008251806020840152610ee5816040850160208701610f67565b601f01601f19169190910160400192915050565b60008219821115610f0c57610f0c610f93565b500190565b600082610f2c57634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610f4b57610f4b610f93565b500290565b600082821015610f6257610f62610f93565b500390565b60005b83811015610f82578181015183820152602001610f6a565b838111156109145750506000910152565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b038116811461056a57600080fdfea2646970667358221220d2a8047ec5785c657273cd7da3b85a4b9800897a32d40259eb17dcf9f6b8188d64736f6c63430008040033",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2636:192",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:192",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "74:117:192",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "84:22:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "99:6:192"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "93:5:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "93:13:192"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "84:5:192"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "169:16:192",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "178:1:192",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "181:1:192",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "171:6:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "171:12:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "171:12:192"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "128:5:192"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "139:5:192"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "154:3:192",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "159:1:192",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "150:3:192"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "150:11:192"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "163:1:192",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "146:3:192"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "146:19:192"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "135:3:192"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "135:31:192"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "125:2:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "125:42:192"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "118:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "118:50:192"
                  },
                  "nodeType": "YulIf",
                  "src": "115:2:192"
                }
              ]
            },
            "name": "abi_decode_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "53:6:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "64:5:192",
                "type": ""
              }
            ],
            "src": "14:177:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "277:137:192",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "323:26:192",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "332:6:192"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "340:6:192"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "325:6:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "325:22:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "325:22:192"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "298:7:192"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "307:9:192"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "294:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "294:23:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "319:2:192",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "290:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "290:32:192"
                  },
                  "nodeType": "YulIf",
                  "src": "287:2:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "358:50:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "398:9:192"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "368:29:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "368:40:192"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "358:6:192"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "243:9:192",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "254:7:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "266:6:192",
                "type": ""
              }
            ],
            "src": "196:218:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "551:318:192",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "598:26:192",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "607:6:192"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "615:6:192"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "600:6:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "600:22:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "600:22:192"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "572:7:192"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "581:9:192"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "568:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "568:23:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "593:3:192",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "564:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "564:33:192"
                  },
                  "nodeType": "YulIf",
                  "src": "561:2:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "633:50:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "673:9:192"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "643:29:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "643:40:192"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "633:6:192"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "692:59:192",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "736:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "747:2:192",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "732:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "732:18:192"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "702:29:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "702:49:192"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "692:6:192"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "760:35:192",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "780:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "791:2:192",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "776:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "776:18:192"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "770:5:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "770:25:192"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "760:6:192"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "804:59:192",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "848:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "859:2:192",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "844:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "844:18:192"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "814:29:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "814:49:192"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "804:6:192"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_bytes32t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "493:9:192",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "504:7:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "516:6:192",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "524:6:192",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "532:6:192",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "540:6:192",
                "type": ""
              }
            ],
            "src": "419:450:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "952:219:192",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "998:26:192",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1007:6:192"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1015:6:192"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1000:6:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1000:22:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1000:22:192"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "973:7:192"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "982:9:192"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "969:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "969:23:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "994:2:192",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "965:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "965:32:192"
                  },
                  "nodeType": "YulIf",
                  "src": "962:2:192"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1033:29:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1052:9:192"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1046:5:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1046:16:192"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1037:5:192",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1115:26:192",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1124:6:192"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1132:6:192"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1117:6:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1117:22:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1117:22:192"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1084:5:192"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1105:5:192"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1098:6:192"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1098:13:192"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1091:6:192"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1091:21:192"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1081:2:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1081:32:192"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1074:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1074:40:192"
                  },
                  "nodeType": "YulIf",
                  "src": "1071:2:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1150:15:192",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1160:5:192"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1150:6:192"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "918:9:192",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "929:7:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "941:6:192",
                "type": ""
              }
            ],
            "src": "874:297:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1277:102:192",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1287:26:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1299:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1310:2:192",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1295:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1295:18:192"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1287:4:192"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1329:9:192"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1344:6:192"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1360:3:192",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1365:1:192",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1356:3:192"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1356:11:192"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1369:1:192",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1352:3:192"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1352:19:192"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1340:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1340:32:192"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1322:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1322:51:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1322:51:192"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1246:9:192",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1257:6:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1268:4:192",
                "type": ""
              }
            ],
            "src": "1176:203:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1485:76:192",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1495:26:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1507:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1518:2:192",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1503:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1503:18:192"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1495:4:192"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1537:9:192"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1548:6:192"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1530:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1530:25:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1530:25:192"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1454:9:192",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1465:6:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1476:4:192",
                "type": ""
              }
            ],
            "src": "1384:177:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1740:177:192",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1757:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1768:2:192",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1750:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1750:21:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1750:21:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1791:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1802:2:192",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1787:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1787:18:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1807:2:192",
                        "type": "",
                        "value": "27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1780:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1780:30:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1780:30:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1830:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1841:2:192",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1826:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1826:18:192"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1846:29:192",
                        "type": "",
                        "value": "Unsupported collateral type"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1819:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1819:57:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1819:57:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1885:26:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1897:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1908:2:192",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1893:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1893:18:192"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1885:4:192"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3611e54a32e996a5f5392e3c381b702b0fa44f0a8e1298457590376f10df9a66__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1717:9:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1731:4:192",
                "type": ""
              }
            ],
            "src": "1566:351:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2096:178:192",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2113:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2124:2:192",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2106:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2106:21:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2106:21:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2147:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2158:2:192",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2143:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2143:18:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2163:2:192",
                        "type": "",
                        "value": "28"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2136:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2136:30:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2136:30:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2186:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2197:2:192",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2182:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2182:18:192"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2202:30:192",
                        "type": "",
                        "value": "Unsupported price identifier"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2175:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2175:58:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2175:58:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2242:26:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2254:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2265:2:192",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2250:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2250:18:192"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2242:4:192"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_94bb89cfed7f92b6924aaf530cfbea5fedde73bb19371104995924474bbd76c5__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2073:9:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2087:4:192",
                "type": ""
              }
            ],
            "src": "1922:352:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2453:181:192",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2470:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2481:2:192",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2463:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2463:21:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2463:21:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2504:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2515:2:192",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2500:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2500:18:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2520:2:192",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2493:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2493:30:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2493:30:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2543:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2554:2:192",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2539:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2539:18:192"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2559:33:192",
                        "type": "",
                        "value": "ReentrancyGuard: reentrant call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2532:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2532:61:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2532:61:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2602:26:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2614:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2625:2:192",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2610:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2610:18:192"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2602:4:192"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2430:9:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2444:4:192",
                "type": ""
              }
            ],
            "src": "2279:355:192"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n    }\n    function abi_decode_tuple_t_addresst_addresst_bytes32t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value1, value1) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n        value3 := abi_decode_address_fromMemory(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_3611e54a32e996a5f5392e3c381b702b0fa44f0a8e1298457590376f10df9a66__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Unsupported collateral type\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_94bb89cfed7f92b6924aaf530cfbea5fedde73bb19371104995924474bbd76c5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Unsupported price identifier\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 192,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:9885:192",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:192",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:187:192",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:26:192",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "139:6:192"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "147:6:192"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:22:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:22:192"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:192"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:192"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:192",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:192"
                  },
                  "nodeType": "YulIf",
                  "src": "94:2:192"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "165:36:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "191:9:192"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "178:12:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "178:23:192"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "169:5:192",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "235:5:192"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "210:24:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "210:31:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "210:31:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "250:15:192",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "260:5:192"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "250:6:192"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:192",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:192",
                "type": ""
              }
            ],
            "src": "14:257:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "357:180:192",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "403:26:192",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "412:6:192"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "420:6:192"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "405:6:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "405:22:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "405:22:192"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "378:7:192"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "387:9:192"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "374:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "374:23:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "399:2:192",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "370:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "370:32:192"
                  },
                  "nodeType": "YulIf",
                  "src": "367:2:192"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "438:29:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "457:9:192"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "451:5:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "451:16:192"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "442:5:192",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "501:5:192"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "476:24:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "476:31:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "476:31:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "516:15:192",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "526:5:192"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "516:6:192"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "323:9:192",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "334:7:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "346:6:192",
                "type": ""
              }
            ],
            "src": "276:261:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "620:219:192",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "666:26:192",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "675:6:192"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "683:6:192"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "668:6:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "668:22:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "668:22:192"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "641:7:192"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "650:9:192"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "637:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "637:23:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "662:2:192",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "633:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "633:32:192"
                  },
                  "nodeType": "YulIf",
                  "src": "630:2:192"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "701:29:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "720:9:192"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "714:5:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "714:16:192"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "705:5:192",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "783:26:192",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "792:6:192"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "800:6:192"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "785:6:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "785:22:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "785:22:192"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "752:5:192"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "773:5:192"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "766:6:192"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "766:13:192"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "759:6:192"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "759:21:192"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "749:2:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "749:32:192"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "742:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "742:40:192"
                  },
                  "nodeType": "YulIf",
                  "src": "739:2:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "818:15:192",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "828:5:192"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "818:6:192"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "586:9:192",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "597:7:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "609:6:192",
                "type": ""
              }
            ],
            "src": "542:297:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "924:113:192",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "970:26:192",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "979:6:192"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "987:6:192"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "972:6:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "972:22:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "972:22:192"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "945:7:192"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "954:9:192"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "941:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "941:23:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "966:2:192",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "937:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "937:32:192"
                  },
                  "nodeType": "YulIf",
                  "src": "934:2:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1005:26:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1021:9:192"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1015:5:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1015:16:192"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1005:6:192"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_int256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "890:9:192",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "901:7:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "913:6:192",
                "type": ""
              }
            ],
            "src": "844:193:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1112:120:192",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1158:26:192",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1167:6:192"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1175:6:192"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1160:6:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1160:22:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1160:22:192"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1133:7:192"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1142:9:192"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1129:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1129:23:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1154:2:192",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1125:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1125:32:192"
                  },
                  "nodeType": "YulIf",
                  "src": "1122:2:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1193:33:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1216:9:192"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1203:12:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1203:23:192"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1193:6:192"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1078:9:192",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1089:7:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1101:6:192",
                "type": ""
              }
            ],
            "src": "1042:190:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1318:113:192",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1364:26:192",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1373:6:192"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1381:6:192"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1366:6:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1366:22:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1366:22:192"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1339:7:192"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1348:9:192"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1335:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1335:23:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1360:2:192",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1331:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1331:32:192"
                  },
                  "nodeType": "YulIf",
                  "src": "1328:2:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1399:26:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1415:9:192"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1409:5:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1409:16:192"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1399:6:192"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1284:9:192",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1295:7:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1307:6:192",
                "type": ""
              }
            ],
            "src": "1237:194:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1573:137:192",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1583:27:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1603:6:192"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1597:5:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1597:13:192"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1587:6:192",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1645:6:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1653:4:192",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1641:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1641:17:192"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1660:3:192"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1665:6:192"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "1619:21:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1619:53:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1619:53:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1681:23:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1692:3:192"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1697:6:192"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1688:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1688:16:192"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1681:3:192"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1549:3:192",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1554:6:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1565:3:192",
                "type": ""
              }
            ],
            "src": "1436:274:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1816:102:192",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1826:26:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1838:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1849:2:192",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1834:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1834:18:192"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1826:4:192"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1868:9:192"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1883:6:192"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1899:3:192",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1904:1:192",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1895:3:192"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1895:11:192"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1908:1:192",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1891:3:192"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1891:19:192"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1879:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1879:32:192"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1861:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1861:51:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1861:51:192"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1785:9:192",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1796:6:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1807:4:192",
                "type": ""
              }
            ],
            "src": "1715:203:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2080:218:192",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2090:26:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2102:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2113:2:192",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2098:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2098:18:192"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2090:4:192"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2125:29:192",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2143:3:192",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2148:1:192",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "2139:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2139:11:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2152:1:192",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "2135:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2135:19:192"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2129:2:192",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2170:9:192"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2185:6:192"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2193:2:192"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2181:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2181:15:192"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2163:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2163:34:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2163:34:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2217:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2228:2:192",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2213:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2213:18:192"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "2237:6:192"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2245:2:192"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2233:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2233:15:192"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2206:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2206:43:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2206:43:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2269:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2280:2:192",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2265:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2265:18:192"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "2285:6:192"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2258:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2258:34:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2258:34:192"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2033:9:192",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2044:6:192",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2052:6:192",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2060:6:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2071:4:192",
                "type": ""
              }
            ],
            "src": "1923:375:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2560:271:192",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2577:9:192"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2592:6:192"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2608:3:192",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2613:1:192",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2604:3:192"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2604:11:192"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2617:1:192",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2600:3:192"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2600:19:192"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2588:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2588:32:192"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2570:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2570:51:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2570:51:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2641:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2652:2:192",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2637:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2637:18:192"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2657:6:192"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2630:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2630:34:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2630:34:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2684:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2695:2:192",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2680:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2680:18:192"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "2700:6:192"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2673:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2673:34:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2673:34:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2727:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2738:2:192",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2723:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2723:18:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2743:3:192",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2716:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2716:31:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2716:31:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2767:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2778:3:192",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2763:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2763:19:192"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "2784:4:192"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2756:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2756:33:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2756:33:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2798:27:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2810:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2821:3:192",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2806:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2806:19:192"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2798:4:192"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_bytes32_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_bytes32_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2513:9:192",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2524:6:192",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2532:6:192",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2540:6:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2551:4:192",
                "type": ""
              }
            ],
            "src": "2303:528:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2965:145:192",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2975:26:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2987:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2998:2:192",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2983:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2983:18:192"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2975:4:192"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3017:9:192"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3032:6:192"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3048:3:192",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3053:1:192",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3044:3:192"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3044:11:192"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3057:1:192",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3040:3:192"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3040:19:192"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3028:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3028:32:192"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3010:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3010:51:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3010:51:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3081:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3092:2:192",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3077:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3077:18:192"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3097:6:192"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3070:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3070:34:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3070:34:192"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2926:9:192",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2937:6:192",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2945:6:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2956:4:192",
                "type": ""
              }
            ],
            "src": "2836:274:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3216:76:192",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3226:26:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3238:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3249:2:192",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3234:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3234:18:192"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3226:4:192"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3268:9:192"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3279:6:192"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3261:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3261:25:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3261:25:192"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3185:9:192",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3196:6:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3207:4:192",
                "type": ""
              }
            ],
            "src": "3115:177:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3526:200:192",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3543:9:192"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3554:6:192"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3536:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3536:25:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3536:25:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3581:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3592:2:192",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3577:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3577:18:192"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3597:6:192"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3570:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3570:34:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3570:34:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3624:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3635:2:192",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3620:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3620:18:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3640:2:192",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3613:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3613:30:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3613:30:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3663:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3674:2:192",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3659:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3659:18:192"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "3679:4:192"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3652:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3652:32:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3652:32:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3693:27:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3705:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3716:3:192",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3701:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3701:19:192"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3693:4:192"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes32_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3487:9:192",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3498:6:192",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3506:6:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3517:4:192",
                "type": ""
              }
            ],
            "src": "3297:429:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4040:315:192",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4057:9:192"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4068:6:192"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4050:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4050:25:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4050:25:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4095:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4106:2:192",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4091:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4091:18:192"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4111:6:192"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4084:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4084:34:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4084:34:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4138:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4149:2:192",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4134:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4134:18:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4154:3:192",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4127:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4127:31:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4127:31:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4178:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4189:3:192",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4174:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4174:19:192"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "4195:4:192"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4167:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4167:33:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4167:33:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4209:27:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4221:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4232:3:192",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4217:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4217:19:192"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4209:4:192"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4256:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4267:2:192",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4252:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4252:18:192"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "4276:6:192"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4292:3:192",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4297:1:192",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "4288:3:192"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4288:11:192"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4301:1:192",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4284:3:192"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4284:19:192"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4272:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4272:32:192"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4245:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4245:60:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4245:60:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4325:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4336:3:192",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4321:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4321:19:192"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "4342:6:192"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4314:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4314:35:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4314:35:192"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_t_contract$_IERC20_$41847_t_rational_0_by_1__to_t_bytes32_t_uint256_t_bytes_memory_ptr_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3985:9:192",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "3996:6:192",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4004:6:192",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4012:6:192",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4020:6:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4031:4:192",
                "type": ""
              }
            ],
            "src": "3731:624:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4477:102:192",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4487:26:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4499:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4510:2:192",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4495:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4495:18:192"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4487:4:192"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4529:9:192"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4544:6:192"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4560:3:192",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4565:1:192",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "4556:3:192"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4556:11:192"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4569:1:192",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4552:3:192"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4552:19:192"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4540:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4540:32:192"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4522:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4522:51:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4522:51:192"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC20_$41847__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4446:9:192",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4457:6:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4468:4:192",
                "type": ""
              }
            ],
            "src": "4360:219:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4705:262:192",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4722:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4733:2:192",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4715:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4715:21:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4715:21:192"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4745:27:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4765:6:192"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4759:5:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4759:13:192"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "4749:6:192",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4792:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4803:2:192",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4788:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4788:18:192"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4808:6:192"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4781:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4781:34:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4781:34:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4850:6:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4858:2:192",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4846:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4846:15:192"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4867:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4878:2:192",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4863:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4863:18:192"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "4883:6:192"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "4824:21:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4824:66:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4824:66:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4899:62:192",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4915:9:192"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "4934:6:192"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4942:2:192",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4930:3:192"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4930:15:192"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4951:2:192",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "4947:3:192"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4947:7:192"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "4926:3:192"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4926:29:192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4911:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4911:45:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4958:2:192",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4907:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4907:54:192"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4899:4:192"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4674:9:192",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4685:6:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4696:4:192",
                "type": ""
              }
            ],
            "src": "4584:383:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5146:228:192",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5163:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5174:2:192",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5156:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5156:21:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5156:21:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5197:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5208:2:192",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5193:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5193:18:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5213:2:192",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5186:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5186:30:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5186:30:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5236:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5247:2:192",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5232:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5232:18:192"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5252:34:192",
                        "type": "",
                        "value": "Address: insufficient balance fo"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5225:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5225:62:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5225:62:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5307:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5318:2:192",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5303:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5303:18:192"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5323:8:192",
                        "type": "",
                        "value": "r call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5296:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5296:36:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5296:36:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5341:27:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5353:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5364:3:192",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5349:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5349:19:192"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5341:4:192"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5123:9:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5137:4:192",
                "type": ""
              }
            ],
            "src": "4972:402:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5553:173:192",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5570:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5581:2:192",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5563:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5563:21:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5563:21:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5604:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5615:2:192",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5600:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5600:18:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5620:2:192",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5593:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5593:30:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5593:30:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5643:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5654:2:192",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5639:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5639:18:192"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5659:25:192",
                        "type": "",
                        "value": "Unresolved oracle price"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5632:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5632:53:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5632:53:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5694:26:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5706:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5717:2:192",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5702:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5702:18:192"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5694:4:192"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6d516ec8b6cede68cb5e8843a34f17ee999ccc46827444240c966860cdd26995__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5530:9:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5544:4:192",
                "type": ""
              }
            ],
            "src": "5379:347:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5905:175:192",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5922:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5933:2:192",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5915:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5915:21:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5915:21:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5956:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5967:2:192",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5952:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5952:18:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5972:2:192",
                        "type": "",
                        "value": "25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5945:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5945:30:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5945:30:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5995:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6006:2:192",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5991:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5991:18:192"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6011:27:192",
                        "type": "",
                        "value": "Invalid collateral amount"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5984:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5984:55:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5984:55:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6048:26:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6060:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6071:2:192",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6056:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6056:18:192"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6048:4:192"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_813bd37c1cdbc0f93d273be4b907a22c7018037169a95f3ac08b89650b63a56e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5882:9:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5896:4:192",
                "type": ""
              }
            ],
            "src": "5731:349:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6259:168:192",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6276:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6287:2:192",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6269:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6269:21:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6269:21:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6310:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6321:2:192",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6306:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6306:18:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6326:2:192",
                        "type": "",
                        "value": "18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6299:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6299:30:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6299:30:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6349:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6360:2:192",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6345:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6345:18:192"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6365:20:192",
                        "type": "",
                        "value": "Pending withdrawal"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6338:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6338:48:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6338:48:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6395:26:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6407:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6418:2:192",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6403:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6403:18:192"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6395:4:192"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_92438d03843dc5bb19aa28358890a480abc5006c15257e3f08fb9164e4ef921f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6236:9:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6250:4:192",
                "type": ""
              }
            ],
            "src": "6085:342:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6606:174:192",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6623:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6634:2:192",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6616:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6616:21:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6616:21:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6657:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6668:2:192",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6653:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6653:18:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6673:2:192",
                        "type": "",
                        "value": "24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6646:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6646:30:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6646:30:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6696:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6707:2:192",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6692:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6692:18:192"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6712:26:192",
                        "type": "",
                        "value": "Invalid withdraw request"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6685:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6685:54:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6685:54:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6748:26:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6760:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6771:2:192",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6756:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6756:18:192"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6748:4:192"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_94963bd7c26cec51ca5a6225f5d2d7df6dcde2009a60ca92019ec17e8ee6ff0d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6583:9:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6597:4:192",
                "type": ""
              }
            ],
            "src": "6432:348:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6959:179:192",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6976:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6987:2:192",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6969:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6969:21:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6969:21:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7010:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7021:2:192",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7006:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7006:18:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7026:2:192",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6999:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6999:30:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6999:30:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7049:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7060:2:192",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7045:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7045:18:192"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7065:31:192",
                        "type": "",
                        "value": "Address: call to non-contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7038:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7038:59:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7038:59:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7106:26:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7118:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7129:2:192",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7114:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7114:18:192"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7106:4:192"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6936:9:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6950:4:192",
                "type": ""
              }
            ],
            "src": "6785:353:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7317:232:192",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7334:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7345:2:192",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7327:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7327:21:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7327:21:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7368:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7379:2:192",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7364:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7364:18:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7384:2:192",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7357:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7357:30:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7357:30:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7407:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7418:2:192",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7403:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7403:18:192"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7423:34:192",
                        "type": "",
                        "value": "SafeERC20: ERC20 operation did n"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7396:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7396:62:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7396:62:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7478:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7489:2:192",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7474:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7474:18:192"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7494:12:192",
                        "type": "",
                        "value": "ot succeed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7467:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7467:40:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7467:40:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7516:27:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7528:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7539:3:192",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7524:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7524:19:192"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7516:4:192"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7294:9:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7308:4:192",
                "type": ""
              }
            ],
            "src": "7143:406:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7728:181:192",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7745:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7756:2:192",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7738:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7738:21:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7738:21:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7779:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7790:2:192",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7775:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7775:18:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7795:2:192",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7768:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7768:30:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7768:30:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7818:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7829:2:192",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7814:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7814:18:192"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7834:33:192",
                        "type": "",
                        "value": "ReentrancyGuard: reentrant call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7807:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7807:61:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7807:61:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7877:26:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7889:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7900:2:192",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7885:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7885:18:192"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7877:4:192"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7705:9:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7719:4:192",
                "type": ""
              }
            ],
            "src": "7554:355:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8088:171:192",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8105:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8116:2:192",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8098:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8098:21:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8098:21:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8139:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8150:2:192",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8135:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8135:18:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8155:2:192",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8128:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8128:30:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8128:30:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8178:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8189:2:192",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8174:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8174:18:192"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8194:23:192",
                        "type": "",
                        "value": "No pending withdrawal"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8167:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8167:51:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8167:51:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8227:26:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8239:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8250:2:192",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8235:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8235:18:192"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8227:4:192"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f80b6185a55e7705eade18fc94576fb0c28cf32c1b453f215155b7bf28ad0f40__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8065:9:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8079:4:192",
                "type": ""
              }
            ],
            "src": "7914:345:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8365:76:192",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8375:26:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8387:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8398:2:192",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8383:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8383:18:192"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8375:4:192"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8417:9:192"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8428:6:192"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8410:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8410:25:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8410:25:192"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8334:9:192",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8345:6:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8356:4:192",
                "type": ""
              }
            ],
            "src": "8264:177:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8575:119:192",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8585:26:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8597:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8608:2:192",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8593:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8593:18:192"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8585:4:192"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8627:9:192"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8638:6:192"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8620:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8620:25:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8620:25:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8665:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8676:2:192",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8661:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8661:18:192"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "8681:6:192"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8654:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8654:34:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8654:34:192"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8536:9:192",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8547:6:192",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8555:6:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8566:4:192",
                "type": ""
              }
            ],
            "src": "8446:248:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8747:80:192",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8774:22:192",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "8776:16:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8776:18:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8776:18:192"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8763:1:192"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "8770:1:192"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "8766:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8766:6:192"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "8760:2:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8760:13:192"
                  },
                  "nodeType": "YulIf",
                  "src": "8757:2:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8805:16:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8816:1:192"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8819:1:192"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8812:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8812:9:192"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "8805:3:192"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "8730:1:192",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "8733:1:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "8739:3:192",
                "type": ""
              }
            ],
            "src": "8699:128:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8878:171:192",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8909:111:192",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "8930:1:192"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8937:3:192",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "8942:10:192",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "8933:3:192"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8933:20:192"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "8923:6:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8923:31:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8923:31:192"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8974:1:192",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8977:4:192",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "8967:6:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8967:15:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8967:15:192"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "9002:1:192"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9005:4:192",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8995:6:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8995:15:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8995:15:192"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8898:1:192"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8891:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8891:9:192"
                  },
                  "nodeType": "YulIf",
                  "src": "8888:2:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9029:14:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9038:1:192"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9041:1:192"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "9034:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9034:9:192"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "9029:1:192"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "8863:1:192",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "8866:1:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "8872:1:192",
                "type": ""
              }
            ],
            "src": "8832:217:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9106:116:192",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9165:22:192",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "9167:16:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9167:18:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9167:18:192"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "9137:1:192"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "9130:6:192"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9130:9:192"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "9123:6:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9123:17:192"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "9145:1:192"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9156:1:192",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "9152:3:192"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9152:6:192"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "9160:1:192"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "9148:3:192"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9148:14:192"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "9142:2:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9142:21:192"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "9119:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9119:45:192"
                  },
                  "nodeType": "YulIf",
                  "src": "9116:2:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9196:20:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9211:1:192"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9214:1:192"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "9207:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9207:9:192"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "9196:7:192"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "9085:1:192",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "9088:1:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "9094:7:192",
                "type": ""
              }
            ],
            "src": "9054:168:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9276:76:192",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9298:22:192",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "9300:16:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9300:18:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9300:18:192"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9292:1:192"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9295:1:192"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "9289:2:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9289:8:192"
                  },
                  "nodeType": "YulIf",
                  "src": "9286:2:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9329:17:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9341:1:192"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9344:1:192"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "9337:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9337:9:192"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "9329:4:192"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "9258:1:192",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "9261:1:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "9267:4:192",
                "type": ""
              }
            ],
            "src": "9227:125:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9410:205:192",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9420:10:192",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "9429:1:192",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "9424:1:192",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9489:63:192",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "9514:3:192"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "9519:1:192"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "9510:3:192"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9510:11:192"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "9533:3:192"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "9538:1:192"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "9529:3:192"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "9529:11:192"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "9523:5:192"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9523:18:192"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "9503:6:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9503:39:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9503:39:192"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "9450:1:192"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9453:6:192"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "9447:2:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9447:13:192"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "9461:19:192",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "9463:15:192",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "9472:1:192"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9475:2:192",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "9468:3:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9468:10:192"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "9463:1:192"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "9443:3:192",
                    "statements": []
                  },
                  "src": "9439:113:192"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9578:31:192",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "9591:3:192"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "9596:6:192"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "9587:3:192"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9587:16:192"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9605:1:192",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "9580:6:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9580:27:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9580:27:192"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "9567:1:192"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9570:6:192"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "9564:2:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9564:13:192"
                  },
                  "nodeType": "YulIf",
                  "src": "9561:2:192"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "9388:3:192",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "9393:3:192",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "9398:6:192",
                "type": ""
              }
            ],
            "src": "9357:258:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9652:95:192",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9669:1:192",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9676:3:192",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9681:10:192",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "9672:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9672:20:192"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9662:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9662:31:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9662:31:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9709:1:192",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9712:4:192",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9702:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9702:15:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9702:15:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9733:1:192",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9736:4:192",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "9726:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9726:15:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9726:15:192"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "9620:127:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9797:86:192",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9861:16:192",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9870:1:192",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9873:1:192",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9863:6:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9863:12:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9863:12:192"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9820:5:192"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "9831:5:192"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9846:3:192",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9851:1:192",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "9842:3:192"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9842:11:192"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9855:1:192",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "9838:3:192"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9838:19:192"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "9827:3:192"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9827:31:192"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "9817:2:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9817:42:192"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9810:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9810:50:192"
                  },
                  "nodeType": "YulIf",
                  "src": "9807:2:192"
                }
              ]
            },
            "name": "validator_revert_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9786:5:192",
                "type": ""
              }
            ],
            "src": "9752:131:192"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_int256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_bytes32_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_bytes32_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        mstore(add(headStart, 128), tail)\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes32_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), 96)\n        mstore(add(headStart, 96), tail)\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_t_contract$_IERC20_$41847_t_rational_0_by_1__to_t_bytes32_t_uint256_t_bytes_memory_ptr_t_address_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), 160)\n        mstore(add(headStart, 160), tail)\n        tail := add(headStart, 192)\n        mstore(add(headStart, 96), and(value2, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 128), value3)\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$41847__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6d516ec8b6cede68cb5e8843a34f17ee999ccc46827444240c966860cdd26995__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Unresolved oracle price\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_813bd37c1cdbc0f93d273be4b907a22c7018037169a95f3ac08b89650b63a56e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Invalid collateral amount\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_92438d03843dc5bb19aa28358890a480abc5006c15257e3f08fb9164e4ef921f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Pending withdrawal\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_94963bd7c26cec51ca5a6225f5d2d7df6dcde2009a60ca92019ec17e8ee6ff0d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Invalid withdraw request\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f80b6185a55e7705eade18fc94576fb0c28cf32c1b453f215155b7bf28ad0f40__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"No pending withdrawal\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
      "id": 192,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "2340:12474:78:-:0;;;5730:570;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;728:12:13;:28;;-1:-1:-1;;;;;;874:18:11;-1:-1:-1;;;;;728:28:13;;874:18:11;-1:-1:-1;;;874:18:11;;;1317:19;:17;:19::i;:::-;1346:17;2459:5;2445:19;;-1:-1:-1;;;;2445:19:11;;;2335:136;1346:17;5930:6:78::2;:40:::0;;-1:-1:-1;;;;;;5930:40:78::2;-1:-1:-1::0;;;;;5930:40:78;::::2;;::::0;;5988:25:::2;:23;:25::i;:::-;-1:-1:-1::0;;;;;5988:47:78::2;;6036:16;5988:65;;;;;;;;;;;;;1530:25:192::0;;1518:2;1503:18;;1485:76;5988:65:78::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5980:106;;;::::0;-1:-1:-1;;;5980:106:78;;2124:2:192;5980:106:78::2;::::0;::::2;2106:21:192::0;2163:2;2143:18;;;2136:30;2202;2182:18;;;2175:58;2250:18;;5980:106:78::2;;;;;;;;;6104:22;:20;:22::i;:::-;:56;::::0;-1:-1:-1;;;6104:56:78;;-1:-1:-1;;;;;1340:32:192;;;6104:56:78::2;::::0;::::2;1322:51:192::0;6104:36:78;;;::::2;::::0;::::2;::::0;1295:18:192;;6104:56:78::2;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6096:96;;;::::0;-1:-1:-1;;;6096:96:78;;1768:2:192;6096:96:78::2;::::0;::::2;1750:21:192::0;1807:2;1787:18;;;1780:30;1846:29;1826:18;;;1819:57;1893:18;;6096:96:78::2;1740:177:192::0;6096:96:78::2;6202:18;:47:::0;;-1:-1:-1;;;;;;6202:47:78::2;-1:-1:-1::0;;;;;6202:47:78;::::2;;::::0;;6259:15:::2;:34:::0;;;1384:20:11;2658:11;:18;;-1:-1:-1;;;;2658:18:11;-1:-1:-1;;;2658:18:11;;;2477:206;1384:20;5730:570:78;;;;2340:12474;;2143:186:11;2275:11;;-1:-1:-1;;;2275:11:11;;;;2267:55;;;;-1:-1:-1;;;2267:55:11;;2481:2:192;2267:55:11;;;2463:21:192;2520:2;2500:18;;;2493:30;2559:33;2539:18;;;2532:61;2610:18;;2267:55:11;2453:181:192;2267:55:11;2143:186::o;13679:211:78:-;13813:6;;:69;;-1:-1:-1;;;13813:69:78;;13845:36;13813:69;;;1530:25:192;13737:28:78;;-1:-1:-1;;;;;13813:6:78;;:31;;1503:18:192;;13813:69:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13777:106;;13679:211;:::o;13896:184::-;14003:6;;:69;;-1:-1:-1;;;14003:69:78;;14035:36;14003:69;;;1530:25:192;13951:16:78;;-1:-1:-1;;;;;14003:6:78;;:31;;1503:18:192;;14003:69:78;1485:76:192;14:177;93:13;;-1:-1:-1;;;;;135:31:192;;125:42;;115:2;;181:1;178;171:12;115:2;74:117;;;:::o;196:218::-;266:6;319:2;307:9;298:7;294:23;290:32;287:2;;;340:6;332;325:22;287:2;368:40;398:9;368:40;:::i;:::-;358:50;277:137;-1:-1:-1;;;277:137:192:o;419:450::-;516:6;524;532;540;593:3;581:9;572:7;568:23;564:33;561:2;;;615:6;607;600:22;561:2;643:40;673:9;643:40;:::i;:::-;633:50;;702:49;747:2;736:9;732:18;702:49;:::i;:::-;692:59;;791:2;780:9;776:18;770:25;760:35;;814:49;859:2;848:9;844:18;814:49;:::i;:::-;804:59;;551:318;;;;;;;:::o;874:297::-;941:6;994:2;982:9;973:7;969:23;965:32;962:2;;;1015:6;1007;1000:22;962:2;1052:9;1046:16;1105:5;1098:13;1091:21;1084:5;1081:32;1071:2;;1132:6;1124;1117:22;2453:181;2340:12474:78;;;;;;",
  "deployedSourceMap": "2340:12474:78:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3572:32;;;;;-1:-1:-1;;;;;3572:32:78;;;;;;-1:-1:-1;;;;;1879:32:192;;;1861:51;;1849:2;1834:18;3572:32:78;;;;;;;;391:27:13;;;;;-1:-1:-1;;;;;391:27:13;;;11571:569:78;;;:::i;:::-;;1097:115:13;;;;;;:::i;:::-;;:::i;1457:268::-;;;:::i;:::-;;;3261:25:192;;;3249:2;3234:18;1457:268:13;3216:76:192;12372:141:78;;;;;;:::i;:::-;;:::i;8017:767::-;;;;;;:::i;:::-;;:::i;6625:829::-;;;;;;:::i;:::-;;:::i;3654:50::-;;;;;;9220:2276;;;:::i;11571:569::-;1317:19:11;:17;:19::i;:::-;1346:17;2459:5;2445:19;;-1:-1:-1;;;;2445:19:11;;;2335:136;1346:17;11696:10:78::1;11633:47;11683:24:::0;;;:12:::1;:24;::::0;;;;;;;11725:41;;::::1;::::0;11717:80:::1;;;::::0;-1:-1:-1;;;11717:80:78;;8116:2:192;11717:80:78::1;::::0;::::1;8098:21:192::0;8155:2;8135:18;;;8128:30;-1:-1:-1;;;8174:18:192;;;8167:51;8235:18;;11717:80:78::1;;;;;;;;;11876:38:::0;;11928:41:::1;::::0;::::1;::::0;11813:166:::1;::::0;3261:25:192;;;11852:10:78::1;::::0;11813:166:::1;::::0;3249:2:192;3234:18;11813:166:78::1;;;;;;;13230:1:::0;13189:42;;;13241:41;;;:45;1373:1:11::1;1384:20:::0;:18;:20::i;:::-;11571:569:78:o;1097:115:13:-;899:3;875:12;-1:-1:-1;;;;;875:12:13;867:37;;;;;;1171:12:::1;::::0;1165:40:::1;::::0;-1:-1:-1;;;1165:40:13;;::::1;::::0;::::1;3261:25:192::0;;;-1:-1:-1;;;;;1171:12:13;;::::1;::::0;1165:34:::1;::::0;3234:18:192;;1165:40:13::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1097:115:::0;:::o;1457:268::-;1504:7;1527:12;;-1:-1:-1;;;;;1527:12:13;:28;1523:196;;1584:12;;;;;;;;-1:-1:-1;;;;;1584:12:13;-1:-1:-1;;;;;1578:34:13;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1571:43;;1457:268;:::o;1523:196::-;-1:-1:-1;1652:15:13;;1457:268::o;1523:196::-;1457:268;:::o;12372:141:78:-;12451:7;1603:19:11;:17;:19::i;:::-;-1:-1:-1;;;;;;12477:18:78::1;;::::0;;;:12:::1;:18;::::0;;;;:29:::1;;::::0;;12372:141::o;8017:767::-;8124:10;4705:39;4739:4;4705:33;:39::i;:::-;1317:19:11::1;:17;:19::i;:::-;1346:17;2459:5:::0;2445:19;;-1:-1:-1;;;;2445:19:11;;;2335:136;1346:17:::1;8236:10:78::2;8173:47;8223:24:::0;;;:12:::2;:24;::::0;;;;8265:31;8257:69:::2;;;::::0;-1:-1:-1;;;8257:69:78;;5933:2:192;8257:69:78::2;::::0;::::2;5915:21:192::0;5972:2;5952:18;;;5945:30;-1:-1:-1;;;5991:18:192;;;5984:55;6056:18;;8257:69:78::2;5905:175:192::0;8257:69:78::2;8387:68:::0;;;8509:16:::2;:14;:16::i;:::-;8465:41;::::0;::::2;:60:::0;;;8541:101:::2;::::0;3261:25:192;;;8571:27:78;;8559:10:::2;::::0;8541:101:::2;::::0;3249:2:192;3234:18;8541:101:78::2;;;;;;;8715:62;8735:14;:41;;;8715:19;:62::i;:::-;1373:1:11;1384:20:::1;:18;:20::i;:::-;8017:767:78::0;;:::o;6625:829::-;1317:19:11;:17;:19::i;:::-;1346:17;2459:5;2445:19;;-1:-1:-1;;;;2445:19:11;;;2335:136;1346:17;6727:1:78::1;6708:16;:20;6700:58;;;::::0;-1:-1:-1;;;6700:58:78;;5933:2:192;6700:58:78::1;::::0;::::1;5915:21:192::0;5972:2;5952:18;;;5945:30;-1:-1:-1;;;5991:18:192;;;5984:55;6056:18;;6700:58:78::1;5905:175:192::0;6700:58:78::1;6831:10;6768:47;6818:24:::0;;;:12:::1;:24;::::0;;;;6856:25:::1;::::0;::::1;::::0;6852:101:::1;;6907:35;::::0;6931:10:::1;::::0;6907:35:::1;::::0;;;::::1;6852:101;7090:25;::::0;::::1;::::0;:47:::1;::::0;7120:16;7090:29:::1;:47::i;:::-;7062:25;::::0;::::1;:75:::0;7185:35:::1;::::0;:57:::1;::::0;7225:16;7185:39:::1;:57::i;:::-;7147:35;:95:::0;7258:37:::1;::::0;7278:16;;7266:10:::1;::::0;7258:37:::1;::::0;;;::::1;7367:18;::::0;:80:::1;::::0;-1:-1:-1;;;;;7367:18:78::1;7403:10;7423:4;7430:16:::0;7367:35:::1;:80::i;:::-;1373:1:11;1384:20:::0;:18;:20::i;:::-;6625:829:78;:::o;9220:2276::-;9282:23;1317:19:11;:17;:19::i;:::-;1346:17;2459:5;2445:19;;-1:-1:-1;;;;2445:19:11;;;2335:136;1346:17;9380:10:78::1;9317:47;9367:24:::0;;;:12:::1;:24;::::0;;;;;;;9422:41;;::::1;::::0;:46;;::::1;::::0;:127:::1;;;9533:16;:14;:16::i;:::-;9488:14;:41;;;:61;;9422:127;9401:198;;;::::0;-1:-1:-1;;;9401:198:78;;6634:2:192;9401:198:78::1;::::0;::::1;6616:21:192::0;6673:2;6653:18;;;6646:30;6712:26;6692:18;;;6685:54;6756:18;;9401:198:78::1;6606:174:192::0;9401:198:78::1;9776:20;9799:58;9815:14;:41;;;9799:15;:58::i;:::-;10312:33;::::0;;::::1;::::0;;::::1;::::0;;;;;10248:59;;;;::::1;::::0;;;10268:38;;10248:59;;9776:81;;-1:-1:-1;10198:35:78::1;::::0;10248:98:::1;::::0;:59;:63:::1;:98::i;:::-;:107:::0;10500:25:::1;::::0;::::1;::::0;10248:107;;-1:-1:-1;10469:56:78;::::1;10465:198;;-1:-1:-1::0;10571:25:78::1;::::0;::::1;::::0;10615:37:::1;::::0;10641:10:::1;::::0;10615:37:::1;::::0;;;::::1;10465:198;10779:25;::::0;::::1;::::0;:58:::1;::::0;10809:27;10779:29:::1;:58::i;:::-;10751:25;::::0;::::1;:86:::0;10885:35:::1;::::0;:68:::1;::::0;10925:27;10885:39:::1;:68::i;:::-;10847:35;:106:::0;11099:41:::1;::::0;::::1;::::0;10969:181:::1;::::0;;8620:25:192;;;8676:2;8661:18;;8654:34;;;;11032:27:78;;11008:10:::1;::::0;10969:181:::1;::::0;8593:18:192;10969:181:78::1;;;;;;;13230:1:::0;13189:42;;;13241:41;;;:45;11373:18:::1;::::0;:72:::1;::::0;-1:-1:-1;;;;;11373:18:78::1;11405:10;11417:27:::0;11373:31:::1;:72::i;:::-;11462:27:::0;-1:-1:-1;;;1384:20:11;:18;:20::i;2143:186::-;2275:11;;-1:-1:-1;;;2275:11:11;;;;2267:55;;;;-1:-1:-1;;;2267:55:11;;7756:2:192;2267:55:11;;;7738:21:192;7795:2;7775:18;;;7768:30;7834:33;7814:18;;;7807:61;7885:18;;2267:55:11;7728:181:192;2477:206:11;2658:11;:18;;-1:-1:-1;;;;2658:18:11;-1:-1:-1;;;2658:18:11;;;2477:206::o;13299:169:78:-;-1:-1:-1;;;;;13388:18:78;;;;;;:12;:18;;;;;;;;:45;;:50;13380:81;;;;-1:-1:-1;;;13380:81:78;;6287:2:192;13380:81:78;;;6269:21:192;6326:2;6306:18;;;6299:30;-1:-1:-1;;;6345:18:192;;;6338:48;6403:18;;13380:81:78;6259:168:192;12752:330:78;12823:32;12858:22;:20;:22::i;:::-;13009:15;;13052:18;;;12989:86;;-1:-1:-1;;;12989:86:78;;;;;4050:25:192;;;;4091:18;;;4084:34;;;4154:3;4134:18;;;4127:31;13052:18:78;4174:19:192;;;4167:33;;;-1:-1:-1;;;;;13052:18:78;;;4252::192;;;4245:60;4321:19;;;4314:35;12823:57:78;;-1:-1:-1;12989:19:78;;;;;4217::192;;12989:86:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;12752:330;;:::o;2672:96:172:-;2730:7;2756:5;2760:1;2756;:5;:::i;:::-;2749:12;2672:96;-1:-1:-1;;;2672:96:172:o;815:203:160:-;942:68;;-1:-1:-1;;;;;2181:15:192;;;942:68:160;;;2163:34:192;2233:15;;2213:18;;;2206:43;2265:18;;;2258:34;;;915:96:160;;935:5;;-1:-1:-1;;;965:27:160;2098:18:192;;942:68:160;;;;-1:-1:-1;;942:68:160;;;;;;;;;;;;;;-1:-1:-1;;;;;942:68:160;-1:-1:-1;;;;;;942:68:160;;;;;;;;;;915:19;:96::i;:::-;815:203;;;;:::o;14209:603:78:-;14288:7;14307:32;14342:22;:20;:22::i;:::-;14426:15;;14395:79;;-1:-1:-1;;;14395:79:78;;14419:4;14395:79;;;2570:51:192;2637:18;;;2630:34;;;;2680:18;;;2673:34;;;2743:3;2723:18;;;2716:31;-1:-1:-1;2763:19:192;;;2756:33;14307:57:78;;-1:-1:-1;;;;;;14395:15:78;;;;;2806:19:192;;14395:79:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14374:149;;;;-1:-1:-1;;;14374:149:78;;5581:2:192;14374:149:78;;;5563:21:192;5620:2;5600:18;;;5593:30;-1:-1:-1;;;5639:18:192;;;5632:53;5702:18;;14374:149:78;5553:173:192;14374:149:78;14579:15;;14554:73;;-1:-1:-1;;;14554:73:78;;;;;3536:25:192;;;;3577:18;;;3570:34;;;3640:2;3620:18;;;3613:30;14533:18:78;3659::192;;;3652:32;;;14533:18:78;-1:-1:-1;;;;;14554:24:78;;;;;3701:19:192;;14554:73:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14533:94;;14726:1;14712:11;:15;14708:61;;;-1:-1:-1;14757:1:78;14793:11;14209:603;-1:-1:-1;;;14209:603:78:o;10614:634:10:-;-1:-1:-1;;;;;;;;;;;;11182:59:10;;;;;;;;;11229:10;;11191;;11182:59;;11191:49;;:33;;619:6;11191:14;:33::i;:::-;:37;;:49::i;:::-;11182:59;;11175:66;10614:634;-1:-1:-1;;;10614:634:10:o;3039:96:172:-;3097:7;3123:5;3127:1;3123;:5;:::i;634:175:160:-;743:58;;-1:-1:-1;;;;;3028:32:192;;743:58:160;;;3010:51:192;3077:18;;;3070:34;;;716:86:160;;736:5;;-1:-1:-1;;;766:23:160;2983:18:192;;743:58:160;2965:145:192;13474:199:78;13599:6;;:66;;-1:-1:-1;;;13599:66:78;;-1:-1:-1;;;13599:66:78;;;3261:25:192;13529::78;;-1:-1:-1;;;;;13599:6:78;;:31;;3234:18:192;;13599:66:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3022:751:160:-;3441:23;3467:69;3495:4;3467:69;;;;;;;;;;;;;;;;;3475:5;-1:-1:-1;;;;;3467:27:160;;;:69;;;;;:::i;:::-;3550:17;;3441:95;;-1:-1:-1;3550:21:160;3546:221;;3690:10;3679:30;;;;;;;;;;;;:::i;:::-;3671:85;;;;-1:-1:-1;;;3671:85:160;;7345:2:192;3671:85:160;;;7327:21:192;7384:2;7364:18;;;7357:30;7423:34;7403:18;;;7396:62;-1:-1:-1;;;7474:18:192;;;7467:40;7524:19;;3671:85:160;7317:232:192;3382:96:172;3440:7;3466:5;3470:1;3466;:5;:::i;3767:96::-;3825:7;3851:5;3855:1;3851;:5;:::i;3573:193:161:-;3676:12;3707:52;3729:6;3737:4;3743:1;3746:12;3707:21;:52::i;:::-;3700:59;3573:193;-1:-1:-1;;;;3573:193:161:o;4600:523::-;4727:12;4784:5;4759:21;:30;;4751:81;;;;-1:-1:-1;;;4751:81:161;;5174:2:192;4751:81:161;;;5156:21:192;5213:2;5193:18;;;5186:30;5252:34;5232:18;;;5225:62;-1:-1:-1;;;5303:18:192;;;5296:36;5349:19;;4751:81:161;5146:228:192;4751:81:161;1078:20;;4842:60;;;;-1:-1:-1;;;4842:60:161;;6987:2:192;4842:60:161;;;6969:21:192;7026:2;7006:18;;;6999:30;7065:31;7045:18;;;7038:59;7114:18;;4842:60:161;6959:179:192;4842:60:161;4973:12;4987:23;5014:6;-1:-1:-1;;;;;5014:11:161;5034:5;5042:4;5014:33;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4972:75;;;;5064:52;5082:7;5091:10;5103:12;5064:17;:52::i;:::-;5057:59;4600:523;-1:-1:-1;;;;;;;4600:523:161:o;7083:725::-;7198:12;7226:7;7222:580;;;-1:-1:-1;7256:10:161;7249:17;;7222:580;7367:17;;:21;7363:429;;7625:10;7619:17;7685:15;7672:10;7668:2;7664:19;7657:44;7574:145;7764:12;7757:20;;-1:-1:-1;;;7757:20:161;;;;;;;;:::i;14:257:192:-;73:6;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;191:9;178:23;210:31;235:5;210:31;:::i;276:261::-;346:6;399:2;387:9;378:7;374:23;370:32;367:2;;;420:6;412;405:22;367:2;457:9;451:16;476:31;501:5;476:31;:::i;542:297::-;609:6;662:2;650:9;641:7;637:23;633:32;630:2;;;683:6;675;668:22;630:2;720:9;714:16;773:5;766:13;759:21;752:5;749:32;739:2;;800:6;792;785:22;844:193;913:6;966:2;954:9;945:7;941:23;937:32;934:2;;;987:6;979;972:22;934:2;-1:-1:-1;1015:16:192;;924:113;-1:-1:-1;924:113:192:o;1042:190::-;1101:6;1154:2;1142:9;1133:7;1129:23;1125:32;1122:2;;;1175:6;1167;1160:22;1122:2;-1:-1:-1;1203:23:192;;1112:120;-1:-1:-1;1112:120:192:o;1436:274::-;1565:3;1603:6;1597:13;1619:53;1665:6;1660:3;1653:4;1645:6;1641:17;1619:53;:::i;:::-;1688:16;;;;;1573:137;-1:-1:-1;;1573:137:192:o;4584:383::-;4733:2;4722:9;4715:21;4696:4;4765:6;4759:13;4808:6;4803:2;4792:9;4788:18;4781:34;4824:66;4883:6;4878:2;4867:9;4863:18;4858:2;4850:6;4846:15;4824:66;:::i;:::-;4951:2;4930:15;-1:-1:-1;;4926:29:192;4911:45;;;;4958:2;4907:54;;4705:262;-1:-1:-1;;4705:262:192:o;8699:128::-;8739:3;8770:1;8766:6;8763:1;8760:13;8757:2;;;8776:18;;:::i;:::-;-1:-1:-1;8812:9:192;;8747:80::o;8832:217::-;8872:1;8898;8888:2;;-1:-1:-1;;;8923:31:192;;8977:4;8974:1;8967:15;9005:4;8930:1;8995:15;8888:2;-1:-1:-1;9034:9:192;;8878:171::o;9054:168::-;9094:7;9160:1;9156;9152:6;9148:14;9145:1;9142:21;9137:1;9130:9;9123:17;9119:45;9116:2;;;9167:18;;:::i;:::-;-1:-1:-1;9207:9:192;;9106:116::o;9227:125::-;9267:4;9295:1;9292;9289:8;9286:2;;;9300:18;;:::i;:::-;-1:-1:-1;9337:9:192;;9276:76::o;9357:258::-;9429:1;9439:113;9453:6;9450:1;9447:13;9439:113;;;9529:11;;;9523:18;9510:11;;;9503:39;9475:2;9468:10;9439:113;;;9570:6;9567:1;9564:13;9561:2;;;-1:-1:-1;;9605:1:192;9587:16;;9580:27;9410:205::o;9620:127::-;9681:10;9676:3;9672:20;9669:1;9662:31;9712:4;9709:1;9702:15;9736:4;9733:1;9726:15;9752:131;-1:-1:-1;;;;;9827:31:192;;9817:42;;9807:2;;9873:1;9870;9863:12",
  "source": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\n\nimport \"../../common/implementation/FixedPoint.sol\";\nimport \"../../common/implementation/AddressWhitelist.sol\";\nimport \"../../common/implementation/Testable.sol\";\nimport \"../../common/implementation/Lockable.sol\";\n\nimport \"../../oracle/interfaces/FinderInterface.sol\";\nimport \"../../oracle/interfaces/IdentifierWhitelistInterface.sol\";\nimport \"../../oracle/interfaces/OptimisticOracleInterface.sol\";\nimport \"../../oracle/implementation/ContractCreator.sol\";\n\n/**\n * @title Optimistic Token Deposit Box\n * @notice This is a minimal example of a financial template that depends on price requests from the Optimistic Oracle.\n * This contract should be thought of as a \"Deposit Box\" into which the user deposits some ERC20 collateral.\n * The main feature of this box is that the user can withdraw their ERC20 corresponding to a desired USD amount.\n * When the user wants to make a withdrawal, a price request is made to the Optimistic Oracle.\n * For simplicity, the user is constrained to have one outstanding withdrawal request at any given time.\n * Final fees are charged to the proposer of a price but not to the contract making a price request.\n *\n * This example is intended to accompany a technical tutorial for how to integrate the Optimistic Oracle into a project.\n * The main feature this demo serves to showcase is how to build a financial product on-chain that \"pulls\" price\n * requests from the Optimistic Oracle on-demand, which is an implementation of the \"priceless\" oracle framework.\n *\n * The typical user flow would be:\n * - User sets up a deposit box for the ETH/USD price-identifier.\n *   The \"collateral currency\" in this deposit box is therefore wETH.\n *   The user can subsequently make withdrawal requests for USD-denominated amounts of wETH.\n * - User deposits 10 wETH into their deposit box.\n * - User later requests to withdraw $10,000 USD of wETH.\n * - OptimisticDepositBox asks Optimistic Oracle for latest ETH/USD exchange rate.\n * - Optimistic Oracle resolves the exchange rate at: 1 wETH is worth 2000 USD.\n * - OptimisticDepositBox transfers 5 wETH to user.\n */\ncontract OptimisticDepositBox is Testable, Lockable {\n    using SafeMath for uint256;\n    using FixedPoint for FixedPoint.Unsigned;\n    using SafeERC20 for IERC20;\n\n    // Represents a single caller's deposit box. All collateral is held by this contract.\n    struct OptimisticDepositBoxData {\n        // Requested amount of collateral, denominated in the quote asset of the price identifier.\n        // Example: If the price identifier is ETH/USD, and the `withdrawalRequestAmount = 1000`, then\n        // this represents a withdrawal request for 1000 USD worth of wETH.\n        uint256 withdrawalRequestAmount;\n        // Timestamp of the latest withdrawal request. A withdrawal request is pending if `withdrawalRequestTimestamp != 0`.\n        uint256 withdrawalRequestTimestamp;\n        // Collateral value.\n        uint256 collateral;\n    }\n\n    // Maps addresses to their deposit boxes. Each address can have only one position.\n    mapping(address => OptimisticDepositBoxData) private depositBoxes;\n\n    // Unique identifier for price feed ticker.\n    bytes32 private priceIdentifier;\n\n    // Finder for UMA contracts.\n    FinderInterface finder;\n\n    // The collateral currency used to back the positions in this contract.\n    IERC20 public collateralCurrency;\n\n    // Total collateral of all depositors.\n    uint256 public totalOptimisticDepositBoxCollateral;\n\n    /****************************************\n     *                EVENTS                *\n     ****************************************/\n\n    event NewOptimisticDepositBox(address indexed user);\n    event EndedOptimisticDepositBox(address indexed user);\n    event Deposit(address indexed user, uint256 indexed collateralAmount);\n    event RequestWithdrawal(address indexed user, uint256 indexed collateralAmount, uint256 withdrawalRequestTimestamp);\n    event RequestWithdrawalExecuted(\n        address indexed user,\n        uint256 indexed collateralAmount,\n        uint256 exchangeRate,\n        uint256 withdrawalRequestTimestamp\n    );\n    event RequestWithdrawalCanceled(\n        address indexed user,\n        uint256 indexed collateralAmount,\n        uint256 withdrawalRequestTimestamp\n    );\n\n    /****************************************\n     *               MODIFIERS              *\n     ****************************************/\n\n    modifier noPendingWithdrawal(address user) {\n        _depositBoxHasNoPendingWithdrawal(user);\n        _;\n    }\n\n    /****************************************\n     *           PUBLIC FUNCTIONS           *\n     ****************************************/\n\n    /**\n     * @notice Construct the OptimisticDepositBox.\n     * @param _collateralAddress ERC20 token to be deposited.\n     * @param _finderAddress UMA protocol Finder used to discover other protocol contracts.\n     * @param _priceIdentifier registered in the DVM, used to price the ERC20 deposited.\n     * The price identifier consists of a \"base\" asset and a \"quote\" asset. The \"base\" asset corresponds\n     * to the collateral ERC20 currency deposited into this account, and it is denominated in the \"quote\"\n     * asset on withdrawals.\n     * An example price identifier would be \"ETH/USD\" which will resolve and return the USD price of ETH.\n     * @param _timerAddress contract that stores the current time in a testing environment.\n     * Must be set to 0x0 for production environments that use live time.\n     */\n    constructor(\n        address _collateralAddress,\n        address _finderAddress,\n        bytes32 _priceIdentifier,\n        address _timerAddress\n    ) nonReentrant() Testable(_timerAddress) {\n        finder = FinderInterface(_finderAddress);\n        require(_getIdentifierWhitelist().isIdentifierSupported(_priceIdentifier), \"Unsupported price identifier\");\n        require(_getAddressWhitelist().isOnWhitelist(_collateralAddress), \"Unsupported collateral type\");\n        collateralCurrency = IERC20(_collateralAddress);\n        priceIdentifier = _priceIdentifier;\n    }\n\n    /**\n     * @notice Transfers `collateralAmount` of `collateralCurrency` into caller's deposit box.\n     * @dev This contract must be approved to spend at least `collateralAmount` of `collateralCurrency`.\n     * @param collateralAmount total amount of collateral tokens to be sent to the sponsor's position.\n     */\n    function deposit(uint256 collateralAmount) public nonReentrant() {\n        require(collateralAmount > 0, \"Invalid collateral amount\");\n        OptimisticDepositBoxData storage depositBoxData = depositBoxes[msg.sender];\n        if (depositBoxData.collateral == 0) {\n            emit NewOptimisticDepositBox(msg.sender);\n        }\n\n        // Increase the individual deposit box and global collateral balance by collateral amount.\n        depositBoxData.collateral = depositBoxData.collateral.add(collateralAmount);\n        totalOptimisticDepositBoxCollateral = totalOptimisticDepositBoxCollateral.add(collateralAmount);\n\n        emit Deposit(msg.sender, collateralAmount);\n\n        // Move collateral currency from sender to contract.\n        collateralCurrency.safeTransferFrom(msg.sender, address(this), collateralAmount);\n    }\n\n    /**\n     * @notice Starts a withdrawal request that allows the sponsor to withdraw `denominatedCollateralAmount`\n     * from their position denominated in the quote asset of the price identifier, following a Optimistic\n     * Oracle price resolution.\n     * @dev The request will be pending for the duration of the liveness period and can be cancelled at any\n     * time. Only one withdrawal request can exist for the user.\n     * @param denominatedCollateralAmount the quote-asset denominated amount of collateral requested to\n     * withdraw.\n     */\n    function requestWithdrawal(uint256 denominatedCollateralAmount)\n        public\n        noPendingWithdrawal(msg.sender)\n        nonReentrant()\n    {\n        OptimisticDepositBoxData storage depositBoxData = depositBoxes[msg.sender];\n        require(denominatedCollateralAmount > 0, \"Invalid collateral amount\");\n\n        // Update the position data for the user.\n        depositBoxData.withdrawalRequestAmount = denominatedCollateralAmount;\n        depositBoxData.withdrawalRequestTimestamp = getCurrentTime();\n\n        emit RequestWithdrawal(msg.sender, denominatedCollateralAmount, depositBoxData.withdrawalRequestTimestamp);\n\n        // A price request is sent for the current timestamp.\n        _requestOraclePrice(depositBoxData.withdrawalRequestTimestamp);\n    }\n\n    /**\n     * @notice After a withdrawal request (i.e., by a call to `requestWithdrawal`) and optimistic oracle\n     * price resolution, withdraws `depositBoxData.withdrawalRequestAmount` of collateral currency\n     * denominated in the quote asset.\n     * @dev Might not withdraw the full requested amount in order to account for precision loss.\n     * @return amountWithdrawn The actual amount of collateral withdrawn.\n     */\n    function executeWithdrawal() external nonReentrant() returns (uint256 amountWithdrawn) {\n        OptimisticDepositBoxData storage depositBoxData = depositBoxes[msg.sender];\n        require(\n            depositBoxData.withdrawalRequestTimestamp != 0 &&\n                depositBoxData.withdrawalRequestTimestamp <= getCurrentTime(),\n            \"Invalid withdraw request\"\n        );\n\n        // Get the resolved price or revert.\n        // Note that in practice, you may have to do some additional math here to deal with scaling in the oracle price.\n        uint256 exchangeRate = _getOraclePrice(depositBoxData.withdrawalRequestTimestamp);\n\n        // Calculate denomated amount of collateral based on resolved exchange rate.\n        // Example 1: User wants to withdraw $1000 of ETH, exchange rate is $2000/ETH, therefore user to receive 0.5 ETH.\n        // Example 2: User wants to withdraw $2500 of ETH, exchange rate is $2000/ETH, therefore user to receive 1.25 ETH.\n        uint256 denominatedAmountToWithdraw =\n            FixedPoint.Unsigned(depositBoxData.withdrawalRequestAmount).div(FixedPoint.Unsigned(exchangeRate)).rawValue;\n\n        // If withdrawal request amount is > collateral, then withdraw the full collateral amount.\n        if (denominatedAmountToWithdraw >= depositBoxData.collateral) {\n            denominatedAmountToWithdraw = depositBoxData.collateral;\n            emit EndedOptimisticDepositBox(msg.sender);\n        }\n\n        // Decrease the individual deposit box and global collateral balance.\n        depositBoxData.collateral = depositBoxData.collateral.sub(denominatedAmountToWithdraw);\n        totalOptimisticDepositBoxCollateral = totalOptimisticDepositBoxCollateral.sub(denominatedAmountToWithdraw);\n\n        emit RequestWithdrawalExecuted(\n            msg.sender,\n            denominatedAmountToWithdraw,\n            exchangeRate,\n            depositBoxData.withdrawalRequestTimestamp\n        );\n\n        // Reset withdrawal request by setting withdrawal request timestamp to 0.\n        _resetWithdrawalRequest(depositBoxData);\n\n        // Transfer approved withdrawal amount from the contract to the caller.\n        collateralCurrency.safeTransfer(msg.sender, denominatedAmountToWithdraw);\n        return denominatedAmountToWithdraw;\n    }\n\n    /**\n     * @notice Cancels a pending withdrawal request.\n     */\n    function cancelWithdrawal() external nonReentrant() {\n        OptimisticDepositBoxData storage depositBoxData = depositBoxes[msg.sender];\n        require(depositBoxData.withdrawalRequestTimestamp != 0, \"No pending withdrawal\");\n\n        emit RequestWithdrawalCanceled(\n            msg.sender,\n            depositBoxData.withdrawalRequestAmount,\n            depositBoxData.withdrawalRequestTimestamp\n        );\n\n        // Reset withdrawal request by setting withdrawal request timestamp and withdrawal amount to 0.\n        _resetWithdrawalRequest(depositBoxData);\n    }\n\n    /**\n     * @notice Accessor method for a user's collateral.\n     * @param user address whose collateral amount is retrieved.\n     * @return the collateral amount in the deposit box (i.e. available for withdrawal).\n     */\n    function getCollateral(address user) external view nonReentrantView() returns (uint256) {\n        return depositBoxes[user].collateral;\n    }\n\n    /****************************************\n     *          INTERNAL FUNCTIONS          *\n     ****************************************/\n\n    // Requests a price for `priceIdentifier` at `requestedTime` from the Optimistic Oracle.\n    function _requestOraclePrice(uint256 requestedTime) internal {\n        OptimisticOracleInterface oracle = _getOptimisticOracle();\n        // For other use cases, you may need ancillary data or a reward. Here, they are both zero.\n        oracle.requestPrice(priceIdentifier, requestedTime, \"\", IERC20(collateralCurrency), 0);\n    }\n\n    function _resetWithdrawalRequest(OptimisticDepositBoxData storage depositBoxData) internal {\n        depositBoxData.withdrawalRequestAmount = 0;\n        depositBoxData.withdrawalRequestTimestamp = 0;\n    }\n\n    function _depositBoxHasNoPendingWithdrawal(address user) internal view {\n        require(depositBoxes[user].withdrawalRequestTimestamp == 0, \"Pending withdrawal\");\n    }\n\n    function _getOptimisticOracle() internal view returns (OptimisticOracleInterface) {\n        return OptimisticOracleInterface(finder.getImplementationAddress(OracleInterfaces.OptimisticOracle));\n    }\n\n    function _getIdentifierWhitelist() internal view returns (IdentifierWhitelistInterface) {\n        return IdentifierWhitelistInterface(finder.getImplementationAddress(OracleInterfaces.IdentifierWhitelist));\n    }\n\n    function _getAddressWhitelist() internal view returns (AddressWhitelist) {\n        return AddressWhitelist(finder.getImplementationAddress(OracleInterfaces.CollateralWhitelist));\n    }\n\n    // Fetches a resolved oracle price from the Optimistic Oracle. Reverts if the oracle hasn't resolved for this request.\n    function _getOraclePrice(uint256 withdrawalRequestTimestamp) internal returns (uint256) {\n        OptimisticOracleInterface oracle = _getOptimisticOracle();\n        require(\n            oracle.hasPrice(address(this), priceIdentifier, withdrawalRequestTimestamp, \"\"),\n            \"Unresolved oracle price\"\n        );\n        int256 oraclePrice = oracle.settleAndGetPrice(priceIdentifier, withdrawalRequestTimestamp, \"\");\n\n        // For simplicity we don't want to deal with negative prices.\n        if (oraclePrice < 0) {\n            oraclePrice = 0;\n        }\n        return uint256(oraclePrice);\n    }\n}\n",
  "sourcePath": "/home/circleci/protocol/packages/core/contracts/financial-templates/demo/OptimisticDepositBox.sol",
  "ast": {
    "absolutePath": "/home/circleci/protocol/packages/core/contracts/financial-templates/demo/OptimisticDepositBox.sol",
    "exportedSymbols": {
      "Address": [
        42712
      ],
      "AddressWhitelist": [
        1474
      ],
      "AddressWhitelistInterface": [
        5487
      ],
      "Context": [
        42820
      ],
      "ContractCreator": [
        26544
      ],
      "Exclusive": [
        3793
      ],
      "FinderInterface": [
        33609
      ],
      "FixedPoint": [
        3659
      ],
      "IERC20": [
        41847
      ],
      "IdentifierWhitelistInterface": [
        33633
      ],
      "Lockable": [
        3720
      ],
      "MultiRole": [
        4345
      ],
      "OptimisticDepositBox": [
        16298
      ],
      "OptimisticOracleInterface": [
        33871
      ],
      "OracleInterfaces": [
        26458
      ],
      "Ownable": [
        41170
      ],
      "Registry": [
        29610
      ],
      "RegistryInterface": [
        34000
      ],
      "SafeERC20": [
        42416
      ],
      "SafeMath": [
        44033
      ],
      "Shared": [
        3889
      ],
      "SignedSafeMath": [
        44097
      ],
      "Testable": [
        4418
      ],
      "Timer": [
        4505
      ]
    },
    "id": 16299,
    "license": "AGPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 15706,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:23:78"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 15707,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 16299,
        "sourceUnit": 44034,
        "src": "67:57:78",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 15708,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 16299,
        "sourceUnit": 41848,
        "src": "125:56:78",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 15709,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 16299,
        "sourceUnit": 42417,
        "src": "182:65:78",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/circleci/protocol/packages/core/contracts/common/implementation/FixedPoint.sol",
        "file": "../../common/implementation/FixedPoint.sol",
        "id": 15710,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 16299,
        "sourceUnit": 3660,
        "src": "249:52:78",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/circleci/protocol/packages/core/contracts/common/implementation/AddressWhitelist.sol",
        "file": "../../common/implementation/AddressWhitelist.sol",
        "id": 15711,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 16299,
        "sourceUnit": 1475,
        "src": "302:58:78",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/circleci/protocol/packages/core/contracts/common/implementation/Testable.sol",
        "file": "../../common/implementation/Testable.sol",
        "id": 15712,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 16299,
        "sourceUnit": 4419,
        "src": "361:50:78",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/circleci/protocol/packages/core/contracts/common/implementation/Lockable.sol",
        "file": "../../common/implementation/Lockable.sol",
        "id": 15713,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 16299,
        "sourceUnit": 3721,
        "src": "412:50:78",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/circleci/protocol/packages/core/contracts/oracle/interfaces/FinderInterface.sol",
        "file": "../../oracle/interfaces/FinderInterface.sol",
        "id": 15714,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 16299,
        "sourceUnit": 33610,
        "src": "464:53:78",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/circleci/protocol/packages/core/contracts/oracle/interfaces/IdentifierWhitelistInterface.sol",
        "file": "../../oracle/interfaces/IdentifierWhitelistInterface.sol",
        "id": 15715,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 16299,
        "sourceUnit": 33634,
        "src": "518:66:78",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/circleci/protocol/packages/core/contracts/oracle/interfaces/OptimisticOracleInterface.sol",
        "file": "../../oracle/interfaces/OptimisticOracleInterface.sol",
        "id": 15716,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 16299,
        "sourceUnit": 33872,
        "src": "585:63:78",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/circleci/protocol/packages/core/contracts/oracle/implementation/ContractCreator.sol",
        "file": "../../oracle/implementation/ContractCreator.sol",
        "id": 15717,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 16299,
        "sourceUnit": 26545,
        "src": "649:57:78",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 15719,
              "name": "Testable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4418,
              "src": "2373:8:78"
            },
            "id": 15720,
            "nodeType": "InheritanceSpecifier",
            "src": "2373:8:78"
          },
          {
            "baseName": {
              "id": 15721,
              "name": "Lockable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3720,
              "src": "2383:8:78"
            },
            "id": 15722,
            "nodeType": "InheritanceSpecifier",
            "src": "2383:8:78"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 15718,
          "nodeType": "StructuredDocumentation",
          "src": "708:1631:78",
          "text": " @title Optimistic Token Deposit Box\n @notice This is a minimal example of a financial template that depends on price requests from the Optimistic Oracle.\n This contract should be thought of as a \"Deposit Box\" into which the user deposits some ERC20 collateral.\n The main feature of this box is that the user can withdraw their ERC20 corresponding to a desired USD amount.\n When the user wants to make a withdrawal, a price request is made to the Optimistic Oracle.\n For simplicity, the user is constrained to have one outstanding withdrawal request at any given time.\n Final fees are charged to the proposer of a price but not to the contract making a price request.\n This example is intended to accompany a technical tutorial for how to integrate the Optimistic Oracle into a project.\n The main feature this demo serves to showcase is how to build a financial product on-chain that \"pulls\" price\n requests from the Optimistic Oracle on-demand, which is an implementation of the \"priceless\" oracle framework.\n The typical user flow would be:\n - User sets up a deposit box for the ETH/USD price-identifier.\n   The \"collateral currency\" in this deposit box is therefore wETH.\n   The user can subsequently make withdrawal requests for USD-denominated amounts of wETH.\n - User deposits 10 wETH into their deposit box.\n - User later requests to withdraw $10,000 USD of wETH.\n - OptimisticDepositBox asks Optimistic Oracle for latest ETH/USD exchange rate.\n - Optimistic Oracle resolves the exchange rate at: 1 wETH is worth 2000 USD.\n - OptimisticDepositBox transfers 5 wETH to user."
        },
        "fullyImplemented": true,
        "id": 16298,
        "linearizedBaseContracts": [
          16298,
          3720,
          4418
        ],
        "name": "OptimisticDepositBox",
        "nameLocation": "2349:20:78",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 15725,
            "libraryName": {
              "id": 15723,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 44033,
              "src": "2404:8:78"
            },
            "nodeType": "UsingForDirective",
            "src": "2398:27:78",
            "typeName": {
              "id": 15724,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2417:7:78",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 15729,
            "libraryName": {
              "id": 15726,
              "name": "FixedPoint",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3659,
              "src": "2436:10:78"
            },
            "nodeType": "UsingForDirective",
            "src": "2430:41:78",
            "typeName": {
              "id": 15728,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 15727,
                "name": "FixedPoint.Unsigned",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2045,
                "src": "2451:19:78"
              },
              "referencedDeclaration": 2045,
              "src": "2451:19:78",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Unsigned_$2045_storage_ptr",
                "typeString": "struct FixedPoint.Unsigned"
              }
            }
          },
          {
            "id": 15733,
            "libraryName": {
              "id": 15730,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 42416,
              "src": "2482:9:78"
            },
            "nodeType": "UsingForDirective",
            "src": "2476:27:78",
            "typeName": {
              "id": 15732,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 15731,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 41847,
                "src": "2496:6:78"
              },
              "referencedDeclaration": 41847,
              "src": "2496:6:78",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$41847",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "canonicalName": "OptimisticDepositBox.OptimisticDepositBoxData",
            "id": 15740,
            "members": [
              {
                "constant": false,
                "id": 15735,
                "mutability": "mutable",
                "name": "withdrawalRequestAmount",
                "nameLocation": "2927:23:78",
                "nodeType": "VariableDeclaration",
                "scope": 15740,
                "src": "2919:31:78",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 15734,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2919:7:78",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15737,
                "mutability": "mutable",
                "name": "withdrawalRequestTimestamp",
                "nameLocation": "3093:26:78",
                "nodeType": "VariableDeclaration",
                "scope": 15740,
                "src": "3085:34:78",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 15736,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3085:7:78",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15739,
                "mutability": "mutable",
                "name": "collateral",
                "nameLocation": "3166:10:78",
                "nodeType": "VariableDeclaration",
                "scope": 15740,
                "src": "3158:18:78",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 15738,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3158:7:78",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "OptimisticDepositBoxData",
            "nameLocation": "2606:24:78",
            "nodeType": "StructDefinition",
            "scope": 16298,
            "src": "2599:584:78",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 15745,
            "mutability": "mutable",
            "name": "depositBoxes",
            "nameLocation": "3329:12:78",
            "nodeType": "VariableDeclaration",
            "scope": 16298,
            "src": "3276:65:78",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_OptimisticDepositBoxData_$15740_storage_$",
              "typeString": "mapping(address => struct OptimisticDepositBox.OptimisticDepositBoxData)"
            },
            "typeName": {
              "id": 15744,
              "keyType": {
                "id": 15741,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3284:7:78",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "3276:44:78",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_OptimisticDepositBoxData_$15740_storage_$",
                "typeString": "mapping(address => struct OptimisticDepositBox.OptimisticDepositBoxData)"
              },
              "valueType": {
                "id": 15743,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 15742,
                  "name": "OptimisticDepositBoxData",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 15740,
                  "src": "3295:24:78"
                },
                "referencedDeclaration": 15740,
                "src": "3295:24:78",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                  "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 15747,
            "mutability": "mutable",
            "name": "priceIdentifier",
            "nameLocation": "3412:15:78",
            "nodeType": "VariableDeclaration",
            "scope": 16298,
            "src": "3396:31:78",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 15746,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "3396:7:78",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 15750,
            "mutability": "mutable",
            "name": "finder",
            "nameLocation": "3483:6:78",
            "nodeType": "VariableDeclaration",
            "scope": 16298,
            "src": "3467:22:78",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FinderInterface_$33609",
              "typeString": "contract FinderInterface"
            },
            "typeName": {
              "id": 15749,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 15748,
                "name": "FinderInterface",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 33609,
                "src": "3467:15:78"
              },
              "referencedDeclaration": 33609,
              "src": "3467:15:78",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FinderInterface_$33609",
                "typeString": "contract FinderInterface"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "0de15fd9",
            "id": 15753,
            "mutability": "mutable",
            "name": "collateralCurrency",
            "nameLocation": "3586:18:78",
            "nodeType": "VariableDeclaration",
            "scope": 16298,
            "src": "3572:32:78",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$41847",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 15752,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 15751,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 41847,
                "src": "3572:6:78"
              },
              "referencedDeclaration": 41847,
              "src": "3572:6:78",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$41847",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "dfddabaa",
            "id": 15755,
            "mutability": "mutable",
            "name": "totalOptimisticDepositBoxCollateral",
            "nameLocation": "3669:35:78",
            "nodeType": "VariableDeclaration",
            "scope": 16298,
            "src": "3654:50:78",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 15754,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3654:7:78",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 15759,
            "name": "NewOptimisticDepositBox",
            "nameLocation": "3857:23:78",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 15758,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15757,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "3897:4:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 15759,
                  "src": "3881:20:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15756,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3881:7:78",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3880:22:78"
            },
            "src": "3851:52:78"
          },
          {
            "anonymous": false,
            "id": 15763,
            "name": "EndedOptimisticDepositBox",
            "nameLocation": "3914:25:78",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 15762,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15761,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "3956:4:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 15763,
                  "src": "3940:20:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15760,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3940:7:78",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3939:22:78"
            },
            "src": "3908:54:78"
          },
          {
            "anonymous": false,
            "id": 15769,
            "name": "Deposit",
            "nameLocation": "3973:7:78",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 15768,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15765,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "3997:4:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 15769,
                  "src": "3981:20:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15764,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3981:7:78",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15767,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "collateralAmount",
                  "nameLocation": "4019:16:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 15769,
                  "src": "4003:32:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15766,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4003:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3980:56:78"
            },
            "src": "3967:70:78"
          },
          {
            "anonymous": false,
            "id": 15777,
            "name": "RequestWithdrawal",
            "nameLocation": "4048:17:78",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 15776,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15771,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "4082:4:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 15777,
                  "src": "4066:20:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15770,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4066:7:78",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15773,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "collateralAmount",
                  "nameLocation": "4104:16:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 15777,
                  "src": "4088:32:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15772,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4088:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15775,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "withdrawalRequestTimestamp",
                  "nameLocation": "4130:26:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 15777,
                  "src": "4122:34:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15774,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4122:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4065:92:78"
            },
            "src": "4042:116:78"
          },
          {
            "anonymous": false,
            "id": 15787,
            "name": "RequestWithdrawalExecuted",
            "nameLocation": "4169:25:78",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 15786,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15779,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "4220:4:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 15787,
                  "src": "4204:20:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15778,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4204:7:78",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15781,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "collateralAmount",
                  "nameLocation": "4250:16:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 15787,
                  "src": "4234:32:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15780,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4234:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15783,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "exchangeRate",
                  "nameLocation": "4284:12:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 15787,
                  "src": "4276:20:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15782,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4276:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15785,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "withdrawalRequestTimestamp",
                  "nameLocation": "4314:26:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 15787,
                  "src": "4306:34:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15784,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4306:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4194:152:78"
            },
            "src": "4163:184:78"
          },
          {
            "anonymous": false,
            "id": 15795,
            "name": "RequestWithdrawalCanceled",
            "nameLocation": "4358:25:78",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 15794,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15789,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "4409:4:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 15795,
                  "src": "4393:20:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15788,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4393:7:78",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15791,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "collateralAmount",
                  "nameLocation": "4439:16:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 15795,
                  "src": "4423:32:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15790,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4423:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15793,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "withdrawalRequestTimestamp",
                  "nameLocation": "4473:26:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 15795,
                  "src": "4465:34:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15792,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4465:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4383:122:78"
            },
            "src": "4352:154:78"
          },
          {
            "body": {
              "id": 15804,
              "nodeType": "Block",
              "src": "4695:67:78",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15800,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15797,
                        "src": "4739:4:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 15799,
                      "name": "_depositBoxHasNoPendingWithdrawal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16201,
                      "src": "4705:33:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
                        "typeString": "function (address) view"
                      }
                    },
                    "id": 15801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4705:39:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15802,
                  "nodeType": "ExpressionStatement",
                  "src": "4705:39:78"
                },
                {
                  "id": 15803,
                  "nodeType": "PlaceholderStatement",
                  "src": "4754:1:78"
                }
              ]
            },
            "id": 15805,
            "name": "noPendingWithdrawal",
            "nameLocation": "4661:19:78",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 15798,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15797,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "4689:4:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 15805,
                  "src": "4681:12:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15796,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4681:7:78",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4680:14:78"
            },
            "src": "4652:110:78",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 15856,
              "nodeType": "Block",
              "src": "5920:380:78",
              "statements": [
                {
                  "expression": {
                    "id": 15826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 15822,
                      "name": "finder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15750,
                      "src": "5930:6:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FinderInterface_$33609",
                        "typeString": "contract FinderInterface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 15824,
                          "name": "_finderAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15810,
                          "src": "5955:14:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 15823,
                        "name": "FinderInterface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33609,
                        "src": "5939:15:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_FinderInterface_$33609_$",
                          "typeString": "type(contract FinderInterface)"
                        }
                      },
                      "id": 15825,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5939:31:78",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FinderInterface_$33609",
                        "typeString": "contract FinderInterface"
                      }
                    },
                    "src": "5930:40:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FinderInterface_$33609",
                      "typeString": "contract FinderInterface"
                    }
                  },
                  "id": 15827,
                  "nodeType": "ExpressionStatement",
                  "src": "5930:40:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 15832,
                            "name": "_priceIdentifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15812,
                            "src": "6036:16:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 15829,
                              "name": "_getIdentifierWhitelist",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16231,
                              "src": "5988:23:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IdentifierWhitelistInterface_$33633_$",
                                "typeString": "function () view returns (contract IdentifierWhitelistInterface)"
                              }
                            },
                            "id": 15830,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5988:25:78",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IdentifierWhitelistInterface_$33633",
                              "typeString": "contract IdentifierWhitelistInterface"
                            }
                          },
                          "id": 15831,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isIdentifierSupported",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 33632,
                          "src": "5988:47:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (bytes32) view external returns (bool)"
                          }
                        },
                        "id": 15833,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5988:65:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e737570706f72746564207072696365206964656e746966696572",
                        "id": 15834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6055:30:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_94bb89cfed7f92b6924aaf530cfbea5fedde73bb19371104995924474bbd76c5",
                          "typeString": "literal_string \"Unsupported price identifier\""
                        },
                        "value": "Unsupported price identifier"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_94bb89cfed7f92b6924aaf530cfbea5fedde73bb19371104995924474bbd76c5",
                          "typeString": "literal_string \"Unsupported price identifier\""
                        }
                      ],
                      "id": 15828,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5980:7:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5980:106:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15836,
                  "nodeType": "ExpressionStatement",
                  "src": "5980:106:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 15841,
                            "name": "_collateralAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15808,
                            "src": "6141:18:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 15838,
                              "name": "_getAddressWhitelist",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16246,
                              "src": "6104:20:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_AddressWhitelist_$1474_$",
                                "typeString": "function () view returns (contract AddressWhitelist)"
                              }
                            },
                            "id": 15839,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6104:22:78",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AddressWhitelist_$1474",
                              "typeString": "contract AddressWhitelist"
                            }
                          },
                          "id": 15840,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isOnWhitelist",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1384,
                          "src": "6104:36:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 15842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6104:56:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e737570706f7274656420636f6c6c61746572616c2074797065",
                        "id": 15843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6162:29:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3611e54a32e996a5f5392e3c381b702b0fa44f0a8e1298457590376f10df9a66",
                          "typeString": "literal_string \"Unsupported collateral type\""
                        },
                        "value": "Unsupported collateral type"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3611e54a32e996a5f5392e3c381b702b0fa44f0a8e1298457590376f10df9a66",
                          "typeString": "literal_string \"Unsupported collateral type\""
                        }
                      ],
                      "id": 15837,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6096:7:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6096:96:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15845,
                  "nodeType": "ExpressionStatement",
                  "src": "6096:96:78"
                },
                {
                  "expression": {
                    "id": 15850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 15846,
                      "name": "collateralCurrency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15753,
                      "src": "6202:18:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$41847",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 15848,
                          "name": "_collateralAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15808,
                          "src": "6230:18:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 15847,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41847,
                        "src": "6223:6:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$41847_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 15849,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6223:26:78",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$41847",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "6202:47:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$41847",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 15851,
                  "nodeType": "ExpressionStatement",
                  "src": "6202:47:78"
                },
                {
                  "expression": {
                    "id": 15854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 15852,
                      "name": "priceIdentifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15747,
                      "src": "6259:15:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 15853,
                      "name": "_priceIdentifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15812,
                      "src": "6277:16:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "6259:34:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 15855,
                  "nodeType": "ExpressionStatement",
                  "src": "6259:34:78"
                }
              ]
            },
            "documentation": {
              "id": 15806,
              "nodeType": "StructuredDocumentation",
              "src": "4908:817:78",
              "text": " @notice Construct the OptimisticDepositBox.\n @param _collateralAddress ERC20 token to be deposited.\n @param _finderAddress UMA protocol Finder used to discover other protocol contracts.\n @param _priceIdentifier registered in the DVM, used to price the ERC20 deposited.\n The price identifier consists of a \"base\" asset and a \"quote\" asset. The \"base\" asset corresponds\n to the collateral ERC20 currency deposited into this account, and it is denominated in the \"quote\"\n asset on withdrawals.\n An example price identifier would be \"ETH/USD\" which will resolve and return the USD price of ETH.\n @param _timerAddress contract that stores the current time in a testing environment.\n Must be set to 0x0 for production environments that use live time."
            },
            "id": 15857,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [],
                "id": 15817,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 15816,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3686,
                  "src": "5881:12:78"
                },
                "nodeType": "ModifierInvocation",
                "src": "5881:14:78"
              },
              {
                "arguments": [
                  {
                    "id": 15819,
                    "name": "_timerAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15814,
                    "src": "5905:13:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 15820,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 15818,
                  "name": "Testable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4418,
                  "src": "5896:8:78"
                },
                "nodeType": "ModifierInvocation",
                "src": "5896:23:78"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15815,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15808,
                  "mutability": "mutable",
                  "name": "_collateralAddress",
                  "nameLocation": "5759:18:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 15857,
                  "src": "5751:26:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15807,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5751:7:78",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15810,
                  "mutability": "mutable",
                  "name": "_finderAddress",
                  "nameLocation": "5795:14:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 15857,
                  "src": "5787:22:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15809,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5787:7:78",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15812,
                  "mutability": "mutable",
                  "name": "_priceIdentifier",
                  "nameLocation": "5827:16:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 15857,
                  "src": "5819:24:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 15811,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5819:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15814,
                  "mutability": "mutable",
                  "name": "_timerAddress",
                  "nameLocation": "5861:13:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 15857,
                  "src": "5853:21:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15813,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5853:7:78",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5741:139:78"
            },
            "returnParameters": {
              "id": 15821,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5920:0:78"
            },
            "scope": 16298,
            "src": "5730:570:78",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15926,
              "nodeType": "Block",
              "src": "6690:764:78",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 15868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 15866,
                          "name": "collateralAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15860,
                          "src": "6708:16:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 15867,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6727:1:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6708:20:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420636f6c6c61746572616c20616d6f756e74",
                        "id": 15869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6730:27:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_813bd37c1cdbc0f93d273be4b907a22c7018037169a95f3ac08b89650b63a56e",
                          "typeString": "literal_string \"Invalid collateral amount\""
                        },
                        "value": "Invalid collateral amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_813bd37c1cdbc0f93d273be4b907a22c7018037169a95f3ac08b89650b63a56e",
                          "typeString": "literal_string \"Invalid collateral amount\""
                        }
                      ],
                      "id": 15865,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6700:7:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6700:58:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15871,
                  "nodeType": "ExpressionStatement",
                  "src": "6700:58:78"
                },
                {
                  "assignments": [
                    15874
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15874,
                      "mutability": "mutable",
                      "name": "depositBoxData",
                      "nameLocation": "6801:14:78",
                      "nodeType": "VariableDeclaration",
                      "scope": 15926,
                      "src": "6768:47:78",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                        "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData"
                      },
                      "typeName": {
                        "id": 15873,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 15872,
                          "name": "OptimisticDepositBoxData",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 15740,
                          "src": "6768:24:78"
                        },
                        "referencedDeclaration": 15740,
                        "src": "6768:24:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                          "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 15879,
                  "initialValue": {
                    "baseExpression": {
                      "id": 15875,
                      "name": "depositBoxes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15745,
                      "src": "6818:12:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_OptimisticDepositBoxData_$15740_storage_$",
                        "typeString": "mapping(address => struct OptimisticDepositBox.OptimisticDepositBoxData storage ref)"
                      }
                    },
                    "id": 15878,
                    "indexExpression": {
                      "expression": {
                        "id": 15876,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "6831:3:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 15877,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "6831:10:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6818:24:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage",
                      "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6768:74:78"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 15883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 15880,
                        "name": "depositBoxData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15874,
                        "src": "6856:14:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                          "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData storage pointer"
                        }
                      },
                      "id": 15881,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "collateral",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15739,
                      "src": "6856:25:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 15882,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6885:1:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6856:30:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15890,
                  "nodeType": "IfStatement",
                  "src": "6852:101:78",
                  "trueBody": {
                    "id": 15889,
                    "nodeType": "Block",
                    "src": "6888:65:78",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 15885,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "6931:3:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 15886,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6931:10:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 15884,
                            "name": "NewOptimisticDepositBox",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15759,
                            "src": "6907:23:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 15887,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6907:35:78",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 15888,
                        "nodeType": "EmitStatement",
                        "src": "6902:40:78"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 15899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 15891,
                        "name": "depositBoxData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15874,
                        "src": "7062:14:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                          "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData storage pointer"
                        }
                      },
                      "id": 15893,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "collateral",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15739,
                      "src": "7062:25:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 15897,
                          "name": "collateralAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15860,
                          "src": "7120:16:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 15894,
                            "name": "depositBoxData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15874,
                            "src": "7090:14:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                              "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData storage pointer"
                            }
                          },
                          "id": 15895,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "collateral",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15739,
                          "src": "7090:25:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 15896,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43897,
                        "src": "7090:29:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 15898,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7090:47:78",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7062:75:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 15900,
                  "nodeType": "ExpressionStatement",
                  "src": "7062:75:78"
                },
                {
                  "expression": {
                    "id": 15906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 15901,
                      "name": "totalOptimisticDepositBoxCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15755,
                      "src": "7147:35:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 15904,
                          "name": "collateralAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15860,
                          "src": "7225:16:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 15902,
                          "name": "totalOptimisticDepositBoxCollateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15755,
                          "src": "7185:35:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 15903,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43897,
                        "src": "7185:39:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 15905,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7185:57:78",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7147:95:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 15907,
                  "nodeType": "ExpressionStatement",
                  "src": "7147:95:78"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 15909,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "7266:3:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 15910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7266:10:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 15911,
                        "name": "collateralAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15860,
                        "src": "7278:16:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 15908,
                      "name": "Deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15769,
                      "src": "7258:7:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 15912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7258:37:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15913,
                  "nodeType": "EmitStatement",
                  "src": "7253:42:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 15917,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "7403:3:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 15918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7403:10:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 15921,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "7423:4:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticDepositBox_$16298",
                              "typeString": "contract OptimisticDepositBox"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OptimisticDepositBox_$16298",
                              "typeString": "contract OptimisticDepositBox"
                            }
                          ],
                          "id": 15920,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7415:7:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 15919,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7415:7:78",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 15922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7415:13:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 15923,
                        "name": "collateralAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15860,
                        "src": "7430:16:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 15914,
                        "name": "collateralCurrency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15753,
                        "src": "7367:18:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$41847",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 15916,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42249,
                      "src": "7367:35:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$41847_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$41847_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 15924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7367:80:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15925,
                  "nodeType": "ExpressionStatement",
                  "src": "7367:80:78"
                }
              ]
            },
            "documentation": {
              "id": 15858,
              "nodeType": "StructuredDocumentation",
              "src": "6306:314:78",
              "text": " @notice Transfers `collateralAmount` of `collateralCurrency` into caller's deposit box.\n @dev This contract must be approved to spend at least `collateralAmount` of `collateralCurrency`.\n @param collateralAmount total amount of collateral tokens to be sent to the sponsor's position."
            },
            "functionSelector": "b6b55f25",
            "id": 15927,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 15863,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 15862,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3686,
                  "src": "6675:12:78"
                },
                "nodeType": "ModifierInvocation",
                "src": "6675:14:78"
              }
            ],
            "name": "deposit",
            "nameLocation": "6634:7:78",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15861,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15860,
                  "mutability": "mutable",
                  "name": "collateralAmount",
                  "nameLocation": "6650:16:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 15927,
                  "src": "6642:24:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15859,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6642:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6641:26:78"
            },
            "returnParameters": {
              "id": 15864,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6690:0:78"
            },
            "scope": 16298,
            "src": "6625:829:78",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15980,
              "nodeType": "Block",
              "src": "8163:621:78",
              "statements": [
                {
                  "assignments": [
                    15941
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15941,
                      "mutability": "mutable",
                      "name": "depositBoxData",
                      "nameLocation": "8206:14:78",
                      "nodeType": "VariableDeclaration",
                      "scope": 15980,
                      "src": "8173:47:78",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                        "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData"
                      },
                      "typeName": {
                        "id": 15940,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 15939,
                          "name": "OptimisticDepositBoxData",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 15740,
                          "src": "8173:24:78"
                        },
                        "referencedDeclaration": 15740,
                        "src": "8173:24:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                          "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 15946,
                  "initialValue": {
                    "baseExpression": {
                      "id": 15942,
                      "name": "depositBoxes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15745,
                      "src": "8223:12:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_OptimisticDepositBoxData_$15740_storage_$",
                        "typeString": "mapping(address => struct OptimisticDepositBox.OptimisticDepositBoxData storage ref)"
                      }
                    },
                    "id": 15945,
                    "indexExpression": {
                      "expression": {
                        "id": 15943,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "8236:3:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 15944,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "8236:10:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8223:24:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage",
                      "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8173:74:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 15950,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 15948,
                          "name": "denominatedCollateralAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15930,
                          "src": "8265:27:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 15949,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8295:1:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8265:31:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420636f6c6c61746572616c20616d6f756e74",
                        "id": 15951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8298:27:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_813bd37c1cdbc0f93d273be4b907a22c7018037169a95f3ac08b89650b63a56e",
                          "typeString": "literal_string \"Invalid collateral amount\""
                        },
                        "value": "Invalid collateral amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_813bd37c1cdbc0f93d273be4b907a22c7018037169a95f3ac08b89650b63a56e",
                          "typeString": "literal_string \"Invalid collateral amount\""
                        }
                      ],
                      "id": 15947,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8257:7:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8257:69:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15953,
                  "nodeType": "ExpressionStatement",
                  "src": "8257:69:78"
                },
                {
                  "expression": {
                    "id": 15958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 15954,
                        "name": "depositBoxData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15941,
                        "src": "8387:14:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                          "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData storage pointer"
                        }
                      },
                      "id": 15956,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "withdrawalRequestAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15735,
                      "src": "8387:38:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 15957,
                      "name": "denominatedCollateralAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15930,
                      "src": "8428:27:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8387:68:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 15959,
                  "nodeType": "ExpressionStatement",
                  "src": "8387:68:78"
                },
                {
                  "expression": {
                    "id": 15965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 15960,
                        "name": "depositBoxData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15941,
                        "src": "8465:14:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                          "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData storage pointer"
                        }
                      },
                      "id": 15962,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "withdrawalRequestTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15737,
                      "src": "8465:41:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 15963,
                        "name": "getCurrentTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4417,
                        "src": "8509:14:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 15964,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8509:16:78",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8465:60:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 15966,
                  "nodeType": "ExpressionStatement",
                  "src": "8465:60:78"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 15968,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "8559:3:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 15969,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8559:10:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 15970,
                        "name": "denominatedCollateralAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15930,
                        "src": "8571:27:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 15971,
                          "name": "depositBoxData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15941,
                          "src": "8600:14:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                            "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData storage pointer"
                          }
                        },
                        "id": 15972,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "withdrawalRequestTimestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15737,
                        "src": "8600:41:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 15967,
                      "name": "RequestWithdrawal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15777,
                      "src": "8541:17:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 15973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8541:101:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15974,
                  "nodeType": "EmitStatement",
                  "src": "8536:106:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 15976,
                          "name": "depositBoxData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15941,
                          "src": "8735:14:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                            "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData storage pointer"
                          }
                        },
                        "id": 15977,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "withdrawalRequestTimestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15737,
                        "src": "8735:41:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 15975,
                      "name": "_requestOraclePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16166,
                      "src": "8715:19:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 15978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8715:62:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15979,
                  "nodeType": "ExpressionStatement",
                  "src": "8715:62:78"
                }
              ]
            },
            "documentation": {
              "id": 15928,
              "nodeType": "StructuredDocumentation",
              "src": "7460:552:78",
              "text": " @notice Starts a withdrawal request that allows the sponsor to withdraw `denominatedCollateralAmount`\n from their position denominated in the quote asset of the price identifier, following a Optimistic\n Oracle price resolution.\n @dev The request will be pending for the duration of the liveness period and can be cancelled at any\n time. Only one withdrawal request can exist for the user.\n @param denominatedCollateralAmount the quote-asset denominated amount of collateral requested to\n withdraw."
            },
            "functionSelector": "9ee679e8",
            "id": 15981,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 15933,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "8124:3:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 15934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "8124:10:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 15935,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 15932,
                  "name": "noPendingWithdrawal",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 15805,
                  "src": "8104:19:78"
                },
                "nodeType": "ModifierInvocation",
                "src": "8104:31:78"
              },
              {
                "arguments": [],
                "id": 15937,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 15936,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3686,
                  "src": "8144:12:78"
                },
                "nodeType": "ModifierInvocation",
                "src": "8144:14:78"
              }
            ],
            "name": "requestWithdrawal",
            "nameLocation": "8026:17:78",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15931,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15930,
                  "mutability": "mutable",
                  "name": "denominatedCollateralAmount",
                  "nameLocation": "8052:27:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 15981,
                  "src": "8044:35:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15929,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8044:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8043:37:78"
            },
            "returnParameters": {
              "id": 15938,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8163:0:78"
            },
            "scope": 16298,
            "src": "8017:767:78",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 16089,
              "nodeType": "Block",
              "src": "9307:2189:78",
              "statements": [
                {
                  "assignments": [
                    15991
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15991,
                      "mutability": "mutable",
                      "name": "depositBoxData",
                      "nameLocation": "9350:14:78",
                      "nodeType": "VariableDeclaration",
                      "scope": 16089,
                      "src": "9317:47:78",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                        "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData"
                      },
                      "typeName": {
                        "id": 15990,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 15989,
                          "name": "OptimisticDepositBoxData",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 15740,
                          "src": "9317:24:78"
                        },
                        "referencedDeclaration": 15740,
                        "src": "9317:24:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                          "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 15996,
                  "initialValue": {
                    "baseExpression": {
                      "id": 15992,
                      "name": "depositBoxes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15745,
                      "src": "9367:12:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_OptimisticDepositBoxData_$15740_storage_$",
                        "typeString": "mapping(address => struct OptimisticDepositBox.OptimisticDepositBoxData storage ref)"
                      }
                    },
                    "id": 15995,
                    "indexExpression": {
                      "expression": {
                        "id": 15993,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "9380:3:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 15994,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "9380:10:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9367:24:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage",
                      "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9317:74:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 16007,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 16001,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 15998,
                              "name": "depositBoxData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15991,
                              "src": "9422:14:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                                "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData storage pointer"
                              }
                            },
                            "id": 15999,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "withdrawalRequestTimestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15737,
                            "src": "9422:41:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 16000,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9467:1:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "9422:46:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 16006,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 16002,
                              "name": "depositBoxData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15991,
                              "src": "9488:14:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                                "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData storage pointer"
                              }
                            },
                            "id": 16003,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "withdrawalRequestTimestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15737,
                            "src": "9488:41:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 16004,
                              "name": "getCurrentTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4417,
                              "src": "9533:14:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 16005,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9533:16:78",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9488:61:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "9422:127:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c69642077697468647261772072657175657374",
                        "id": 16008,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9563:26:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_94963bd7c26cec51ca5a6225f5d2d7df6dcde2009a60ca92019ec17e8ee6ff0d",
                          "typeString": "literal_string \"Invalid withdraw request\""
                        },
                        "value": "Invalid withdraw request"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_94963bd7c26cec51ca5a6225f5d2d7df6dcde2009a60ca92019ec17e8ee6ff0d",
                          "typeString": "literal_string \"Invalid withdraw request\""
                        }
                      ],
                      "id": 15997,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9401:7:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 16009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9401:198:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16010,
                  "nodeType": "ExpressionStatement",
                  "src": "9401:198:78"
                },
                {
                  "assignments": [
                    16012
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 16012,
                      "mutability": "mutable",
                      "name": "exchangeRate",
                      "nameLocation": "9784:12:78",
                      "nodeType": "VariableDeclaration",
                      "scope": 16089,
                      "src": "9776:20:78",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 16011,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9776:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 16017,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 16014,
                          "name": "depositBoxData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15991,
                          "src": "9815:14:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                            "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData storage pointer"
                          }
                        },
                        "id": 16015,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "withdrawalRequestTimestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15737,
                        "src": "9815:41:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 16013,
                      "name": "_getOraclePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16297,
                      "src": "9799:15:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 16016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9799:58:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9776:81:78"
                },
                {
                  "assignments": [
                    16019
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 16019,
                      "mutability": "mutable",
                      "name": "denominatedAmountToWithdraw",
                      "nameLocation": "10206:27:78",
                      "nodeType": "VariableDeclaration",
                      "scope": 16089,
                      "src": "10198:35:78",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 16018,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10198:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 16032,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 16028,
                              "name": "exchangeRate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16012,
                              "src": "10332:12:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 16026,
                              "name": "FixedPoint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3659,
                              "src": "10312:10:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_FixedPoint_$3659_$",
                                "typeString": "type(library FixedPoint)"
                              }
                            },
                            "id": 16027,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Unsigned",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2045,
                            "src": "10312:19:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Unsigned_$2045_storage_ptr_$",
                              "typeString": "type(struct FixedPoint.Unsigned storage pointer)"
                            }
                          },
                          "id": 16029,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10312:33:78",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Unsigned_$2045_memory_ptr",
                            "typeString": "struct FixedPoint.Unsigned memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Unsigned_$2045_memory_ptr",
                            "typeString": "struct FixedPoint.Unsigned memory"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 16022,
                                "name": "depositBoxData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15991,
                                "src": "10268:14:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                                  "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData storage pointer"
                                }
                              },
                              "id": 16023,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "withdrawalRequestAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 15735,
                              "src": "10268:38:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 16020,
                              "name": "FixedPoint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3659,
                              "src": "10248:10:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_FixedPoint_$3659_$",
                                "typeString": "type(library FixedPoint)"
                              }
                            },
                            "id": 16021,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Unsigned",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2045,
                            "src": "10248:19:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Unsigned_$2045_storage_ptr_$",
                              "typeString": "type(struct FixedPoint.Unsigned storage pointer)"
                            }
                          },
                          "id": 16024,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10248:59:78",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Unsigned_$2045_memory_ptr",
                            "typeString": "struct FixedPoint.Unsigned memory"
                          }
                        },
                        "id": 16025,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2635,
                        "src": "10248:63:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_struct$_Unsigned_$2045_memory_ptr_$_t_struct$_Unsigned_$2045_memory_ptr_$returns$_t_struct$_Unsigned_$2045_memory_ptr_$bound_to$_t_struct$_Unsigned_$2045_memory_ptr_$",
                          "typeString": "function (struct FixedPoint.Unsigned memory,struct FixedPoint.Unsigned memory) pure returns (struct FixedPoint.Unsigned memory)"
                        }
                      },
                      "id": 16030,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10248:98:78",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Unsigned_$2045_memory_ptr",
                        "typeString": "struct FixedPoint.Unsigned memory"
                      }
                    },
                    "id": 16031,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "rawValue",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 2044,
                    "src": "10248:107:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10198:157:78"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 16036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 16033,
                      "name": "denominatedAmountToWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16019,
                      "src": "10469:27:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "expression": {
                        "id": 16034,
                        "name": "depositBoxData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15991,
                        "src": "10500:14:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                          "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData storage pointer"
                        }
                      },
                      "id": 16035,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "collateral",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15739,
                      "src": "10500:25:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10469:56:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 16048,
                  "nodeType": "IfStatement",
                  "src": "10465:198:78",
                  "trueBody": {
                    "id": 16047,
                    "nodeType": "Block",
                    "src": "10527:136:78",
                    "statements": [
                      {
                        "expression": {
                          "id": 16040,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 16037,
                            "name": "denominatedAmountToWithdraw",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16019,
                            "src": "10541:27:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 16038,
                              "name": "depositBoxData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15991,
                              "src": "10571:14:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                                "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData storage pointer"
                              }
                            },
                            "id": 16039,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "collateral",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15739,
                            "src": "10571:25:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10541:55:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 16041,
                        "nodeType": "ExpressionStatement",
                        "src": "10541:55:78"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 16043,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "10641:3:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 16044,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "10641:10:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 16042,
                            "name": "EndedOptimisticDepositBox",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15763,
                            "src": "10615:25:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 16045,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10615:37:78",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 16046,
                        "nodeType": "EmitStatement",
                        "src": "10610:42:78"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 16057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 16049,
                        "name": "depositBoxData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15991,
                        "src": "10751:14:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                          "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData storage pointer"
                        }
                      },
                      "id": 16051,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "collateral",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15739,
                      "src": "10751:25:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 16055,
                          "name": "denominatedAmountToWithdraw",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16019,
                          "src": "10809:27:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 16052,
                            "name": "depositBoxData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15991,
                            "src": "10779:14:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                              "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData storage pointer"
                            }
                          },
                          "id": 16053,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "collateral",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15739,
                          "src": "10779:25:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 16054,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43912,
                        "src": "10779:29:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 16056,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10779:58:78",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10751:86:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 16058,
                  "nodeType": "ExpressionStatement",
                  "src": "10751:86:78"
                },
                {
                  "expression": {
                    "id": 16064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 16059,
                      "name": "totalOptimisticDepositBoxCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15755,
                      "src": "10847:35:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 16062,
                          "name": "denominatedAmountToWithdraw",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16019,
                          "src": "10925:27:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 16060,
                          "name": "totalOptimisticDepositBoxCollateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15755,
                          "src": "10885:35:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 16061,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43912,
                        "src": "10885:39:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 16063,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10885:68:78",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10847:106:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 16065,
                  "nodeType": "ExpressionStatement",
                  "src": "10847:106:78"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 16067,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "11008:3:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 16068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "11008:10:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16069,
                        "name": "denominatedAmountToWithdraw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16019,
                        "src": "11032:27:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 16070,
                        "name": "exchangeRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16012,
                        "src": "11073:12:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 16071,
                          "name": "depositBoxData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15991,
                          "src": "11099:14:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                            "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData storage pointer"
                          }
                        },
                        "id": 16072,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "withdrawalRequestTimestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15737,
                        "src": "11099:41:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 16066,
                      "name": "RequestWithdrawalExecuted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15787,
                      "src": "10969:25:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256,uint256)"
                      }
                    },
                    "id": 16073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10969:181:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16074,
                  "nodeType": "EmitStatement",
                  "src": "10964:186:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 16076,
                        "name": "depositBoxData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15991,
                        "src": "11267:14:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                          "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                          "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData storage pointer"
                        }
                      ],
                      "id": 16075,
                      "name": "_resetWithdrawalRequest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16185,
                      "src": "11243:23:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_OptimisticDepositBoxData_$15740_storage_ptr_$returns$__$",
                        "typeString": "function (struct OptimisticDepositBox.OptimisticDepositBoxData storage pointer)"
                      }
                    },
                    "id": 16077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11243:39:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16078,
                  "nodeType": "ExpressionStatement",
                  "src": "11243:39:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 16082,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "11405:3:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 16083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "11405:10:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16084,
                        "name": "denominatedAmountToWithdraw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16019,
                        "src": "11417:27:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 16079,
                        "name": "collateralCurrency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15753,
                        "src": "11373:18:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$41847",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 16081,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42223,
                      "src": "11373:31:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$41847_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$41847_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 16085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11373:72:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16086,
                  "nodeType": "ExpressionStatement",
                  "src": "11373:72:78"
                },
                {
                  "expression": {
                    "id": 16087,
                    "name": "denominatedAmountToWithdraw",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 16019,
                    "src": "11462:27:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 15988,
                  "id": 16088,
                  "nodeType": "Return",
                  "src": "11455:34:78"
                }
              ]
            },
            "documentation": {
              "id": 15982,
              "nodeType": "StructuredDocumentation",
              "src": "8790:425:78",
              "text": " @notice After a withdrawal request (i.e., by a call to `requestWithdrawal`) and optimistic oracle\n price resolution, withdraws `depositBoxData.withdrawalRequestAmount` of collateral currency\n denominated in the quote asset.\n @dev Might not withdraw the full requested amount in order to account for precision loss.\n @return amountWithdrawn The actual amount of collateral withdrawn."
            },
            "functionSelector": "fa45aa00",
            "id": 16090,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 15985,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 15984,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3686,
                  "src": "9258:12:78"
                },
                "nodeType": "ModifierInvocation",
                "src": "9258:14:78"
              }
            ],
            "name": "executeWithdrawal",
            "nameLocation": "9229:17:78",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15983,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9246:2:78"
            },
            "returnParameters": {
              "id": 15988,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15987,
                  "mutability": "mutable",
                  "name": "amountWithdrawn",
                  "nameLocation": "9290:15:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 16090,
                  "src": "9282:23:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15986,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9282:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9281:25:78"
            },
            "scope": 16298,
            "src": "9220:2276:78",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 16125,
              "nodeType": "Block",
              "src": "11623:517:78",
              "statements": [
                {
                  "assignments": [
                    16098
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 16098,
                      "mutability": "mutable",
                      "name": "depositBoxData",
                      "nameLocation": "11666:14:78",
                      "nodeType": "VariableDeclaration",
                      "scope": 16125,
                      "src": "11633:47:78",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                        "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData"
                      },
                      "typeName": {
                        "id": 16097,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 16096,
                          "name": "OptimisticDepositBoxData",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 15740,
                          "src": "11633:24:78"
                        },
                        "referencedDeclaration": 15740,
                        "src": "11633:24:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                          "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 16103,
                  "initialValue": {
                    "baseExpression": {
                      "id": 16099,
                      "name": "depositBoxes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15745,
                      "src": "11683:12:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_OptimisticDepositBoxData_$15740_storage_$",
                        "typeString": "mapping(address => struct OptimisticDepositBox.OptimisticDepositBoxData storage ref)"
                      }
                    },
                    "id": 16102,
                    "indexExpression": {
                      "expression": {
                        "id": 16100,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "11696:3:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 16101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "11696:10:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11683:24:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage",
                      "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11633:74:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 16108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 16105,
                            "name": "depositBoxData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16098,
                            "src": "11725:14:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                              "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData storage pointer"
                            }
                          },
                          "id": 16106,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "withdrawalRequestTimestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15737,
                          "src": "11725:41:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 16107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11770:1:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "11725:46:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f2070656e64696e67207769746864726177616c",
                        "id": 16109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11773:23:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f80b6185a55e7705eade18fc94576fb0c28cf32c1b453f215155b7bf28ad0f40",
                          "typeString": "literal_string \"No pending withdrawal\""
                        },
                        "value": "No pending withdrawal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f80b6185a55e7705eade18fc94576fb0c28cf32c1b453f215155b7bf28ad0f40",
                          "typeString": "literal_string \"No pending withdrawal\""
                        }
                      ],
                      "id": 16104,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11717:7:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 16110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11717:80:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16111,
                  "nodeType": "ExpressionStatement",
                  "src": "11717:80:78"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 16113,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "11852:3:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 16114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "11852:10:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 16115,
                          "name": "depositBoxData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16098,
                          "src": "11876:14:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                            "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData storage pointer"
                          }
                        },
                        "id": 16116,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "withdrawalRequestAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15735,
                        "src": "11876:38:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 16117,
                          "name": "depositBoxData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16098,
                          "src": "11928:14:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                            "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData storage pointer"
                          }
                        },
                        "id": 16118,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "withdrawalRequestTimestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15737,
                        "src": "11928:41:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 16112,
                      "name": "RequestWithdrawalCanceled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15795,
                      "src": "11813:25:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 16119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11813:166:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16120,
                  "nodeType": "EmitStatement",
                  "src": "11808:171:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 16122,
                        "name": "depositBoxData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16098,
                        "src": "12118:14:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                          "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                          "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData storage pointer"
                        }
                      ],
                      "id": 16121,
                      "name": "_resetWithdrawalRequest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16185,
                      "src": "12094:23:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_OptimisticDepositBoxData_$15740_storage_ptr_$returns$__$",
                        "typeString": "function (struct OptimisticDepositBox.OptimisticDepositBoxData storage pointer)"
                      }
                    },
                    "id": 16123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12094:39:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16124,
                  "nodeType": "ExpressionStatement",
                  "src": "12094:39:78"
                }
              ]
            },
            "documentation": {
              "id": 16091,
              "nodeType": "StructuredDocumentation",
              "src": "11502:64:78",
              "text": " @notice Cancels a pending withdrawal request."
            },
            "functionSelector": "22611280",
            "id": 16126,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 16094,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 16093,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3686,
                  "src": "11608:12:78"
                },
                "nodeType": "ModifierInvocation",
                "src": "11608:14:78"
              }
            ],
            "name": "cancelWithdrawal",
            "nameLocation": "11580:16:78",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16092,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11596:2:78"
            },
            "returnParameters": {
              "id": 16095,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11623:0:78"
            },
            "scope": 16298,
            "src": "11571:569:78",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 16141,
              "nodeType": "Block",
              "src": "12460:53:78",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 16136,
                        "name": "depositBoxes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15745,
                        "src": "12477:12:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_OptimisticDepositBoxData_$15740_storage_$",
                          "typeString": "mapping(address => struct OptimisticDepositBox.OptimisticDepositBoxData storage ref)"
                        }
                      },
                      "id": 16138,
                      "indexExpression": {
                        "id": 16137,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16129,
                        "src": "12490:4:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "12477:18:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage",
                        "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData storage ref"
                      }
                    },
                    "id": 16139,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "collateral",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 15739,
                    "src": "12477:29:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 16135,
                  "id": 16140,
                  "nodeType": "Return",
                  "src": "12470:36:78"
                }
              ]
            },
            "documentation": {
              "id": 16127,
              "nodeType": "StructuredDocumentation",
              "src": "12146:221:78",
              "text": " @notice Accessor method for a user's collateral.\n @param user address whose collateral amount is retrieved.\n @return the collateral amount in the deposit box (i.e. available for withdrawal)."
            },
            "functionSelector": "9b56d6c9",
            "id": 16142,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 16132,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 16131,
                  "name": "nonReentrantView",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3694,
                  "src": "12423:16:78"
                },
                "nodeType": "ModifierInvocation",
                "src": "12423:18:78"
              }
            ],
            "name": "getCollateral",
            "nameLocation": "12381:13:78",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16129,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "12403:4:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 16142,
                  "src": "12395:12:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16128,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12395:7:78",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12394:14:78"
            },
            "returnParameters": {
              "id": 16135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16134,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 16142,
                  "src": "12451:7:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16133,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12451:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12450:9:78"
            },
            "scope": 16298,
            "src": "12372:141:78",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 16165,
              "nodeType": "Block",
              "src": "12813:269:78",
              "statements": [
                {
                  "assignments": [
                    16149
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 16149,
                      "mutability": "mutable",
                      "name": "oracle",
                      "nameLocation": "12849:6:78",
                      "nodeType": "VariableDeclaration",
                      "scope": 16165,
                      "src": "12823:32:78",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OptimisticOracleInterface_$33871",
                        "typeString": "contract OptimisticOracleInterface"
                      },
                      "typeName": {
                        "id": 16148,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 16147,
                          "name": "OptimisticOracleInterface",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 33871,
                          "src": "12823:25:78"
                        },
                        "referencedDeclaration": 33871,
                        "src": "12823:25:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracleInterface_$33871",
                          "typeString": "contract OptimisticOracleInterface"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 16152,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 16150,
                      "name": "_getOptimisticOracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16216,
                      "src": "12858:20:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_OptimisticOracleInterface_$33871_$",
                        "typeString": "function () view returns (contract OptimisticOracleInterface)"
                      }
                    },
                    "id": 16151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12858:22:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OptimisticOracleInterface_$33871",
                      "typeString": "contract OptimisticOracleInterface"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12823:57:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 16156,
                        "name": "priceIdentifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15747,
                        "src": "13009:15:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 16157,
                        "name": "requestedTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16144,
                        "src": "13026:13:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 16158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13041:2:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "arguments": [
                          {
                            "id": 16160,
                            "name": "collateralCurrency",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15753,
                            "src": "13052:18:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$41847",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$41847",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 16159,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41847,
                          "src": "13045:6:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$41847_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 16161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13045:26:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$41847",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 16162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13073:1:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$41847",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 16153,
                        "name": "oracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16149,
                        "src": "12989:6:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracleInterface_$33871",
                          "typeString": "contract OptimisticOracleInterface"
                        }
                      },
                      "id": 16155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "requestPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33691,
                      "src": "12989:19:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_uint256_$_t_bytes_memory_ptr_$_t_contract$_IERC20_$41847_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (bytes32,uint256,bytes memory,contract IERC20,uint256) external returns (uint256)"
                      }
                    },
                    "id": 16163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12989:86:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 16164,
                  "nodeType": "ExpressionStatement",
                  "src": "12989:86:78"
                }
              ]
            },
            "id": 16166,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_requestOraclePrice",
            "nameLocation": "12761:19:78",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16145,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16144,
                  "mutability": "mutable",
                  "name": "requestedTime",
                  "nameLocation": "12789:13:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 16166,
                  "src": "12781:21:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16143,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12781:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12780:23:78"
            },
            "returnParameters": {
              "id": 16146,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12813:0:78"
            },
            "scope": 16298,
            "src": "12752:330:78",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 16184,
              "nodeType": "Block",
              "src": "13179:114:78",
              "statements": [
                {
                  "expression": {
                    "id": 16176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 16172,
                        "name": "depositBoxData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16169,
                        "src": "13189:14:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                          "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData storage pointer"
                        }
                      },
                      "id": 16174,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "withdrawalRequestAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15735,
                      "src": "13189:38:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 16175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13230:1:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "13189:42:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 16177,
                  "nodeType": "ExpressionStatement",
                  "src": "13189:42:78"
                },
                {
                  "expression": {
                    "id": 16182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 16178,
                        "name": "depositBoxData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16169,
                        "src": "13241:14:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                          "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData storage pointer"
                        }
                      },
                      "id": 16180,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "withdrawalRequestTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15737,
                      "src": "13241:41:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 16181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13285:1:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "13241:45:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 16183,
                  "nodeType": "ExpressionStatement",
                  "src": "13241:45:78"
                }
              ]
            },
            "id": 16185,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_resetWithdrawalRequest",
            "nameLocation": "13097:23:78",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16169,
                  "mutability": "mutable",
                  "name": "depositBoxData",
                  "nameLocation": "13154:14:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 16185,
                  "src": "13121:47:78",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                    "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData"
                  },
                  "typeName": {
                    "id": 16168,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 16167,
                      "name": "OptimisticDepositBoxData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 15740,
                      "src": "13121:24:78"
                    },
                    "referencedDeclaration": 15740,
                    "src": "13121:24:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                      "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13120:49:78"
            },
            "returnParameters": {
              "id": 16171,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13179:0:78"
            },
            "scope": 16298,
            "src": "13088:205:78",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 16200,
              "nodeType": "Block",
              "src": "13370:98:78",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 16196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 16191,
                              "name": "depositBoxes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15745,
                              "src": "13388:12:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_OptimisticDepositBoxData_$15740_storage_$",
                                "typeString": "mapping(address => struct OptimisticDepositBox.OptimisticDepositBoxData storage ref)"
                              }
                            },
                            "id": 16193,
                            "indexExpression": {
                              "id": 16192,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16187,
                              "src": "13401:4:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "13388:18:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage",
                              "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData storage ref"
                            }
                          },
                          "id": 16194,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "withdrawalRequestTimestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15737,
                          "src": "13388:45:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 16195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13437:1:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "13388:50:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50656e64696e67207769746864726177616c",
                        "id": 16197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13440:20:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_92438d03843dc5bb19aa28358890a480abc5006c15257e3f08fb9164e4ef921f",
                          "typeString": "literal_string \"Pending withdrawal\""
                        },
                        "value": "Pending withdrawal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_92438d03843dc5bb19aa28358890a480abc5006c15257e3f08fb9164e4ef921f",
                          "typeString": "literal_string \"Pending withdrawal\""
                        }
                      ],
                      "id": 16190,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "13380:7:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 16198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13380:81:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16199,
                  "nodeType": "ExpressionStatement",
                  "src": "13380:81:78"
                }
              ]
            },
            "id": 16201,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_depositBoxHasNoPendingWithdrawal",
            "nameLocation": "13308:33:78",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16188,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16187,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "13350:4:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 16201,
                  "src": "13342:12:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16186,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13342:7:78",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13341:14:78"
            },
            "returnParameters": {
              "id": 16189,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13370:0:78"
            },
            "scope": 16298,
            "src": "13299:169:78",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 16215,
              "nodeType": "Block",
              "src": "13556:117:78",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 16210,
                              "name": "OracleInterfaces",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26458,
                              "src": "13631:16:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_OracleInterfaces_$26458_$",
                                "typeString": "type(library OracleInterfaces)"
                              }
                            },
                            "id": 16211,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "OptimisticOracle",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 26451,
                            "src": "13631:33:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 16208,
                            "name": "finder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15750,
                            "src": "13599:6:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FinderInterface_$33609",
                              "typeString": "contract FinderInterface"
                            }
                          },
                          "id": 16209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getImplementationAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 33608,
                          "src": "13599:31:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 16212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13599:66:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 16207,
                      "name": "OptimisticOracleInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33871,
                      "src": "13573:25:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_OptimisticOracleInterface_$33871_$",
                        "typeString": "type(contract OptimisticOracleInterface)"
                      }
                    },
                    "id": 16213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13573:93:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OptimisticOracleInterface_$33871",
                      "typeString": "contract OptimisticOracleInterface"
                    }
                  },
                  "functionReturnParameters": 16206,
                  "id": 16214,
                  "nodeType": "Return",
                  "src": "13566:100:78"
                }
              ]
            },
            "id": 16216,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getOptimisticOracle",
            "nameLocation": "13483:20:78",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16202,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13503:2:78"
            },
            "returnParameters": {
              "id": 16206,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16205,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 16216,
                  "src": "13529:25:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_OptimisticOracleInterface_$33871",
                    "typeString": "contract OptimisticOracleInterface"
                  },
                  "typeName": {
                    "id": 16204,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 16203,
                      "name": "OptimisticOracleInterface",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 33871,
                      "src": "13529:25:78"
                    },
                    "referencedDeclaration": 33871,
                    "src": "13529:25:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OptimisticOracleInterface_$33871",
                      "typeString": "contract OptimisticOracleInterface"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13528:27:78"
            },
            "scope": 16298,
            "src": "13474:199:78",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 16230,
              "nodeType": "Block",
              "src": "13767:123:78",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 16225,
                              "name": "OracleInterfaces",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26458,
                              "src": "13845:16:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_OracleInterfaces_$26458_$",
                                "typeString": "type(library OracleInterfaces)"
                              }
                            },
                            "id": 16226,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "IdentifierWhitelist",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 26436,
                            "src": "13845:36:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 16223,
                            "name": "finder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15750,
                            "src": "13813:6:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FinderInterface_$33609",
                              "typeString": "contract FinderInterface"
                            }
                          },
                          "id": 16224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getImplementationAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 33608,
                          "src": "13813:31:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 16227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13813:69:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 16222,
                      "name": "IdentifierWhitelistInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33633,
                      "src": "13784:28:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IdentifierWhitelistInterface_$33633_$",
                        "typeString": "type(contract IdentifierWhitelistInterface)"
                      }
                    },
                    "id": 16228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13784:99:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IdentifierWhitelistInterface_$33633",
                      "typeString": "contract IdentifierWhitelistInterface"
                    }
                  },
                  "functionReturnParameters": 16221,
                  "id": 16229,
                  "nodeType": "Return",
                  "src": "13777:106:78"
                }
              ]
            },
            "id": 16231,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getIdentifierWhitelist",
            "nameLocation": "13688:23:78",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16217,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13711:2:78"
            },
            "returnParameters": {
              "id": 16221,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16220,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 16231,
                  "src": "13737:28:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IdentifierWhitelistInterface_$33633",
                    "typeString": "contract IdentifierWhitelistInterface"
                  },
                  "typeName": {
                    "id": 16219,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 16218,
                      "name": "IdentifierWhitelistInterface",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 33633,
                      "src": "13737:28:78"
                    },
                    "referencedDeclaration": 33633,
                    "src": "13737:28:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IdentifierWhitelistInterface_$33633",
                      "typeString": "contract IdentifierWhitelistInterface"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13736:30:78"
            },
            "scope": 16298,
            "src": "13679:211:78",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 16245,
              "nodeType": "Block",
              "src": "13969:111:78",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 16240,
                              "name": "OracleInterfaces",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26458,
                              "src": "14035:16:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_OracleInterfaces_$26458_$",
                                "typeString": "type(library OracleInterfaces)"
                              }
                            },
                            "id": 16241,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "CollateralWhitelist",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 26448,
                            "src": "14035:36:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 16238,
                            "name": "finder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15750,
                            "src": "14003:6:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FinderInterface_$33609",
                              "typeString": "contract FinderInterface"
                            }
                          },
                          "id": 16239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getImplementationAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 33608,
                          "src": "14003:31:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 16242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14003:69:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 16237,
                      "name": "AddressWhitelist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1474,
                      "src": "13986:16:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_AddressWhitelist_$1474_$",
                        "typeString": "type(contract AddressWhitelist)"
                      }
                    },
                    "id": 16243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13986:87:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AddressWhitelist_$1474",
                      "typeString": "contract AddressWhitelist"
                    }
                  },
                  "functionReturnParameters": 16236,
                  "id": 16244,
                  "nodeType": "Return",
                  "src": "13979:94:78"
                }
              ]
            },
            "id": 16246,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getAddressWhitelist",
            "nameLocation": "13905:20:78",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16232,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13925:2:78"
            },
            "returnParameters": {
              "id": 16236,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16235,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 16246,
                  "src": "13951:16:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_AddressWhitelist_$1474",
                    "typeString": "contract AddressWhitelist"
                  },
                  "typeName": {
                    "id": 16234,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 16233,
                      "name": "AddressWhitelist",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1474,
                      "src": "13951:16:78"
                    },
                    "referencedDeclaration": 1474,
                    "src": "13951:16:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AddressWhitelist_$1474",
                      "typeString": "contract AddressWhitelist"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13950:18:78"
            },
            "scope": 16298,
            "src": "13896:184:78",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 16296,
              "nodeType": "Block",
              "src": "14297:515:78",
              "statements": [
                {
                  "assignments": [
                    16255
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 16255,
                      "mutability": "mutable",
                      "name": "oracle",
                      "nameLocation": "14333:6:78",
                      "nodeType": "VariableDeclaration",
                      "scope": 16296,
                      "src": "14307:32:78",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OptimisticOracleInterface_$33871",
                        "typeString": "contract OptimisticOracleInterface"
                      },
                      "typeName": {
                        "id": 16254,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 16253,
                          "name": "OptimisticOracleInterface",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 33871,
                          "src": "14307:25:78"
                        },
                        "referencedDeclaration": 33871,
                        "src": "14307:25:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracleInterface_$33871",
                          "typeString": "contract OptimisticOracleInterface"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 16258,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 16256,
                      "name": "_getOptimisticOracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16216,
                      "src": "14342:20:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_OptimisticOracleInterface_$33871_$",
                        "typeString": "function () view returns (contract OptimisticOracleInterface)"
                      }
                    },
                    "id": 16257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14342:22:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OptimisticOracleInterface_$33871",
                      "typeString": "contract OptimisticOracleInterface"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14307:57:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 16264,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "14419:4:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_OptimisticDepositBox_$16298",
                                  "typeString": "contract OptimisticDepositBox"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_OptimisticDepositBox_$16298",
                                  "typeString": "contract OptimisticDepositBox"
                                }
                              ],
                              "id": 16263,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "14411:7:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 16262,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "14411:7:78",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 16265,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14411:13:78",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 16266,
                            "name": "priceIdentifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15747,
                            "src": "14426:15:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 16267,
                            "name": "withdrawalRequestTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16248,
                            "src": "14443:26:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "",
                            "id": 16268,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14471:2:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "expression": {
                            "id": 16260,
                            "name": "oracle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16255,
                            "src": "14395:6:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticOracleInterface_$33871",
                              "typeString": "contract OptimisticOracleInterface"
                            }
                          },
                          "id": 16261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "hasPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 33861,
                          "src": "14395:15:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_bytes32_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,bytes32,uint256,bytes memory) view external returns (bool)"
                          }
                        },
                        "id": 16269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14395:79:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e7265736f6c766564206f7261636c65207072696365",
                        "id": 16270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14488:25:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d516ec8b6cede68cb5e8843a34f17ee999ccc46827444240c966860cdd26995",
                          "typeString": "literal_string \"Unresolved oracle price\""
                        },
                        "value": "Unresolved oracle price"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d516ec8b6cede68cb5e8843a34f17ee999ccc46827444240c966860cdd26995",
                          "typeString": "literal_string \"Unresolved oracle price\""
                        }
                      ],
                      "id": 16259,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "14374:7:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 16271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14374:149:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16272,
                  "nodeType": "ExpressionStatement",
                  "src": "14374:149:78"
                },
                {
                  "assignments": [
                    16274
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 16274,
                      "mutability": "mutable",
                      "name": "oraclePrice",
                      "nameLocation": "14540:11:78",
                      "nodeType": "VariableDeclaration",
                      "scope": 16296,
                      "src": "14533:18:78",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 16273,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14533:6:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 16281,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 16277,
                        "name": "priceIdentifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15747,
                        "src": "14579:15:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 16278,
                        "name": "withdrawalRequestTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16248,
                        "src": "14596:26:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 16279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14624:2:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "id": 16275,
                        "name": "oracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16255,
                        "src": "14554:6:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracleInterface_$33871",
                          "typeString": "contract OptimisticOracleInterface"
                        }
                      },
                      "id": 16276,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "settleAndGetPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33803,
                      "src": "14554:24:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_int256_$",
                        "typeString": "function (bytes32,uint256,bytes memory) external returns (int256)"
                      }
                    },
                    "id": 16280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14554:73:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14533:94:78"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 16284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 16282,
                      "name": "oraclePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16274,
                      "src": "14712:11:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 16283,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14726:1:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "14712:15:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 16290,
                  "nodeType": "IfStatement",
                  "src": "14708:61:78",
                  "trueBody": {
                    "id": 16289,
                    "nodeType": "Block",
                    "src": "14729:40:78",
                    "statements": [
                      {
                        "expression": {
                          "id": 16287,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 16285,
                            "name": "oraclePrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16274,
                            "src": "14743:11:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 16286,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14757:1:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "14743:15:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 16288,
                        "nodeType": "ExpressionStatement",
                        "src": "14743:15:78"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 16293,
                        "name": "oraclePrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16274,
                        "src": "14793:11:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 16292,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "14785:7:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 16291,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14785:7:78",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 16294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14785:20:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 16252,
                  "id": 16295,
                  "nodeType": "Return",
                  "src": "14778:27:78"
                }
              ]
            },
            "id": 16297,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getOraclePrice",
            "nameLocation": "14218:15:78",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16249,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16248,
                  "mutability": "mutable",
                  "name": "withdrawalRequestTimestamp",
                  "nameLocation": "14242:26:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 16297,
                  "src": "14234:34:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16247,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14234:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14233:36:78"
            },
            "returnParameters": {
              "id": 16252,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16251,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 16297,
                  "src": "14288:7:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16250,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14288:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14287:9:78"
            },
            "scope": 16298,
            "src": "14209:603:78",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 16299,
        "src": "2340:12474:78",
        "usedErrors": []
      }
    ],
    "src": "42:14773:78"
  },
  "legacyAST": {
    "absolutePath": "/home/circleci/protocol/packages/core/contracts/financial-templates/demo/OptimisticDepositBox.sol",
    "exportedSymbols": {
      "Address": [
        42712
      ],
      "AddressWhitelist": [
        1474
      ],
      "AddressWhitelistInterface": [
        5487
      ],
      "Context": [
        42820
      ],
      "ContractCreator": [
        26544
      ],
      "Exclusive": [
        3793
      ],
      "FinderInterface": [
        33609
      ],
      "FixedPoint": [
        3659
      ],
      "IERC20": [
        41847
      ],
      "IdentifierWhitelistInterface": [
        33633
      ],
      "Lockable": [
        3720
      ],
      "MultiRole": [
        4345
      ],
      "OptimisticDepositBox": [
        16298
      ],
      "OptimisticOracleInterface": [
        33871
      ],
      "OracleInterfaces": [
        26458
      ],
      "Ownable": [
        41170
      ],
      "Registry": [
        29610
      ],
      "RegistryInterface": [
        34000
      ],
      "SafeERC20": [
        42416
      ],
      "SafeMath": [
        44033
      ],
      "Shared": [
        3889
      ],
      "SignedSafeMath": [
        44097
      ],
      "Testable": [
        4418
      ],
      "Timer": [
        4505
      ]
    },
    "id": 16299,
    "license": "AGPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 15706,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:23:78"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 15707,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 16299,
        "sourceUnit": 44034,
        "src": "67:57:78",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 15708,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 16299,
        "sourceUnit": 41848,
        "src": "125:56:78",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 15709,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 16299,
        "sourceUnit": 42417,
        "src": "182:65:78",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/circleci/protocol/packages/core/contracts/common/implementation/FixedPoint.sol",
        "file": "../../common/implementation/FixedPoint.sol",
        "id": 15710,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 16299,
        "sourceUnit": 3660,
        "src": "249:52:78",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/circleci/protocol/packages/core/contracts/common/implementation/AddressWhitelist.sol",
        "file": "../../common/implementation/AddressWhitelist.sol",
        "id": 15711,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 16299,
        "sourceUnit": 1475,
        "src": "302:58:78",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/circleci/protocol/packages/core/contracts/common/implementation/Testable.sol",
        "file": "../../common/implementation/Testable.sol",
        "id": 15712,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 16299,
        "sourceUnit": 4419,
        "src": "361:50:78",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/circleci/protocol/packages/core/contracts/common/implementation/Lockable.sol",
        "file": "../../common/implementation/Lockable.sol",
        "id": 15713,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 16299,
        "sourceUnit": 3721,
        "src": "412:50:78",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/circleci/protocol/packages/core/contracts/oracle/interfaces/FinderInterface.sol",
        "file": "../../oracle/interfaces/FinderInterface.sol",
        "id": 15714,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 16299,
        "sourceUnit": 33610,
        "src": "464:53:78",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/circleci/protocol/packages/core/contracts/oracle/interfaces/IdentifierWhitelistInterface.sol",
        "file": "../../oracle/interfaces/IdentifierWhitelistInterface.sol",
        "id": 15715,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 16299,
        "sourceUnit": 33634,
        "src": "518:66:78",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/circleci/protocol/packages/core/contracts/oracle/interfaces/OptimisticOracleInterface.sol",
        "file": "../../oracle/interfaces/OptimisticOracleInterface.sol",
        "id": 15716,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 16299,
        "sourceUnit": 33872,
        "src": "585:63:78",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/circleci/protocol/packages/core/contracts/oracle/implementation/ContractCreator.sol",
        "file": "../../oracle/implementation/ContractCreator.sol",
        "id": 15717,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 16299,
        "sourceUnit": 26545,
        "src": "649:57:78",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 15719,
              "name": "Testable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4418,
              "src": "2373:8:78"
            },
            "id": 15720,
            "nodeType": "InheritanceSpecifier",
            "src": "2373:8:78"
          },
          {
            "baseName": {
              "id": 15721,
              "name": "Lockable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3720,
              "src": "2383:8:78"
            },
            "id": 15722,
            "nodeType": "InheritanceSpecifier",
            "src": "2383:8:78"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 15718,
          "nodeType": "StructuredDocumentation",
          "src": "708:1631:78",
          "text": " @title Optimistic Token Deposit Box\n @notice This is a minimal example of a financial template that depends on price requests from the Optimistic Oracle.\n This contract should be thought of as a \"Deposit Box\" into which the user deposits some ERC20 collateral.\n The main feature of this box is that the user can withdraw their ERC20 corresponding to a desired USD amount.\n When the user wants to make a withdrawal, a price request is made to the Optimistic Oracle.\n For simplicity, the user is constrained to have one outstanding withdrawal request at any given time.\n Final fees are charged to the proposer of a price but not to the contract making a price request.\n This example is intended to accompany a technical tutorial for how to integrate the Optimistic Oracle into a project.\n The main feature this demo serves to showcase is how to build a financial product on-chain that \"pulls\" price\n requests from the Optimistic Oracle on-demand, which is an implementation of the \"priceless\" oracle framework.\n The typical user flow would be:\n - User sets up a deposit box for the ETH/USD price-identifier.\n   The \"collateral currency\" in this deposit box is therefore wETH.\n   The user can subsequently make withdrawal requests for USD-denominated amounts of wETH.\n - User deposits 10 wETH into their deposit box.\n - User later requests to withdraw $10,000 USD of wETH.\n - OptimisticDepositBox asks Optimistic Oracle for latest ETH/USD exchange rate.\n - Optimistic Oracle resolves the exchange rate at: 1 wETH is worth 2000 USD.\n - OptimisticDepositBox transfers 5 wETH to user."
        },
        "fullyImplemented": true,
        "id": 16298,
        "linearizedBaseContracts": [
          16298,
          3720,
          4418
        ],
        "name": "OptimisticDepositBox",
        "nameLocation": "2349:20:78",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 15725,
            "libraryName": {
              "id": 15723,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 44033,
              "src": "2404:8:78"
            },
            "nodeType": "UsingForDirective",
            "src": "2398:27:78",
            "typeName": {
              "id": 15724,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2417:7:78",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 15729,
            "libraryName": {
              "id": 15726,
              "name": "FixedPoint",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3659,
              "src": "2436:10:78"
            },
            "nodeType": "UsingForDirective",
            "src": "2430:41:78",
            "typeName": {
              "id": 15728,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 15727,
                "name": "FixedPoint.Unsigned",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2045,
                "src": "2451:19:78"
              },
              "referencedDeclaration": 2045,
              "src": "2451:19:78",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Unsigned_$2045_storage_ptr",
                "typeString": "struct FixedPoint.Unsigned"
              }
            }
          },
          {
            "id": 15733,
            "libraryName": {
              "id": 15730,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 42416,
              "src": "2482:9:78"
            },
            "nodeType": "UsingForDirective",
            "src": "2476:27:78",
            "typeName": {
              "id": 15732,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 15731,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 41847,
                "src": "2496:6:78"
              },
              "referencedDeclaration": 41847,
              "src": "2496:6:78",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$41847",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "canonicalName": "OptimisticDepositBox.OptimisticDepositBoxData",
            "id": 15740,
            "members": [
              {
                "constant": false,
                "id": 15735,
                "mutability": "mutable",
                "name": "withdrawalRequestAmount",
                "nameLocation": "2927:23:78",
                "nodeType": "VariableDeclaration",
                "scope": 15740,
                "src": "2919:31:78",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 15734,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2919:7:78",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15737,
                "mutability": "mutable",
                "name": "withdrawalRequestTimestamp",
                "nameLocation": "3093:26:78",
                "nodeType": "VariableDeclaration",
                "scope": 15740,
                "src": "3085:34:78",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 15736,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3085:7:78",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 15739,
                "mutability": "mutable",
                "name": "collateral",
                "nameLocation": "3166:10:78",
                "nodeType": "VariableDeclaration",
                "scope": 15740,
                "src": "3158:18:78",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 15738,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3158:7:78",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "OptimisticDepositBoxData",
            "nameLocation": "2606:24:78",
            "nodeType": "StructDefinition",
            "scope": 16298,
            "src": "2599:584:78",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 15745,
            "mutability": "mutable",
            "name": "depositBoxes",
            "nameLocation": "3329:12:78",
            "nodeType": "VariableDeclaration",
            "scope": 16298,
            "src": "3276:65:78",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_OptimisticDepositBoxData_$15740_storage_$",
              "typeString": "mapping(address => struct OptimisticDepositBox.OptimisticDepositBoxData)"
            },
            "typeName": {
              "id": 15744,
              "keyType": {
                "id": 15741,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3284:7:78",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "3276:44:78",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_OptimisticDepositBoxData_$15740_storage_$",
                "typeString": "mapping(address => struct OptimisticDepositBox.OptimisticDepositBoxData)"
              },
              "valueType": {
                "id": 15743,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 15742,
                  "name": "OptimisticDepositBoxData",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 15740,
                  "src": "3295:24:78"
                },
                "referencedDeclaration": 15740,
                "src": "3295:24:78",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                  "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 15747,
            "mutability": "mutable",
            "name": "priceIdentifier",
            "nameLocation": "3412:15:78",
            "nodeType": "VariableDeclaration",
            "scope": 16298,
            "src": "3396:31:78",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 15746,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "3396:7:78",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 15750,
            "mutability": "mutable",
            "name": "finder",
            "nameLocation": "3483:6:78",
            "nodeType": "VariableDeclaration",
            "scope": 16298,
            "src": "3467:22:78",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FinderInterface_$33609",
              "typeString": "contract FinderInterface"
            },
            "typeName": {
              "id": 15749,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 15748,
                "name": "FinderInterface",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 33609,
                "src": "3467:15:78"
              },
              "referencedDeclaration": 33609,
              "src": "3467:15:78",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FinderInterface_$33609",
                "typeString": "contract FinderInterface"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "0de15fd9",
            "id": 15753,
            "mutability": "mutable",
            "name": "collateralCurrency",
            "nameLocation": "3586:18:78",
            "nodeType": "VariableDeclaration",
            "scope": 16298,
            "src": "3572:32:78",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$41847",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 15752,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 15751,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 41847,
                "src": "3572:6:78"
              },
              "referencedDeclaration": 41847,
              "src": "3572:6:78",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$41847",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "dfddabaa",
            "id": 15755,
            "mutability": "mutable",
            "name": "totalOptimisticDepositBoxCollateral",
            "nameLocation": "3669:35:78",
            "nodeType": "VariableDeclaration",
            "scope": 16298,
            "src": "3654:50:78",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 15754,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3654:7:78",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 15759,
            "name": "NewOptimisticDepositBox",
            "nameLocation": "3857:23:78",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 15758,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15757,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "3897:4:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 15759,
                  "src": "3881:20:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15756,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3881:7:78",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3880:22:78"
            },
            "src": "3851:52:78"
          },
          {
            "anonymous": false,
            "id": 15763,
            "name": "EndedOptimisticDepositBox",
            "nameLocation": "3914:25:78",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 15762,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15761,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "3956:4:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 15763,
                  "src": "3940:20:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15760,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3940:7:78",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3939:22:78"
            },
            "src": "3908:54:78"
          },
          {
            "anonymous": false,
            "id": 15769,
            "name": "Deposit",
            "nameLocation": "3973:7:78",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 15768,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15765,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "3997:4:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 15769,
                  "src": "3981:20:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15764,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3981:7:78",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15767,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "collateralAmount",
                  "nameLocation": "4019:16:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 15769,
                  "src": "4003:32:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15766,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4003:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3980:56:78"
            },
            "src": "3967:70:78"
          },
          {
            "anonymous": false,
            "id": 15777,
            "name": "RequestWithdrawal",
            "nameLocation": "4048:17:78",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 15776,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15771,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "4082:4:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 15777,
                  "src": "4066:20:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15770,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4066:7:78",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15773,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "collateralAmount",
                  "nameLocation": "4104:16:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 15777,
                  "src": "4088:32:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15772,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4088:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15775,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "withdrawalRequestTimestamp",
                  "nameLocation": "4130:26:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 15777,
                  "src": "4122:34:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15774,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4122:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4065:92:78"
            },
            "src": "4042:116:78"
          },
          {
            "anonymous": false,
            "id": 15787,
            "name": "RequestWithdrawalExecuted",
            "nameLocation": "4169:25:78",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 15786,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15779,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "4220:4:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 15787,
                  "src": "4204:20:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15778,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4204:7:78",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15781,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "collateralAmount",
                  "nameLocation": "4250:16:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 15787,
                  "src": "4234:32:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15780,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4234:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15783,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "exchangeRate",
                  "nameLocation": "4284:12:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 15787,
                  "src": "4276:20:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15782,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4276:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15785,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "withdrawalRequestTimestamp",
                  "nameLocation": "4314:26:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 15787,
                  "src": "4306:34:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15784,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4306:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4194:152:78"
            },
            "src": "4163:184:78"
          },
          {
            "anonymous": false,
            "id": 15795,
            "name": "RequestWithdrawalCanceled",
            "nameLocation": "4358:25:78",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 15794,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15789,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "4409:4:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 15795,
                  "src": "4393:20:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15788,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4393:7:78",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15791,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "collateralAmount",
                  "nameLocation": "4439:16:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 15795,
                  "src": "4423:32:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15790,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4423:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15793,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "withdrawalRequestTimestamp",
                  "nameLocation": "4473:26:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 15795,
                  "src": "4465:34:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15792,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4465:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4383:122:78"
            },
            "src": "4352:154:78"
          },
          {
            "body": {
              "id": 15804,
              "nodeType": "Block",
              "src": "4695:67:78",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 15800,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15797,
                        "src": "4739:4:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 15799,
                      "name": "_depositBoxHasNoPendingWithdrawal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16201,
                      "src": "4705:33:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$__$",
                        "typeString": "function (address) view"
                      }
                    },
                    "id": 15801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4705:39:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15802,
                  "nodeType": "ExpressionStatement",
                  "src": "4705:39:78"
                },
                {
                  "id": 15803,
                  "nodeType": "PlaceholderStatement",
                  "src": "4754:1:78"
                }
              ]
            },
            "id": 15805,
            "name": "noPendingWithdrawal",
            "nameLocation": "4661:19:78",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 15798,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15797,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "4689:4:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 15805,
                  "src": "4681:12:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15796,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4681:7:78",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4680:14:78"
            },
            "src": "4652:110:78",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 15856,
              "nodeType": "Block",
              "src": "5920:380:78",
              "statements": [
                {
                  "expression": {
                    "id": 15826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 15822,
                      "name": "finder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15750,
                      "src": "5930:6:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FinderInterface_$33609",
                        "typeString": "contract FinderInterface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 15824,
                          "name": "_finderAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15810,
                          "src": "5955:14:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 15823,
                        "name": "FinderInterface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33609,
                        "src": "5939:15:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_FinderInterface_$33609_$",
                          "typeString": "type(contract FinderInterface)"
                        }
                      },
                      "id": 15825,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5939:31:78",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FinderInterface_$33609",
                        "typeString": "contract FinderInterface"
                      }
                    },
                    "src": "5930:40:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FinderInterface_$33609",
                      "typeString": "contract FinderInterface"
                    }
                  },
                  "id": 15827,
                  "nodeType": "ExpressionStatement",
                  "src": "5930:40:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 15832,
                            "name": "_priceIdentifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15812,
                            "src": "6036:16:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 15829,
                              "name": "_getIdentifierWhitelist",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16231,
                              "src": "5988:23:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IdentifierWhitelistInterface_$33633_$",
                                "typeString": "function () view returns (contract IdentifierWhitelistInterface)"
                              }
                            },
                            "id": 15830,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5988:25:78",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IdentifierWhitelistInterface_$33633",
                              "typeString": "contract IdentifierWhitelistInterface"
                            }
                          },
                          "id": 15831,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isIdentifierSupported",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 33632,
                          "src": "5988:47:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (bytes32) view external returns (bool)"
                          }
                        },
                        "id": 15833,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5988:65:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e737570706f72746564207072696365206964656e746966696572",
                        "id": 15834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6055:30:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_94bb89cfed7f92b6924aaf530cfbea5fedde73bb19371104995924474bbd76c5",
                          "typeString": "literal_string \"Unsupported price identifier\""
                        },
                        "value": "Unsupported price identifier"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_94bb89cfed7f92b6924aaf530cfbea5fedde73bb19371104995924474bbd76c5",
                          "typeString": "literal_string \"Unsupported price identifier\""
                        }
                      ],
                      "id": 15828,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5980:7:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5980:106:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15836,
                  "nodeType": "ExpressionStatement",
                  "src": "5980:106:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 15841,
                            "name": "_collateralAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15808,
                            "src": "6141:18:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 15838,
                              "name": "_getAddressWhitelist",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16246,
                              "src": "6104:20:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_AddressWhitelist_$1474_$",
                                "typeString": "function () view returns (contract AddressWhitelist)"
                              }
                            },
                            "id": 15839,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6104:22:78",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AddressWhitelist_$1474",
                              "typeString": "contract AddressWhitelist"
                            }
                          },
                          "id": 15840,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isOnWhitelist",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1384,
                          "src": "6104:36:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 15842,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6104:56:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e737570706f7274656420636f6c6c61746572616c2074797065",
                        "id": 15843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6162:29:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3611e54a32e996a5f5392e3c381b702b0fa44f0a8e1298457590376f10df9a66",
                          "typeString": "literal_string \"Unsupported collateral type\""
                        },
                        "value": "Unsupported collateral type"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3611e54a32e996a5f5392e3c381b702b0fa44f0a8e1298457590376f10df9a66",
                          "typeString": "literal_string \"Unsupported collateral type\""
                        }
                      ],
                      "id": 15837,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6096:7:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15844,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6096:96:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15845,
                  "nodeType": "ExpressionStatement",
                  "src": "6096:96:78"
                },
                {
                  "expression": {
                    "id": 15850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 15846,
                      "name": "collateralCurrency",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15753,
                      "src": "6202:18:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$41847",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 15848,
                          "name": "_collateralAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15808,
                          "src": "6230:18:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 15847,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41847,
                        "src": "6223:6:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$41847_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 15849,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6223:26:78",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$41847",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "6202:47:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$41847",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 15851,
                  "nodeType": "ExpressionStatement",
                  "src": "6202:47:78"
                },
                {
                  "expression": {
                    "id": 15854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 15852,
                      "name": "priceIdentifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15747,
                      "src": "6259:15:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 15853,
                      "name": "_priceIdentifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15812,
                      "src": "6277:16:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "6259:34:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 15855,
                  "nodeType": "ExpressionStatement",
                  "src": "6259:34:78"
                }
              ]
            },
            "documentation": {
              "id": 15806,
              "nodeType": "StructuredDocumentation",
              "src": "4908:817:78",
              "text": " @notice Construct the OptimisticDepositBox.\n @param _collateralAddress ERC20 token to be deposited.\n @param _finderAddress UMA protocol Finder used to discover other protocol contracts.\n @param _priceIdentifier registered in the DVM, used to price the ERC20 deposited.\n The price identifier consists of a \"base\" asset and a \"quote\" asset. The \"base\" asset corresponds\n to the collateral ERC20 currency deposited into this account, and it is denominated in the \"quote\"\n asset on withdrawals.\n An example price identifier would be \"ETH/USD\" which will resolve and return the USD price of ETH.\n @param _timerAddress contract that stores the current time in a testing environment.\n Must be set to 0x0 for production environments that use live time."
            },
            "id": 15857,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [],
                "id": 15817,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 15816,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3686,
                  "src": "5881:12:78"
                },
                "nodeType": "ModifierInvocation",
                "src": "5881:14:78"
              },
              {
                "arguments": [
                  {
                    "id": 15819,
                    "name": "_timerAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 15814,
                    "src": "5905:13:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 15820,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 15818,
                  "name": "Testable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4418,
                  "src": "5896:8:78"
                },
                "nodeType": "ModifierInvocation",
                "src": "5896:23:78"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15815,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15808,
                  "mutability": "mutable",
                  "name": "_collateralAddress",
                  "nameLocation": "5759:18:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 15857,
                  "src": "5751:26:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15807,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5751:7:78",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15810,
                  "mutability": "mutable",
                  "name": "_finderAddress",
                  "nameLocation": "5795:14:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 15857,
                  "src": "5787:22:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15809,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5787:7:78",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15812,
                  "mutability": "mutable",
                  "name": "_priceIdentifier",
                  "nameLocation": "5827:16:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 15857,
                  "src": "5819:24:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 15811,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5819:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 15814,
                  "mutability": "mutable",
                  "name": "_timerAddress",
                  "nameLocation": "5861:13:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 15857,
                  "src": "5853:21:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 15813,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5853:7:78",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5741:139:78"
            },
            "returnParameters": {
              "id": 15821,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5920:0:78"
            },
            "scope": 16298,
            "src": "5730:570:78",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15926,
              "nodeType": "Block",
              "src": "6690:764:78",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 15868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 15866,
                          "name": "collateralAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15860,
                          "src": "6708:16:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 15867,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6727:1:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6708:20:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420636f6c6c61746572616c20616d6f756e74",
                        "id": 15869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6730:27:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_813bd37c1cdbc0f93d273be4b907a22c7018037169a95f3ac08b89650b63a56e",
                          "typeString": "literal_string \"Invalid collateral amount\""
                        },
                        "value": "Invalid collateral amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_813bd37c1cdbc0f93d273be4b907a22c7018037169a95f3ac08b89650b63a56e",
                          "typeString": "literal_string \"Invalid collateral amount\""
                        }
                      ],
                      "id": 15865,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6700:7:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6700:58:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15871,
                  "nodeType": "ExpressionStatement",
                  "src": "6700:58:78"
                },
                {
                  "assignments": [
                    15874
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15874,
                      "mutability": "mutable",
                      "name": "depositBoxData",
                      "nameLocation": "6801:14:78",
                      "nodeType": "VariableDeclaration",
                      "scope": 15926,
                      "src": "6768:47:78",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                        "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData"
                      },
                      "typeName": {
                        "id": 15873,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 15872,
                          "name": "OptimisticDepositBoxData",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 15740,
                          "src": "6768:24:78"
                        },
                        "referencedDeclaration": 15740,
                        "src": "6768:24:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                          "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 15879,
                  "initialValue": {
                    "baseExpression": {
                      "id": 15875,
                      "name": "depositBoxes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15745,
                      "src": "6818:12:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_OptimisticDepositBoxData_$15740_storage_$",
                        "typeString": "mapping(address => struct OptimisticDepositBox.OptimisticDepositBoxData storage ref)"
                      }
                    },
                    "id": 15878,
                    "indexExpression": {
                      "expression": {
                        "id": 15876,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "6831:3:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 15877,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "6831:10:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6818:24:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage",
                      "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6768:74:78"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 15883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 15880,
                        "name": "depositBoxData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15874,
                        "src": "6856:14:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                          "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData storage pointer"
                        }
                      },
                      "id": 15881,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "collateral",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15739,
                      "src": "6856:25:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 15882,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6885:1:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6856:30:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 15890,
                  "nodeType": "IfStatement",
                  "src": "6852:101:78",
                  "trueBody": {
                    "id": 15889,
                    "nodeType": "Block",
                    "src": "6888:65:78",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 15885,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "6931:3:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 15886,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6931:10:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 15884,
                            "name": "NewOptimisticDepositBox",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15759,
                            "src": "6907:23:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 15887,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6907:35:78",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 15888,
                        "nodeType": "EmitStatement",
                        "src": "6902:40:78"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 15899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 15891,
                        "name": "depositBoxData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15874,
                        "src": "7062:14:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                          "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData storage pointer"
                        }
                      },
                      "id": 15893,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "collateral",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15739,
                      "src": "7062:25:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 15897,
                          "name": "collateralAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15860,
                          "src": "7120:16:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 15894,
                            "name": "depositBoxData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15874,
                            "src": "7090:14:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                              "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData storage pointer"
                            }
                          },
                          "id": 15895,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "collateral",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15739,
                          "src": "7090:25:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 15896,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43897,
                        "src": "7090:29:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 15898,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7090:47:78",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7062:75:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 15900,
                  "nodeType": "ExpressionStatement",
                  "src": "7062:75:78"
                },
                {
                  "expression": {
                    "id": 15906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 15901,
                      "name": "totalOptimisticDepositBoxCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15755,
                      "src": "7147:35:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 15904,
                          "name": "collateralAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15860,
                          "src": "7225:16:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 15902,
                          "name": "totalOptimisticDepositBoxCollateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15755,
                          "src": "7185:35:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 15903,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43897,
                        "src": "7185:39:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 15905,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7185:57:78",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7147:95:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 15907,
                  "nodeType": "ExpressionStatement",
                  "src": "7147:95:78"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 15909,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "7266:3:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 15910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7266:10:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 15911,
                        "name": "collateralAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15860,
                        "src": "7278:16:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 15908,
                      "name": "Deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15769,
                      "src": "7258:7:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 15912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7258:37:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15913,
                  "nodeType": "EmitStatement",
                  "src": "7253:42:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 15917,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "7403:3:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 15918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7403:10:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 15921,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "7423:4:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticDepositBox_$16298",
                              "typeString": "contract OptimisticDepositBox"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OptimisticDepositBox_$16298",
                              "typeString": "contract OptimisticDepositBox"
                            }
                          ],
                          "id": 15920,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7415:7:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 15919,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7415:7:78",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 15922,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7415:13:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 15923,
                        "name": "collateralAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15860,
                        "src": "7430:16:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 15914,
                        "name": "collateralCurrency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15753,
                        "src": "7367:18:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$41847",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 15916,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42249,
                      "src": "7367:35:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$41847_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$41847_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 15924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7367:80:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15925,
                  "nodeType": "ExpressionStatement",
                  "src": "7367:80:78"
                }
              ]
            },
            "documentation": {
              "id": 15858,
              "nodeType": "StructuredDocumentation",
              "src": "6306:314:78",
              "text": " @notice Transfers `collateralAmount` of `collateralCurrency` into caller's deposit box.\n @dev This contract must be approved to spend at least `collateralAmount` of `collateralCurrency`.\n @param collateralAmount total amount of collateral tokens to be sent to the sponsor's position."
            },
            "functionSelector": "b6b55f25",
            "id": 15927,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 15863,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 15862,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3686,
                  "src": "6675:12:78"
                },
                "nodeType": "ModifierInvocation",
                "src": "6675:14:78"
              }
            ],
            "name": "deposit",
            "nameLocation": "6634:7:78",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15861,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15860,
                  "mutability": "mutable",
                  "name": "collateralAmount",
                  "nameLocation": "6650:16:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 15927,
                  "src": "6642:24:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15859,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6642:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6641:26:78"
            },
            "returnParameters": {
              "id": 15864,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6690:0:78"
            },
            "scope": 16298,
            "src": "6625:829:78",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 15980,
              "nodeType": "Block",
              "src": "8163:621:78",
              "statements": [
                {
                  "assignments": [
                    15941
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15941,
                      "mutability": "mutable",
                      "name": "depositBoxData",
                      "nameLocation": "8206:14:78",
                      "nodeType": "VariableDeclaration",
                      "scope": 15980,
                      "src": "8173:47:78",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                        "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData"
                      },
                      "typeName": {
                        "id": 15940,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 15939,
                          "name": "OptimisticDepositBoxData",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 15740,
                          "src": "8173:24:78"
                        },
                        "referencedDeclaration": 15740,
                        "src": "8173:24:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                          "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 15946,
                  "initialValue": {
                    "baseExpression": {
                      "id": 15942,
                      "name": "depositBoxes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15745,
                      "src": "8223:12:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_OptimisticDepositBoxData_$15740_storage_$",
                        "typeString": "mapping(address => struct OptimisticDepositBox.OptimisticDepositBoxData storage ref)"
                      }
                    },
                    "id": 15945,
                    "indexExpression": {
                      "expression": {
                        "id": 15943,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "8236:3:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 15944,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "8236:10:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8223:24:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage",
                      "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8173:74:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 15950,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 15948,
                          "name": "denominatedCollateralAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15930,
                          "src": "8265:27:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 15949,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8295:1:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "8265:31:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420636f6c6c61746572616c20616d6f756e74",
                        "id": 15951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8298:27:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_813bd37c1cdbc0f93d273be4b907a22c7018037169a95f3ac08b89650b63a56e",
                          "typeString": "literal_string \"Invalid collateral amount\""
                        },
                        "value": "Invalid collateral amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_813bd37c1cdbc0f93d273be4b907a22c7018037169a95f3ac08b89650b63a56e",
                          "typeString": "literal_string \"Invalid collateral amount\""
                        }
                      ],
                      "id": 15947,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8257:7:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 15952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8257:69:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15953,
                  "nodeType": "ExpressionStatement",
                  "src": "8257:69:78"
                },
                {
                  "expression": {
                    "id": 15958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 15954,
                        "name": "depositBoxData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15941,
                        "src": "8387:14:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                          "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData storage pointer"
                        }
                      },
                      "id": 15956,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "withdrawalRequestAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15735,
                      "src": "8387:38:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 15957,
                      "name": "denominatedCollateralAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15930,
                      "src": "8428:27:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8387:68:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 15959,
                  "nodeType": "ExpressionStatement",
                  "src": "8387:68:78"
                },
                {
                  "expression": {
                    "id": 15965,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 15960,
                        "name": "depositBoxData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15941,
                        "src": "8465:14:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                          "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData storage pointer"
                        }
                      },
                      "id": 15962,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "withdrawalRequestTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15737,
                      "src": "8465:41:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 15963,
                        "name": "getCurrentTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4417,
                        "src": "8509:14:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 15964,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8509:16:78",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8465:60:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 15966,
                  "nodeType": "ExpressionStatement",
                  "src": "8465:60:78"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 15968,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "8559:3:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 15969,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8559:10:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 15970,
                        "name": "denominatedCollateralAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15930,
                        "src": "8571:27:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 15971,
                          "name": "depositBoxData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15941,
                          "src": "8600:14:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                            "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData storage pointer"
                          }
                        },
                        "id": 15972,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "withdrawalRequestTimestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15737,
                        "src": "8600:41:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 15967,
                      "name": "RequestWithdrawal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15777,
                      "src": "8541:17:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 15973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8541:101:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15974,
                  "nodeType": "EmitStatement",
                  "src": "8536:106:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 15976,
                          "name": "depositBoxData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15941,
                          "src": "8735:14:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                            "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData storage pointer"
                          }
                        },
                        "id": 15977,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "withdrawalRequestTimestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15737,
                        "src": "8735:41:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 15975,
                      "name": "_requestOraclePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16166,
                      "src": "8715:19:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 15978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8715:62:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 15979,
                  "nodeType": "ExpressionStatement",
                  "src": "8715:62:78"
                }
              ]
            },
            "documentation": {
              "id": 15928,
              "nodeType": "StructuredDocumentation",
              "src": "7460:552:78",
              "text": " @notice Starts a withdrawal request that allows the sponsor to withdraw `denominatedCollateralAmount`\n from their position denominated in the quote asset of the price identifier, following a Optimistic\n Oracle price resolution.\n @dev The request will be pending for the duration of the liveness period and can be cancelled at any\n time. Only one withdrawal request can exist for the user.\n @param denominatedCollateralAmount the quote-asset denominated amount of collateral requested to\n withdraw."
            },
            "functionSelector": "9ee679e8",
            "id": 15981,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 15933,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "8124:3:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 15934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "8124:10:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 15935,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 15932,
                  "name": "noPendingWithdrawal",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 15805,
                  "src": "8104:19:78"
                },
                "nodeType": "ModifierInvocation",
                "src": "8104:31:78"
              },
              {
                "arguments": [],
                "id": 15937,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 15936,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3686,
                  "src": "8144:12:78"
                },
                "nodeType": "ModifierInvocation",
                "src": "8144:14:78"
              }
            ],
            "name": "requestWithdrawal",
            "nameLocation": "8026:17:78",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15931,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15930,
                  "mutability": "mutable",
                  "name": "denominatedCollateralAmount",
                  "nameLocation": "8052:27:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 15981,
                  "src": "8044:35:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15929,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8044:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8043:37:78"
            },
            "returnParameters": {
              "id": 15938,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8163:0:78"
            },
            "scope": 16298,
            "src": "8017:767:78",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 16089,
              "nodeType": "Block",
              "src": "9307:2189:78",
              "statements": [
                {
                  "assignments": [
                    15991
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 15991,
                      "mutability": "mutable",
                      "name": "depositBoxData",
                      "nameLocation": "9350:14:78",
                      "nodeType": "VariableDeclaration",
                      "scope": 16089,
                      "src": "9317:47:78",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                        "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData"
                      },
                      "typeName": {
                        "id": 15990,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 15989,
                          "name": "OptimisticDepositBoxData",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 15740,
                          "src": "9317:24:78"
                        },
                        "referencedDeclaration": 15740,
                        "src": "9317:24:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                          "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 15996,
                  "initialValue": {
                    "baseExpression": {
                      "id": 15992,
                      "name": "depositBoxes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15745,
                      "src": "9367:12:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_OptimisticDepositBoxData_$15740_storage_$",
                        "typeString": "mapping(address => struct OptimisticDepositBox.OptimisticDepositBoxData storage ref)"
                      }
                    },
                    "id": 15995,
                    "indexExpression": {
                      "expression": {
                        "id": 15993,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "9380:3:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 15994,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "9380:10:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9367:24:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage",
                      "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9317:74:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 16007,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 16001,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 15998,
                              "name": "depositBoxData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15991,
                              "src": "9422:14:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                                "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData storage pointer"
                              }
                            },
                            "id": 15999,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "withdrawalRequestTimestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15737,
                            "src": "9422:41:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 16000,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9467:1:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "9422:46:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 16006,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 16002,
                              "name": "depositBoxData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15991,
                              "src": "9488:14:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                                "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData storage pointer"
                              }
                            },
                            "id": 16003,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "withdrawalRequestTimestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15737,
                            "src": "9488:41:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 16004,
                              "name": "getCurrentTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4417,
                              "src": "9533:14:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 16005,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9533:16:78",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9488:61:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "9422:127:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c69642077697468647261772072657175657374",
                        "id": 16008,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9563:26:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_94963bd7c26cec51ca5a6225f5d2d7df6dcde2009a60ca92019ec17e8ee6ff0d",
                          "typeString": "literal_string \"Invalid withdraw request\""
                        },
                        "value": "Invalid withdraw request"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_94963bd7c26cec51ca5a6225f5d2d7df6dcde2009a60ca92019ec17e8ee6ff0d",
                          "typeString": "literal_string \"Invalid withdraw request\""
                        }
                      ],
                      "id": 15997,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9401:7:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 16009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9401:198:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16010,
                  "nodeType": "ExpressionStatement",
                  "src": "9401:198:78"
                },
                {
                  "assignments": [
                    16012
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 16012,
                      "mutability": "mutable",
                      "name": "exchangeRate",
                      "nameLocation": "9784:12:78",
                      "nodeType": "VariableDeclaration",
                      "scope": 16089,
                      "src": "9776:20:78",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 16011,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9776:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 16017,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 16014,
                          "name": "depositBoxData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15991,
                          "src": "9815:14:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                            "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData storage pointer"
                          }
                        },
                        "id": 16015,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "withdrawalRequestTimestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15737,
                        "src": "9815:41:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 16013,
                      "name": "_getOraclePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16297,
                      "src": "9799:15:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 16016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9799:58:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9776:81:78"
                },
                {
                  "assignments": [
                    16019
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 16019,
                      "mutability": "mutable",
                      "name": "denominatedAmountToWithdraw",
                      "nameLocation": "10206:27:78",
                      "nodeType": "VariableDeclaration",
                      "scope": 16089,
                      "src": "10198:35:78",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 16018,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10198:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 16032,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 16028,
                              "name": "exchangeRate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16012,
                              "src": "10332:12:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 16026,
                              "name": "FixedPoint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3659,
                              "src": "10312:10:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_FixedPoint_$3659_$",
                                "typeString": "type(library FixedPoint)"
                              }
                            },
                            "id": 16027,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Unsigned",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2045,
                            "src": "10312:19:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Unsigned_$2045_storage_ptr_$",
                              "typeString": "type(struct FixedPoint.Unsigned storage pointer)"
                            }
                          },
                          "id": 16029,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10312:33:78",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Unsigned_$2045_memory_ptr",
                            "typeString": "struct FixedPoint.Unsigned memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Unsigned_$2045_memory_ptr",
                            "typeString": "struct FixedPoint.Unsigned memory"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 16022,
                                "name": "depositBoxData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 15991,
                                "src": "10268:14:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                                  "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData storage pointer"
                                }
                              },
                              "id": 16023,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "withdrawalRequestAmount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 15735,
                              "src": "10268:38:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 16020,
                              "name": "FixedPoint",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3659,
                              "src": "10248:10:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_FixedPoint_$3659_$",
                                "typeString": "type(library FixedPoint)"
                              }
                            },
                            "id": 16021,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Unsigned",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2045,
                            "src": "10248:19:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Unsigned_$2045_storage_ptr_$",
                              "typeString": "type(struct FixedPoint.Unsigned storage pointer)"
                            }
                          },
                          "id": 16024,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10248:59:78",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Unsigned_$2045_memory_ptr",
                            "typeString": "struct FixedPoint.Unsigned memory"
                          }
                        },
                        "id": 16025,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "div",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2635,
                        "src": "10248:63:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_struct$_Unsigned_$2045_memory_ptr_$_t_struct$_Unsigned_$2045_memory_ptr_$returns$_t_struct$_Unsigned_$2045_memory_ptr_$bound_to$_t_struct$_Unsigned_$2045_memory_ptr_$",
                          "typeString": "function (struct FixedPoint.Unsigned memory,struct FixedPoint.Unsigned memory) pure returns (struct FixedPoint.Unsigned memory)"
                        }
                      },
                      "id": 16030,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10248:98:78",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Unsigned_$2045_memory_ptr",
                        "typeString": "struct FixedPoint.Unsigned memory"
                      }
                    },
                    "id": 16031,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "rawValue",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 2044,
                    "src": "10248:107:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10198:157:78"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 16036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 16033,
                      "name": "denominatedAmountToWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16019,
                      "src": "10469:27:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "expression": {
                        "id": 16034,
                        "name": "depositBoxData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15991,
                        "src": "10500:14:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                          "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData storage pointer"
                        }
                      },
                      "id": 16035,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "collateral",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15739,
                      "src": "10500:25:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10469:56:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 16048,
                  "nodeType": "IfStatement",
                  "src": "10465:198:78",
                  "trueBody": {
                    "id": 16047,
                    "nodeType": "Block",
                    "src": "10527:136:78",
                    "statements": [
                      {
                        "expression": {
                          "id": 16040,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 16037,
                            "name": "denominatedAmountToWithdraw",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16019,
                            "src": "10541:27:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 16038,
                              "name": "depositBoxData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15991,
                              "src": "10571:14:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                                "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData storage pointer"
                              }
                            },
                            "id": 16039,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "collateral",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 15739,
                            "src": "10571:25:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10541:55:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 16041,
                        "nodeType": "ExpressionStatement",
                        "src": "10541:55:78"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 16043,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "10641:3:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 16044,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "10641:10:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 16042,
                            "name": "EndedOptimisticDepositBox",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15763,
                            "src": "10615:25:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 16045,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10615:37:78",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 16046,
                        "nodeType": "EmitStatement",
                        "src": "10610:42:78"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 16057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 16049,
                        "name": "depositBoxData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15991,
                        "src": "10751:14:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                          "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData storage pointer"
                        }
                      },
                      "id": 16051,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "collateral",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15739,
                      "src": "10751:25:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 16055,
                          "name": "denominatedAmountToWithdraw",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16019,
                          "src": "10809:27:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 16052,
                            "name": "depositBoxData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15991,
                            "src": "10779:14:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                              "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData storage pointer"
                            }
                          },
                          "id": 16053,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "collateral",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15739,
                          "src": "10779:25:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 16054,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43912,
                        "src": "10779:29:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 16056,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10779:58:78",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10751:86:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 16058,
                  "nodeType": "ExpressionStatement",
                  "src": "10751:86:78"
                },
                {
                  "expression": {
                    "id": 16064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 16059,
                      "name": "totalOptimisticDepositBoxCollateral",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15755,
                      "src": "10847:35:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 16062,
                          "name": "denominatedAmountToWithdraw",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16019,
                          "src": "10925:27:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 16060,
                          "name": "totalOptimisticDepositBoxCollateral",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15755,
                          "src": "10885:35:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 16061,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43912,
                        "src": "10885:39:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 16063,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10885:68:78",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10847:106:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 16065,
                  "nodeType": "ExpressionStatement",
                  "src": "10847:106:78"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 16067,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "11008:3:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 16068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "11008:10:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16069,
                        "name": "denominatedAmountToWithdraw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16019,
                        "src": "11032:27:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 16070,
                        "name": "exchangeRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16012,
                        "src": "11073:12:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 16071,
                          "name": "depositBoxData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15991,
                          "src": "11099:14:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                            "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData storage pointer"
                          }
                        },
                        "id": 16072,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "withdrawalRequestTimestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15737,
                        "src": "11099:41:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 16066,
                      "name": "RequestWithdrawalExecuted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15787,
                      "src": "10969:25:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256,uint256)"
                      }
                    },
                    "id": 16073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10969:181:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16074,
                  "nodeType": "EmitStatement",
                  "src": "10964:186:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 16076,
                        "name": "depositBoxData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15991,
                        "src": "11267:14:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                          "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                          "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData storage pointer"
                        }
                      ],
                      "id": 16075,
                      "name": "_resetWithdrawalRequest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16185,
                      "src": "11243:23:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_OptimisticDepositBoxData_$15740_storage_ptr_$returns$__$",
                        "typeString": "function (struct OptimisticDepositBox.OptimisticDepositBoxData storage pointer)"
                      }
                    },
                    "id": 16077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11243:39:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16078,
                  "nodeType": "ExpressionStatement",
                  "src": "11243:39:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 16082,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "11405:3:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 16083,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "11405:10:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 16084,
                        "name": "denominatedAmountToWithdraw",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16019,
                        "src": "11417:27:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 16079,
                        "name": "collateralCurrency",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15753,
                        "src": "11373:18:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$41847",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 16081,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42223,
                      "src": "11373:31:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$41847_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$41847_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 16085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11373:72:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16086,
                  "nodeType": "ExpressionStatement",
                  "src": "11373:72:78"
                },
                {
                  "expression": {
                    "id": 16087,
                    "name": "denominatedAmountToWithdraw",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 16019,
                    "src": "11462:27:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 15988,
                  "id": 16088,
                  "nodeType": "Return",
                  "src": "11455:34:78"
                }
              ]
            },
            "documentation": {
              "id": 15982,
              "nodeType": "StructuredDocumentation",
              "src": "8790:425:78",
              "text": " @notice After a withdrawal request (i.e., by a call to `requestWithdrawal`) and optimistic oracle\n price resolution, withdraws `depositBoxData.withdrawalRequestAmount` of collateral currency\n denominated in the quote asset.\n @dev Might not withdraw the full requested amount in order to account for precision loss.\n @return amountWithdrawn The actual amount of collateral withdrawn."
            },
            "functionSelector": "fa45aa00",
            "id": 16090,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 15985,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 15984,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3686,
                  "src": "9258:12:78"
                },
                "nodeType": "ModifierInvocation",
                "src": "9258:14:78"
              }
            ],
            "name": "executeWithdrawal",
            "nameLocation": "9229:17:78",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 15983,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9246:2:78"
            },
            "returnParameters": {
              "id": 15988,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 15987,
                  "mutability": "mutable",
                  "name": "amountWithdrawn",
                  "nameLocation": "9290:15:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 16090,
                  "src": "9282:23:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 15986,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9282:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9281:25:78"
            },
            "scope": 16298,
            "src": "9220:2276:78",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 16125,
              "nodeType": "Block",
              "src": "11623:517:78",
              "statements": [
                {
                  "assignments": [
                    16098
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 16098,
                      "mutability": "mutable",
                      "name": "depositBoxData",
                      "nameLocation": "11666:14:78",
                      "nodeType": "VariableDeclaration",
                      "scope": 16125,
                      "src": "11633:47:78",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                        "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData"
                      },
                      "typeName": {
                        "id": 16097,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 16096,
                          "name": "OptimisticDepositBoxData",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 15740,
                          "src": "11633:24:78"
                        },
                        "referencedDeclaration": 15740,
                        "src": "11633:24:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                          "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 16103,
                  "initialValue": {
                    "baseExpression": {
                      "id": 16099,
                      "name": "depositBoxes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15745,
                      "src": "11683:12:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_OptimisticDepositBoxData_$15740_storage_$",
                        "typeString": "mapping(address => struct OptimisticDepositBox.OptimisticDepositBoxData storage ref)"
                      }
                    },
                    "id": 16102,
                    "indexExpression": {
                      "expression": {
                        "id": 16100,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "11696:3:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 16101,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "11696:10:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "11683:24:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage",
                      "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11633:74:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 16108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 16105,
                            "name": "depositBoxData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16098,
                            "src": "11725:14:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                              "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData storage pointer"
                            }
                          },
                          "id": 16106,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "withdrawalRequestTimestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15737,
                          "src": "11725:41:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 16107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11770:1:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "11725:46:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f2070656e64696e67207769746864726177616c",
                        "id": 16109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11773:23:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f80b6185a55e7705eade18fc94576fb0c28cf32c1b453f215155b7bf28ad0f40",
                          "typeString": "literal_string \"No pending withdrawal\""
                        },
                        "value": "No pending withdrawal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f80b6185a55e7705eade18fc94576fb0c28cf32c1b453f215155b7bf28ad0f40",
                          "typeString": "literal_string \"No pending withdrawal\""
                        }
                      ],
                      "id": 16104,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11717:7:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 16110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11717:80:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16111,
                  "nodeType": "ExpressionStatement",
                  "src": "11717:80:78"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 16113,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "11852:3:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 16114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "11852:10:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 16115,
                          "name": "depositBoxData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16098,
                          "src": "11876:14:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                            "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData storage pointer"
                          }
                        },
                        "id": 16116,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "withdrawalRequestAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15735,
                        "src": "11876:38:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 16117,
                          "name": "depositBoxData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16098,
                          "src": "11928:14:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                            "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData storage pointer"
                          }
                        },
                        "id": 16118,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "withdrawalRequestTimestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 15737,
                        "src": "11928:41:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 16112,
                      "name": "RequestWithdrawalCanceled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15795,
                      "src": "11813:25:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 16119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11813:166:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16120,
                  "nodeType": "EmitStatement",
                  "src": "11808:171:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 16122,
                        "name": "depositBoxData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16098,
                        "src": "12118:14:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                          "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                          "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData storage pointer"
                        }
                      ],
                      "id": 16121,
                      "name": "_resetWithdrawalRequest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16185,
                      "src": "12094:23:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_OptimisticDepositBoxData_$15740_storage_ptr_$returns$__$",
                        "typeString": "function (struct OptimisticDepositBox.OptimisticDepositBoxData storage pointer)"
                      }
                    },
                    "id": 16123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12094:39:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16124,
                  "nodeType": "ExpressionStatement",
                  "src": "12094:39:78"
                }
              ]
            },
            "documentation": {
              "id": 16091,
              "nodeType": "StructuredDocumentation",
              "src": "11502:64:78",
              "text": " @notice Cancels a pending withdrawal request."
            },
            "functionSelector": "22611280",
            "id": 16126,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 16094,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 16093,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3686,
                  "src": "11608:12:78"
                },
                "nodeType": "ModifierInvocation",
                "src": "11608:14:78"
              }
            ],
            "name": "cancelWithdrawal",
            "nameLocation": "11580:16:78",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16092,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11596:2:78"
            },
            "returnParameters": {
              "id": 16095,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11623:0:78"
            },
            "scope": 16298,
            "src": "11571:569:78",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 16141,
              "nodeType": "Block",
              "src": "12460:53:78",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 16136,
                        "name": "depositBoxes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15745,
                        "src": "12477:12:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_OptimisticDepositBoxData_$15740_storage_$",
                          "typeString": "mapping(address => struct OptimisticDepositBox.OptimisticDepositBoxData storage ref)"
                        }
                      },
                      "id": 16138,
                      "indexExpression": {
                        "id": 16137,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16129,
                        "src": "12490:4:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "12477:18:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage",
                        "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData storage ref"
                      }
                    },
                    "id": 16139,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "collateral",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 15739,
                    "src": "12477:29:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 16135,
                  "id": 16140,
                  "nodeType": "Return",
                  "src": "12470:36:78"
                }
              ]
            },
            "documentation": {
              "id": 16127,
              "nodeType": "StructuredDocumentation",
              "src": "12146:221:78",
              "text": " @notice Accessor method for a user's collateral.\n @param user address whose collateral amount is retrieved.\n @return the collateral amount in the deposit box (i.e. available for withdrawal)."
            },
            "functionSelector": "9b56d6c9",
            "id": 16142,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 16132,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 16131,
                  "name": "nonReentrantView",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3694,
                  "src": "12423:16:78"
                },
                "nodeType": "ModifierInvocation",
                "src": "12423:18:78"
              }
            ],
            "name": "getCollateral",
            "nameLocation": "12381:13:78",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16129,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "12403:4:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 16142,
                  "src": "12395:12:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16128,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12395:7:78",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12394:14:78"
            },
            "returnParameters": {
              "id": 16135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16134,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 16142,
                  "src": "12451:7:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16133,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12451:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12450:9:78"
            },
            "scope": 16298,
            "src": "12372:141:78",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 16165,
              "nodeType": "Block",
              "src": "12813:269:78",
              "statements": [
                {
                  "assignments": [
                    16149
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 16149,
                      "mutability": "mutable",
                      "name": "oracle",
                      "nameLocation": "12849:6:78",
                      "nodeType": "VariableDeclaration",
                      "scope": 16165,
                      "src": "12823:32:78",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OptimisticOracleInterface_$33871",
                        "typeString": "contract OptimisticOracleInterface"
                      },
                      "typeName": {
                        "id": 16148,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 16147,
                          "name": "OptimisticOracleInterface",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 33871,
                          "src": "12823:25:78"
                        },
                        "referencedDeclaration": 33871,
                        "src": "12823:25:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracleInterface_$33871",
                          "typeString": "contract OptimisticOracleInterface"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 16152,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 16150,
                      "name": "_getOptimisticOracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16216,
                      "src": "12858:20:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_OptimisticOracleInterface_$33871_$",
                        "typeString": "function () view returns (contract OptimisticOracleInterface)"
                      }
                    },
                    "id": 16151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12858:22:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OptimisticOracleInterface_$33871",
                      "typeString": "contract OptimisticOracleInterface"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12823:57:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 16156,
                        "name": "priceIdentifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15747,
                        "src": "13009:15:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 16157,
                        "name": "requestedTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16144,
                        "src": "13026:13:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 16158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13041:2:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      },
                      {
                        "arguments": [
                          {
                            "id": 16160,
                            "name": "collateralCurrency",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15753,
                            "src": "13052:18:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$41847",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$41847",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 16159,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41847,
                          "src": "13045:6:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$41847_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 16161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13045:26:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$41847",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 16162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13073:1:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$41847",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 16153,
                        "name": "oracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16149,
                        "src": "12989:6:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracleInterface_$33871",
                          "typeString": "contract OptimisticOracleInterface"
                        }
                      },
                      "id": 16155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "requestPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33691,
                      "src": "12989:19:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_uint256_$_t_bytes_memory_ptr_$_t_contract$_IERC20_$41847_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (bytes32,uint256,bytes memory,contract IERC20,uint256) external returns (uint256)"
                      }
                    },
                    "id": 16163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12989:86:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 16164,
                  "nodeType": "ExpressionStatement",
                  "src": "12989:86:78"
                }
              ]
            },
            "id": 16166,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_requestOraclePrice",
            "nameLocation": "12761:19:78",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16145,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16144,
                  "mutability": "mutable",
                  "name": "requestedTime",
                  "nameLocation": "12789:13:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 16166,
                  "src": "12781:21:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16143,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12781:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12780:23:78"
            },
            "returnParameters": {
              "id": 16146,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12813:0:78"
            },
            "scope": 16298,
            "src": "12752:330:78",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 16184,
              "nodeType": "Block",
              "src": "13179:114:78",
              "statements": [
                {
                  "expression": {
                    "id": 16176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 16172,
                        "name": "depositBoxData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16169,
                        "src": "13189:14:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                          "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData storage pointer"
                        }
                      },
                      "id": 16174,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "withdrawalRequestAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15735,
                      "src": "13189:38:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 16175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13230:1:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "13189:42:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 16177,
                  "nodeType": "ExpressionStatement",
                  "src": "13189:42:78"
                },
                {
                  "expression": {
                    "id": 16182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 16178,
                        "name": "depositBoxData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16169,
                        "src": "13241:14:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                          "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData storage pointer"
                        }
                      },
                      "id": 16180,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "withdrawalRequestTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15737,
                      "src": "13241:41:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 16181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13285:1:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "13241:45:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 16183,
                  "nodeType": "ExpressionStatement",
                  "src": "13241:45:78"
                }
              ]
            },
            "id": 16185,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_resetWithdrawalRequest",
            "nameLocation": "13097:23:78",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16169,
                  "mutability": "mutable",
                  "name": "depositBoxData",
                  "nameLocation": "13154:14:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 16185,
                  "src": "13121:47:78",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                    "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData"
                  },
                  "typeName": {
                    "id": 16168,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 16167,
                      "name": "OptimisticDepositBoxData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 15740,
                      "src": "13121:24:78"
                    },
                    "referencedDeclaration": 15740,
                    "src": "13121:24:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage_ptr",
                      "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13120:49:78"
            },
            "returnParameters": {
              "id": 16171,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13179:0:78"
            },
            "scope": 16298,
            "src": "13088:205:78",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 16200,
              "nodeType": "Block",
              "src": "13370:98:78",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 16196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 16191,
                              "name": "depositBoxes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15745,
                              "src": "13388:12:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_OptimisticDepositBoxData_$15740_storage_$",
                                "typeString": "mapping(address => struct OptimisticDepositBox.OptimisticDepositBoxData storage ref)"
                              }
                            },
                            "id": 16193,
                            "indexExpression": {
                              "id": 16192,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16187,
                              "src": "13401:4:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "13388:18:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OptimisticDepositBoxData_$15740_storage",
                              "typeString": "struct OptimisticDepositBox.OptimisticDepositBoxData storage ref"
                            }
                          },
                          "id": 16194,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "withdrawalRequestTimestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15737,
                          "src": "13388:45:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 16195,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13437:1:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "13388:50:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50656e64696e67207769746864726177616c",
                        "id": 16197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13440:20:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_92438d03843dc5bb19aa28358890a480abc5006c15257e3f08fb9164e4ef921f",
                          "typeString": "literal_string \"Pending withdrawal\""
                        },
                        "value": "Pending withdrawal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_92438d03843dc5bb19aa28358890a480abc5006c15257e3f08fb9164e4ef921f",
                          "typeString": "literal_string \"Pending withdrawal\""
                        }
                      ],
                      "id": 16190,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "13380:7:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 16198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13380:81:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16199,
                  "nodeType": "ExpressionStatement",
                  "src": "13380:81:78"
                }
              ]
            },
            "id": 16201,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_depositBoxHasNoPendingWithdrawal",
            "nameLocation": "13308:33:78",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16188,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16187,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "13350:4:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 16201,
                  "src": "13342:12:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16186,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13342:7:78",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13341:14:78"
            },
            "returnParameters": {
              "id": 16189,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13370:0:78"
            },
            "scope": 16298,
            "src": "13299:169:78",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 16215,
              "nodeType": "Block",
              "src": "13556:117:78",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 16210,
                              "name": "OracleInterfaces",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26458,
                              "src": "13631:16:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_OracleInterfaces_$26458_$",
                                "typeString": "type(library OracleInterfaces)"
                              }
                            },
                            "id": 16211,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "OptimisticOracle",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 26451,
                            "src": "13631:33:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 16208,
                            "name": "finder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15750,
                            "src": "13599:6:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FinderInterface_$33609",
                              "typeString": "contract FinderInterface"
                            }
                          },
                          "id": 16209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getImplementationAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 33608,
                          "src": "13599:31:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 16212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13599:66:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 16207,
                      "name": "OptimisticOracleInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33871,
                      "src": "13573:25:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_OptimisticOracleInterface_$33871_$",
                        "typeString": "type(contract OptimisticOracleInterface)"
                      }
                    },
                    "id": 16213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13573:93:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OptimisticOracleInterface_$33871",
                      "typeString": "contract OptimisticOracleInterface"
                    }
                  },
                  "functionReturnParameters": 16206,
                  "id": 16214,
                  "nodeType": "Return",
                  "src": "13566:100:78"
                }
              ]
            },
            "id": 16216,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getOptimisticOracle",
            "nameLocation": "13483:20:78",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16202,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13503:2:78"
            },
            "returnParameters": {
              "id": 16206,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16205,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 16216,
                  "src": "13529:25:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_OptimisticOracleInterface_$33871",
                    "typeString": "contract OptimisticOracleInterface"
                  },
                  "typeName": {
                    "id": 16204,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 16203,
                      "name": "OptimisticOracleInterface",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 33871,
                      "src": "13529:25:78"
                    },
                    "referencedDeclaration": 33871,
                    "src": "13529:25:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OptimisticOracleInterface_$33871",
                      "typeString": "contract OptimisticOracleInterface"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13528:27:78"
            },
            "scope": 16298,
            "src": "13474:199:78",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 16230,
              "nodeType": "Block",
              "src": "13767:123:78",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 16225,
                              "name": "OracleInterfaces",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26458,
                              "src": "13845:16:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_OracleInterfaces_$26458_$",
                                "typeString": "type(library OracleInterfaces)"
                              }
                            },
                            "id": 16226,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "IdentifierWhitelist",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 26436,
                            "src": "13845:36:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 16223,
                            "name": "finder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15750,
                            "src": "13813:6:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FinderInterface_$33609",
                              "typeString": "contract FinderInterface"
                            }
                          },
                          "id": 16224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getImplementationAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 33608,
                          "src": "13813:31:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 16227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13813:69:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 16222,
                      "name": "IdentifierWhitelistInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33633,
                      "src": "13784:28:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IdentifierWhitelistInterface_$33633_$",
                        "typeString": "type(contract IdentifierWhitelistInterface)"
                      }
                    },
                    "id": 16228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13784:99:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IdentifierWhitelistInterface_$33633",
                      "typeString": "contract IdentifierWhitelistInterface"
                    }
                  },
                  "functionReturnParameters": 16221,
                  "id": 16229,
                  "nodeType": "Return",
                  "src": "13777:106:78"
                }
              ]
            },
            "id": 16231,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getIdentifierWhitelist",
            "nameLocation": "13688:23:78",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16217,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13711:2:78"
            },
            "returnParameters": {
              "id": 16221,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16220,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 16231,
                  "src": "13737:28:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IdentifierWhitelistInterface_$33633",
                    "typeString": "contract IdentifierWhitelistInterface"
                  },
                  "typeName": {
                    "id": 16219,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 16218,
                      "name": "IdentifierWhitelistInterface",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 33633,
                      "src": "13737:28:78"
                    },
                    "referencedDeclaration": 33633,
                    "src": "13737:28:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IdentifierWhitelistInterface_$33633",
                      "typeString": "contract IdentifierWhitelistInterface"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13736:30:78"
            },
            "scope": 16298,
            "src": "13679:211:78",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 16245,
              "nodeType": "Block",
              "src": "13969:111:78",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 16240,
                              "name": "OracleInterfaces",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26458,
                              "src": "14035:16:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_OracleInterfaces_$26458_$",
                                "typeString": "type(library OracleInterfaces)"
                              }
                            },
                            "id": 16241,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "CollateralWhitelist",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 26448,
                            "src": "14035:36:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 16238,
                            "name": "finder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15750,
                            "src": "14003:6:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FinderInterface_$33609",
                              "typeString": "contract FinderInterface"
                            }
                          },
                          "id": 16239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getImplementationAddress",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 33608,
                          "src": "14003:31:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes32_$returns$_t_address_$",
                            "typeString": "function (bytes32) view external returns (address)"
                          }
                        },
                        "id": 16242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14003:69:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 16237,
                      "name": "AddressWhitelist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1474,
                      "src": "13986:16:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_AddressWhitelist_$1474_$",
                        "typeString": "type(contract AddressWhitelist)"
                      }
                    },
                    "id": 16243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13986:87:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AddressWhitelist_$1474",
                      "typeString": "contract AddressWhitelist"
                    }
                  },
                  "functionReturnParameters": 16236,
                  "id": 16244,
                  "nodeType": "Return",
                  "src": "13979:94:78"
                }
              ]
            },
            "id": 16246,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getAddressWhitelist",
            "nameLocation": "13905:20:78",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16232,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13925:2:78"
            },
            "returnParameters": {
              "id": 16236,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16235,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 16246,
                  "src": "13951:16:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_AddressWhitelist_$1474",
                    "typeString": "contract AddressWhitelist"
                  },
                  "typeName": {
                    "id": 16234,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 16233,
                      "name": "AddressWhitelist",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1474,
                      "src": "13951:16:78"
                    },
                    "referencedDeclaration": 1474,
                    "src": "13951:16:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AddressWhitelist_$1474",
                      "typeString": "contract AddressWhitelist"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13950:18:78"
            },
            "scope": 16298,
            "src": "13896:184:78",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 16296,
              "nodeType": "Block",
              "src": "14297:515:78",
              "statements": [
                {
                  "assignments": [
                    16255
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 16255,
                      "mutability": "mutable",
                      "name": "oracle",
                      "nameLocation": "14333:6:78",
                      "nodeType": "VariableDeclaration",
                      "scope": 16296,
                      "src": "14307:32:78",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OptimisticOracleInterface_$33871",
                        "typeString": "contract OptimisticOracleInterface"
                      },
                      "typeName": {
                        "id": 16254,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 16253,
                          "name": "OptimisticOracleInterface",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 33871,
                          "src": "14307:25:78"
                        },
                        "referencedDeclaration": 33871,
                        "src": "14307:25:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracleInterface_$33871",
                          "typeString": "contract OptimisticOracleInterface"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 16258,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 16256,
                      "name": "_getOptimisticOracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16216,
                      "src": "14342:20:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_OptimisticOracleInterface_$33871_$",
                        "typeString": "function () view returns (contract OptimisticOracleInterface)"
                      }
                    },
                    "id": 16257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14342:22:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OptimisticOracleInterface_$33871",
                      "typeString": "contract OptimisticOracleInterface"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14307:57:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 16264,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "14419:4:78",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_OptimisticDepositBox_$16298",
                                  "typeString": "contract OptimisticDepositBox"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_OptimisticDepositBox_$16298",
                                  "typeString": "contract OptimisticDepositBox"
                                }
                              ],
                              "id": 16263,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "14411:7:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 16262,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "14411:7:78",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 16265,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14411:13:78",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 16266,
                            "name": "priceIdentifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15747,
                            "src": "14426:15:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 16267,
                            "name": "withdrawalRequestTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16248,
                            "src": "14443:26:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "",
                            "id": 16268,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14471:2:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "expression": {
                            "id": 16260,
                            "name": "oracle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16255,
                            "src": "14395:6:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimisticOracleInterface_$33871",
                              "typeString": "contract OptimisticOracleInterface"
                            }
                          },
                          "id": 16261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "hasPrice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 33861,
                          "src": "14395:15:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_bytes32_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,bytes32,uint256,bytes memory) view external returns (bool)"
                          }
                        },
                        "id": 16269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14395:79:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e7265736f6c766564206f7261636c65207072696365",
                        "id": 16270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14488:25:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d516ec8b6cede68cb5e8843a34f17ee999ccc46827444240c966860cdd26995",
                          "typeString": "literal_string \"Unresolved oracle price\""
                        },
                        "value": "Unresolved oracle price"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d516ec8b6cede68cb5e8843a34f17ee999ccc46827444240c966860cdd26995",
                          "typeString": "literal_string \"Unresolved oracle price\""
                        }
                      ],
                      "id": 16259,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "14374:7:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 16271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14374:149:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 16272,
                  "nodeType": "ExpressionStatement",
                  "src": "14374:149:78"
                },
                {
                  "assignments": [
                    16274
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 16274,
                      "mutability": "mutable",
                      "name": "oraclePrice",
                      "nameLocation": "14540:11:78",
                      "nodeType": "VariableDeclaration",
                      "scope": 16296,
                      "src": "14533:18:78",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 16273,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14533:6:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 16281,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 16277,
                        "name": "priceIdentifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15747,
                        "src": "14579:15:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 16278,
                        "name": "withdrawalRequestTimestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16248,
                        "src": "14596:26:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 16279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14624:2:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "id": 16275,
                        "name": "oracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16255,
                        "src": "14554:6:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimisticOracleInterface_$33871",
                          "typeString": "contract OptimisticOracleInterface"
                        }
                      },
                      "id": 16276,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "settleAndGetPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33803,
                      "src": "14554:24:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_int256_$",
                        "typeString": "function (bytes32,uint256,bytes memory) external returns (int256)"
                      }
                    },
                    "id": 16280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14554:73:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14533:94:78"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 16284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 16282,
                      "name": "oraclePrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16274,
                      "src": "14712:11:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 16283,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14726:1:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "14712:15:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 16290,
                  "nodeType": "IfStatement",
                  "src": "14708:61:78",
                  "trueBody": {
                    "id": 16289,
                    "nodeType": "Block",
                    "src": "14729:40:78",
                    "statements": [
                      {
                        "expression": {
                          "id": 16287,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 16285,
                            "name": "oraclePrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16274,
                            "src": "14743:11:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 16286,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14757:1:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "14743:15:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "id": 16288,
                        "nodeType": "ExpressionStatement",
                        "src": "14743:15:78"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 16293,
                        "name": "oraclePrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16274,
                        "src": "14793:11:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 16292,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "14785:7:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 16291,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14785:7:78",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 16294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14785:20:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 16252,
                  "id": 16295,
                  "nodeType": "Return",
                  "src": "14778:27:78"
                }
              ]
            },
            "id": 16297,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getOraclePrice",
            "nameLocation": "14218:15:78",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16249,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16248,
                  "mutability": "mutable",
                  "name": "withdrawalRequestTimestamp",
                  "nameLocation": "14242:26:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 16297,
                  "src": "14234:34:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16247,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14234:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14233:36:78"
            },
            "returnParameters": {
              "id": 16252,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16251,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 16297,
                  "src": "14288:7:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 16250,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14288:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14287:9:78"
            },
            "scope": 16298,
            "src": "14209:603:78",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 16299,
        "src": "2340:12474:78",
        "usedErrors": []
      }
    ],
    "src": "42:14773:78"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-07-16T20:27:09.774Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "constructor": {
        "params": {
          "_collateralAddress": "ERC20 token to be deposited.",
          "_finderAddress": "UMA protocol Finder used to discover other protocol contracts.",
          "_priceIdentifier": "registered in the DVM, used to price the ERC20 deposited. The price identifier consists of a \"base\" asset and a \"quote\" asset. The \"base\" asset corresponds to the collateral ERC20 currency deposited into this account, and it is denominated in the \"quote\" asset on withdrawals. An example price identifier would be \"ETH/USD\" which will resolve and return the USD price of ETH.",
          "_timerAddress": "contract that stores the current time in a testing environment. Must be set to 0x0 for production environments that use live time."
        }
      },
      "deposit(uint256)": {
        "details": "This contract must be approved to spend at least `collateralAmount` of `collateralCurrency`.",
        "params": {
          "collateralAmount": "total amount of collateral tokens to be sent to the sponsor's position."
        }
      },
      "executeWithdrawal()": {
        "details": "Might not withdraw the full requested amount in order to account for precision loss.",
        "returns": {
          "amountWithdrawn": "The actual amount of collateral withdrawn."
        }
      },
      "getCollateral(address)": {
        "params": {
          "user": "address whose collateral amount is retrieved."
        },
        "returns": {
          "_0": "the collateral amount in the deposit box (i.e. available for withdrawal)."
        }
      },
      "getCurrentTime()": {
        "returns": {
          "_0": "uint for the current Testable timestamp."
        }
      },
      "requestWithdrawal(uint256)": {
        "details": "The request will be pending for the duration of the liveness period and can be cancelled at any time. Only one withdrawal request can exist for the user.",
        "params": {
          "denominatedCollateralAmount": "the quote-asset denominated amount of collateral requested to withdraw."
        }
      },
      "setCurrentTime(uint256)": {
        "details": "Will revert if not running in test mode.",
        "params": {
          "time": "timestamp to set current Testable time to."
        }
      }
    },
    "title": "Optimistic Token Deposit Box",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "cancelWithdrawal()": {
        "notice": "Cancels a pending withdrawal request."
      },
      "constructor": {
        "notice": "Construct the OptimisticDepositBox."
      },
      "deposit(uint256)": {
        "notice": "Transfers `collateralAmount` of `collateralCurrency` into caller's deposit box."
      },
      "executeWithdrawal()": {
        "notice": "After a withdrawal request (i.e., by a call to `requestWithdrawal`) and optimistic oracle price resolution, withdraws `depositBoxData.withdrawalRequestAmount` of collateral currency denominated in the quote asset."
      },
      "getCollateral(address)": {
        "notice": "Accessor method for a user's collateral."
      },
      "getCurrentTime()": {
        "notice": "Gets the current time. Will return the last time set in `setCurrentTime` if running in test mode. Otherwise, it will return the block timestamp."
      },
      "requestWithdrawal(uint256)": {
        "notice": "Starts a withdrawal request that allows the sponsor to withdraw `denominatedCollateralAmount` from their position denominated in the quote asset of the price identifier, following a Optimistic Oracle price resolution."
      },
      "setCurrentTime(uint256)": {
        "notice": "Sets the current time."
      }
    },
    "notice": "This is a minimal example of a financial template that depends on price requests from the Optimistic Oracle. This contract should be thought of as a \"Deposit Box\" into which the user deposits some ERC20 collateral. The main feature of this box is that the user can withdraw their ERC20 corresponding to a desired USD amount. When the user wants to make a withdrawal, a price request is made to the Optimistic Oracle. For simplicity, the user is constrained to have one outstanding withdrawal request at any given time. Final fees are charged to the proposer of a price but not to the contract making a price request. This example is intended to accompany a technical tutorial for how to integrate the Optimistic Oracle into a project. The main feature this demo serves to showcase is how to build a financial product on-chain that \"pulls\" price requests from the Optimistic Oracle on-demand, which is an implementation of the \"priceless\" oracle framework. The typical user flow would be: - User sets up a deposit box for the ETH/USD price-identifier.   The \"collateral currency\" in this deposit box is therefore wETH.   The user can subsequently make withdrawal requests for USD-denominated amounts of wETH. - User deposits 10 wETH into their deposit box. - User later requests to withdraw $10,000 USD of wETH. - OptimisticDepositBox asks Optimistic Oracle for latest ETH/USD exchange rate. - Optimistic Oracle resolves the exchange rate at: 1 wETH is worth 2000 USD. - OptimisticDepositBox transfers 5 wETH to user.",
    "version": 1
  }
}