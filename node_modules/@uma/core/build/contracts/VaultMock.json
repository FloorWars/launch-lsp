{
  "contractName": "VaultMock",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_token",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPricePerFullShare",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_pricePerFullShare",
          "type": "uint256"
        }
      ],
      "name": "setPricePerFullShare",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getPricePerFullShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pricePerFullShare\",\"type\":\"uint256\"}],\"name\":\"setPricePerFullShare\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Mock for yearn-style vaults for use in tests.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/circleci/protocol/packages/core/contracts/common/test/VaultMock.sol\":\"VaultMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":199},\"remappings\":[]},\"sources\":{\"/home/circleci/protocol/packages/core/contracts/common/interfaces/VaultInterface.sol\":{\"keccak256\":\"0x175266d677be8a69e0914388d6acd52f56c973e2aef60d655471f5d5835de3bf\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://305e76636bc23f94bccbbfd92fec3f6db36754443f94aa9724c72aee36c4445d\",\"dweb:/ipfs/QmX8tMvgv3N4CsQt1tTiDPRAX63vXaLHQHXbCiJC39ddtZ\"]},\"/home/circleci/protocol/packages/core/contracts/common/test/VaultMock.sol\":{\"keccak256\":\"0xfdc49f7a60c7ae2e18e4c71da311f3ee4b8476870e4962cdaf6cb108849a543f\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://4ebff70bc6fb62497a3ba7d6640f1ca09bcd641af2cb69cbe226d527100e1da5\",\"dweb:/ipfs/QmfQTVzAPfB74MVE615RshMCUCydsE3j3nokUewsLUXXCp\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f\",\"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U\"]}},\"version\":1}",
  "bytecode": "0x6080604052600060015534801561001557600080fd5b5060405161017438038061017483398101604081905261003491610059565b600080546001600160a01b0319166001600160a01b0392909216919091179055610087565b60006020828403121561006a578081fd5b81516001600160a01b0381168114610080578182fd5b9392505050565b60df806100956000396000f3fe6080604052348015600f57600080fd5b5060043610603c5760003560e01c806377c7b8fc146041578063c3819fb6146057578063fc0c546a146069575b600080fd5b6001546040519081526020015b60405180910390f35b606760623660046092565b600155565b005b600054607b906001600160a01b031681565b6040516001600160a01b039091168152602001604e565b60006020828403121560a2578081fd5b503591905056fea26469706673582212206195e43501214aeadd788badf173f8fdbbaab6b87dec81ebe4a6f869f0beb79164736f6c63430008040033",
  "deployedBytecode": "0x6080604052348015600f57600080fd5b5060043610603c5760003560e01c806377c7b8fc146041578063c3819fb6146057578063fc0c546a146069575b600080fd5b6001546040519081526020015b60405180910390f35b606760623660046092565b600155565b005b600054607b906001600160a01b031681565b6040516001600160a01b039091168152602001604e565b60006020828403121560a2578081fd5b503591905056fea26469706673582212206195e43501214aeadd788badf173f8fdbbaab6b87dec81ebe4a6f869f0beb79164736f6c63430008040033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:342:192",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:192",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "111:229:192",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "157:26:192",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "166:6:192"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "174:6:192"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "159:6:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "159:22:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "159:22:192"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "132:7:192"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "141:9:192"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "128:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "128:23:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "153:2:192",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "124:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "124:32:192"
                  },
                  "nodeType": "YulIf",
                  "src": "121:2:192"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "192:29:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "211:9:192"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "205:5:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "205:16:192"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "196:5:192",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "284:26:192",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "293:6:192"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "301:6:192"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "286:6:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "286:22:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "286:22:192"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "243:5:192"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "254:5:192"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "269:3:192",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "274:1:192",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "265:3:192"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "265:11:192"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "278:1:192",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "261:3:192"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "261:19:192"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "250:3:192"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "250:31:192"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "240:2:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "240:42:192"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "233:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "233:50:192"
                  },
                  "nodeType": "YulIf",
                  "src": "230:2:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "319:15:192",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "329:5:192"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "319:6:192"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IERC20_$41847_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "77:9:192",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "88:7:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "100:6:192",
                "type": ""
              }
            ],
            "src": "14:326:192"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_contract$_IERC20_$41847_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n}",
      "id": 192,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:612:192",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:192",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:120:192",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:26:192",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "139:6:192"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "147:6:192"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:22:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:22:192"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:192"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:192"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:192",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:192"
                  },
                  "nodeType": "YulIf",
                  "src": "94:2:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "165:33:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "188:9:192"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "175:12:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "175:23:192"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "165:6:192"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:192",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:192",
                "type": ""
              }
            ],
            "src": "14:190:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "326:102:192",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "336:26:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "348:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "359:2:192",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "344:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "344:18:192"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "336:4:192"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "378:9:192"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "393:6:192"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "409:3:192",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "414:1:192",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "405:3:192"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "405:11:192"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "418:1:192",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "401:3:192"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "401:19:192"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "389:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "389:32:192"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "371:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "371:51:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "371:51:192"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC20_$41847__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "295:9:192",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "306:6:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "317:4:192",
                "type": ""
              }
            ],
            "src": "209:219:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "534:76:192",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "544:26:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "556:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "567:2:192",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "552:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "552:18:192"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "544:4:192"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "586:9:192"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "597:6:192"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "579:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "579:25:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "579:25:192"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "503:9:192",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "514:6:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "525:4:192",
                "type": ""
              }
            ],
            "src": "433:177:192"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$41847__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
      "id": 192,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "232:429:44:-:0;;;345:1;309:37;;353:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;390:5;:14;;-1:-1:-1;;;;;;390:14:44;-1:-1:-1;;;;;390:14:44;;;;;;;;;;232:429;;14:326:192;100:6;153:2;141:9;132:7;128:23;124:32;121:2;;;174:6;166;159:22;121:2;205:16;;-1:-1:-1;;;;;250:31:192;;240:42;;230:2;;301:6;293;286:22;230:2;329:5;111:229;-1:-1:-1;;;111:229:192:o;:::-;232:429:44;;;;;;",
  "deployedSourceMap": "232:429:44:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;417:114;507:17;;417:114;;579:25:192;;;567:2;552:18;417:114:44;;;;;;;;537:122;;;;;;:::i;:::-;614:17;:38;537:122;;;275:28;;;;;-1:-1:-1;;;;;275:28:44;;;;;;-1:-1:-1;;;;;389:32:192;;;371:51;;359:2;344:18;275:28:44;326:102:192;14:190;73:6;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;-1:-1:-1;175:23:192;;84:120;-1:-1:-1;84:120:192:o",
  "source": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity ^0.8.0;\n\nimport \"../interfaces/VaultInterface.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n/**\n * @title Mock for yearn-style vaults for use in tests.\n */\ncontract VaultMock is VaultInterface {\n    IERC20 public override token;\n    uint256 private pricePerFullShare = 0;\n\n    constructor(IERC20 _token) {\n        token = _token;\n    }\n\n    function getPricePerFullShare() external view override returns (uint256) {\n        return pricePerFullShare;\n    }\n\n    function setPricePerFullShare(uint256 _pricePerFullShare) external {\n        pricePerFullShare = _pricePerFullShare;\n    }\n}\n",
  "sourcePath": "/home/circleci/protocol/packages/core/contracts/common/test/VaultMock.sol",
  "ast": {
    "absolutePath": "/home/circleci/protocol/packages/core/contracts/common/test/VaultMock.sol",
    "exportedSymbols": {
      "IERC20": [
        41847
      ],
      "VaultInterface": [
        5668
      ],
      "VaultMock": [
        8040
      ]
    },
    "id": 8041,
    "license": "AGPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7997,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:23:44"
      },
      {
        "absolutePath": "/home/circleci/protocol/packages/core/contracts/common/interfaces/VaultInterface.sol",
        "file": "../interfaces/VaultInterface.sol",
        "id": 7998,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8041,
        "sourceUnit": 5669,
        "src": "67:42:44",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 7999,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8041,
        "sourceUnit": 41848,
        "src": "110:56:44",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 8001,
              "name": "VaultInterface",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5668,
              "src": "254:14:44"
            },
            "id": 8002,
            "nodeType": "InheritanceSpecifier",
            "src": "254:14:44"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 8000,
          "nodeType": "StructuredDocumentation",
          "src": "168:63:44",
          "text": " @title Mock for yearn-style vaults for use in tests."
        },
        "fullyImplemented": true,
        "id": 8040,
        "linearizedBaseContracts": [
          8040,
          5668
        ],
        "name": "VaultMock",
        "nameLocation": "241:9:44",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              5662
            ],
            "constant": false,
            "functionSelector": "fc0c546a",
            "id": 8006,
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "298:5:44",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 8005,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "289:8:44"
            },
            "scope": 8040,
            "src": "275:28:44",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$41847",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 8004,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 8003,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 41847,
                "src": "275:6:44"
              },
              "referencedDeclaration": 41847,
              "src": "275:6:44",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$41847",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 8009,
            "mutability": "mutable",
            "name": "pricePerFullShare",
            "nameLocation": "325:17:44",
            "nodeType": "VariableDeclaration",
            "scope": 8040,
            "src": "309:37:44",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 8007,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "309:7:44",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 8008,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "345:1:44",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 8019,
              "nodeType": "Block",
              "src": "380:31:44",
              "statements": [
                {
                  "expression": {
                    "id": 8017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8015,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8006,
                      "src": "390:5:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$41847",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8016,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8012,
                      "src": "398:6:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$41847",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "390:14:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$41847",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 8018,
                  "nodeType": "ExpressionStatement",
                  "src": "390:14:44"
                }
              ]
            },
            "id": 8020,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8013,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8012,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "372:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 8020,
                  "src": "365:13:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$41847",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 8011,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8010,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 41847,
                      "src": "365:6:44"
                    },
                    "referencedDeclaration": 41847,
                    "src": "365:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$41847",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "364:15:44"
            },
            "returnParameters": {
              "id": 8014,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "380:0:44"
            },
            "scope": 8040,
            "src": "353:58:44",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5667
            ],
            "body": {
              "id": 8028,
              "nodeType": "Block",
              "src": "490:41:44",
              "statements": [
                {
                  "expression": {
                    "id": 8026,
                    "name": "pricePerFullShare",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8009,
                    "src": "507:17:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 8025,
                  "id": 8027,
                  "nodeType": "Return",
                  "src": "500:24:44"
                }
              ]
            },
            "functionSelector": "77c7b8fc",
            "id": 8029,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPricePerFullShare",
            "nameLocation": "426:20:44",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 8022,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "463:8:44"
            },
            "parameters": {
              "id": 8021,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "446:2:44"
            },
            "returnParameters": {
              "id": 8025,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8024,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8029,
                  "src": "481:7:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8023,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "481:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "480:9:44"
            },
            "scope": 8040,
            "src": "417:114:44",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8038,
              "nodeType": "Block",
              "src": "604:55:44",
              "statements": [
                {
                  "expression": {
                    "id": 8036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8034,
                      "name": "pricePerFullShare",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8009,
                      "src": "614:17:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8035,
                      "name": "_pricePerFullShare",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8031,
                      "src": "634:18:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "614:38:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8037,
                  "nodeType": "ExpressionStatement",
                  "src": "614:38:44"
                }
              ]
            },
            "functionSelector": "c3819fb6",
            "id": 8039,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setPricePerFullShare",
            "nameLocation": "546:20:44",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8032,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8031,
                  "mutability": "mutable",
                  "name": "_pricePerFullShare",
                  "nameLocation": "575:18:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 8039,
                  "src": "567:26:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8030,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "567:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "566:28:44"
            },
            "returnParameters": {
              "id": 8033,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "604:0:44"
            },
            "scope": 8040,
            "src": "537:122:44",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 8041,
        "src": "232:429:44",
        "usedErrors": []
      }
    ],
    "src": "42:620:44"
  },
  "legacyAST": {
    "absolutePath": "/home/circleci/protocol/packages/core/contracts/common/test/VaultMock.sol",
    "exportedSymbols": {
      "IERC20": [
        41847
      ],
      "VaultInterface": [
        5668
      ],
      "VaultMock": [
        8040
      ]
    },
    "id": 8041,
    "license": "AGPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7997,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:23:44"
      },
      {
        "absolutePath": "/home/circleci/protocol/packages/core/contracts/common/interfaces/VaultInterface.sol",
        "file": "../interfaces/VaultInterface.sol",
        "id": 7998,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8041,
        "sourceUnit": 5669,
        "src": "67:42:44",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 7999,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 8041,
        "sourceUnit": 41848,
        "src": "110:56:44",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 8001,
              "name": "VaultInterface",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5668,
              "src": "254:14:44"
            },
            "id": 8002,
            "nodeType": "InheritanceSpecifier",
            "src": "254:14:44"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 8000,
          "nodeType": "StructuredDocumentation",
          "src": "168:63:44",
          "text": " @title Mock for yearn-style vaults for use in tests."
        },
        "fullyImplemented": true,
        "id": 8040,
        "linearizedBaseContracts": [
          8040,
          5668
        ],
        "name": "VaultMock",
        "nameLocation": "241:9:44",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              5662
            ],
            "constant": false,
            "functionSelector": "fc0c546a",
            "id": 8006,
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "298:5:44",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 8005,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "289:8:44"
            },
            "scope": 8040,
            "src": "275:28:44",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$41847",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 8004,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 8003,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 41847,
                "src": "275:6:44"
              },
              "referencedDeclaration": 41847,
              "src": "275:6:44",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$41847",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 8009,
            "mutability": "mutable",
            "name": "pricePerFullShare",
            "nameLocation": "325:17:44",
            "nodeType": "VariableDeclaration",
            "scope": 8040,
            "src": "309:37:44",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 8007,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "309:7:44",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 8008,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "345:1:44",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 8019,
              "nodeType": "Block",
              "src": "380:31:44",
              "statements": [
                {
                  "expression": {
                    "id": 8017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8015,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8006,
                      "src": "390:5:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$41847",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8016,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8012,
                      "src": "398:6:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$41847",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "390:14:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$41847",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 8018,
                  "nodeType": "ExpressionStatement",
                  "src": "390:14:44"
                }
              ]
            },
            "id": 8020,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8013,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8012,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "372:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 8020,
                  "src": "365:13:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$41847",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 8011,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 8010,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 41847,
                      "src": "365:6:44"
                    },
                    "referencedDeclaration": 41847,
                    "src": "365:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$41847",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "364:15:44"
            },
            "returnParameters": {
              "id": 8014,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "380:0:44"
            },
            "scope": 8040,
            "src": "353:58:44",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5667
            ],
            "body": {
              "id": 8028,
              "nodeType": "Block",
              "src": "490:41:44",
              "statements": [
                {
                  "expression": {
                    "id": 8026,
                    "name": "pricePerFullShare",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8009,
                    "src": "507:17:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 8025,
                  "id": 8027,
                  "nodeType": "Return",
                  "src": "500:24:44"
                }
              ]
            },
            "functionSelector": "77c7b8fc",
            "id": 8029,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPricePerFullShare",
            "nameLocation": "426:20:44",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 8022,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "463:8:44"
            },
            "parameters": {
              "id": 8021,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "446:2:44"
            },
            "returnParameters": {
              "id": 8025,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8024,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 8029,
                  "src": "481:7:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8023,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "481:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "480:9:44"
            },
            "scope": 8040,
            "src": "417:114:44",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 8038,
              "nodeType": "Block",
              "src": "604:55:44",
              "statements": [
                {
                  "expression": {
                    "id": 8036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 8034,
                      "name": "pricePerFullShare",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8009,
                      "src": "614:17:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 8035,
                      "name": "_pricePerFullShare",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8031,
                      "src": "634:18:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "614:38:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 8037,
                  "nodeType": "ExpressionStatement",
                  "src": "614:38:44"
                }
              ]
            },
            "functionSelector": "c3819fb6",
            "id": 8039,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setPricePerFullShare",
            "nameLocation": "546:20:44",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8032,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8031,
                  "mutability": "mutable",
                  "name": "_pricePerFullShare",
                  "nameLocation": "575:18:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 8039,
                  "src": "567:26:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8030,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "567:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "566:28:44"
            },
            "returnParameters": {
              "id": 8033,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "604:0:44"
            },
            "scope": 8040,
            "src": "537:122:44",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 8041,
        "src": "232:429:44",
        "usedErrors": []
      }
    ],
    "src": "42:620:44"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-07-16T20:27:09.646Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "title": "Mock for yearn-style vaults for use in tests.",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}