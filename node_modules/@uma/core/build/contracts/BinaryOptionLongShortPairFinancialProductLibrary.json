{
  "contractName": "BinaryOptionLongShortPairFinancialProductLibrary",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "longShortPairParameters",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isSet",
          "type": "bool"
        },
        {
          "internalType": "int256",
          "name": "strikePrice",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "longShortPair",
          "type": "address"
        },
        {
          "internalType": "int256",
          "name": "strikePrice",
          "type": "int256"
        }
      ],
      "name": "setLongShortPairParameters",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "expiryPrice",
          "type": "int256"
        }
      ],
      "name": "percentageLongCollateralAtExpiry",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"longShortPairParameters\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isSet\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"strikePrice\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"expiryPrice\",\"type\":\"int256\"}],\"name\":\"percentageLongCollateralAtExpiry\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"longShortPair\",\"type\":\"address\"},{\"internalType\":\"int256\",\"name\":\"strikePrice\",\"type\":\"int256\"}],\"name\":\"setLongShortPairParameters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"percentageLongCollateralAtExpiry(int256)\":{\"params\":{\"expiryPrice\":\"price from the optimistic oracle for the LSP price identifier.\"},\"returns\":{\"_0\":\"expiryPercentLong to indicate how much collateral should be sent between long and short tokens.\"}},\"setLongShortPairParameters(address,int256)\":{\"details\":\"Note: a) Any address can set the initial strike price b) A strike can be 0. c) A strike price can only be set once to prevent the deployer from changing the strike after the fact. d) For safety, a strike price should be set before depositing any synthetic tokens in a liquidity pool. e) longShortPair must expose an expirationTimestamp method to validate it is correctly deployed.\",\"params\":{\"longShortPair\":\"address of the LSP.\",\"strikePrice\":\"the strike price for the binary option.\"}}},\"title\":\"Binary Option Long Short Pair Financial Product Library.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"percentageLongCollateralAtExpiry(int256)\":{\"notice\":\"Returns a number between 0 and 1e18 to indicate how much collateral each long and short token are entitled to per collateralPerPair.\"},\"setLongShortPairParameters(address,int256)\":{\"notice\":\"Enables any address to set the strike price for an associated binary option.\"}},\"notice\":\"Adds settlement logic to binary option LSPs. Binary options settle with all collateral allocated to either the long or short side, depending on the settlement price. They can be used to make prediction markets or any kind of binary bet. Settlement is defined using a strike price which informs which side of the bet was correct. If settlement price is greater or equal to the strike then all value is sent to the long side. Otherwise, all value is sent to the short side. The settlement price could be a scalar (like the price of ETH) or a binary bet with settlement being 0 or 1 depending on the outcome.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/circleci/protocol/packages/core/contracts/financial-templates/common/financial-product-libraries/long-short-pair-libraries/BinaryOptionLongShortPairFinancialProductLibrary.sol\":\"BinaryOptionLongShortPairFinancialProductLibrary\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":199},\"remappings\":[]},\"sources\":{\"/home/circleci/protocol/packages/core/contracts/common/implementation/FixedPoint.sol\":{\"keccak256\":\"0x8ea44f1bf5e1efcfc5943ea67c3dc5bf7ce1ba84bf2d6b868baafac7e422cc01\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://94e828e682e9e44991807f5f39c2ed499b451d65155d8a6c6d0fd62b13dbd222\",\"dweb:/ipfs/QmPfPWyR9deca2dHmwVnm3E9Kt2fLXXABQE4WT8iSdKSXm\"]},\"/home/circleci/protocol/packages/core/contracts/common/implementation/Lockable.sol\":{\"keccak256\":\"0xcd34b3f83b61a096b53020749f327096d5cacd89c2393d947595afb934496ad4\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://aef5cb31ab23e1e6baad76130c29aff1ee3fcda3c4ffc80e0a5294341a253934\",\"dweb:/ipfs/QmNyso4UszNxE6un3Cqc3R7KiBmZzdWNULvjBDfnLRAmwc\"]},\"/home/circleci/protocol/packages/core/contracts/financial-templates/common/financial-product-libraries/long-short-pair-libraries/BinaryOptionLongShortPairFinancialProductLibrary.sol\":{\"keccak256\":\"0xcf48856c022682eac11a42ae608e5c205bedbc885152d2f8b2efc19599800e7f\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://3bea87d38b32ad6f09b732c2dd28b333303e815978556459f10dc3e030df6864\",\"dweb:/ipfs/QmWuy6n5yNyrejNRqgihiZJdmdfHG8vacAbzrApMBvCvWK\"]},\"/home/circleci/protocol/packages/core/contracts/financial-templates/common/financial-product-libraries/long-short-pair-libraries/LongShortPairFinancialProductLibrary.sol\":{\"keccak256\":\"0x74229dc41c9be406f5b038f5e7e42403355110559e5f37ade5ed3d547020cfae\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://05bfc5c3dcf36b82db8530b259933c8112dbfa9ca14f287b4bf57209aee5449b\",\"dweb:/ipfs/QmdvWd7xU6FcduDBjzw1QpqRCRe1ogkL4xXYWWMsYT6vYN\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x2526b7c6a366fc211bbc176078ab02b83833e7682abcc5b3bed9d700b34e2a3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f9529d3d365e8415155cee11394e0f7c0de2152b601b7e77508fce16cb4a509\",\"dweb:/ipfs/QmVhbcLVsAzvqfjsdLwy25XMjgVJm7Z3w2JCNiNbZF2GHT\"]},\"@openzeppelin/contracts/utils/math/SignedSafeMath.sol\":{\"keccak256\":\"0xd1ddc24b24f12a347093844dd645c3a96bcdce05d1f51b8650946ad404cb3c40\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://873363c817ef68913ced271e77fc4af21d4a94ffba23de2b205c6e9de8ff6b72\",\"dweb:/ipfs/QmNmN46R3rrvTxMUjDTbZiCiqqTX9TRvWbiaN9qLrWQXPS\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506000805460ff191660011790556104848061002d6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80632da52361146100465780639299cbed1461006c5780639e33e2df146100b0575b600080fd5b6100596100543660046103f3565b6100c5565b6040519081526020015b60405180910390f35b61009961007a3660046103b0565b6001602081905260009182526040909120805491015460ff9091169082565b604080519215158352602083019190915201610063565b6100c36100be3660046103ca565b61017a565b005b60006100cf6102fd565b336000908152600160208181526040928390208351808501909452805460ff1615158085529201549083015261014c5760405162461bcd60e51b815260206004820152601e60248201527f506172616d73206e6f742073657420666f722063616c6c696e67204c5350000060448201526064015b60405180910390fd5b8060200151831261016b576101616001610351565b5191506101759050565b6101616000610351565b919050565b6101826102fd565b6101916000805460ff19169055565b816001600160a01b0316639f43ddd26040518163ffffffff1660e01b815260040160206040518083038186803b1580156101ca57600080fd5b505afa1580156101de573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610202919061040b565b6102445760405162461bcd60e51b8152602060048201526013602482015272496e76616c6964204c5350206164647265737360681b6044820152606401610143565b6001600160a01b03821660009081526001602052604090205460ff16156102a65760405162461bcd60e51b815260206004820152601660248201527514185c985b595d195c9cc8185b1c9958591e481cd95d60521b6044820152606401610143565b604080518082018252600180825260208083018581526001600160a01b0387166000908152918390529390209151825490151560ff1990911617825591519101556102f96000805460ff19166001179055565b5050565b60005460ff1661034f5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610143565b565b60408051602081019091526000815260408051602081019091528061037e84670de0b6b3a7640000610386565b905292915050565b60006103928284610423565b9392505050565b80356001600160a01b038116811461017557600080fd5b6000602082840312156103c1578081fd5b61039282610399565b600080604083850312156103dc578081fd5b6103e583610399565b946020939093013593505050565b600060208284031215610404578081fd5b5035919050565b60006020828403121561041c578081fd5b5051919050565b600081600019048311821515161561044957634e487b7160e01b81526011600452602481fd5b50029056fea26469706673582212204cb500da4ea1f13fc6ad83ccb1e2e3d6d1ddcaf942b4c508f2cb2b9ebfc4bcec64736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c80632da52361146100465780639299cbed1461006c5780639e33e2df146100b0575b600080fd5b6100596100543660046103f3565b6100c5565b6040519081526020015b60405180910390f35b61009961007a3660046103b0565b6001602081905260009182526040909120805491015460ff9091169082565b604080519215158352602083019190915201610063565b6100c36100be3660046103ca565b61017a565b005b60006100cf6102fd565b336000908152600160208181526040928390208351808501909452805460ff1615158085529201549083015261014c5760405162461bcd60e51b815260206004820152601e60248201527f506172616d73206e6f742073657420666f722063616c6c696e67204c5350000060448201526064015b60405180910390fd5b8060200151831261016b576101616001610351565b5191506101759050565b6101616000610351565b919050565b6101826102fd565b6101916000805460ff19169055565b816001600160a01b0316639f43ddd26040518163ffffffff1660e01b815260040160206040518083038186803b1580156101ca57600080fd5b505afa1580156101de573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610202919061040b565b6102445760405162461bcd60e51b8152602060048201526013602482015272496e76616c6964204c5350206164647265737360681b6044820152606401610143565b6001600160a01b03821660009081526001602052604090205460ff16156102a65760405162461bcd60e51b815260206004820152601660248201527514185c985b595d195c9cc8185b1c9958591e481cd95d60521b6044820152606401610143565b604080518082018252600180825260208083018581526001600160a01b0387166000908152918390529390209151825490151560ff1990911617825591519101556102f96000805460ff19166001179055565b5050565b60005460ff1661034f5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610143565b565b60408051602081019091526000815260408051602081019091528061037e84670de0b6b3a7640000610386565b905292915050565b60006103928284610423565b9392505050565b80356001600160a01b038116811461017557600080fd5b6000602082840312156103c1578081fd5b61039282610399565b600080604083850312156103dc578081fd5b6103e583610399565b946020939093013593505050565b600060208284031215610404578081fd5b5035919050565b60006020828403121561041c578081fd5b5051919050565b600081600019048311821515161561044957634e487b7160e01b81526011600452602481fd5b50029056fea26469706673582212204cb500da4ea1f13fc6ad83ccb1e2e3d6d1ddcaf942b4c508f2cb2b9ebfc4bcec64736f6c63430008040033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3194:192",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:192",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "63:124:192",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "73:29:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:192"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "82:12:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:20:192"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "73:5:192"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "165:16:192",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "174:1:192",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "177:1:192",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "167:6:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "167:12:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "167:12:192"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "124:5:192"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "135:5:192"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "150:3:192",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "155:1:192",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "146:3:192"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "146:11:192"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "159:1:192",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "142:3:192"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "142:19:192"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "131:3:192"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "131:31:192"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "121:2:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "121:42:192"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "114:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "114:50:192"
                  },
                  "nodeType": "YulIf",
                  "src": "111:2:192"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "42:6:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:192",
                "type": ""
              }
            ],
            "src": "14:173:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "262:126:192",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "308:26:192",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "317:6:192"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "325:6:192"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "310:6:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "310:22:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "310:22:192"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "283:7:192"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "292:9:192"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "279:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "279:23:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "304:2:192",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "275:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "275:32:192"
                  },
                  "nodeType": "YulIf",
                  "src": "272:2:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "343:39:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "372:9:192"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "353:18:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "353:29:192"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "343:6:192"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "228:9:192",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "239:7:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "251:6:192",
                "type": ""
              }
            ],
            "src": "192:196:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "479:177:192",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "525:26:192",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "534:6:192"
                            },
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "542:6:192"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "527:6:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "527:22:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "527:22:192"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "500:7:192"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "509:9:192"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "496:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "496:23:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "521:2:192",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "492:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "492:32:192"
                  },
                  "nodeType": "YulIf",
                  "src": "489:2:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "560:39:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "589:9:192"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "570:18:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "570:29:192"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "560:6:192"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "608:42:192",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "635:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "646:2:192",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "631:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "631:18:192"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "618:12:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "618:32:192"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "608:6:192"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "437:9:192",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "448:7:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "460:6:192",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "468:6:192",
                "type": ""
              }
            ],
            "src": "393:263:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "730:120:192",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "776:26:192",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "785:6:192"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "793:6:192"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "778:6:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "778:22:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "778:22:192"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "751:7:192"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "760:9:192"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "747:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "747:23:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "772:2:192",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "743:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "743:32:192"
                  },
                  "nodeType": "YulIf",
                  "src": "740:2:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "811:33:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "834:9:192"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "821:12:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "821:23:192"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "811:6:192"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "696:9:192",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "707:7:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "719:6:192",
                "type": ""
              }
            ],
            "src": "661:189:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "936:113:192",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "982:26:192",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "991:6:192"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "999:6:192"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "984:6:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "984:22:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "984:22:192"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "957:7:192"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "966:9:192"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "953:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "953:23:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "978:2:192",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "949:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "949:32:192"
                  },
                  "nodeType": "YulIf",
                  "src": "946:2:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1017:26:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1033:9:192"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1027:5:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1027:16:192"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1017:6:192"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "902:9:192",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "913:7:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "925:6:192",
                "type": ""
              }
            ],
            "src": "855:194:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1175:135:192",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1185:26:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1197:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1208:2:192",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1193:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1193:18:192"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1185:4:192"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1227:9:192"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1252:6:192"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1245:6:192"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1245:14:192"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1238:6:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1238:22:192"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1220:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1220:41:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1220:41:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1281:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1292:2:192",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1277:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1277:18:192"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1297:6:192"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1270:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1270:34:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1270:34:192"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool_t_int256__to_t_bool_t_int256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1136:9:192",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1147:6:192",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1155:6:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1166:4:192",
                "type": ""
              }
            ],
            "src": "1054:256:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1489:172:192",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1506:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1517:2:192",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1499:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1499:21:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1499:21:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1540:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1551:2:192",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1536:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1536:18:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1556:2:192",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1529:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1529:30:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1529:30:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1579:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1590:2:192",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1575:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1575:18:192"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1595:24:192",
                        "type": "",
                        "value": "Parameters already set"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1568:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1568:52:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1568:52:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1629:26:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1641:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1652:2:192",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1637:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1637:18:192"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1629:4:192"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1c660ff5672050f49f4504349febd871d9a8af4dbd7a242ac305e556f78030ee__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1466:9:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1480:4:192",
                "type": ""
              }
            ],
            "src": "1315:346:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1840:180:192",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1857:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1868:2:192",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1850:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1850:21:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1850:21:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1891:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1902:2:192",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1887:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1887:18:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1907:2:192",
                        "type": "",
                        "value": "30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1880:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1880:30:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1880:30:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1930:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1941:2:192",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1926:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1926:18:192"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1946:32:192",
                        "type": "",
                        "value": "Params not set for calling LSP"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1919:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1919:60:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1919:60:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1988:26:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2000:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2011:2:192",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1996:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1996:18:192"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1988:4:192"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_68cc0dd0836e3d636c6d9a388054767b5f98741a714b83391a138d4c0cefe7d2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1817:9:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1831:4:192",
                "type": ""
              }
            ],
            "src": "1666:354:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2199:169:192",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2216:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2227:2:192",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2209:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2209:21:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2209:21:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2250:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2261:2:192",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2246:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2246:18:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2266:2:192",
                        "type": "",
                        "value": "19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2239:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2239:30:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2239:30:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2289:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2300:2:192",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2285:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2285:18:192"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2305:21:192",
                        "type": "",
                        "value": "Invalid LSP address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2278:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2278:49:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2278:49:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2336:26:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2348:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2359:2:192",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2344:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2344:18:192"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2336:4:192"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9c7a742eb98e20c17de092129b9e73fedab190e4a1e2e034f7e056503d041914__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2176:9:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2190:4:192",
                "type": ""
              }
            ],
            "src": "2025:343:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2547:181:192",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2564:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2575:2:192",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2557:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2557:21:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2557:21:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2598:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2609:2:192",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2594:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2594:18:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2614:2:192",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2587:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2587:30:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2587:30:192"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2637:9:192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2648:2:192",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2633:3:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2633:18:192"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2653:33:192",
                        "type": "",
                        "value": "ReentrancyGuard: reentrant call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2626:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2626:61:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2626:61:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2696:26:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2708:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2719:2:192",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2704:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2704:18:192"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2696:4:192"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2524:9:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2538:4:192",
                "type": ""
              }
            ],
            "src": "2373:355:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2834:76:192",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2844:26:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2856:9:192"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2867:2:192",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2852:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2852:18:192"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2844:4:192"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2886:9:192"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2897:6:192"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2879:6:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2879:25:192"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2879:25:192"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2803:9:192",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2814:6:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2825:4:192",
                "type": ""
              }
            ],
            "src": "2733:177:192"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2967:225:192",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3034:123:192",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "product",
                              "nodeType": "YulIdentifier",
                              "src": "3055:7:192"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3068:3:192",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3073:10:192",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "3064:3:192"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3064:20:192"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3048:6:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3048:37:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3048:37:192"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3105:1:192",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3108:4:192",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3098:6:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3098:15:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3098:15:192"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "product",
                              "nodeType": "YulIdentifier",
                              "src": "3133:7:192"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3142:4:192",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3126:6:192"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3126:21:192"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3126:21:192"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "2998:1:192"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2991:6:192"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2991:9:192"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "2984:6:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2984:17:192"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "3006:1:192"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3017:1:192",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "3013:3:192"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3013:6:192"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "3021:1:192"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "3009:3:192"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3009:14:192"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "3003:2:192"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3003:21:192"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2980:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2980:45:192"
                  },
                  "nodeType": "YulIf",
                  "src": "2977:2:192"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3166:20:192",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3181:1:192"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3184:1:192"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "3177:3:192"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3177:9:192"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "3166:7:192"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "2946:1:192",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "2949:1:192",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "2955:7:192",
                "type": ""
              }
            ],
            "src": "2915:277:192"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_int256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_int256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_bool_t_int256__to_t_bool_t_int256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_1c660ff5672050f49f4504349febd871d9a8af4dbd7a242ac305e556f78030ee__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Parameters already set\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_68cc0dd0836e3d636c6d9a388054767b5f98741a714b83391a138d4c0cefe7d2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Params not set for calling LSP\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9c7a742eb98e20c17de092129b9e73fedab190e4a1e2e034f7e056503d041914__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Invalid LSP address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x)))\n        {\n            mstore(product, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(product, 0x24)\n        }\n        product := mul(x, y)\n    }\n}",
      "id": 192,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "944:2340:72:-:0;;;;;;;;;;;;-1:-1:-1;874:11:11;:18;;-1:-1:-1;;874:18:11;888:4;874:18;;;944:2340:72;;;;;;",
  "deployedSourceMap": "944:2340:72:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2798:484;;;;;;:::i;:::-;;:::i;:::-;;;2879:25:192;;;2867:2;2852:18;2798:484:72;;;;;;;;1235:80;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1245:14:192;;1238:22;1220:41;;1292:2;1277:18;;1270:34;;;;1193:18;1235:80:72;1175:135:192;1958:463:72;;;;;;:::i;:::-;;:::i;:::-;;2798:484;2949:7;1603:19:11;:17;:19::i;:::-;3042:10:72::1;2972:43;3018:35:::0;;;:23:::1;:35;::::0;;;;;;;;2972:81;;;;::::1;::::0;;;;;::::1;;;;::::0;;;;::::1;::::0;;;::::1;::::0;3063:55:::1;;;::::0;-1:-1:-1;;;3063:55:72;;1868:2:192;3063:55:72::1;::::0;::::1;1850:21:192::0;1907:2;1887:18;;;1880:30;1946:32;1926:18;;;1919:60;1996:18;;3063:55:72::1;;;;;;;;;3148:6;:18;;;3133:11;:33;3129:146;;3175:30;3203:1;3175:27;:30::i;:::-;:39:::0;;-1:-1:-1;3168:46:72::1;::::0;-1:-1:-1;3168:46:72::1;3129:146;3236:30;3264:1;3236:27;:30::i;1632:1:11:-;2798:484:72::0;;;:::o;1958:463::-;1317:19:11;:17;:19::i;:::-;1346:17;2459:5;2445:19;;-1:-1:-1;;2445:19:11;;;2335:136;1346:17;2103:13:72::1;-1:-1:-1::0;;;;;2077:60:72::1;;:62;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2069:99;;;::::0;-1:-1:-1;;;2069:99:72;;2227:2:192;2069:99:72::1;::::0;::::1;2209:21:192::0;2266:2;2246:18;;;2239:30;-1:-1:-1;;;2285:18:192;;;2278:49;2344:18;;2069:99:72::1;2199:169:192::0;2069:99:72::1;-1:-1:-1::0;;;;;2187:38:72;::::1;;::::0;;;:23:::1;:38;::::0;;;;:44;::::1;;2186:45;2178:80;;;::::0;-1:-1:-1;;;2178:80:72;;1517:2:192;2178:80:72::1;::::0;::::1;1499:21:192::0;1556:2;1536:18;;;1529:30;-1:-1:-1;;;1575:18:192;;;1568:52;1637:18;;2178:80:72::1;1489:172:192::0;2178:80:72::1;2310:104;::::0;;;;::::1;::::0;;2361:4:::1;2310:104:::0;;;::::1;::::0;;::::1;::::0;;;-1:-1:-1;;;;;2269:38:72;::::1;-1:-1:-1::0;2269:38:72;;;;;;;;;;:145;;;;;::::1;;-1:-1:-1::0;;2269:145:72;;::::1;;::::0;;;;;::::1;::::0;1384:20:11;2658:11;:18;;-1:-1:-1;;2658:18:11;2672:4;2658:18;;;2477:206;1384:20;1958:463:72;;:::o;2143:186:11:-;2275:11;;;;2267:55;;;;-1:-1:-1;;;2267:55:11;;2575:2:192;2267:55:11;;;2557:21:192;2614:2;2594:18;;;2587:30;2653:33;2633:18;;;2626:61;2704:18;;2267:55:11;2547:181:192;2267:55:11;2143:186::o;1044:135:10:-;-1:-1:-1;;;;;;;;;;;;1138:34:10;;;;;;;;;;1147:24;:1;619:6;1147:5;:24::i;:::-;1138:34;;1131:41;1044:135;-1:-1:-1;;1044:135:10:o;3382:96:172:-;3440:7;3466:5;3470:1;3466;:5;:::i;:::-;3459:12;3382:96;-1:-1:-1;;;3382:96:172:o;14:173:192:-;82:20;;-1:-1:-1;;;;;131:31:192;;121:42;;111:2;;177:1;174;167:12;192:196;251:6;304:2;292:9;283:7;279:23;275:32;272:2;;;325:6;317;310:22;272:2;353:29;372:9;353:29;:::i;393:263::-;460:6;468;521:2;509:9;500:7;496:23;492:32;489:2;;;542:6;534;527:22;489:2;570:29;589:9;570:29;:::i;:::-;560:39;646:2;631:18;;;;618:32;;-1:-1:-1;;;479:177:192:o;661:189::-;719:6;772:2;760:9;751:7;747:23;743:32;740:2;;;793:6;785;778:22;740:2;-1:-1:-1;821:23:192;;730:120;-1:-1:-1;730:120:192:o;855:194::-;925:6;978:2;966:9;957:7;953:23;949:32;946:2;;;999:6;991;984:22;946:2;-1:-1:-1;1027:16:192;;936:113;-1:-1:-1;936:113:192:o;2915:277::-;2955:7;3021:1;3017;3013:6;3009:14;3006:1;3003:21;2998:1;2991:9;2984:17;2980:45;2977:2;;;-1:-1:-1;;;3048:37:192;;3108:4;3105:1;3098:15;3142:4;3055:7;3126:21;2977:2;-1:-1:-1;3177:9:192;;2967:225::o",
  "source": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\n\nimport \"./LongShortPairFinancialProductLibrary.sol\";\nimport \"../../../../common/implementation/Lockable.sol\";\n\n/**\n * @title Binary Option Long Short Pair Financial Product Library.\n * @notice Adds settlement logic to binary option LSPs. Binary options settle with all collateral allocated to\n * either the long or short side, depending on the settlement price. They can be used to make prediction markets or any\n * kind of binary bet. Settlement is defined using a strike price which informs which side of the bet was correct. If\n * settlement price is greater or equal to the strike then all value is sent to the long side. Otherwise, all value\n * is sent to the short side. The settlement price could be a scalar (like the price of ETH) or a binary bet with\n * settlement being 0 or 1 depending on the outcome.\n */\ncontract BinaryOptionLongShortPairFinancialProductLibrary is LongShortPairFinancialProductLibrary, Lockable {\n    using FixedPoint for FixedPoint.Unsigned;\n    using SafeMath for uint256;\n\n    struct BinaryLongShortPairParameters {\n        bool isSet;\n        int256 strikePrice;\n    }\n\n    mapping(address => BinaryLongShortPairParameters) public longShortPairParameters;\n\n    /**\n     * @notice Enables any address to set the strike price for an associated binary option.\n     * @param longShortPair address of the LSP.\n     * @param strikePrice the strike price for the binary option.\n     * @dev Note: a) Any address can set the initial strike price b) A strike can be 0.\n     * c) A strike price can only be set once to prevent the deployer from changing the strike after the fact.\n     * d) For safety, a strike price should be set before depositing any synthetic tokens in a liquidity pool.\n     * e) longShortPair must expose an expirationTimestamp method to validate it is correctly deployed.\n     */\n    function setLongShortPairParameters(address longShortPair, int256 strikePrice) public nonReentrant() {\n        require(ExpiringContractInterface(longShortPair).expirationTimestamp() != 0, \"Invalid LSP address\");\n        require(!longShortPairParameters[longShortPair].isSet, \"Parameters already set\");\n\n        longShortPairParameters[longShortPair] = BinaryLongShortPairParameters({\n            isSet: true,\n            strikePrice: strikePrice\n        });\n    }\n\n    /**\n     * @notice Returns a number between 0 and 1e18 to indicate how much collateral each long and short token are entitled\n     * to per collateralPerPair.\n     * @param expiryPrice price from the optimistic oracle for the LSP price identifier.\n     * @return expiryPercentLong to indicate how much collateral should be sent between long and short tokens.\n     */\n    function percentageLongCollateralAtExpiry(int256 expiryPrice)\n        public\n        view\n        override\n        nonReentrantView()\n        returns (uint256)\n    {\n        BinaryLongShortPairParameters memory params = longShortPairParameters[msg.sender];\n        require(params.isSet, \"Params not set for calling LSP\");\n\n        if (expiryPrice >= params.strikePrice) return FixedPoint.fromUnscaledUint(1).rawValue;\n        else return FixedPoint.fromUnscaledUint(0).rawValue;\n    }\n}\n",
  "sourcePath": "/home/circleci/protocol/packages/core/contracts/financial-templates/common/financial-product-libraries/long-short-pair-libraries/BinaryOptionLongShortPairFinancialProductLibrary.sol",
  "ast": {
    "absolutePath": "/home/circleci/protocol/packages/core/contracts/financial-templates/common/financial-product-libraries/long-short-pair-libraries/BinaryOptionLongShortPairFinancialProductLibrary.sol",
    "exportedSymbols": {
      "BinaryOptionLongShortPairFinancialProductLibrary": [
        14487
      ],
      "ExpiringContractInterface": [
        14792
      ],
      "FixedPoint": [
        3659
      ],
      "Lockable": [
        3720
      ],
      "LongShortPairFinancialProductLibrary": [
        14800
      ],
      "SafeMath": [
        44033
      ],
      "SignedSafeMath": [
        44097
      ]
    },
    "id": 14488,
    "license": "AGPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 14378,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:23:72"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 14379,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14488,
        "sourceUnit": 44034,
        "src": "67:57:72",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/circleci/protocol/packages/core/contracts/financial-templates/common/financial-product-libraries/long-short-pair-libraries/LongShortPairFinancialProductLibrary.sol",
        "file": "./LongShortPairFinancialProductLibrary.sol",
        "id": 14380,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14488,
        "sourceUnit": 14801,
        "src": "126:52:72",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/circleci/protocol/packages/core/contracts/common/implementation/Lockable.sol",
        "file": "../../../../common/implementation/Lockable.sol",
        "id": 14381,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14488,
        "sourceUnit": 3721,
        "src": "179:56:72",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 14383,
              "name": "LongShortPairFinancialProductLibrary",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14800,
              "src": "1005:36:72"
            },
            "id": 14384,
            "nodeType": "InheritanceSpecifier",
            "src": "1005:36:72"
          },
          {
            "baseName": {
              "id": 14385,
              "name": "Lockable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3720,
              "src": "1043:8:72"
            },
            "id": 14386,
            "nodeType": "InheritanceSpecifier",
            "src": "1043:8:72"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 14382,
          "nodeType": "StructuredDocumentation",
          "src": "237:706:72",
          "text": " @title Binary Option Long Short Pair Financial Product Library.\n @notice Adds settlement logic to binary option LSPs. Binary options settle with all collateral allocated to\n either the long or short side, depending on the settlement price. They can be used to make prediction markets or any\n kind of binary bet. Settlement is defined using a strike price which informs which side of the bet was correct. If\n settlement price is greater or equal to the strike then all value is sent to the long side. Otherwise, all value\n is sent to the short side. The settlement price could be a scalar (like the price of ETH) or a binary bet with\n settlement being 0 or 1 depending on the outcome."
        },
        "fullyImplemented": true,
        "id": 14487,
        "linearizedBaseContracts": [
          14487,
          3720,
          14800
        ],
        "name": "BinaryOptionLongShortPairFinancialProductLibrary",
        "nameLocation": "953:48:72",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 14390,
            "libraryName": {
              "id": 14387,
              "name": "FixedPoint",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3659,
              "src": "1064:10:72"
            },
            "nodeType": "UsingForDirective",
            "src": "1058:41:72",
            "typeName": {
              "id": 14389,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 14388,
                "name": "FixedPoint.Unsigned",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2045,
                "src": "1079:19:72"
              },
              "referencedDeclaration": 2045,
              "src": "1079:19:72",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Unsigned_$2045_storage_ptr",
                "typeString": "struct FixedPoint.Unsigned"
              }
            }
          },
          {
            "id": 14393,
            "libraryName": {
              "id": 14391,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 44033,
              "src": "1110:8:72"
            },
            "nodeType": "UsingForDirective",
            "src": "1104:27:72",
            "typeName": {
              "id": 14392,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1123:7:72",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "BinaryOptionLongShortPairFinancialProductLibrary.BinaryLongShortPairParameters",
            "id": 14398,
            "members": [
              {
                "constant": false,
                "id": 14395,
                "mutability": "mutable",
                "name": "isSet",
                "nameLocation": "1189:5:72",
                "nodeType": "VariableDeclaration",
                "scope": 14398,
                "src": "1184:10:72",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 14394,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1184:4:72",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14397,
                "mutability": "mutable",
                "name": "strikePrice",
                "nameLocation": "1211:11:72",
                "nodeType": "VariableDeclaration",
                "scope": 14398,
                "src": "1204:18:72",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_int256",
                  "typeString": "int256"
                },
                "typeName": {
                  "id": 14396,
                  "name": "int256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1204:6:72",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "BinaryLongShortPairParameters",
            "nameLocation": "1144:29:72",
            "nodeType": "StructDefinition",
            "scope": 14487,
            "src": "1137:92:72",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9299cbed",
            "id": 14403,
            "mutability": "mutable",
            "name": "longShortPairParameters",
            "nameLocation": "1292:23:72",
            "nodeType": "VariableDeclaration",
            "scope": 14487,
            "src": "1235:80:72",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_BinaryLongShortPairParameters_$14398_storage_$",
              "typeString": "mapping(address => struct BinaryOptionLongShortPairFinancialProductLibrary.BinaryLongShortPairParameters)"
            },
            "typeName": {
              "id": 14402,
              "keyType": {
                "id": 14399,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1243:7:72",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1235:49:72",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_BinaryLongShortPairParameters_$14398_storage_$",
                "typeString": "mapping(address => struct BinaryOptionLongShortPairFinancialProductLibrary.BinaryLongShortPairParameters)"
              },
              "valueType": {
                "id": 14401,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 14400,
                  "name": "BinaryLongShortPairParameters",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14398,
                  "src": "1254:29:72"
                },
                "referencedDeclaration": 14398,
                "src": "1254:29:72",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_BinaryLongShortPairParameters_$14398_storage_ptr",
                  "typeString": "struct BinaryOptionLongShortPairFinancialProductLibrary.BinaryLongShortPairParameters"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 14442,
              "nodeType": "Block",
              "src": "2059:362:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 14420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 14415,
                                  "name": "longShortPair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14406,
                                  "src": "2103:13:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 14414,
                                "name": "ExpiringContractInterface",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14792,
                                "src": "2077:25:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ExpiringContractInterface_$14792_$",
                                  "typeString": "type(contract ExpiringContractInterface)"
                                }
                              },
                              "id": 14416,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2077:40:72",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ExpiringContractInterface_$14792",
                                "typeString": "contract ExpiringContractInterface"
                              }
                            },
                            "id": 14417,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "expirationTimestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14791,
                            "src": "2077:60:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 14418,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2077:62:72",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 14419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2143:1:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2077:67:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964204c53502061646472657373",
                        "id": 14421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2146:21:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9c7a742eb98e20c17de092129b9e73fedab190e4a1e2e034f7e056503d041914",
                          "typeString": "literal_string \"Invalid LSP address\""
                        },
                        "value": "Invalid LSP address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9c7a742eb98e20c17de092129b9e73fedab190e4a1e2e034f7e056503d041914",
                          "typeString": "literal_string \"Invalid LSP address\""
                        }
                      ],
                      "id": 14413,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2069:7:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2069:99:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14423,
                  "nodeType": "ExpressionStatement",
                  "src": "2069:99:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2186:45:72",
                        "subExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 14425,
                              "name": "longShortPairParameters",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14403,
                              "src": "2187:23:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_BinaryLongShortPairParameters_$14398_storage_$",
                                "typeString": "mapping(address => struct BinaryOptionLongShortPairFinancialProductLibrary.BinaryLongShortPairParameters storage ref)"
                              }
                            },
                            "id": 14427,
                            "indexExpression": {
                              "id": 14426,
                              "name": "longShortPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14406,
                              "src": "2211:13:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2187:38:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_BinaryLongShortPairParameters_$14398_storage",
                              "typeString": "struct BinaryOptionLongShortPairFinancialProductLibrary.BinaryLongShortPairParameters storage ref"
                            }
                          },
                          "id": 14428,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isSet",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14395,
                          "src": "2187:44:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506172616d657465727320616c726561647920736574",
                        "id": 14430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2233:24:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1c660ff5672050f49f4504349febd871d9a8af4dbd7a242ac305e556f78030ee",
                          "typeString": "literal_string \"Parameters already set\""
                        },
                        "value": "Parameters already set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1c660ff5672050f49f4504349febd871d9a8af4dbd7a242ac305e556f78030ee",
                          "typeString": "literal_string \"Parameters already set\""
                        }
                      ],
                      "id": 14424,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2178:7:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2178:80:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14432,
                  "nodeType": "ExpressionStatement",
                  "src": "2178:80:72"
                },
                {
                  "expression": {
                    "id": 14440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 14433,
                        "name": "longShortPairParameters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14403,
                        "src": "2269:23:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_BinaryLongShortPairParameters_$14398_storage_$",
                          "typeString": "mapping(address => struct BinaryOptionLongShortPairFinancialProductLibrary.BinaryLongShortPairParameters storage ref)"
                        }
                      },
                      "id": 14435,
                      "indexExpression": {
                        "id": 14434,
                        "name": "longShortPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14406,
                        "src": "2293:13:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2269:38:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BinaryLongShortPairParameters_$14398_storage",
                        "typeString": "struct BinaryOptionLongShortPairFinancialProductLibrary.BinaryLongShortPairParameters storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "74727565",
                          "id": 14437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2361:4:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        {
                          "id": 14438,
                          "name": "strikePrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14408,
                          "src": "2392:11:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        ],
                        "id": 14436,
                        "name": "BinaryLongShortPairParameters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14398,
                        "src": "2310:29:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_BinaryLongShortPairParameters_$14398_storage_ptr_$",
                          "typeString": "type(struct BinaryOptionLongShortPairFinancialProductLibrary.BinaryLongShortPairParameters storage pointer)"
                        }
                      },
                      "id": 14439,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "isSet",
                        "strikePrice"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "2310:104:72",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BinaryLongShortPairParameters_$14398_memory_ptr",
                        "typeString": "struct BinaryOptionLongShortPairFinancialProductLibrary.BinaryLongShortPairParameters memory"
                      }
                    },
                    "src": "2269:145:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BinaryLongShortPairParameters_$14398_storage",
                      "typeString": "struct BinaryOptionLongShortPairFinancialProductLibrary.BinaryLongShortPairParameters storage ref"
                    }
                  },
                  "id": 14441,
                  "nodeType": "ExpressionStatement",
                  "src": "2269:145:72"
                }
              ]
            },
            "documentation": {
              "id": 14404,
              "nodeType": "StructuredDocumentation",
              "src": "1322:631:72",
              "text": " @notice Enables any address to set the strike price for an associated binary option.\n @param longShortPair address of the LSP.\n @param strikePrice the strike price for the binary option.\n @dev Note: a) Any address can set the initial strike price b) A strike can be 0.\n c) A strike price can only be set once to prevent the deployer from changing the strike after the fact.\n d) For safety, a strike price should be set before depositing any synthetic tokens in a liquidity pool.\n e) longShortPair must expose an expirationTimestamp method to validate it is correctly deployed."
            },
            "functionSelector": "9e33e2df",
            "id": 14443,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 14411,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14410,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3686,
                  "src": "2044:12:72"
                },
                "nodeType": "ModifierInvocation",
                "src": "2044:14:72"
              }
            ],
            "name": "setLongShortPairParameters",
            "nameLocation": "1967:26:72",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14409,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14406,
                  "mutability": "mutable",
                  "name": "longShortPair",
                  "nameLocation": "2002:13:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 14443,
                  "src": "1994:21:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14405,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1994:7:72",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14408,
                  "mutability": "mutable",
                  "name": "strikePrice",
                  "nameLocation": "2024:11:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 14443,
                  "src": "2017:18:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 14407,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2017:6:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1993:43:72"
            },
            "returnParameters": {
              "id": 14412,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2059:0:72"
            },
            "scope": 14487,
            "src": "1958:463:72",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              14799
            ],
            "body": {
              "id": 14485,
              "nodeType": "Block",
              "src": "2962:320:72",
              "statements": [
                {
                  "assignments": [
                    14456
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14456,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "3009:6:72",
                      "nodeType": "VariableDeclaration",
                      "scope": 14485,
                      "src": "2972:43:72",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BinaryLongShortPairParameters_$14398_memory_ptr",
                        "typeString": "struct BinaryOptionLongShortPairFinancialProductLibrary.BinaryLongShortPairParameters"
                      },
                      "typeName": {
                        "id": 14455,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 14454,
                          "name": "BinaryLongShortPairParameters",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14398,
                          "src": "2972:29:72"
                        },
                        "referencedDeclaration": 14398,
                        "src": "2972:29:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BinaryLongShortPairParameters_$14398_storage_ptr",
                          "typeString": "struct BinaryOptionLongShortPairFinancialProductLibrary.BinaryLongShortPairParameters"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14461,
                  "initialValue": {
                    "baseExpression": {
                      "id": 14457,
                      "name": "longShortPairParameters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14403,
                      "src": "3018:23:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_BinaryLongShortPairParameters_$14398_storage_$",
                        "typeString": "mapping(address => struct BinaryOptionLongShortPairFinancialProductLibrary.BinaryLongShortPairParameters storage ref)"
                      }
                    },
                    "id": 14460,
                    "indexExpression": {
                      "expression": {
                        "id": 14458,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "3042:3:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 14459,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3042:10:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3018:35:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BinaryLongShortPairParameters_$14398_storage",
                      "typeString": "struct BinaryOptionLongShortPairFinancialProductLibrary.BinaryLongShortPairParameters storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2972:81:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 14463,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14456,
                          "src": "3071:6:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BinaryLongShortPairParameters_$14398_memory_ptr",
                            "typeString": "struct BinaryOptionLongShortPairFinancialProductLibrary.BinaryLongShortPairParameters memory"
                          }
                        },
                        "id": 14464,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isSet",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14395,
                        "src": "3071:12:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506172616d73206e6f742073657420666f722063616c6c696e67204c5350",
                        "id": 14465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3085:32:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_68cc0dd0836e3d636c6d9a388054767b5f98741a714b83391a138d4c0cefe7d2",
                          "typeString": "literal_string \"Params not set for calling LSP\""
                        },
                        "value": "Params not set for calling LSP"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_68cc0dd0836e3d636c6d9a388054767b5f98741a714b83391a138d4c0cefe7d2",
                          "typeString": "literal_string \"Params not set for calling LSP\""
                        }
                      ],
                      "id": 14462,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3063:7:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3063:55:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14467,
                  "nodeType": "ExpressionStatement",
                  "src": "3063:55:72"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 14471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 14468,
                      "name": "expiryPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14446,
                      "src": "3133:11:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "expression": {
                        "id": 14469,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14456,
                        "src": "3148:6:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BinaryLongShortPairParameters_$14398_memory_ptr",
                          "typeString": "struct BinaryOptionLongShortPairFinancialProductLibrary.BinaryLongShortPairParameters memory"
                        }
                      },
                      "id": 14470,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "strikePrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14397,
                      "src": "3148:18:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "3133:33:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 14480,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3264:1:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "expression": {
                            "id": 14478,
                            "name": "FixedPoint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3659,
                            "src": "3236:10:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_FixedPoint_$3659_$",
                              "typeString": "type(library FixedPoint)"
                            }
                          },
                          "id": 14479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "fromUnscaledUint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2062,
                          "src": "3236:27:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_Unsigned_$2045_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (struct FixedPoint.Unsigned memory)"
                          }
                        },
                        "id": 14481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3236:30:72",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Unsigned_$2045_memory_ptr",
                          "typeString": "struct FixedPoint.Unsigned memory"
                        }
                      },
                      "id": 14482,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rawValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2044,
                      "src": "3236:39:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 14453,
                    "id": 14483,
                    "nodeType": "Return",
                    "src": "3229:46:72"
                  },
                  "id": 14484,
                  "nodeType": "IfStatement",
                  "src": "3129:146:72",
                  "trueBody": {
                    "expression": {
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 14474,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3203:1:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "expression": {
                            "id": 14472,
                            "name": "FixedPoint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3659,
                            "src": "3175:10:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_FixedPoint_$3659_$",
                              "typeString": "type(library FixedPoint)"
                            }
                          },
                          "id": 14473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "fromUnscaledUint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2062,
                          "src": "3175:27:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_Unsigned_$2045_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (struct FixedPoint.Unsigned memory)"
                          }
                        },
                        "id": 14475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3175:30:72",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Unsigned_$2045_memory_ptr",
                          "typeString": "struct FixedPoint.Unsigned memory"
                        }
                      },
                      "id": 14476,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rawValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2044,
                      "src": "3175:39:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 14453,
                    "id": 14477,
                    "nodeType": "Return",
                    "src": "3168:46:72"
                  }
                }
              ]
            },
            "documentation": {
              "id": 14444,
              "nodeType": "StructuredDocumentation",
              "src": "2427:366:72",
              "text": " @notice Returns a number between 0 and 1e18 to indicate how much collateral each long and short token are entitled\n to per collateralPerPair.\n @param expiryPrice price from the optimistic oracle for the LSP price identifier.\n @return expiryPercentLong to indicate how much collateral should be sent between long and short tokens."
            },
            "functionSelector": "2da52361",
            "id": 14486,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 14450,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14449,
                  "name": "nonReentrantView",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3694,
                  "src": "2913:16:72"
                },
                "nodeType": "ModifierInvocation",
                "src": "2913:18:72"
              }
            ],
            "name": "percentageLongCollateralAtExpiry",
            "nameLocation": "2807:32:72",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 14448,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2896:8:72"
            },
            "parameters": {
              "id": 14447,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14446,
                  "mutability": "mutable",
                  "name": "expiryPrice",
                  "nameLocation": "2847:11:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 14486,
                  "src": "2840:18:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 14445,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2840:6:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2839:20:72"
            },
            "returnParameters": {
              "id": 14453,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14452,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14486,
                  "src": "2949:7:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14451,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2949:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2948:9:72"
            },
            "scope": 14487,
            "src": "2798:484:72",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 14488,
        "src": "944:2340:72",
        "usedErrors": []
      }
    ],
    "src": "42:3243:72"
  },
  "legacyAST": {
    "absolutePath": "/home/circleci/protocol/packages/core/contracts/financial-templates/common/financial-product-libraries/long-short-pair-libraries/BinaryOptionLongShortPairFinancialProductLibrary.sol",
    "exportedSymbols": {
      "BinaryOptionLongShortPairFinancialProductLibrary": [
        14487
      ],
      "ExpiringContractInterface": [
        14792
      ],
      "FixedPoint": [
        3659
      ],
      "Lockable": [
        3720
      ],
      "LongShortPairFinancialProductLibrary": [
        14800
      ],
      "SafeMath": [
        44033
      ],
      "SignedSafeMath": [
        44097
      ]
    },
    "id": 14488,
    "license": "AGPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 14378,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:23:72"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 14379,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14488,
        "sourceUnit": 44034,
        "src": "67:57:72",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/circleci/protocol/packages/core/contracts/financial-templates/common/financial-product-libraries/long-short-pair-libraries/LongShortPairFinancialProductLibrary.sol",
        "file": "./LongShortPairFinancialProductLibrary.sol",
        "id": 14380,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14488,
        "sourceUnit": 14801,
        "src": "126:52:72",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/circleci/protocol/packages/core/contracts/common/implementation/Lockable.sol",
        "file": "../../../../common/implementation/Lockable.sol",
        "id": 14381,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14488,
        "sourceUnit": 3721,
        "src": "179:56:72",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 14383,
              "name": "LongShortPairFinancialProductLibrary",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14800,
              "src": "1005:36:72"
            },
            "id": 14384,
            "nodeType": "InheritanceSpecifier",
            "src": "1005:36:72"
          },
          {
            "baseName": {
              "id": 14385,
              "name": "Lockable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3720,
              "src": "1043:8:72"
            },
            "id": 14386,
            "nodeType": "InheritanceSpecifier",
            "src": "1043:8:72"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 14382,
          "nodeType": "StructuredDocumentation",
          "src": "237:706:72",
          "text": " @title Binary Option Long Short Pair Financial Product Library.\n @notice Adds settlement logic to binary option LSPs. Binary options settle with all collateral allocated to\n either the long or short side, depending on the settlement price. They can be used to make prediction markets or any\n kind of binary bet. Settlement is defined using a strike price which informs which side of the bet was correct. If\n settlement price is greater or equal to the strike then all value is sent to the long side. Otherwise, all value\n is sent to the short side. The settlement price could be a scalar (like the price of ETH) or a binary bet with\n settlement being 0 or 1 depending on the outcome."
        },
        "fullyImplemented": true,
        "id": 14487,
        "linearizedBaseContracts": [
          14487,
          3720,
          14800
        ],
        "name": "BinaryOptionLongShortPairFinancialProductLibrary",
        "nameLocation": "953:48:72",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 14390,
            "libraryName": {
              "id": 14387,
              "name": "FixedPoint",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3659,
              "src": "1064:10:72"
            },
            "nodeType": "UsingForDirective",
            "src": "1058:41:72",
            "typeName": {
              "id": 14389,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 14388,
                "name": "FixedPoint.Unsigned",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2045,
                "src": "1079:19:72"
              },
              "referencedDeclaration": 2045,
              "src": "1079:19:72",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Unsigned_$2045_storage_ptr",
                "typeString": "struct FixedPoint.Unsigned"
              }
            }
          },
          {
            "id": 14393,
            "libraryName": {
              "id": 14391,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 44033,
              "src": "1110:8:72"
            },
            "nodeType": "UsingForDirective",
            "src": "1104:27:72",
            "typeName": {
              "id": 14392,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1123:7:72",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "BinaryOptionLongShortPairFinancialProductLibrary.BinaryLongShortPairParameters",
            "id": 14398,
            "members": [
              {
                "constant": false,
                "id": 14395,
                "mutability": "mutable",
                "name": "isSet",
                "nameLocation": "1189:5:72",
                "nodeType": "VariableDeclaration",
                "scope": 14398,
                "src": "1184:10:72",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 14394,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1184:4:72",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14397,
                "mutability": "mutable",
                "name": "strikePrice",
                "nameLocation": "1211:11:72",
                "nodeType": "VariableDeclaration",
                "scope": 14398,
                "src": "1204:18:72",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_int256",
                  "typeString": "int256"
                },
                "typeName": {
                  "id": 14396,
                  "name": "int256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1204:6:72",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "BinaryLongShortPairParameters",
            "nameLocation": "1144:29:72",
            "nodeType": "StructDefinition",
            "scope": 14487,
            "src": "1137:92:72",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9299cbed",
            "id": 14403,
            "mutability": "mutable",
            "name": "longShortPairParameters",
            "nameLocation": "1292:23:72",
            "nodeType": "VariableDeclaration",
            "scope": 14487,
            "src": "1235:80:72",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_BinaryLongShortPairParameters_$14398_storage_$",
              "typeString": "mapping(address => struct BinaryOptionLongShortPairFinancialProductLibrary.BinaryLongShortPairParameters)"
            },
            "typeName": {
              "id": 14402,
              "keyType": {
                "id": 14399,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1243:7:72",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1235:49:72",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_BinaryLongShortPairParameters_$14398_storage_$",
                "typeString": "mapping(address => struct BinaryOptionLongShortPairFinancialProductLibrary.BinaryLongShortPairParameters)"
              },
              "valueType": {
                "id": 14401,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 14400,
                  "name": "BinaryLongShortPairParameters",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14398,
                  "src": "1254:29:72"
                },
                "referencedDeclaration": 14398,
                "src": "1254:29:72",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_BinaryLongShortPairParameters_$14398_storage_ptr",
                  "typeString": "struct BinaryOptionLongShortPairFinancialProductLibrary.BinaryLongShortPairParameters"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 14442,
              "nodeType": "Block",
              "src": "2059:362:72",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 14420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 14415,
                                  "name": "longShortPair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14406,
                                  "src": "2103:13:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 14414,
                                "name": "ExpiringContractInterface",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14792,
                                "src": "2077:25:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ExpiringContractInterface_$14792_$",
                                  "typeString": "type(contract ExpiringContractInterface)"
                                }
                              },
                              "id": 14416,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2077:40:72",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ExpiringContractInterface_$14792",
                                "typeString": "contract ExpiringContractInterface"
                              }
                            },
                            "id": 14417,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "expirationTimestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14791,
                            "src": "2077:60:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 14418,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2077:62:72",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 14419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2143:1:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2077:67:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964204c53502061646472657373",
                        "id": 14421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2146:21:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9c7a742eb98e20c17de092129b9e73fedab190e4a1e2e034f7e056503d041914",
                          "typeString": "literal_string \"Invalid LSP address\""
                        },
                        "value": "Invalid LSP address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9c7a742eb98e20c17de092129b9e73fedab190e4a1e2e034f7e056503d041914",
                          "typeString": "literal_string \"Invalid LSP address\""
                        }
                      ],
                      "id": 14413,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2069:7:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2069:99:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14423,
                  "nodeType": "ExpressionStatement",
                  "src": "2069:99:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2186:45:72",
                        "subExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 14425,
                              "name": "longShortPairParameters",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14403,
                              "src": "2187:23:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_BinaryLongShortPairParameters_$14398_storage_$",
                                "typeString": "mapping(address => struct BinaryOptionLongShortPairFinancialProductLibrary.BinaryLongShortPairParameters storage ref)"
                              }
                            },
                            "id": 14427,
                            "indexExpression": {
                              "id": 14426,
                              "name": "longShortPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14406,
                              "src": "2211:13:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2187:38:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_BinaryLongShortPairParameters_$14398_storage",
                              "typeString": "struct BinaryOptionLongShortPairFinancialProductLibrary.BinaryLongShortPairParameters storage ref"
                            }
                          },
                          "id": 14428,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isSet",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 14395,
                          "src": "2187:44:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506172616d657465727320616c726561647920736574",
                        "id": 14430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2233:24:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1c660ff5672050f49f4504349febd871d9a8af4dbd7a242ac305e556f78030ee",
                          "typeString": "literal_string \"Parameters already set\""
                        },
                        "value": "Parameters already set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1c660ff5672050f49f4504349febd871d9a8af4dbd7a242ac305e556f78030ee",
                          "typeString": "literal_string \"Parameters already set\""
                        }
                      ],
                      "id": 14424,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2178:7:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2178:80:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14432,
                  "nodeType": "ExpressionStatement",
                  "src": "2178:80:72"
                },
                {
                  "expression": {
                    "id": 14440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 14433,
                        "name": "longShortPairParameters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14403,
                        "src": "2269:23:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_BinaryLongShortPairParameters_$14398_storage_$",
                          "typeString": "mapping(address => struct BinaryOptionLongShortPairFinancialProductLibrary.BinaryLongShortPairParameters storage ref)"
                        }
                      },
                      "id": 14435,
                      "indexExpression": {
                        "id": 14434,
                        "name": "longShortPair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14406,
                        "src": "2293:13:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2269:38:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BinaryLongShortPairParameters_$14398_storage",
                        "typeString": "struct BinaryOptionLongShortPairFinancialProductLibrary.BinaryLongShortPairParameters storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "74727565",
                          "id": 14437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2361:4:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        {
                          "id": 14438,
                          "name": "strikePrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14408,
                          "src": "2392:11:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        ],
                        "id": 14436,
                        "name": "BinaryLongShortPairParameters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14398,
                        "src": "2310:29:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_BinaryLongShortPairParameters_$14398_storage_ptr_$",
                          "typeString": "type(struct BinaryOptionLongShortPairFinancialProductLibrary.BinaryLongShortPairParameters storage pointer)"
                        }
                      },
                      "id": 14439,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "isSet",
                        "strikePrice"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "2310:104:72",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BinaryLongShortPairParameters_$14398_memory_ptr",
                        "typeString": "struct BinaryOptionLongShortPairFinancialProductLibrary.BinaryLongShortPairParameters memory"
                      }
                    },
                    "src": "2269:145:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BinaryLongShortPairParameters_$14398_storage",
                      "typeString": "struct BinaryOptionLongShortPairFinancialProductLibrary.BinaryLongShortPairParameters storage ref"
                    }
                  },
                  "id": 14441,
                  "nodeType": "ExpressionStatement",
                  "src": "2269:145:72"
                }
              ]
            },
            "documentation": {
              "id": 14404,
              "nodeType": "StructuredDocumentation",
              "src": "1322:631:72",
              "text": " @notice Enables any address to set the strike price for an associated binary option.\n @param longShortPair address of the LSP.\n @param strikePrice the strike price for the binary option.\n @dev Note: a) Any address can set the initial strike price b) A strike can be 0.\n c) A strike price can only be set once to prevent the deployer from changing the strike after the fact.\n d) For safety, a strike price should be set before depositing any synthetic tokens in a liquidity pool.\n e) longShortPair must expose an expirationTimestamp method to validate it is correctly deployed."
            },
            "functionSelector": "9e33e2df",
            "id": 14443,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 14411,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14410,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3686,
                  "src": "2044:12:72"
                },
                "nodeType": "ModifierInvocation",
                "src": "2044:14:72"
              }
            ],
            "name": "setLongShortPairParameters",
            "nameLocation": "1967:26:72",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14409,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14406,
                  "mutability": "mutable",
                  "name": "longShortPair",
                  "nameLocation": "2002:13:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 14443,
                  "src": "1994:21:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14405,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1994:7:72",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14408,
                  "mutability": "mutable",
                  "name": "strikePrice",
                  "nameLocation": "2024:11:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 14443,
                  "src": "2017:18:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 14407,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2017:6:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1993:43:72"
            },
            "returnParameters": {
              "id": 14412,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2059:0:72"
            },
            "scope": 14487,
            "src": "1958:463:72",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              14799
            ],
            "body": {
              "id": 14485,
              "nodeType": "Block",
              "src": "2962:320:72",
              "statements": [
                {
                  "assignments": [
                    14456
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14456,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "3009:6:72",
                      "nodeType": "VariableDeclaration",
                      "scope": 14485,
                      "src": "2972:43:72",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BinaryLongShortPairParameters_$14398_memory_ptr",
                        "typeString": "struct BinaryOptionLongShortPairFinancialProductLibrary.BinaryLongShortPairParameters"
                      },
                      "typeName": {
                        "id": 14455,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 14454,
                          "name": "BinaryLongShortPairParameters",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 14398,
                          "src": "2972:29:72"
                        },
                        "referencedDeclaration": 14398,
                        "src": "2972:29:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BinaryLongShortPairParameters_$14398_storage_ptr",
                          "typeString": "struct BinaryOptionLongShortPairFinancialProductLibrary.BinaryLongShortPairParameters"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14461,
                  "initialValue": {
                    "baseExpression": {
                      "id": 14457,
                      "name": "longShortPairParameters",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14403,
                      "src": "3018:23:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_BinaryLongShortPairParameters_$14398_storage_$",
                        "typeString": "mapping(address => struct BinaryOptionLongShortPairFinancialProductLibrary.BinaryLongShortPairParameters storage ref)"
                      }
                    },
                    "id": 14460,
                    "indexExpression": {
                      "expression": {
                        "id": 14458,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "3042:3:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 14459,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3042:10:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3018:35:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_BinaryLongShortPairParameters_$14398_storage",
                      "typeString": "struct BinaryOptionLongShortPairFinancialProductLibrary.BinaryLongShortPairParameters storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2972:81:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 14463,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14456,
                          "src": "3071:6:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BinaryLongShortPairParameters_$14398_memory_ptr",
                            "typeString": "struct BinaryOptionLongShortPairFinancialProductLibrary.BinaryLongShortPairParameters memory"
                          }
                        },
                        "id": 14464,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isSet",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 14395,
                        "src": "3071:12:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "506172616d73206e6f742073657420666f722063616c6c696e67204c5350",
                        "id": 14465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3085:32:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_68cc0dd0836e3d636c6d9a388054767b5f98741a714b83391a138d4c0cefe7d2",
                          "typeString": "literal_string \"Params not set for calling LSP\""
                        },
                        "value": "Params not set for calling LSP"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_68cc0dd0836e3d636c6d9a388054767b5f98741a714b83391a138d4c0cefe7d2",
                          "typeString": "literal_string \"Params not set for calling LSP\""
                        }
                      ],
                      "id": 14462,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3063:7:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3063:55:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14467,
                  "nodeType": "ExpressionStatement",
                  "src": "3063:55:72"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    },
                    "id": 14471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 14468,
                      "name": "expiryPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14446,
                      "src": "3133:11:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "expression": {
                        "id": 14469,
                        "name": "params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14456,
                        "src": "3148:6:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_BinaryLongShortPairParameters_$14398_memory_ptr",
                          "typeString": "struct BinaryOptionLongShortPairFinancialProductLibrary.BinaryLongShortPairParameters memory"
                        }
                      },
                      "id": 14470,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "strikePrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 14397,
                      "src": "3148:18:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      }
                    },
                    "src": "3133:33:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "expression": {
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 14480,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3264:1:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "expression": {
                            "id": 14478,
                            "name": "FixedPoint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3659,
                            "src": "3236:10:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_FixedPoint_$3659_$",
                              "typeString": "type(library FixedPoint)"
                            }
                          },
                          "id": 14479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "fromUnscaledUint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2062,
                          "src": "3236:27:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_Unsigned_$2045_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (struct FixedPoint.Unsigned memory)"
                          }
                        },
                        "id": 14481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3236:30:72",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Unsigned_$2045_memory_ptr",
                          "typeString": "struct FixedPoint.Unsigned memory"
                        }
                      },
                      "id": 14482,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rawValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2044,
                      "src": "3236:39:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 14453,
                    "id": 14483,
                    "nodeType": "Return",
                    "src": "3229:46:72"
                  },
                  "id": 14484,
                  "nodeType": "IfStatement",
                  "src": "3129:146:72",
                  "trueBody": {
                    "expression": {
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 14474,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3203:1:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "expression": {
                            "id": 14472,
                            "name": "FixedPoint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3659,
                            "src": "3175:10:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_FixedPoint_$3659_$",
                              "typeString": "type(library FixedPoint)"
                            }
                          },
                          "id": 14473,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "fromUnscaledUint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2062,
                          "src": "3175:27:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_Unsigned_$2045_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (struct FixedPoint.Unsigned memory)"
                          }
                        },
                        "id": 14475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3175:30:72",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Unsigned_$2045_memory_ptr",
                          "typeString": "struct FixedPoint.Unsigned memory"
                        }
                      },
                      "id": 14476,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "rawValue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2044,
                      "src": "3175:39:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 14453,
                    "id": 14477,
                    "nodeType": "Return",
                    "src": "3168:46:72"
                  }
                }
              ]
            },
            "documentation": {
              "id": 14444,
              "nodeType": "StructuredDocumentation",
              "src": "2427:366:72",
              "text": " @notice Returns a number between 0 and 1e18 to indicate how much collateral each long and short token are entitled\n to per collateralPerPair.\n @param expiryPrice price from the optimistic oracle for the LSP price identifier.\n @return expiryPercentLong to indicate how much collateral should be sent between long and short tokens."
            },
            "functionSelector": "2da52361",
            "id": 14486,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 14450,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14449,
                  "name": "nonReentrantView",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3694,
                  "src": "2913:16:72"
                },
                "nodeType": "ModifierInvocation",
                "src": "2913:18:72"
              }
            ],
            "name": "percentageLongCollateralAtExpiry",
            "nameLocation": "2807:32:72",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 14448,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2896:8:72"
            },
            "parameters": {
              "id": 14447,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14446,
                  "mutability": "mutable",
                  "name": "expiryPrice",
                  "nameLocation": "2847:11:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 14486,
                  "src": "2840:18:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 14445,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2840:6:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2839:20:72"
            },
            "returnParameters": {
              "id": 14453,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14452,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 14486,
                  "src": "2949:7:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14451,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2949:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2948:9:72"
            },
            "scope": 14487,
            "src": "2798:484:72",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 14488,
        "src": "944:2340:72",
        "usedErrors": []
      }
    ],
    "src": "42:3243:72"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {
    "1": {
      "events": {},
      "links": {},
      "address": "0x072819Bb43B50E7A251c64411e7aA362ce82803B",
      "transactionHash": ""
    },
    "42": {
      "events": {},
      "links": {},
      "address": "0x78DA11E049f21563824784126DfbF7B80d9A4B0d",
      "transactionHash": ""
    },
    "137": {
      "events": {},
      "links": {},
      "address": "0xda768D869f1e89ea005cde7e1dBf630ff9307F33",
      "transactionHash": ""
    },
    "80001": {
      "events": {},
      "links": {},
      "address": "0x9a5de999108042946F59848E083e12690ff018C6",
      "transactionHash": ""
    }
  },
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-07-16T20:27:09.752Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "percentageLongCollateralAtExpiry(int256)": {
        "params": {
          "expiryPrice": "price from the optimistic oracle for the LSP price identifier."
        },
        "returns": {
          "_0": "expiryPercentLong to indicate how much collateral should be sent between long and short tokens."
        }
      },
      "setLongShortPairParameters(address,int256)": {
        "details": "Note: a) Any address can set the initial strike price b) A strike can be 0. c) A strike price can only be set once to prevent the deployer from changing the strike after the fact. d) For safety, a strike price should be set before depositing any synthetic tokens in a liquidity pool. e) longShortPair must expose an expirationTimestamp method to validate it is correctly deployed.",
        "params": {
          "longShortPair": "address of the LSP.",
          "strikePrice": "the strike price for the binary option."
        }
      }
    },
    "title": "Binary Option Long Short Pair Financial Product Library.",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "percentageLongCollateralAtExpiry(int256)": {
        "notice": "Returns a number between 0 and 1e18 to indicate how much collateral each long and short token are entitled to per collateralPerPair."
      },
      "setLongShortPairParameters(address,int256)": {
        "notice": "Enables any address to set the strike price for an associated binary option."
      }
    },
    "notice": "Adds settlement logic to binary option LSPs. Binary options settle with all collateral allocated to either the long or short side, depending on the settlement price. They can be used to make prediction markets or any kind of binary bet. Settlement is defined using a strike price which informs which side of the bet was correct. If settlement price is greater or equal to the strike then all value is sent to the long side. Otherwise, all value is sent to the short side. The settlement price could be a scalar (like the price of ETH) or a binary bet with settlement being 0 or 1 depending on the outcome.",
    "version": 1
  }
}