{
  "contractName": "VotingTest",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_phaseLength",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "_gatPercentage",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "_inflationRate",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "_rewardsExpirationTimeout",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_votingToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_finder",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_timerAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "roundId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "ancillaryData",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "encryptedVote",
          "type": "bytes"
        }
      ],
      "name": "EncryptedVote",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "roundId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "PriceRequestAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "roundId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "price",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "ancillaryData",
          "type": "bytes"
        }
      ],
      "name": "PriceResolved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "roundId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "ancillaryData",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "numTokens",
          "type": "uint256"
        }
      ],
      "name": "RewardsRetrieved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "roundId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "ancillaryData",
          "type": "bytes"
        }
      ],
      "name": "VoteCommitted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "roundId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "price",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "ancillaryData",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "numTokens",
          "type": "uint256"
        }
      ],
      "name": "VoteRevealed",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ancillaryBytesLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "identifier",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "time",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "ancillaryData",
              "type": "bytes"
            },
            {
              "internalType": "bytes32",
              "name": "hash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "encryptedVote",
              "type": "bytes"
            }
          ],
          "internalType": "struct VotingAncillaryInterface.CommitmentAncillary[]",
          "name": "commits",
          "type": "tuple[]"
        }
      ],
      "name": "batchCommit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "identifier",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "time",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "hash",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "encryptedVote",
              "type": "bytes"
            }
          ],
          "internalType": "struct VotingInterface.Commitment[]",
          "name": "commits",
          "type": "tuple[]"
        }
      ],
      "name": "batchCommit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "identifier",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "time",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "price",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "salt",
              "type": "int256"
            }
          ],
          "internalType": "struct VotingInterface.Reveal[]",
          "name": "reveals",
          "type": "tuple[]"
        }
      ],
      "name": "batchReveal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "identifier",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "time",
              "type": "uint256"
            },
            {
              "internalType": "int256",
              "name": "price",
              "type": "int256"
            },
            {
              "internalType": "bytes",
              "name": "ancillaryData",
              "type": "bytes"
            },
            {
              "internalType": "int256",
              "name": "salt",
              "type": "int256"
            }
          ],
          "internalType": "struct VotingAncillaryInterface.RevealAncillary[]",
          "name": "reveals",
          "type": "tuple[]"
        }
      ],
      "name": "batchReveal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "ancillaryData",
          "type": "bytes"
        },
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "encryptedVote",
          "type": "bytes"
        }
      ],
      "name": "commitAndEmitEncryptedVote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "encryptedVote",
          "type": "bytes"
        }
      ],
      "name": "commitAndEmitEncryptedVote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "ancillaryData",
          "type": "bytes"
        },
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        }
      ],
      "name": "commitVote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        }
      ],
      "name": "commitVote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gatPercentage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rawValue",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentRoundId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPendingRequests",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "identifier",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "time",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "ancillaryData",
              "type": "bytes"
            }
          ],
          "internalType": "struct VotingAncillaryInterface.PendingRequestAncillary[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "ancillaryData",
          "type": "bytes"
        }
      ],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "identifier",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "time",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "ancillaryData",
              "type": "bytes"
            }
          ],
          "internalType": "struct VotingAncillaryInterface.PendingRequestAncillary[]",
          "name": "requests",
          "type": "tuple[]"
        }
      ],
      "name": "getPriceRequestStatuses",
      "outputs": [
        {
          "components": [
            {
              "internalType": "enum Voting.RequestStatus",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "lastVotingRound",
              "type": "uint256"
            }
          ],
          "internalType": "struct Voting.RequestState[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "identifier",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "time",
              "type": "uint256"
            }
          ],
          "internalType": "struct VotingInterface.PendingRequest[]",
          "name": "requests",
          "type": "tuple[]"
        }
      ],
      "name": "getPriceRequestStatuses",
      "outputs": [
        {
          "components": [
            {
              "internalType": "enum Voting.RequestStatus",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "lastVotingRound",
              "type": "uint256"
            }
          ],
          "internalType": "struct Voting.RequestState[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVotePhase",
      "outputs": [
        {
          "internalType": "enum VotingAncillaryInterface.Phase",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "hasPrice",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "ancillaryData",
          "type": "bytes"
        }
      ],
      "name": "hasPrice",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "inflationRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "rawValue",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "migratedAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "ancillaryData",
          "type": "bytes"
        }
      ],
      "name": "requestPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "requestPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "voterAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "roundId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "identifier",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "time",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "ancillaryData",
              "type": "bytes"
            }
          ],
          "internalType": "struct VotingAncillaryInterface.PendingRequestAncillary[]",
          "name": "toRetrieve",
          "type": "tuple[]"
        }
      ],
      "name": "retrieveRewards",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "totalRewardToIssue",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "voterAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "roundId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "identifier",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "time",
              "type": "uint256"
            }
          ],
          "internalType": "struct VotingInterface.PendingRequest[]",
          "name": "toRetrieve",
          "type": "tuple[]"
        }
      ],
      "name": "retrieveRewards",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        },
        {
          "internalType": "int256",
          "name": "price",
          "type": "int256"
        },
        {
          "internalType": "int256",
          "name": "salt",
          "type": "int256"
        }
      ],
      "name": "revealVote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identifier",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        },
        {
          "internalType": "int256",
          "name": "price",
          "type": "int256"
        },
        {
          "internalType": "bytes",
          "name": "ancillaryData",
          "type": "bytes"
        },
        {
          "internalType": "int256",
          "name": "salt",
          "type": "int256"
        }
      ],
      "name": "revealVote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardsExpirationTimeout",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "rounds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "snapshotId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "inflationRate",
          "type": "tuple"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "gatPercentage",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "rewardsExpirationTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "setCurrentTime",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "newGatPercentage",
          "type": "tuple"
        }
      ],
      "name": "setGatPercentage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "rawValue",
              "type": "uint256"
            }
          ],
          "internalType": "struct FixedPoint.Unsigned",
          "name": "newInflationRate",
          "type": "tuple"
        }
      ],
      "name": "setInflationRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newVotingAddress",
          "type": "address"
        }
      ],
      "name": "setMigrated",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "NewRewardsExpirationTimeout",
          "type": "uint256"
        }
      ],
      "name": "setRewardsExpirationTimeout",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "snapshotCurrentRound",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "snapshotMessageHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timerAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "voteTiming",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "phaseLength",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingToken",
      "outputs": [
        {
          "internalType": "contract VotingToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPendingPriceRequestsArray",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_phaseLength\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"_gatPercentage\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"_inflationRate\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"_rewardsExpirationTimeout\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_votingToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_finder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_timerAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"encryptedVote\",\"type\":\"bytes\"}],\"name\":\"EncryptedVote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"PriceRequestAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"price\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"}],\"name\":\"PriceResolved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"numTokens\",\"type\":\"uint256\"}],\"name\":\"RewardsRetrieved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"}],\"name\":\"VoteCommitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"price\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"numTokens\",\"type\":\"uint256\"}],\"name\":\"VoteRevealed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ancillaryBytesLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"encryptedVote\",\"type\":\"bytes\"}],\"internalType\":\"struct VotingAncillaryInterface.CommitmentAncillary[]\",\"name\":\"commits\",\"type\":\"tuple[]\"}],\"name\":\"batchCommit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"encryptedVote\",\"type\":\"bytes\"}],\"internalType\":\"struct VotingInterface.Commitment[]\",\"name\":\"commits\",\"type\":\"tuple[]\"}],\"name\":\"batchCommit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"price\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"salt\",\"type\":\"int256\"}],\"internalType\":\"struct VotingInterface.Reveal[]\",\"name\":\"reveals\",\"type\":\"tuple[]\"}],\"name\":\"batchReveal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"price\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"},{\"internalType\":\"int256\",\"name\":\"salt\",\"type\":\"int256\"}],\"internalType\":\"struct VotingAncillaryInterface.RevealAncillary[]\",\"name\":\"reveals\",\"type\":\"tuple[]\"}],\"name\":\"batchReveal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"encryptedVote\",\"type\":\"bytes\"}],\"name\":\"commitAndEmitEncryptedVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"encryptedVote\",\"type\":\"bytes\"}],\"name\":\"commitAndEmitEncryptedVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"commitVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"name\":\"commitVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gatPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentRoundId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPendingPriceRequestsArray\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPendingRequests\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"}],\"internalType\":\"struct VotingAncillaryInterface.PendingRequestAncillary[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"}],\"internalType\":\"struct VotingAncillaryInterface.PendingRequestAncillary[]\",\"name\":\"requests\",\"type\":\"tuple[]\"}],\"name\":\"getPriceRequestStatuses\",\"outputs\":[{\"components\":[{\"internalType\":\"enum Voting.RequestStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"lastVotingRound\",\"type\":\"uint256\"}],\"internalType\":\"struct Voting.RequestState[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"internalType\":\"struct VotingInterface.PendingRequest[]\",\"name\":\"requests\",\"type\":\"tuple[]\"}],\"name\":\"getPriceRequestStatuses\",\"outputs\":[{\"components\":[{\"internalType\":\"enum Voting.RequestStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"lastVotingRound\",\"type\":\"uint256\"}],\"internalType\":\"struct Voting.RequestState[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVotePhase\",\"outputs\":[{\"internalType\":\"enum VotingAncillaryInterface.Phase\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"hasPrice\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"}],\"name\":\"hasPrice\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"inflationRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"migratedAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"}],\"name\":\"requestPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"requestPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"voterAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"}],\"internalType\":\"struct VotingAncillaryInterface.PendingRequestAncillary[]\",\"name\":\"toRetrieve\",\"type\":\"tuple[]\"}],\"name\":\"retrieveRewards\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"totalRewardToIssue\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"voterAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"internalType\":\"struct VotingInterface.PendingRequest[]\",\"name\":\"toRetrieve\",\"type\":\"tuple[]\"}],\"name\":\"retrieveRewards\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"price\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"salt\",\"type\":\"int256\"}],\"name\":\"revealVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identifier\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"price\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"ancillaryData\",\"type\":\"bytes\"},{\"internalType\":\"int256\",\"name\":\"salt\",\"type\":\"int256\"}],\"name\":\"revealVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsExpirationTimeout\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rounds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"snapshotId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"inflationRate\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"gatPercentage\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"rewardsExpirationTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"setCurrentTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"newGatPercentage\",\"type\":\"tuple\"}],\"name\":\"setGatPercentage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"rawValue\",\"type\":\"uint256\"}],\"internalType\":\"struct FixedPoint.Unsigned\",\"name\":\"newInflationRate\",\"type\":\"tuple\"}],\"name\":\"setInflationRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newVotingAddress\",\"type\":\"address\"}],\"name\":\"setMigrated\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"NewRewardsExpirationTimeout\",\"type\":\"uint256\"}],\"name\":\"setRewardsExpirationTimeout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"snapshotCurrentRound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"snapshotMessageHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"voteTiming\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"phaseLength\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingToken\",\"outputs\":[{\"internalType\":\"contract VotingToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"batchCommit((bytes32,uint256,bytes,bytes32,bytes)[])\":{\"details\":\"Using `encryptedVote` is optional. If included then commitment is emitted in an event. Look at `project-root/common/Constants.js` for the tested maximum number of commitments that can fit in one transaction.\",\"params\":{\"commits\":\"struct to encapsulate an `identifier`, `time`, `hash` and optional `encryptedVote`.\"}},\"batchCommit((bytes32,uint256,bytes32,bytes)[])\":{\"details\":\"Using `encryptedVote` is optional. If included then commitment is stored on chain. Look at `project-root/common/Constants.js` for the tested maximum number of commitments that can fit in one transaction.\",\"params\":{\"commits\":\"array of structs that encapsulate an `identifier`, `time`, `hash` and optional `encryptedVote`.\"}},\"batchReveal((bytes32,uint256,int256,bytes,int256)[])\":{\"details\":\"For more info on reveals, review the comment for `revealVote`.\",\"params\":{\"reveals\":\"array of the Reveal struct which contains an identifier, time, price and salt.\"}},\"batchReveal((bytes32,uint256,int256,int256)[])\":{\"details\":\"For more information on reveals, review the comment for `revealVote`.\",\"params\":{\"reveals\":\"array of the Reveal struct which contains an identifier, time, price and salt.\"}},\"commitAndEmitEncryptedVote(bytes32,uint256,bytes,bytes32,bytes)\":{\"details\":\"An encrypted version of the vote is emitted in an event `EncryptedVote` to allow off-chain infrastructure to retrieve the commit. The contents of `encryptedVote` are never used on chain: it is purely for convenience.\",\"params\":{\"ancillaryData\":\"arbitrary data appended to a price request to give the voters more info from the caller.\",\"encryptedVote\":\"offchain encrypted blob containing the voters amount, time and salt.\",\"hash\":\"keccak256 hash of the price you want to vote for and a `int256 salt`.\",\"identifier\":\"unique price pair identifier. Eg: BTC/USD price pair.\",\"time\":\"unix timestamp of for the price request.\"}},\"commitAndEmitEncryptedVote(bytes32,uint256,bytes32,bytes)\":{\"details\":\"An encrypted version of the vote is emitted in an event `EncryptedVote` to allow off-chain infrastructure to retrieve the commit. The contents of `encryptedVote` are never used on chain: it is purely for convenience.\",\"params\":{\"encryptedVote\":\"offchain encrypted blob containing the voters amount, time and salt.\",\"hash\":\"keccak256 hash of the price you want to vote for and a `int256 salt`.\",\"identifier\":\"unique price pair identifier. Eg: BTC/USD price pair.\",\"time\":\"unix timestamp of for the price request.\"}},\"commitVote(bytes32,uint256,bytes,bytes32)\":{\"details\":\"`identifier`, `time` must correspond to a price request that's currently in the commit phase. Commits can be changed.Since transaction data is public, the salt will be revealed with the vote. While this is the system\\u2019s expected behavior, voters should never reuse salts. If someone else is able to guess the voted price and knows that a salt will be reused, then they can determine the vote pre-reveal.\",\"params\":{\"ancillaryData\":\"arbitrary data appended to a price request to give the voters more info from the caller.\",\"hash\":\"keccak256 hash of the `price`, `salt`, voter `address`, `time`, current `roundId`, and `identifier`.\",\"identifier\":\"uniquely identifies the committed vote. EG BTC/USD price pair.\",\"time\":\"unix timestamp of the price being voted on.\"}},\"commitVote(bytes32,uint256,bytes32)\":{\"details\":\"`identifier`, `time` must correspond to a price request that's currently in the commit phase. Commits can be changed.Since transaction data is public, the salt will be revealed with the vote. While this is the system\\u2019s expected behavior, voters should never reuse salts. If someone else is able to guess the voted price and knows that a salt will be reused, then they can determine the vote pre-reveal.\",\"params\":{\"hash\":\"keccak256 hash of the `price`, `salt`, voter `address`, `time`, current `roundId`, and `identifier`.\",\"identifier\":\"uniquely identifies the committed vote. EG BTC/USD price pair.\",\"time\":\"unix timestamp of the price being voted on.\"}},\"getCurrentRoundId()\":{\"returns\":{\"_0\":\"uint256 representing the unique round ID.\"}},\"getCurrentTime()\":{\"returns\":{\"_0\":\"uint for the current Testable timestamp.\"}},\"getPendingRequests()\":{\"returns\":{\"_0\":\"pendingRequests array containing identifiers of type `PendingRequest`. and timestamps for all pending requests.\"}},\"getPrice(bytes32,uint256)\":{\"details\":\"If the price is not available, the method reverts.\",\"params\":{\"identifier\":\"uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.\",\"time\":\"unix timestamp for the price request.\"},\"returns\":{\"_0\":\"int256 representing the resolved price for the given identifier and timestamp.\"}},\"getPrice(bytes32,uint256,bytes)\":{\"details\":\"If the price is not available, the method reverts.\",\"params\":{\"ancillaryData\":\"arbitrary data appended to a price request to give the voters more info from the caller.\",\"identifier\":\"uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.\",\"time\":\"unix timestamp of for the price request.\"},\"returns\":{\"_0\":\"int256 representing the resolved price for the given identifier and timestamp.\"}},\"getPriceRequestStatuses((bytes32,uint256,bytes)[])\":{\"details\":\"If the status for a particular request is NotRequested, the lastVotingRound will always be 0.\",\"params\":{\"requests\":\"array of type PendingRequest which includes an identifier and timestamp for each request.\"},\"returns\":{\"_0\":\"requestStates a list, in the same order as the input list, giving the status of each of the specified price requests.\"}},\"getVotePhase()\":{\"returns\":{\"_0\":\"Phase to indicate the current phase. Either { Commit, Reveal, NUM_PHASES_PLACEHOLDER }.\"}},\"hasPrice(bytes32,uint256)\":{\"details\":\"Time must be in the past and the identifier must be supported.\",\"params\":{\"identifier\":\"uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.\",\"time\":\"unix timestamp for the price request.\"},\"returns\":{\"_0\":\"bool if the DVM has resolved to a price for the given identifier and timestamp.\"}},\"hasPrice(bytes32,uint256,bytes)\":{\"details\":\"Time must be in the past and the identifier must be supported.\",\"params\":{\"ancillaryData\":\"arbitrary data appended to a price request to give the voters more info from the caller.\",\"identifier\":\"uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.\",\"time\":\"unix timestamp of for the price request.\"},\"returns\":{\"_0\":\"_hasPrice bool if the DVM has resolved to a price for the given identifier and timestamp.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"requestPrice(bytes32,uint256)\":{\"details\":\"Time must be in the past and the identifier must be supported.\",\"params\":{\"identifier\":\"uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.\",\"time\":\"unix timestamp for the price request.\"}},\"requestPrice(bytes32,uint256,bytes)\":{\"details\":\"Time must be in the past and the identifier must be supported. The length of the ancillary data is limited such that this method abides by the EVM transaction gas limit.\",\"params\":{\"ancillaryData\":\"arbitrary data appended to a price request to give the voters more info from the caller.\",\"identifier\":\"uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.\",\"time\":\"unix timestamp for the price request.\"}},\"retrieveRewards(address,uint256,(bytes32,uint256)[])\":{\"details\":\"Can only retrieve rewards if calling for a valid round and if the call is done within the timeout threshold (not expired).\",\"params\":{\"roundId\":\"the round from which voting rewards will be retrieved from.\",\"toRetrieve\":\"array of PendingRequests which rewards are retrieved from.\",\"voterAddress\":\"voter for which rewards will be retrieved. Does not have to be the caller.\"},\"returns\":{\"_0\":\"total amount of rewards returned to the voter.\"}},\"retrieveRewards(address,uint256,(bytes32,uint256,bytes)[])\":{\"details\":\"Can only retrieve rewards if calling for a valid round and if the call is done within the timeout threshold (not expired). Note that a named return value is used here to avoid a stack to deep error.\",\"params\":{\"roundId\":\"the round from which voting rewards will be retrieved from.\",\"toRetrieve\":\"array of PendingRequests which rewards are retrieved from.\",\"voterAddress\":\"voter for which rewards will be retrieved. Does not have to be the caller.\"},\"returns\":{\"totalRewardToIssue\":\"total amount of rewards returned to the voter.\"}},\"revealVote(bytes32,uint256,int256,bytes,int256)\":{\"details\":\"The revealed `price`, `salt`, `address`, `time`, `roundId`, and `identifier`, must hash to the latest `hash` that `commitVote()` was called with. Only the committer can reveal their vote.\",\"params\":{\"ancillaryData\":\"arbitrary data appended to a price request to give the voters more info from the caller.\",\"identifier\":\"voted on in the commit phase. EG BTC/USD price pair.\",\"price\":\"voted on during the commit phase.\",\"salt\":\"value used to hide the commitment price during the commit phase.\",\"time\":\"specifies the unix timestamp of the price being voted on.\"}},\"revealVote(bytes32,uint256,int256,int256)\":{\"details\":\"The revealed `price`, `salt`, `address`, `time`, `roundId`, and `identifier`, must hash to the latest `hash` that `commitVote()` was called with. Only the committer can reveal their vote.\",\"params\":{\"identifier\":\"voted on in the commit phase. EG BTC/USD price pair.\",\"price\":\"voted on during the commit phase.\",\"salt\":\"value used to hide the commitment price during the commit phase.\",\"time\":\"specifies the unix timestamp of the price is being voted on.\"}},\"setCurrentTime(uint256)\":{\"details\":\"Will revert if not running in test mode.\",\"params\":{\"time\":\"timestamp to set current Testable time to.\"}},\"setGatPercentage((uint256))\":{\"details\":\"This method is public because calldata structs are not currently supported by solidity.\",\"params\":{\"newGatPercentage\":\"sets the next round's Gat percentage.\"}},\"setInflationRate((uint256))\":{\"details\":\"This method is public because calldata structs are not currently supported by solidity.\",\"params\":{\"newInflationRate\":\"sets the next round's inflation rate.\"}},\"setMigrated(address)\":{\"details\":\"Can only be called by the contract owner.\",\"params\":{\"newVotingAddress\":\"the newly migrated contract address.\"}},\"setRewardsExpirationTimeout(uint256)\":{\"details\":\"This change only applies to rounds that have not yet begun.\",\"params\":{\"NewRewardsExpirationTimeout\":\"how long a caller can wait before choosing to withdraw their rewards.\"}},\"snapshotCurrentRound(bytes)\":{\"details\":\"This function can be called multiple times, but only the first call per round into this function or `revealVote` will create the round snapshot. Any later calls will be a no-op. Will revert unless called during reveal period.\",\"params\":{\"signature\":\"signature required to prove caller is an EOA to prevent flash loans from being included in the snapshot.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"batchCommit((bytes32,uint256,bytes,bytes32,bytes)[])\":{\"notice\":\"Submit a batch of commits in a single transaction.\"},\"batchCommit((bytes32,uint256,bytes32,bytes)[])\":{\"notice\":\"Submit a batch of commits in a single transaction.\"},\"batchReveal((bytes32,uint256,int256,bytes,int256)[])\":{\"notice\":\"Reveal multiple votes in a single transaction. Look at `project-root/common/Constants.js` for the tested maximum number of reveals. that can fit in one transaction.\"},\"batchReveal((bytes32,uint256,int256,int256)[])\":{\"notice\":\"Reveal multiple votes in a single transaction. Look at `project-root/common/Constants.js` for the tested maximum number of reveals. that can fit in one transaction.\"},\"commitAndEmitEncryptedVote(bytes32,uint256,bytes,bytes32,bytes)\":{\"notice\":\"commits a vote and logs an event with a data blob, typically an encrypted version of the vote\"},\"commitAndEmitEncryptedVote(bytes32,uint256,bytes32,bytes)\":{\"notice\":\"commits a vote and logs an event with a data blob, typically an encrypted version of the vote\"},\"commitVote(bytes32,uint256,bytes,bytes32)\":{\"notice\":\"Commit a vote for a price request for `identifier` at `time`.\"},\"commitVote(bytes32,uint256,bytes32)\":{\"notice\":\"Commit a vote for a price request for `identifier` at `time`.\"},\"getCurrentRoundId()\":{\"notice\":\"Returns the current round ID, as a function of the current time.\"},\"getCurrentTime()\":{\"notice\":\"Gets the current time. Will return the last time set in `setCurrentTime` if running in test mode. Otherwise, it will return the block timestamp.\"},\"getPendingRequests()\":{\"notice\":\"Gets the queries that are being voted on this round.\"},\"getPrice(bytes32,uint256)\":{\"notice\":\"Gets the price for `identifier` and `time` if it has already been requested and resolved.\"},\"getPrice(bytes32,uint256,bytes)\":{\"notice\":\"Gets the price for `identifier` and `time` if it has already been requested and resolved.\"},\"getPriceRequestStatuses((bytes32,uint256,bytes)[])\":{\"notice\":\"Gets the status of a list of price requests, identified by their identifier and time.\"},\"getVotePhase()\":{\"notice\":\"Returns the current voting phase, as a function of the current time.\"},\"hasPrice(bytes32,uint256)\":{\"notice\":\"Whether the price for `identifier` and `time` is available.\"},\"hasPrice(bytes32,uint256,bytes)\":{\"notice\":\"Whether the price for `identifier` and `time` is available.\"},\"requestPrice(bytes32,uint256)\":{\"notice\":\"Enqueues a request (if a request isn't already present) for the given `identifier`, `time` pair.\"},\"requestPrice(bytes32,uint256,bytes)\":{\"notice\":\"Enqueues a request (if a request isn't already present) for the given `identifier`, `time` pair.\"},\"retrieveRewards(address,uint256,(bytes32,uint256)[])\":{\"notice\":\"Retrieves rewards owed for a set of resolved price requests.\"},\"retrieveRewards(address,uint256,(bytes32,uint256,bytes)[])\":{\"notice\":\"Retrieves rewards owed for a set of resolved price requests.\"},\"revealVote(bytes32,uint256,int256,bytes,int256)\":{\"notice\":\"Reveal a previously committed vote for `identifier` at `time`.\"},\"revealVote(bytes32,uint256,int256,int256)\":{\"notice\":\"Reveal a previously committed vote for `identifier` at `time`.\"},\"setCurrentTime(uint256)\":{\"notice\":\"Sets the current time.\"},\"setGatPercentage((uint256))\":{\"notice\":\"Resets the Gat percentage. Note: this change only applies to rounds that have not yet begun.\"},\"setInflationRate((uint256))\":{\"notice\":\"Resets the inflation rate. Note: this change only applies to rounds that have not yet begun.\"},\"setMigrated(address)\":{\"notice\":\"Disables this Voting contract in favor of the migrated one.\"},\"setRewardsExpirationTimeout(uint256)\":{\"notice\":\"Resets the rewards expiration timeout.\"},\"snapshotCurrentRound(bytes)\":{\"notice\":\"Snapshot the current round's token balances and lock in the inflation rate and GAT.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/circleci/protocol/packages/core/contracts/oracle/implementation/test/VotingTest.sol\":\"VotingTest\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":199},\"remappings\":[]},\"sources\":{\"/home/circleci/protocol/packages/core/contracts/common/implementation/ExpandedERC20.sol\":{\"keccak256\":\"0x0b42526a6373e8b14d488537e05bd9919cca6cb1fae3b14f2429a5062b083997\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://06cfe7f58991110a9ce32b82a5d0deb5f762da7010dc55298430ec6f45cdec4b\",\"dweb:/ipfs/QmQKbe8vyQ742YmnzkHSNLRsjucEjfJa8d5vfgdV6Fxm4k\"]},\"/home/circleci/protocol/packages/core/contracts/common/implementation/FixedPoint.sol\":{\"keccak256\":\"0xab45bbd5979790b9f84b2f741fc5476d7196f5fd924704d38798540fa1b2e2f3\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://24affc9dbe1fa7c73ed6e1f46f8e1f9f46b83954d43d0bb2ef15ed80fe7e1fc2\",\"dweb:/ipfs/Qmbddhukgu2FdV1VKpACsuterX2kcq2X9jJs6usPqXLSqE\"]},\"/home/circleci/protocol/packages/core/contracts/common/implementation/MultiRole.sol\":{\"keccak256\":\"0xc35f4e028196f04a47b2456ed7efd825be3406688a314d75916f57680eae1795\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://29edb6ac3a5e5146fe262f77431d55571379cf0265925060d15f27b1b927cdd6\",\"dweb:/ipfs/QmUg31ey8b53pXdUpUBUrHx46nC3p2XChwmhLXw1h9ooyi\"]},\"/home/circleci/protocol/packages/core/contracts/common/implementation/Testable.sol\":{\"keccak256\":\"0xd7c14c59b0f4325ccc5feea6cf9acf45eefb169cbf48ffd4a265a3267b815cfa\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://b8b49c6c76f0458a196b11b0dc03f9bcc8f26851fdb51888b2a7cb9034a96493\",\"dweb:/ipfs/QmY4JDiPDcZbW8j3PWRd9YwRP28WdnSPGA1Yknj5gkWJWH\"]},\"/home/circleci/protocol/packages/core/contracts/common/implementation/Timer.sol\":{\"keccak256\":\"0x4ce613d5032aefb04a64fd623c216a6f68a1b903a4a7aa72721323dc988a6c90\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://6b557f3da4d90ec171cba84a2d85202c2327028a081552fe36440cdbbef6396d\",\"dweb:/ipfs/QmcLdrkekhH1VXN5jEuiqbkTzX7doz1KuVp6KQfCnyQ8C4\"]},\"/home/circleci/protocol/packages/core/contracts/common/interfaces/ExpandedIERC20.sol\":{\"keccak256\":\"0x7ecd92b537bb1776f65bc0414e732c97559d07e309bd41e666bc65f143f2d895\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://d1794951b316e87eedfd212fc54abe0261fe9defd62aca71f9a36452c3092abd\",\"dweb:/ipfs/QmXz4w3nVxSc9VTtLUa5mSTsb2btvdhgB72UrVbEdiJoFy\"]},\"/home/circleci/protocol/packages/core/contracts/oracle/implementation/Constants.sol\":{\"keccak256\":\"0xdbb681274d3d1582bdeea2d5e09739d0f30fd37bafdfa37ac17b01dd05e1b12c\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://e07d0801e26cc117bb89113125faf54c730137a18b3dd3e7237a0422972c203b\",\"dweb:/ipfs/QmQntQCNR1hYPqUq3cKasTPV7BsCC8Xm3gJ4YfZKpZsNGh\"]},\"/home/circleci/protocol/packages/core/contracts/oracle/implementation/Registry.sol\":{\"keccak256\":\"0x27c18535d0ca2b2a016a2d835b113b485456572cd48fcc1dd3482d928e5972c7\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://1988f6138ffe2a01024f7a5c720de0654f5b58923fe6d42d8033456ea925c7b9\",\"dweb:/ipfs/QmQtdxu4ooF6YzVPbBDsnyBwdH5UmJDPwuamTYt3siBf1z\"]},\"/home/circleci/protocol/packages/core/contracts/oracle/implementation/ResultComputation.sol\":{\"keccak256\":\"0x4d16f1d08aa95052f12d77afd9b8ba381ea14c8643668e4de00b220b42f6dbc1\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://73bcf9506026bfece8a42b103ebe2d731c2299838dabc296a1ee6e2a986d3ae0\",\"dweb:/ipfs/QmZagFV2oiKYWZu72SDsSVhc3M9o5Go11YSozaHTcpQk4z\"]},\"/home/circleci/protocol/packages/core/contracts/oracle/implementation/VoteTiming.sol\":{\"keccak256\":\"0xa2c27061bc70f42783eaeaed2cfbb0210c43a6c43f5265b4a85cbea139d0432b\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://057b83fb0cd1c5216e51ad993d790065f07c7f2b68fb69044835df48bd30a0e7\",\"dweb:/ipfs/Qmai6QsjqjQWB92wAUSHfMJFxZJSD9RcWBPHsfMg97NLCU\"]},\"/home/circleci/protocol/packages/core/contracts/oracle/implementation/Voting.sol\":{\"keccak256\":\"0x3c83e2f2ea8e2fcff13d23c084e3acba3b10f12173f164e2ee56cb1db0b9bba4\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://c7cd699ea95f54444264adddc6fe5ec7c734d8c28f4657b67d546dfbadb0c3c7\",\"dweb:/ipfs/QmZ8ytrJmdGewQMX2UnGZVePAujqmdTPf4tjGEbtbBcL79\"]},\"/home/circleci/protocol/packages/core/contracts/oracle/implementation/VotingToken.sol\":{\"keccak256\":\"0x377006e6429ed0dee3b4295f648ff09824e00f9bc9a720b84692348e479623df\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://f4515fa405a51c9ac0cb362198fe03850443b39eb03f1c15105b506d1a0aba81\",\"dweb:/ipfs/QmTry2jbRH1gMn6amMACHzi1LKJHHMNRakX5R9QbgbQha2\"]},\"/home/circleci/protocol/packages/core/contracts/oracle/implementation/test/VotingTest.sol\":{\"keccak256\":\"0x02b311c106e5e6c84417cf257fc435c1d48f4107b74d1769640e6113ebee204c\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://d77d6d9ff05aa5fa0bbc703d6e848b8ccfda34c841f4e3fc03635cbf9ffb855f\",\"dweb:/ipfs/QmeZQgfH286CUnqEJoR9J9DeAiGBy1itEgM64499r7N4RE\"]},\"/home/circleci/protocol/packages/core/contracts/oracle/interfaces/FinderInterface.sol\":{\"keccak256\":\"0x22ad0329b3a6e55e30fb8391aa69310966cdbc06047ea7d031a2d14450a54d2f\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://5341487810effd6dddd567cd0bf8cd67e369ac69740bd1113ce197fa42bf1a90\",\"dweb:/ipfs/QmYoXoAFTkUdxmoU6AAdHFMpKQtgGi9xaUrQrBR1h7Q7ZR\"]},\"/home/circleci/protocol/packages/core/contracts/oracle/interfaces/IdentifierWhitelistInterface.sol\":{\"keccak256\":\"0xfd0481f8e756e8e0f5694ecd7e6d32ef33bf17ab06158d57c69cfccee9717561\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://425d8849f8d2876f30663f77690cd202b8068f83ae02d5587466e2bce9b8a717\",\"dweb:/ipfs/QmTMNyDnP9n4ndkjiwtGD2AQj6EjA4iDzwwsj9qgVrgbXy\"]},\"/home/circleci/protocol/packages/core/contracts/oracle/interfaces/OracleAncillaryInterface.sol\":{\"keccak256\":\"0x5fd2460d6324031c8e6f8619a6f07871feaadb8386ccbe08b12a3bf5f04a836b\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://16004cbfb47196ca363361da4e2732135e026d77dfbd13866067fcaf3c9896df\",\"dweb:/ipfs/QmST1f28fvQF8nyQR1Y6WxuUytNqJF4kLgqHRHQ1WQtvyE\"]},\"/home/circleci/protocol/packages/core/contracts/oracle/interfaces/OracleInterface.sol\":{\"keccak256\":\"0x426df5f5518159e244ceec654dfcb8cff93e748870eb7c59649881ff492669b5\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://fa1bdef93a101531c379fc08b0e353d16024aa9abc22e7c2873e8652199a40dd\",\"dweb:/ipfs/QmRCp9DVdUkAkwzWXwkpa1QgrBH48KqjmF3qXCd9tmsXxB\"]},\"/home/circleci/protocol/packages/core/contracts/oracle/interfaces/RegistryInterface.sol\":{\"keccak256\":\"0x5b0305042d80f7d810e586efe8f15737c4916959c28467a505f57d0d24190cc5\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://2f6d1f83eab9a46696555d6420a328a8205aa3b8b26de553c61aec1388535215\",\"dweb:/ipfs/QmY8vEVmx1zizCiGTmetHFhgdHgjGS669sErUQktyXzyuj\"]},\"/home/circleci/protocol/packages/core/contracts/oracle/interfaces/VotingAncillaryInterface.sol\":{\"keccak256\":\"0xcc57bb1b4fad947ee5665097a6fe5b99b948f375dbac61ba0f08f750fd75258c\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://1519101394a649165d86910ea22b5f457528a0a5a12c7655f6cac9ed9c1a35c4\",\"dweb:/ipfs/QmX6iRM2bsZj9p9HYzJAa6jpyedN59wFTaf6aTBTcWaeY4\"]},\"/home/circleci/protocol/packages/core/contracts/oracle/interfaces/VotingInterface.sol\":{\"keccak256\":\"0x18931dc7d69eac9b07197b2c96516e1997295a228f27014e73ad808de4520745\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://3b58cfcc6872e832c1ed64e88ad5b73962f2e20a211bf8606bcbc6af31209871\",\"dweb:/ipfs/QmfYpVFU9URh3u1b4cQB7KqskJdGWwbifTjTsuic1iB66T\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x0de74dfa6b37943c1b834cbd8fb7a8d052e5ff80c7adb33692102dd6cd2985e9\",\"urls\":[\"bzz-raw://9d2d827fcf4a838f5821732c0acd6a40d21c2a5a2cfe2563feec91465f47bb60\",\"dweb:/ipfs/Qmex3wMKf5Sghbfvr288RUg1kP2uAyTMf11w83WbMbpQQc\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x9a8c691b81a4a48adbbd5b010faa56a168c189e711495c16347d93b60b805f82\",\"urls\":[\"bzz-raw://d951d626ed7bfe1a2d7a6bd4af315ff8691929bd567594d6ab53599fe9e17e4e\",\"dweb:/ipfs/QmYkGeowpa6Bjr9aaDirWdDo7hSfShzzZhanKC4nTfRhLj\"]},\"@openzeppelin/contracts/cryptography/ECDSA.sol\":{\"keccak256\":\"0x0c4a4883483cd70c6541aa55ae609483d65d457f160963da29acfc39f9a555ec\",\"urls\":[\"bzz-raw://8fa01aeec715a6ee596e68809306717f9343f175058217f85761161bfc832dfd\",\"dweb:/ipfs/QmTRt1sA3PQjiBV8Hka4jQ5hmAY8CJrujz2TMt5PqdNKjc\"]},\"@openzeppelin/contracts/math/Math.sol\":{\"keccak256\":\"0x50280546205978ca6573541955e15453b4c07a19e6c8ec4f6785a5ae0d7343fb\",\"urls\":[\"bzz-raw://6463c7833ba4b3cbc3b56d50b56e7ce870aaec674633d7897a459b234478fa3e\",\"dweb:/ipfs/QmRkfjwTpA5E4SxUoHw8Qb7g6eXahtgmLrWWtTGH2TDZLj\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x04d34b3cd5677bea25f8dfceb6dec0eaa071d4d4b789a43f13fe0c415ba4c296\",\"urls\":[\"bzz-raw://e7e8b526a6839e5ba14f0d23a830387fec47f7043ce01d42c9f285b709a9d080\",\"dweb:/ipfs/QmXmhhFmX5gcAvVzNiDPAGA35iHMPNaYtQkACswRHBVTNw\"]},\"@openzeppelin/contracts/math/SignedSafeMath.sol\":{\"keccak256\":\"0xfadc24a31d75d6b3f955190cffe13bbe6e24a274c12b2b60e8c4004131487ce8\",\"urls\":[\"bzz-raw://0ec35367d49b2ea45f556a439f836e208d2460faeb6e2341e9130d163128b619\",\"dweb:/ipfs/QmTwKCBdkVAarY5hteSdwQ1J4GpogZoxCZHrbieMQVzuQJ\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x3211de52f707a62a356a34fdea9d6a7bed46402d5ce45f1891a16fe2132fbb47\",\"urls\":[\"bzz-raw://45dfe794ad43a3674fab38a378c57eb6ed3353949f6529ccad4a4cbc91d45fc5\",\"dweb:/ipfs/QmReFGciE9fgsb6Nas1Fx593pzKWMjaDa1VQg4CEJQaD6U\"]},\"@openzeppelin/contracts/token/ERC20/ERC20Snapshot.sol\":{\"keccak256\":\"0x5e3f26bd43cf4dc30cfc964c03cefd701fe11952ee12e43222bbbe11ff2f928f\",\"urls\":[\"bzz-raw://2d4a8b33e68ae7e906907b42a2dde2693545672f1e2b37b82bc18799056a8392\",\"dweb:/ipfs/QmT3AdfADU3xDZ1jemuFxVutTHq8SdoJtBHdUpKyoTyKgh\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x6cc1cb934a3ac2137a7dcaed018af9e235392236ceecfd3687259702b9c767ad\",\"urls\":[\"bzz-raw://0055fa88138cd1c3c6440370f8580f85857f8fe9dec41c99af9eafbeb8d9c3ce\",\"dweb:/ipfs/QmX1xDh8vwGLLCH8ti45eXjQ7Wcxv1FEGTR3jkFnd5Nv6F\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x5f7da58ee3d9faa9b8999a93d49c8ff978f1afc88ae9bcfc6f9cbb44da011c2b\",\"urls\":[\"bzz-raw://4f089d954b3ecaa26949412fe63e9a184b056562c6c13dd4a0529a5d9a2e685a\",\"dweb:/ipfs/QmVK5iCNAMcEJQxT59bsC5E53JQASDQPU6khHox3d5ZXCn\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x6167b89f91ae6ca26fcba6ad04565ffa70a74694e0e46fda9b1500b2b796cf34\",\"urls\":[\"bzz-raw://aa7a5a74568c83dee67049f8dc42a80450add6c440828a2f16ac4f64905faa75\",\"dweb:/ipfs/QmaVFRGewWReDnvpHraeyrh3GsHLxH1tq6BVKdhYxBaykT\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0x4f3a00edb976e97943fe0a620ea2948955a75eff2a9231c202d50d1e062d8da5\",\"urls\":[\"bzz-raw://4d83aa87b7c75f666d57a0e5b779a19c00b453b14ee4ed88cfda6d056fdcf14c\",\"dweb:/ipfs/QmXpWwQVFo66hsrAZmHxoxNzwEwBDgNWvaUYqY4TJV38vk\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "immutableReferences": {},
  "sourceMap": "6265:26:71:-:0;258:689:78;6265:26:71;;258:689:78;6265:26:71;-1:-1:-1;;;6265:26:71;;6226:67;6255:37;6226:28;6265:26;6226:28;;;;;:67;;:::i;:::-;6189:104;;294:520:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;743:12:7;:28;;-1:-1:-1;;;;;;743:28:7;-1:-1:-1;;;;;743:28:7;;;;;616:12:78;;642:14;;670;;698:25;;737:12;;763:7;;743:28:7;;852:12:97;:10;:12::i;:::-;874:6;:18;;-1:-1:-1;;;;;;874:18:97;-1:-1:-1;;;;;874:18:97;;;;;;;;907:43;;874:18;;-1:-1:-1;874:18:97;-1:-1:-1;;907:43:97;;-1:-1:-1;;907:43:97;798:159;8684:29:71::1;8700:12;8684:10;:15;;;;;;:29;;;;:::i;:::-;8731:35;8764:1;8731:14;:32;;;;;;:35;;;;:::i;:::-;8723:78;;;;-1:-1:-1::0;;;8723:78:71::1;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1::0;8811:30:71;;:13:::1;:30:::0;8851;;:13:::1;:30:::0;8891:11:::1;:39:::0;;-1:-1:-1;;;;;8891:39:71;;::::1;-1:-1:-1::0;;;;;;8891:39:71;;::::1;;::::0;;;8940:6:::1;:33:::0;;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;8983:24:::1;:52:::0;-1:-1:-1;258:689:78;;-1:-1:-1;;;;;;;258:689:78;3363:265:98;3432:7;3615:4;3562:58;;;;;;;;:::i;:::-;;;;;;;;;;;;;3552:69;;;;;;3545:76;;3363:265;;;:::o;735:104:96:-;822:10;735:104;:::o;481:238:70:-;670:1;656:11;:15;648:24;;;;;;682:30;;481:238::o;5141:152:4:-;5221:4;5258:19;5275:1;5258:16;:19::i;:::-;:28;5244:10;;:42;;;-1:-1:-1;5141:152:4;;;;;:::o;1032:135::-;1092:15;;:::i;:::-;1126:34;;;;;;;;1135:24;607:6;1135:1;:5;;;;;;:24;;;;:::i;:::-;1126:34;;1119:41;1032:135;-1:-1:-1;;1032:135:4:o;2119:459:100:-;2177:7;2418:6;2414:45;;-1:-1:-1;2447:1:100;2440:8;;2414:45;2481:5;;;2485:1;2481;:5;:1;2504:5;;;;;:10;2496:56;;;;-1:-1:-1;;;2496:56:100;;;;;;;:::i;:::-;2570:1;2119:459;-1:-1:-1;;;2119:459:100:o;258:689:78:-;;;;;;;;;;;;;;:::o;5:134:-1:-;83:13;;-1:-1;;;;;5353:54;;5638:35;;5628:2;;5687:1;;5677:12;179:349;;304:4;292:9;287:3;283:19;279:30;276:2;;;-1:-1;;312:12;276:2;4587;4581:9;304:4;4613:17;;-1:-1;;;;;4673:34;;4709:22;;;4670:62;4667:2;;;-1:-1;;4735:12;4667:2;4587;4754:22;613:13;;421:86;;-1:-1;331:29;270:258;-1:-1;270:258::o;676:1183::-;;;;;;;;943:3;931:9;922:7;918:23;914:33;911:2;;;-1:-1;;950:12;911:2;1044:22;613:13;1002:74;;1131:89;1212:7;1113:2;1192:9;1188:22;1131:89;:::i;:::-;1121:99;;1275:89;1356:7;1257:2;1336:9;1332:22;1275:89;:::i;:::-;1265:99;;1401:2;1455:9;1451:22;613:13;1409:74;;1539:64;1595:7;1520:3;1575:9;1571:22;1539:64;:::i;:::-;1529:74;;1659:64;1715:7;1640:3;1695:9;1691:22;1659:64;:::i;:::-;1649:74;;1779:64;1835:7;1760:3;1815:9;1811:22;1779:64;:::i;:::-;1769:74;;905:954;;;;;;;;;;:::o;3152:520::-;2322:66;2302:87;;2286:2;2408:12;;1955:58;;;;3635:12;;;3369:303::o;3679:416::-;3879:2;3893:47;;;2659:2;3864:18;;;4892:19;2695:32;4932:14;;;2675:53;2747:12;;;3850:245::o;4102:416::-;4302:2;4316:47;;;2998:2;4287:18;;;4892:19;3034:34;4932:14;;;3014:55;-1:-1;;;3089:12;;;3082:25;3126:12;;;4273:245::o;:::-;258:689:78;;;;;;",
  "deployedSourceMap": "258:689:78:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29346:4026:71;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;33493:640;;;;;;:::i;:::-;;:::i;19895:628::-;;;;;;:::i;:::-;;:::i;:::-;;38074:299;;;;;;:::i;:::-;;:::i;24633:444::-;;;;;;:::i;:::-;;:::i;397:27:7:-;;;:::i;:::-;;;;;;;:::i;6189:104:71:-;;;:::i;:::-;;;;;;;:::i;10466:1483::-;;;;;;:::i;:::-;;:::i;1112:115:7:-;;;;;;:::i;:::-;;:::i;5029:39:71:-;;;:::i;37062:197::-;;;;;;:::i;:::-;;:::i;1472:256:7:-;;;:::i;4846:40:71:-;;;:::i;5365:30::-;;;:::i;25198:301::-;;;;;;:::i;:::-;;:::i;15064:1054::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;23627:197::-;;;;;;:::i;:::-;;:::i;36516:187::-;;;:::i;28126:555::-;;;;;;:::i;:::-;;:::i;12070:123::-;;;;;;:::i;:::-;;:::i;25927:620::-;;;;;;:::i;:::-;;:::i;26668:583::-;;;;;;:::i;:::-;;:::i;1656:145:97:-;;;:::i;13893:431:71:-;;;;;;:::i;:::-;;:::i;4365:33::-;;;:::i;36179:178::-;;;:::i;:::-;;;;;;;:::i;34497:1473::-;;;:::i;:::-;;;;;;;:::i;37558:217::-;;;;;;:::i;:::-;;:::i;16239:534::-;;;;;;:::i;:::-;;:::i;38633:242::-;;;;;;:::i;:::-;;:::i;17851:1231::-;;;;;;:::i;:::-;;:::i;4020:39::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;1033:77:97:-;;;:::i;13172:142:71:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;27643:362::-;;;;;;:::i;:::-;;:::i;21240:2266::-;;;;;;:::i;:::-;;:::i;5113:30::-;;;:::i;12765:286::-;;;;;;:::i;:::-;;:::i;4531:40::-;;;:::i;6132:50::-;;;:::i;14445:144::-;;;;;;:::i;:::-;;:::i;19203:189::-;;;;;;:::i;:::-;;:::i;820:125:78:-;;;:::i;:::-;;;;;;;:::i;1950:240:97:-;;;;;;:::i;:::-;;:::i;29346:4026:71:-;29510:45;;:::i;:::-;29571:15;;-1:-1:-1;;;;;29571:15:71;:29;29567:129;;29638:15;;-1:-1:-1;;;;;29638:15:71;29624:10;:29;29616:69;;;;-1:-1:-1;;;29616:69:71;;;;;;;:::i;:::-;;;;;;;;;29723:50;29756:16;:14;:16::i;:::-;29723:10;;:32;:50::i;:::-;29713:7;:60;29705:88;;;;-1:-1:-1;;;29705:88:71;;;;;;;:::i;:::-;29804:19;29826:15;;;:6;:15;;;;;29887:27;;;;29826:15;;29804:19;29868:16;:14;:16::i;:::-;:46;29851:63;;29924:42;;:::i;:::-;29981:76;;;;;;;;;;30001:11;;30039:16;;-1:-1:-1;;;30001:55:71;;;29981:76;;;;-1:-1:-1;;;;;30001:11:71;;:23;;:55;;30025:12;;30001:55;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;29981:76;;29924:133;-1:-1:-1;30170:46:71;;:::i;:::-;30231:64;;;;;;;;;;30251:11;;30277:16;;-1:-1:-1;;;30251:43:71;;;30231:64;;;;-1:-1:-1;;;;;30251:11:71;;:25;;:43;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;30231:64;;30170:125;-1:-1:-1;30305:45:71;;:::i;:::-;30353:23;;;;;;;;;:19;;;:23;;;:44;;30377:19;30353:23;:44::i;:::-;30305:92;;30492:22;;;;;;;;30512:1;30492:22;;;30471:43;;30530:9;30525:2623;30549:10;:17;30545:1;:21;30525:2623;;;30587:33;30639:91;30656:10;30667:1;30656:13;;;;;;;;;;;;;;:24;;;30682:10;30693:1;30682:13;;;;;;;;;;;;;;:18;;;30702:10;30713:1;30702:13;;;;;;;;;;;;;;:27;;;30639:16;:91::i;:::-;30807:28;;;;30744:33;30780:56;;;:26;;;:56;;;;;30587:143;;-1:-1:-1;30928:39:71;;30920:81;;;;-1:-1:-1;;;30920:81:71;;;;;;;:::i;:::-;31016:48;31037:12;31051;31016:20;:48::i;:::-;-1:-1:-1;;;;;31083:42:71;;:28;:42;;;;;;;;;;:53;;;31079:1903;;31161:8;;;;31079:1903;31194:9;31190:1792;;;31393:10;31404:1;31393:13;;;;;;;;;;;;;;:24;;;31364:7;31330:12;-1:-1:-1;;;;;31292:255:71;;31439:10;31450:1;31439:13;;;;;;;;;;;;;;:18;;;31479:10;31490:1;31479:13;;;;;;;;;;;;;;:27;;;31528:1;31292:255;;;;;;;;:::i;:::-;;;;;;;;31190:1792;;;-1:-1:-1;;;;;31635:42:71;;:28;:42;;;;;;;;;;:53;;;;;31589:100;;:30;;;:45;:100::i;:::-;31568:1414;;;31978:33;;:::i;:::-;32034:152;32103:61;:12;:30;;:59;:61::i;:::-;32034:39;:15;32054:18;32034:19;:39::i;:::-;:43;;:152::i;:::-;31978:208;-1:-1:-1;32225:30:71;:18;31978:208;32225:22;:30::i;:::-;32204:51;;32436:10;32447:1;32436:13;;;;;;;;;;;;;;:24;;;32407:7;32373:12;-1:-1:-1;;;;;32335:269:71;;32482:10;32493:1;32482:13;;;;;;;;;;;;;;:18;;;32522:10;32533:1;32522:13;;;;;;;;;;;;;;:27;;;32571:6;:15;;;32335:269;;;;;;;;:::i;:::-;;;;;;;;31568:1414;;;;32813:10;32824:1;32813:13;;;;;;;;;;;;;;:24;;;32784:7;32750:12;-1:-1:-1;;;;;32712:255:71;;32859:10;32870:1;32859:13;;;;;;;;;;;;;;:18;;;32899:10;32910:1;32899:13;;;;;;;;;;;;;;:27;;;32948:1;32712:255;;;;;;;;:::i;:::-;;;;;;;;31568:1414;-1:-1:-1;;;;;33084:42:71;;:28;:42;;;;;;;;;;;:53;;33077:60;-1:-1:-1;30525:2623:71;30568:3;;30525:2623;;;-1:-1:-1;33204:35:71;:18;33237:1;33204:32;:35::i;:::-;33200:166;;;33263:11;;33294:27;;33263:59;;-1:-1:-1;;;33263:59:71;;-1:-1:-1;;;;;33263:11:71;;;;:16;;:59;;33280:12;;33294:27;33263:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;33255:100;;;;-1:-1:-1;;;33255:100:71;;;;;;;:::i;:::-;29346:4026;;;;;;;;;;:::o;33493:640::-;33648:26;;:::i;:::-;33686:52;33771:10;:17;-1:-1:-1;;;;;33741:48:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;33686:103;;33805:9;33800:250;33824:10;:17;33820:1;:21;33800:250;;;33898:10;33909:1;33898:13;;;;;;;;;;;;;;:24;;;33862:19;33882:1;33862:22;;;;;;;;;;;;;;:33;;:60;;;;;33966:10;33977:1;33966:13;;;;;;;;;;;;;;:18;;;33936:19;33956:1;33936:22;;;;;;;;;;;;;;:27;;:48;;;;;33998:41;;;;;;;;;;;;:19;34018:1;33998:22;;;;;;;;;;;;;;;;;;:36;;:41;33843:3;;33800:250;;;;34067:59;34083:12;34097:7;34106:19;34067:15;:59::i;:::-;34060:66;33493:640;-1:-1:-1;;;;;33493:640:71:o;19895:628::-;9629:15;;-1:-1:-1;;;;;9629:15:71;:29;9621:72;;;;-1:-1:-1;;;9621:72:71;;;;;;;:::i;:::-;20070:17:::1;20090:16;:14;:16::i;:::-;20070:36:::0;-1:-1:-1;20169:12:71::1;20124:41;:10;20155:9:::0;20124:30:::1;:41::i;:::-;:57;;;;;;;;;20116:99;;;;-1:-1:-1::0;;;20116:99:71::1;;;;;;;:::i;:::-;20363:10;-1:-1:-1::0;;;;;20314:59:71::1;:45;20328:19;;20349:9;;20314:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;20314:13:71::1;::::0;-1:-1:-1;;;20314:45:71:i:1;:::-;-1:-1:-1::0;;;;;20314:59:71::1;;20306:99;;;;-1:-1:-1::0;;;20306:99:71::1;;;;;;;:::i;:::-;20415:15;20433:43;:10;20466:9:::0;20433:32:::1;:43::i;:::-;20415:61;;20486:30;20508:7;20486:21;:30::i;:::-;9703:1;;19895:628:::0;;:::o;38074:299::-;1247:12:97;:10;:12::i;:::-;1237:6;;-1:-1:-1;;;;;1237:6:97;;;:22;;;1229:67;;;;-1:-1:-1;;;1229:67:97;;;;;;;:::i;:::-;38260:30:71::1;:16:::0;38288:1:::1;38260:27;:30::i;:::-;38252:72;;;;-1:-1:-1::0;;;38252:72:71::1;;;;;;;:::i;:::-;38334:32:::0;:13:::1;:32:::0;38074:299::o;24633:444::-;24845:49;24856:10;24868:4;24874:13;24889:4;24845:10;:49::i;:::-;24905:15;24923:50;24956:16;:14;:16::i;24923:50::-;24905:68;;25023:10;25014:7;25002:10;-1:-1:-1;;;;;24988:82:71;;25035:4;25041:13;25056;24988:82;;;;;;;;:::i;:::-;;;;;;;;24633:444;;;;;;:::o;397:27:7:-;;;-1:-1:-1;;;;;397:27:7;;:::o;6189:104:71:-;;;;:::o;10466:1483::-;9218:15;;-1:-1:-1;;;;;9218:15:71;:29;9214:345;;9285:15;;-1:-1:-1;;;;;9285:15:71;9271:10;:29;9263:73;;;;-1:-1:-1;;;9263:73:71;;;;;;;:::i;:::-;9214:345;;;9396:6;;:58;;-1:-1:-1;;;9396:58:71;;9367:17;;-1:-1:-1;;;;;9396:6:71;;:31;;:58;;-1:-1:-1;;;9428:25:71;9396:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9477:41;;-1:-1:-1;;;9477:41:71;;9367:88;;-1:-1:-1;;;;;;9477:29:71;;;;;:41;;9507:10;;9477:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9469:79;;;;-1:-1:-1;;;9469:79:71;;;;;;;:::i;:::-;9214:345;;10631:17:::1;10651:16;:14;:16::i;:::-;10631:36;;10693:9;10685:4;:17;;10677:54;;;;-1:-1:-1::0;;;10677:54:71::1;;;;;;;:::i;:::-;10749:25;:23;:25::i;:::-;-1:-1:-1::0;;;;;10749:47:71::1;;10797:10;10749:59;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10741:102;;;;-1:-1:-1::0;;;10741:102:71::1;;;;;;;:::i;:::-;6178:4;10861:13;:20;:43;;10853:78;;;;-1:-1:-1::0;;;10853:78:71::1;;;;;;;:::i;:::-;10942:22;10967:52;10987:10;10999:4;11005:13;10967:19;:52::i;:::-;11029:33;11065:29:::0;;;:13:::1;:29;::::0;;;;10942:77;;-1:-1:-1;11129:43:71::1;:10;11162:9:::0;11129:32:::1;:43::i;:::-;11104:68;;11183:27;11213:47;11231:12;11245:14;11213:17;:47::i;:::-;11183:77:::0;-1:-1:-1;11292:26:71::1;11275:13;:43;;;;;;;;;11271:672;;;11480:19;11502:21;:14:::0;11521:1:::1;11502:18;:21::i;:::-;11570:240;::::0;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;;::::1;::::0;;;;;;;;;11722:20:::1;:27:::0;;11570:240;;;;;;;;;;;;-1:-1:-1;11538:29:71;;;:13:::1;:29:::0;;;;;;:272;;;;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;;;;;;;;::::1;::::0;;;;;;;;11480:43;;-1:-1:-1;11570:240:71;;11538:272:::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;;11824:20:71::1;:41:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;11824:41:71;;;;;::::1;::::0;;;-1:-1:-1;11884:48:71::1;::::0;11915:10;;11902:11;;11884:48:::1;::::0;::::1;::::0;11927:4;;11884:48:::1;:::i;:::-;;;;;;;;11271:672;;9568:1;;;;;10466:1483:::0;;;:::o;1112:115:7:-;914:3;890:12;-1:-1:-1;;;;;890:12:7;882:37;;;;;;1186:12:::1;::::0;1180:40:::1;::::0;-1:-1:-1;;;1180:40:7;;-1:-1:-1;;;;;1186:12:7;;::::1;::::0;1180:34:::1;::::0;:40:::1;::::0;1215:4;;1180:40:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1112:115:::0;:::o;5029:39:71:-;;;;:::o;37062:197::-;1247:12:97;:10;:12::i;:::-;1237:6;;-1:-1:-1;;;;;1237:6:97;;;:22;;;1229:67;;;;-1:-1:-1;;;1229:67:97;;;;;;;:::i;:::-;37218:15:71::1;:34:::0;;-1:-1:-1;;;;;;37218:34:71::1;-1:-1:-1::0;;;;;37218:34:71;;;::::1;::::0;;;::::1;::::0;;37062:197::o;1472:256:7:-;1519:7;1542:12;;-1:-1:-1;;;;;1542:12:7;:28;1538:184;;1599:12;;;;;;;;-1:-1:-1;;;;;1599:12:7;-1:-1:-1;;;;;1593:34:7;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1586:43;;;;1538:184;-1:-1:-1;1667:3:7;1538:184;1472:256;:::o;4846:40:71:-;;;;:::o;5365:30::-;;;-1:-1:-1;;;;;5365:30:71;;:::o;25198:301::-;25374:38;25385:10;25397:4;25374:38;;;;;;;;;;;;25407:4;25374:10;:38::i;:::-;25423:69;25450:10;25462:4;25423:69;;;;;;;;;;;;25472:4;25478:13;25423:26;:69::i;15064:1054::-;15185:21;15222:35;15279:8;:15;-1:-1:-1;;;;;15260:35:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;15222:73;;15305:22;15330:50;15363:16;:14;:16::i;15330:50::-;15305:75;;15395:9;15390:692;15414:8;:15;15410:1;:19;15390:692;;;15450:33;15502:85;15519:8;15528:1;15519:11;;;;;;;;;;;;;;:22;;;15543:8;15552:1;15543:11;;;;;;;;;;;;;;:16;;;15561:8;15570:1;15561:11;;;;;;;15502:85;15450:137;;15602:20;15625:47;15643:12;15657:14;15625:17;:47::i;:::-;15602:70;-1:-1:-1;15820:20:71;15810:6;:30;;;;;;;;;15806:220;;;15895:14;15860:13;15874:1;15860:16;;;;;;;;;;;;;;:32;;:49;;;;;15806:220;;;15983:12;:28;;;15948:13;15962:1;15948:16;;;;;;;;;;;;;;:32;;:63;;;;;15806:220;16065:6;16039:13;16053:1;16039:16;;;;;;;;;;;;;;:23;;:32;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;15431:3:71;;15390:692;;;-1:-1:-1;16098:13:71;;-1:-1:-1;;15064:1054:71;;;;:::o;23627:197::-;23772:45;23783:10;23795:4;23801:5;23772:45;;;;;;;;;;;;23812:4;23772:10;:45::i;36516:187::-;36620:7;36646:50;36679:16;:14;:16::i;36646:50::-;36639:57;;36516:187;:::o;28126:555::-;28198:41;28264:7;:14;-1:-1:-1;;;;;28242:37:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;28198:81;;28295:9;28290:346;28314:7;:14;28310:1;:18;28290:346;;;28382:7;28390:1;28382:10;;;;;;;;;;;;;;:21;;;28349:16;28366:1;28349:19;;;;;;;;;;;;;;:30;;:54;;;;;28444:7;28452:1;28444:10;;;;;;;;;;;;;;:15;;;28417:16;28434:1;28417:19;;;;;;;;;;;;;;:24;;:42;;;;;28501:7;28509:1;28501:10;;;;;;;;;;;;;;:16;;;28473;28490:1;28473:19;;;;;;;;;;;;;;:25;;:44;;;;;28531:38;;;;;;;;;;;;:16;28548:1;28531:19;;;;;;;;;;;;;;:33;;:38;;;;28610:7;28618:1;28610:10;;;;;;;;;;;;;;:15;;;28583:16;28600:1;28583:19;;;;;;;;;;;;;;;;;;:24;;:42;28330:3;;28290:346;;;;28645:29;28657:16;28645:11;:29::i;:::-;28126:555;;:::o;12070:123::-;12152:34;12165:10;12177:4;12152:34;;;;;;;;;;;;:12;:34::i;25927:620::-;26017:9;26012:529;26036:7;:14;26032:1;:18;26012:529;;;26075:7;26083:1;26075:10;;;;;;;;;;;;;;:24;;;:31;26110:1;26075:36;26071:460;;;26131:93;26142:7;26150:1;26142:10;;;;;;;;;;;;;;:21;;;26165:7;26173:1;26165:10;;;;;;;;;;;;;;:15;;;26182:7;26190:1;26182:10;;;;;;;;;;;;;;:24;;;26208:7;26216:1;26208:10;;;;;;;;;;;;;;:15;;;26131:10;:93::i;:::-;26071:460;;;26263:253;26311:7;26319:1;26311:10;;;;;;;;;;;;;;:21;;;26354:7;26362:1;26354:10;;;;;;;;;;;;;;:15;;;26391:7;26399:1;26391:10;;;;;;;;;;;;;;:24;;;26437:7;26445:1;26437:10;;;;;;;;;;;;;;:15;;;26474:7;26482:1;26474:10;;;;;;;;;;;;;;:24;;;26263:26;:253::i;:::-;26052:3;;26012:529;;26668:583;26744:45;26818:7;:14;-1:-1:-1;;;;;26792:41:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;26744:89;;26849:9;26844:362;26868:7;:14;26864:1;:18;26844:362;;;26936:7;26944:1;26936:10;;;;;;;;;;;;;;:21;;;26903:16;26920:1;26903:19;;;;;;;;;;;;;;:30;;:54;;;;;26998:7;27006:1;26998:10;;;;;;;;;;;;;;:15;;;26971:16;26988:1;26971:19;;;;;;;;;;;;;;:24;;:42;;;;;27027:38;;;;;;;;;;;;:16;27044:1;27027:19;;;;;;;;;;;;;;:33;;:38;;;;27106:7;27114:1;27106:10;;;;;;;;;;;;;;:15;;;27079:16;27096:1;27079:19;;;;;;;;;;;;;;:24;;:42;;;;;27171:7;27179:1;27171:10;;;;;;;;;;;;;;:24;;;27135:16;27152:1;27135:19;;;;;;;;;;;;;;;;;;:33;;:60;26884:3;;26844:362;;;;27215:29;27227:16;27215:11;:29::i;1656:145:97:-;1247:12;:10;:12::i;:::-;1237:6;;-1:-1:-1;;;;;1237:6:97;;;:22;;;1229:67;;;;-1:-1:-1;;;1229:67:97;;;;;;;:::i;:::-;1746:6:::1;::::0;1725:40:::1;::::0;1762:1:::1;::::0;-1:-1:-1;;;;;1746:6:97::1;::::0;1725:40:::1;::::0;1762:1;;1725:40:::1;1775:6;:19:::0;;-1:-1:-1;;;;;;1775:19:97::1;::::0;;1656:145::o;13893:431:71:-;9218:15;;14058:6;;-1:-1:-1;;;;;9218:15:71;:29;9214:345;;9285:15;;-1:-1:-1;;;;;9285:15:71;9271:10;:29;9263:73;;;;-1:-1:-1;;;9263:73:71;;;;;;;:::i;:::-;9214:345;;;9396:6;;:58;;-1:-1:-1;;;9396:58:71;;9367:17;;-1:-1:-1;;;;;9396:6:71;;:31;;:58;;-1:-1:-1;;;9428:25:71;9396:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9477:41;;-1:-1:-1;;;9477:41:71;;9367:88;;-1:-1:-1;;;;;;9477:29:71;;;;;:41;;9507:10;;9477:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9469:79;;;;-1:-1:-1;;;9469:79:71;;;;;;;:::i;:::-;9214:345;;14077:14:::1;14093:12:::0;14107:21:::1;14132:49;14149:10;14161:4;14167:13;14132:16;:49::i;:::-;14076:105;;;;;;14276:9;14287:7;14268:27;;;;;-1:-1:-1::0;;;14268:27:71::1;;;;;;;;:::i;:::-;-1:-1:-1::0;14312:5:71;;13893:431;-1:-1:-1;;;;;;13893:431:71:o;4365:33::-;;;;:::o;36179:178::-;36278:5;36302:48;36333:16;:14;:16::i;:::-;36302:10;;:30;:48::i;34497:1473::-;34634:32;34682:17;34702:16;:14;:16::i;:::-;34682:36;-1:-1:-1;34728:22:71;34753:43;:10;34682:36;34753:32;:43::i;:::-;35091:20;:27;34728:68;;-1:-1:-1;35015:43:71;;-1:-1:-1;;;;;35061:58:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;35015:104;;35129:21;35170:9;35165:549;35189:20;:27;35185:31;;35165:549;;;35237:33;35273:13;:38;35287:20;35308:1;35287:23;;;;;;;;;;;;;;;;35273:38;;;;;;;;;;;35237:74;;35380:20;35329:71;;;;;;;;:47;35347:12;35361:14;35329:17;:47::i;:::-;:71;;;;;;;;;35325:379;;;35448:208;;;;;;;;35506:12;:23;;;35448:208;;;;35557:12;:17;;;35448:208;;;;35611:12;:26;;35448:208;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35420:10;35431:13;35420:25;;;;;;;;;;;;;;;;;:236;35674:15;;;;;35325:379;-1:-1:-1;35218:3:71;;35165:549;;;;35724:48;35805:13;-1:-1:-1;;;;;35775:44:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;35724:95;;35834:9;35829:103;35853:13;35849:1;:17;35829:103;;;35908:10;35919:1;35908:13;;;;;;;;;;;;;;35887:15;35903:1;35887:18;;;;;;;;;;;;;;;;;:34;35868:3;;35829:103;;;-1:-1:-1;35948:15:71;-1:-1:-1;;;;;34497:1473:71;:::o;37558:217::-;1247:12:97;:10;:12::i;:::-;1237:6;;-1:-1:-1;;;;;1237:6:97;;;:22;;;1229:67;;;;-1:-1:-1;;;1229:67:97;;;;;;;:::i;:::-;37736:32:71;:13:::1;:32:::0;37558:217::o;16239:534::-;16327:21;16360:50;16443:8;:15;-1:-1:-1;;;;;16413:46:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;16360:99;;16475:9;16470:238;16494:8;:15;16490:1;:19;16470:238;;;16564:8;16573:1;16564:11;;;;;;;;;;;;;;:22;;;16530:17;16548:1;16530:20;;;;;;;;;;;;;;:31;;:56;;;;;16628:8;16637:1;16628:11;;;;;;;;;;;;;;:16;;;16600:17;16618:1;16600:20;;;;;;;;;;;;;;:25;;:44;;;;;16658:39;;;;;;;;;;;;:17;16676:1;16658:20;;;;;;;;;;;;;;;;;;:34;;:39;16511:3;;16470:238;;;;16724:42;16748:17;16724:23;:42::i;:::-;16717:49;16239:534;-1:-1:-1;;;16239:534:71:o;38633:242::-;1247:12:97;:10;:12::i;:::-;1237:6;;-1:-1:-1;;;;;1237:6:97;;;:22;;;1229:67;;;;-1:-1:-1;;;1229:67:97;;;;;;;:::i;:::-;38814:24:71::1;:54:::0;38633:242::o;17851:1231::-;9629:15;;-1:-1:-1;;;;;9629:15:71;:29;9621:72;;;;-1:-1:-1;;;9621:72:71;;;;;;;:::i;:::-;18039:18;18031:52:::1;;;;-1:-1:-1::0;;;18031:52:71::1;;;;;;;:::i;:::-;18158:17;18178:16;:14;:16::i;:::-;18158:36:::0;-1:-1:-1;18270:37:71::1;18225:41;:10;18256:9:::0;18225:30:::1;:41::i;:::-;:82;;;;;;;;;18204:158;;;;-1:-1:-1::0;;;18204:158:71::1;;;;;;;:::i;:::-;18455:22;18480:43;:10;18513:9:::0;18480:32:::1;:43::i;:::-;18455:68;;18534:33;18570:49;18587:10;18599:4;18605:13;18570:16;:49::i;:::-;18534:85:::0;-1:-1:-1;18701:20:71::1;18650:47;18668:12;18682:14;18650:17;:47::i;:::-;:71;;;;;;;;;18629:148;;;;-1:-1:-1::0;;;18629:148:71::1;;;;;;;:::i;:::-;18788:28;::::0;::::1;:45:::0;;;18843:33:::1;18879:42:::0;;;:26:::1;::::0;::::1;:42;::::0;;;;;;;18960:10:::1;18931:40:::0;;;;;;;;;;;:54;;;19001:74;19043:10;;18819:14;;19001:74:::1;::::0;::::1;::::0;19055:4;;19061:13;;19001:74:::1;:::i;:::-;;;;;;;;9703:1;;;;17851:1231:::0;;;;:::o;4020:39::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1033:77:97:-;1097:6;;-1:-1:-1;;;;;1097:6:97;1033:77;:::o;13172:142:71:-;13254:4;13277:30;13286:10;13298:4;13277:30;;;;;;;;;;;;:8;:30::i;:::-;13270:37;;13172:142;;;;;:::o;27643:362::-;27729:9;27724:275;27748:7;:14;27744:1;:18;27724:275;;;27783:205;27811:7;27819:1;27811:10;;;;;;;;;;;;;;:21;;;27850:7;27858:1;27850:10;;;;;;;;;;;;;;:15;;;27883:7;27891:1;27883:10;;;;;;;;;;;;;;:16;;;27917:7;27925:1;27917:10;;;;;;;;;;;;;;:24;;;27959:7;27967:1;27959:10;;;;;;;;;;;;;;:15;;;27783:10;:205::i;:::-;27764:3;;27724:275;;21240:2266;9629:15;;-1:-1:-1;;;;;9629:15:71;:29;9621:72;;;;-1:-1:-1;;;9621:72:71;;;;;;;:::i;:::-;21501:12:::1;21449:48;21480:16;:14;:16::i;21449:48::-;:64;;;;;;;;;21441:106;;;;-1:-1:-1::0;;;21441:106:71::1;;;;;;;:::i;:::-;21687:15;21705:50;21738:16;:14;:16::i;21705:50::-;21687:68;;21766:33;21802:49;21819:10;21831:4;21837:13;21802:16;:49::i;:::-;21861:33;21897:35:::0;;;:26:::1;::::0;::::1;:35;::::0;;;;;;;22011:10:::1;21982:40:::0;;;;;;;;;22280:21;;21766:85;;-1:-1:-1;21897:35:71;;22272:67:::1;;;;-1:-1:-1::0;;;22272:67:71::1;;;;;;;:::i;:::-;22496:14;:21;;;22405:5;22412:4;22418:10;22430:4;22436:13;22451:7;22460:10;22388:83;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;22378:94;;;;;;:139;22353:226;;;;-1:-1:-1::0;;;22353:226:71::1;;;;;;;:::i;:::-;22689:15;::::0;;;:6:::1;:15;::::0;;;;:26;22681:65:::1;;;;-1:-1:-1::0;;;22681:65:71::1;;;;;;;:::i;:::-;22804:18;22825:15:::0;;;:6:::1;:15;::::0;;;;:26;22862:28;;;23080:34:::1;;:::i;:::-;23117:68;::::0;;::::1;::::0;::::1;::::0;;;;23137:11:::1;::::0;-1:-1:-1;;;23137:47:71;;;23117:68;;;-1:-1:-1;;;;;23137:11:71::1;:23;:47;23161:10;23173::::0;23137:47;;;::::1;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;23117:68;;::::0;23080:105:::1;;23284:5;23273:17;;;;;;;;:::i;:::-;;::::0;;-1:-1:-1;;23273:17:71;;::::1;::::0;;;;;;23263:28;;23273:17:::1;23263:28:::0;;::::1;::::0;23235:25:::1;::::0;;::::1;:56:::0;;;;23338:54:::1;::::0;:30;::::1;23377:5:::0;23384:7;23338:38:::1;:54::i;:::-;23442:10;23433:7;23421:10;-1:-1:-1::0;;;;;23408:91:71::1;;23454:4;23460:5;23467:13;23482:7;:16;;;23408:91;;;;;;;;;:::i;:::-;;;;;;;;9703:1;;;;;;21240:2266:::0;;;;;:::o;5113:30::-;;;-1:-1:-1;;;;;5113:30:71;;:::o;12765:286::-;9218:15;;12930:4;;-1:-1:-1;;;;;9218:15:71;:29;9214:345;;9285:15;;-1:-1:-1;;;;;9285:15:71;9271:10;:29;9263:73;;;;-1:-1:-1;;;9263:73:71;;;;;;;:::i;:::-;9214:345;;;9396:6;;:58;;-1:-1:-1;;;9396:58:71;;9367:17;;-1:-1:-1;;;;;9396:6:71;;:31;;:58;;-1:-1:-1;;;9428:25:71;9396:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9477:41;;-1:-1:-1;;;9477:41:71;;9367:88;;-1:-1:-1;;;;;;9477:29:71;;;;;:41;;9507:10;;9477:41;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9469:79;;;;-1:-1:-1;;;9469:79:71;;;;;;;:::i;:::-;9214:345;;12947:14:::1;12969:49;12986:10;12998:4;13004:13;12969:16;:49::i;4531:40::-:0;;;;:::o;6132:50::-;6178:4;6132:50;:::o;14445:144::-;14527:6;14552:30;14561:10;14573:4;14552:30;;;;;;;;;;;;:8;:30::i;19203:189::-;9629:15;;-1:-1:-1;;;;;9629:15:71;:29;9621:72;;;;-1:-1:-1;;;9621:72:71;;;;;;;:::i;:::-;19347:38:::1;19358:10;19370:4;19347:38;;;;;;;;;;;::::0;19380:4:::1;19347:10;:38::i;:::-;19203:189:::0;;;:::o;820:125:78:-;883:16;918:20;911:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;820:125;:::o;1950:240:97:-;1247:12;:10;:12::i;:::-;1237:6;;-1:-1:-1;;;;;1237:6:97;;;:22;;;1229:67;;;;-1:-1:-1;;;1229:67:97;;;;;;;:::i;:::-;-1:-1:-1;;;;;2038:22:97;::::1;2030:73;;;;-1:-1:-1::0;;;2030:73:97::1;;;;;;;:::i;:::-;2139:6;::::0;2118:38:::1;::::0;-1:-1:-1;;;;;2118:38:97;;::::1;::::0;2139:6:::1;::::0;2118:38:::1;::::0;2139:6:::1;::::0;2118:38:::1;2166:6;:17:::0;;-1:-1:-1;;;;;;2166:17:97::1;-1:-1:-1::0;;;;;2166:17:97;;;::::1;::::0;;;::::1;::::0;;1950:240::o;3363:265:98:-;3432:7;3615:4;3562:58;;;;;;;;:::i;:::-;;;;;;;;;;;;;3552:69;;;;;;3545:76;;3363:265;;;:::o;481:238:70:-;670:1;656:11;:15;648:24;;;;;;682:30;;481:238::o;5141:152:4:-;5221:4;5258:19;5275:1;5258:16;:19::i;:::-;:28;5244:10;;:42;;;-1:-1:-1;5141:152:4;;;;:::o;2119:459:100:-;2177:7;2418:6;2414:45;;-1:-1:-1;2447:1:100;2440:8;;2414:45;2481:5;;;2485:1;2481;:5;:1;2504:5;;;;;:10;2496:56;;;;-1:-1:-1;;;2496:56:100;;;;;;;:::i;1310:271:70:-;1404:7;;1445:84;1474:53;1466:62;1445:16;;;:20;:84::i;:::-;1423:106;-1:-1:-1;1546:28:70;:11;1423:106;1546:15;:28::i;:::-;1539:35;1310:271;-1:-1:-1;;;;1310:271:70:o;8186:650:4:-;8260:15;;:::i;:::-;8773:56;;;;;;;;;8797:10;;8782;;8773:56;;607:6;;8782:26;;:14;:26::i;:::-;:46;;;;;;8773:56;;8766:63;8186:650;-1:-1:-1;;;8186:650:4:o;40461:253:71:-;40601:20;40640:13;:67;40654:52;40674:10;40686:4;40692:13;40654:19;:52::i;:::-;40640:67;;;;;;;;;;;40633:74;;40461:253;;;;;:::o;41863:1068::-;41985:18;;;;-1:-1:-1;;41985:30:71;41981:67;;;42031:7;;41981:67;42058:15;42075:20;42111:90;42159:41;42171:12;:28;;;42159:11;:41::i;:::-;42111:30;;;;:47;:90::i;:::-;42057:144;;;;42219:10;42211:55;;;;-1:-1:-1;;;42211:55:71;;;;;;;:::i;:::-;42369:20;:27;;-1:-1:-1;;42369:31:71;;;42349:17;;42450:13;;42349:17;;42369:31;;42464;;;;;;;;;;;;;;42450:46;;;;;;;;;;;42410:86;;42531:12;:18;;;42506:16;:22;;:43;;;;42602:20;42623:9;42602:31;;;;;;;;;;;;;;;;42559:20;42580:12;:18;;;42559:40;;;;;;;;;;;;;;;;;:74;42643:20;:26;;;;;;;;;;;;;;;;-1:-1:-1;;42643:26:71;;;;;;;;;;;;;42680:18;;;:29;42793:23;;42751:28;;;;42643:26;42830:17;;;42724:200;;;;;;42861:13;;42888:26;;;;42724:200;:::i;:::-;;;;;;;;41863:1068;;;;;;:::o;3646:165:67:-;3730:4;3786;:16;;;3775:28;;;;;;;;:::i;:::-;;;;;;;;;;;;;3765:39;;;;;;3753:8;:51;3746:58;;3646:165;;;;:::o;4194:168::-;4274:26;;:::i;:::-;-1:-1:-1;4338:16:67;;;;4319:18;:36;;;;;;;;;;;;4312:43;;;;;;;;;;;;4194:168::o;10602:634:4:-;10676:15;;:::i;:::-;11170:59;;;;;;;;;11217:10;;11179;;11170:59;;11179:49;;:33;;607:6;11179:14;:33::i;:::-;:37;;:49::i;:::-;11170:59;;11163:66;10602:634;-1:-1:-1;;;10602:634:4:o;6433:151::-;6507:15;;:::i;:::-;6541:36;;;;;;;;;6565:10;;6550;;6541:36;;6550:26;;:10;:14;:26::i;2248:147::-;2324:4;2360:19;2377:1;2360:16;:19::i;:::-;:28;2347:10;;:41;;-1:-1:-1;2248:147:4;;;;:::o;2421:466:70:-;2537:30;2765:101;2811:53;2781:16;;2765:33;;:11;;:15;:33::i;:::-;:37;;:101::i;:::-;2717:163;;;;;;;1031:2068:98;1109:7;1170:9;:16;1190:2;1170:22;1166:94;;1208:41;;-1:-1:-1;;;1208:41:98;;;;;;;:::i;1166:94::-;1610:4;1595:20;;1589:27;1655:4;1640:20;;1634:27;1708:4;1693:20;;1687:27;1326:9;1679:36;2626:66;2613:79;;2609:154;;;2708:44;;-1:-1:-1;;;2708:44:98;;;;;;;:::i;2609:154::-;2777:1;:7;;2782:2;2777:7;;:18;;;;;2788:1;:7;;2793:2;2788:7;;2777:18;2773:93;;;2811:44;;-1:-1:-1;;;2811:44:98;;;;;;;:::i;2773:93::-;2960:14;2977:24;2987:4;2993:1;2996;2999;2977:24;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2977:24:98;;-1:-1:-1;;2977:24:98;;;-1:-1:-1;;;;;;;3019:20:98;;3011:57;;;;-1:-1:-1;;;3011:57:98;;;;;;;:::i;:::-;3086:6;1031:2068;-1:-1:-1;;;;;;1031:2068:98:o;40956:901:71:-;41022:19;41044:15;;;:6;:15;;;;;41157:16;;41153:698;;41272:11;;;;;;;;;-1:-1:-1;;;;;41272:11:71;-1:-1:-1;;;;;41272:20:71;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;41253:41;;:16;41391:15;;;:6;:15;;;;;;;;41423:13;41391:45;:29;;;:45;41559:13;41527:45;:29;;:45;41802:24;;41741:99;;:39;:10;41398:7;41741:30;:39::i;:::-;:43;;:99::i;:::-;41701:15;;;;:6;:15;;;;;:37;;:139;40956:901;;:::o;735:104:96:-;822:10;735:104;:::o;4184:144:4:-;4257:4;4293:19;4310:1;4293:16;:19::i;:::-;:28;4280:10;;:41;;-1:-1:-1;4184:144:4;;;;:::o;44641:231:71:-;44795:6;;:69;;-1:-1:-1;;;44795:69:71;;44698:49;;-1:-1:-1;;;;;44795:6:71;;:31;;:69;;-1:-1:-1;;;44827:36:71;44795:69;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;40720:230::-;40863:7;40910:10;40922:4;40928:13;40899:43;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;40889:54;;;;;;40882:61;;40720:230;;;;;:::o;43736:899::-;43868:13;43901:12;:28;;;43933:1;43901:33;43897:732;;;-1:-1:-1;43957:26:71;43950:33;;43897:732;44035:14;44004:12;:28;;;:45;44000:629;;;44128:28;;;;44065:33;44101:56;;;:26;;;:56;;;;;;44209:90;;44257:41;;:11;:41::i;:::-;44209:30;;;;:47;:90::i;:::-;44171:128;;;44320:10;:58;;44358:20;44320:58;;;44333:22;44320:58;44313:65;;;;;;44000:629;44431:14;44399:12;:28;;;:46;44395:234;;;-1:-1:-1;44468:20:71;44461:27;;44395:234;-1:-1:-1;44598:20:71;44591:27;;834:176:100;892:7;923:5;;;946:6;;;;938:46;;;;-1:-1:-1;;;938:46:100;;;;;;;:::i;39247:1208:71:-;39424:4;39442:6;39462:13;39500:33;39536:49;39553:10;39565:4;39571:13;39536:16;:49::i;:::-;39500:85;;39595:22;39620:50;39653:16;:14;:16::i;39620:50::-;39595:75;;39681:27;39711:47;39729:12;39743:14;39711:17;:47::i;:::-;39681:77;-1:-1:-1;39789:20:71;39772:13;:37;;;;;;;;;39768:681;;;39833:5;39840:1;39825:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;39768:681;39914:22;39897:13;:39;;;;;;;;;39893:556;;;40015:28;;;;39952:33;39988:56;;;:26;;;:56;;;;;;40101:90;;40149:41;;:11;:41::i;40101:90::-;40205:32;;;;;;;;;-1:-1:-1;40205:32:71;;40213:4;;-1:-1:-1;40058:133:71;;-1:-1:-1;40205:32:71;-1:-1:-1;40205:32:71;;-1:-1:-1;;;;;;40205:32:71;39893:556;40275:20;40258:13;:37;;;;;;;;;40254:195;;;40319:5;40326:1;40311:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;40254:195;40400:5;40407:1;40392:46;;;;;;;;;;;;;;;;;;;;;;;;;;39247:1208;;;;;;;;:::o;1302:507:67:-;1464:19;;;;;;;;;:15;;;:19;;;:33;;1484:12;1464:19;:33::i;:::-;1446:51;:15;;;:51;;1539:29;;;;;;;;;;;;:33;;;;;;;;;;;;:47;;1573:12;1539:33;:47::i;:::-;1507:18;:29;;;;;;;;;;:79;;;;1626:16;;;;1613:29;;;;;:126;;-1:-1:-1;1721:16:67;;;;1702:18;:36;;;;;;;;;;;1658:81;;;;;;;;;;;:29;;;;;;;;;;:43;;;;;;;;;;;:81;;:43;:81::i;:::-;1596:207;;;-1:-1:-1;1764:16:67;;;;;:28;1302:507::o;1032:135:4:-;1092:15;;:::i;:::-;1126:34;;;;;;;;;;1135:24;:1;607:6;1135:5;:24::i;:::-;1126:34;;1119:41;1032:135;-1:-1:-1;;1032:135:4:o;3033:130:100:-;3091:7;3117:39;3121:1;3124;3117:39;;;;;;;;;;;;;;;;;:3;:39::i;42937:793:71:-;42997:26;;:::i;:::-;43035:18;43056:15;;;:6;:15;;;;;:26;43096:15;43092:159;;-1:-1:-1;;43211:29:71;;;;;;;;;-1:-1:-1;;43211:29:71;;43204:36;;43092:159;43438:44;;:::i;:::-;43485:58;;;;;;;;;;43505:11;;-1:-1:-1;;;43505:37:71;;;43485:58;;;-1:-1:-1;;;;;43505:11:71;:25;:37;43531:10;43505:37;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;43485:58;;43693:15;;;;:6;:15;;;;;;;;;43671:52;;;;;;;;43693:29;;43671:52;;;43438:105;;-1:-1:-1;43671:52:71;;43438:105;;43671:21;:52::i;2576:699:67:-;2713:15;2730:12;2758:40;;:::i;:::-;2801;2837:3;2801:31;2829:2;2801:27;:31::i;:::-;:35;;:40::i;:::-;2869:29;;;;;;;;;:15;;;:29;;;2758:83;;-1:-1:-1;2869:47:67;;2899:16;2869:29;:47::i;:::-;:149;;;;-1:-1:-1;2932:57:67;;;;;;;;;2973:15;;;2932:57;;;2951:16;;;;-1:-1:-1;2932:36:67;;;;;;;;;:40;;;;;;;;;;;;:86;;3004:13;;2932:57;;:40;;:57::i;:::-;:71;;:86::i;:::-;2852:417;;;3167:4;3154:17;;3193:4;:16;;;3185:24;;2852:417;;;3253:5;3240:18;;2852:417;2576:699;;;;;;:::o;4420:128:100:-;4478:7;4504:37;4508:1;4511;4504:37;;;;;;;;;;;;;;;;;:3;:37::i;1846:268:70:-;1934:7;;1975:84;2004:53;1996:62;;1975:84;1953:106;-1:-1:-1;2076:31:70;2092:14;:7;2104:1;2092:11;:14::i;:::-;2076:11;;:15;:31::i;1942:137:4:-;2062:10;2049;;:23;;1942:137::o;3638:338:100:-;3724:7;3824:12;3817:5;3809:28;;;;-1:-1:-1;;;3809:28:100;;;;;;;;:::i;:::-;;3847:9;3863:1;3859;:5;;;;;;;3638:338;-1:-1:-1;;;;;3638:338:100:o;11534:134:4:-;11600:15;;:::i;:::-;11634:27;;;;;;;;;11643:10;;11634:27;;11643:17;;11658:1;11643:14;:17::i;5012:163:100:-;5098:7;5133:12;5125:6;5117:29;;;;-1:-1:-1;;;5117:29:100;;;;;;;;:::i;:::-;;5167:1;5163;:5;;;;;;;5012:163;-1:-1:-1;;;;5012:163:100:o;-1:-1:-1:-;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;2028:804;;2187:3;2180:4;2172:6;2168:17;2164:27;2154:2;;-1:-1;;2195:12;2154:2;2242:6;2229:20;2264:122;2279:106;2378:6;2279:106;:::i;:::-;2264:122;:::i;:::-;2414:21;;;2255:131;-1:-1;2458:4;2471:14;;;;2446:17;;;2566:1;2551:275;2576:6;2573:1;2570:13;2551:275;;;2659:3;2646:17;2450:6;2634:30;8893:4;;8872:19;;2634:30;8876:3;8872:19;;8868:30;8865:2;;;2566:1;;8901:12;8865:2;8929:20;8893:4;8929:20;:::i;:::-;2634:30;;;5580:20;9012:75;;9202:22;;;;12355:20;9163:16;;;9156:75;9314:18;;;9301:32;;-1:-1;;;;;9342:30;;9339:2;;;2566:1;;9375:12;9339:2;9420:58;9474:3;2458:4;9465:6;2634:30;9450:22;;9420:58;:::i;:::-;9402:16;;;9395:84;2671:92;;-1:-1;;2777:14;;;;2805;;;;2598:1;2591:9;2551:275;;;2555:14;;;;;2147:685;;;;:::o;2888:806::-;;3038:3;3031:4;3023:6;3019:17;3015:27;3005:2;;-1:-1;;3046:12;3005:2;3093:6;3080:20;3115:113;3130:97;3220:6;3130:97;:::i;3115:113::-;3256:21;;;3106:122;-1:-1;3300:4;3313:14;;;;3288:17;;;3414:4;3402:17;;;3393:27;;;;3390:36;-1:-1;3387:2;;;3439:1;;3429:12;3387:2;3464:1;;3449:239;3474:6;3471:1;3468:13;3449:239;;;3414:4;9661:9;9656:3;9652:19;9648:30;9645:2;;;3464:1;;9681:12;9645:2;9709:20;3414:4;9709:20;:::i;:::-;5580;;9792:75;;9982:22;;;12355:20;9943:16;;;9936:75;3542:83;;3639:14;;;;3667;;;;3496:1;3489:9;3449:239;;;3453:14;;;;;;;2998:696;;;;:::o;6009:440::-;;6110:3;6103:4;6095:6;6091:17;6087:27;6077:2;;-1:-1;;6118:12;6077:2;6165:6;6152:20;-1:-1;;;;;70903:6;70900:30;70897:2;;;-1:-1;;70933:12;70897:2;6187:64;8872:19;70987:17;;-1:-1;;70983:33;71074:4;71064:15;6187:64;:::i;:::-;6178:73;;6271:6;6264:5;6257:21;6375:3;71074:4;6366:6;6299;6357:16;;6354:25;6351:2;;;6392:1;;6382:12;6351:2;76642:6;71074:4;6299:6;6295:17;71074:4;6333:5;6329:16;76619:30;76698:1;76680:16;;;71074:4;76680:16;76673:27;6333:5;6070:379;-1:-1;;6070:379::o;12566:241::-;;12670:2;12658:9;12649:7;12645:23;12641:32;12638:2;;;-1:-1;;12676:12;12638:2;85:6;72:20;97:33;124:5;97:33;:::i;12814:263::-;;12929:2;12917:9;12908:7;12904:23;12900:32;12897:2;;;-1:-1;;12935:12;12897:2;226:6;220:13;238:33;265:5;238:33;:::i;13084:711::-;;;;13289:2;13277:9;13268:7;13264:23;13260:32;13257:2;;;-1:-1;;13295:12;13257:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;13347:63;-1:-1;13447:2;13486:22;;12355:20;;-1:-1;13583:2;13568:18;;13555:32;-1:-1;;;;;13596:30;;13593:2;;;-1:-1;;13629:12;13593:2;13659:120;13771:7;13762:6;13751:9;13747:22;13659:120;:::i;:::-;13649:130;;;13251:544;;;;;:::o;13802:693::-;;;;13998:2;13986:9;13977:7;13973:23;13969:32;13966:2;;;-1:-1;;14004:12;13966:2;85:6;72:20;97:33;124:5;97:33;:::i;:::-;14056:63;-1:-1;14156:2;14195:22;;12355:20;;-1:-1;14292:2;14277:18;;14264:32;-1:-1;;;;;14305:30;;14302:2;;;-1:-1;;14338:12;14302:2;14368:111;14471:7;14462:6;14451:9;14447:22;14368:111;:::i;14502:453::-;;14669:2;;14657:9;14648:7;14644:23;14640:32;14637:2;;;-1:-1;;14675:12;14637:2;14733:17;14720:31;-1:-1;;;;;14771:18;14763:6;14760:30;14757:2;;;-1:-1;;14793:12;14757:2;14922:6;14911:9;14907:22;;;500:3;493:4;485:6;481:17;477:27;467:2;;-1:-1;;508:12;467:2;555:6;542:20;577:118;592:102;687:6;592:102;:::i;577:118::-;723:21;;;780:14;;;;755:17;;;-1:-1;860:271;885:6;882:1;879:13;860:271;;;968:3;955:17;759:6;943:30;6777:4;;8872:19;;943:30;6760:3;6756:19;;6752:30;6749:2;;;-1:-1;;6785:12;6749:2;6813:20;6777:4;6813:20;:::i;:::-;14669:2;943:30;;5580:20;6903:16;6896:75;7086:22;943:30;7086:22;12355:20;14669:2;7051:5;7047:16;7040:75;7198:18;943:30;7198:18;7185:32;14771:18;7229:6;7226:30;7223:2;;;-1:-1;;7259:12;7223:2;7304:58;7358:3;14669:2;7349:6;943:30;7334:22;;7304:58;:::i;:::-;7086:22;7286:16;;7279:84;-1:-1;7478:22;;;;5580:20;7198:18;7439:16;;7432:75;7590:19;;;7577:33;;7619:30;;;7616:2;;;-1:-1;;7652:12;7616:2;7697:58;7751:3;14669:2;7742:6;943:30;7727:22;;7697:58;:::i;:::-;7679:16;;;7672:84;980:88;;-1:-1;;1082:14;;;;1110;;;;907:1;900:9;860:271;;;-1:-1;14813:126;;14631:324;-1:-1;;;;;;;;;14631:324::o;14962:435::-;;15120:2;;15108:9;15099:7;15095:23;15091:32;15088:2;;;-1:-1;;15126:12;15088:2;15184:17;15171:31;-1:-1;;;;;15222:18;15214:6;15211:30;15208:2;;;-1:-1;;15244:12;15208:2;15364:6;15353:9;15349:22;;;1335:3;1328:4;1320:6;1316:17;1312:27;1302:2;;-1:-1;;1343:12;1302:2;1390:6;1377:20;1412:109;1427:93;1513:6;1427:93;:::i;1412:109::-;1549:21;;;1606:14;;;;1581:17;;;-1:-1;1686:262;1711:6;1708:1;1705:13;1686:262;;;1794:3;1781:17;1585:6;1769:30;7942:4;;8872:19;;1769:30;7925:3;7921:19;;7917:30;7914:2;;;-1:-1;;7950:12;7914:2;7978:20;7942:4;7978:20;:::i;:::-;15120:2;1769:30;;5580:20;8068:16;8061:75;8251:22;1769:30;8251:22;12355:20;15120:2;8216:5;8212:16;8205:75;8395:22;;1769:30;8395:22;5580:20;8251:22;8360:5;8356:16;8349:75;7942:4;1769:30;8507:18;8494:32;8480:46;;15222:18;8538:6;8535:30;8532:2;;;-1:-1;;8568:12;8532:2;8613:58;8667:3;15120:2;8658:6;1769:30;8643:22;;8613:58;:::i;:::-;8595:16;;;8588:84;1806:79;;-1:-1;;1899:14;;;;1927;;;;1733:1;1726:9;1686:262;;15404:461;;15575:2;15563:9;15554:7;15550:23;15546:32;15543:2;;;-1:-1;;15581:12;15543:2;15639:17;15626:31;-1:-1;;;;;15669:6;15666:30;15663:2;;;-1:-1;;15699:12;15663:2;15729:120;15841:7;15832:6;15821:9;15817:22;15729:120;:::i;15872:443::-;;16034:2;16022:9;16013:7;16009:23;16005:32;16002:2;;;-1:-1;;16040:12;16002:2;16098:17;16085:31;-1:-1;;;;;16128:6;16125:30;16122:2;;;-1:-1;;16158:12;16122:2;16188:111;16291:7;16282:6;16271:9;16267:22;16188:111;:::i;16322:445::-;;16485:2;;16473:9;16464:7;16460:23;16456:32;16453:2;;;-1:-1;;16491:12;16453:2;16549:17;16536:31;-1:-1;;;;;16587:18;16579:6;16576:30;16573:2;;;-1:-1;;16609:12;16573:2;16734:6;16723:9;16719:22;;;3911:3;3904:4;3896:6;3892:17;3888:27;3878:2;;-1:-1;;3919:12;3878:2;3966:6;3953:20;3988:114;4003:98;4094:6;4003:98;:::i;3988:114::-;4130:21;;;4187:14;;;;4162:17;;;-1:-1;4267:267;4292:6;4289:1;4286:13;4267:267;;;4375:3;4362:17;4166:6;4350:30;10216:4;;8872:19;;4350:30;10199:3;10195:19;;10191:30;10188:2;;;-1:-1;;10224:12;10188:2;10252:20;10216:4;10252:20;:::i;:::-;16485:2;4350:30;;5580:20;10342:16;10335:75;10525:22;4350:30;10525:22;12355:20;16485:2;10490:5;10486:16;10479:75;10669:22;4350:30;10669:22;6523:20;10525:22;10635:5;10631:16;10624:74;10781:18;4350:30;10781:18;10768:32;16587:18;10812:6;10809:30;10806:2;;;-1:-1;;10842:12;10806:2;10887:58;10941:3;16485:2;10932:6;4350:30;10917:22;;10887:58;:::i;:::-;10669:22;10869:16;;10862:84;-1:-1;11061:22;;6523:20;10781:18;11023:16;;11016:74;4387:84;;4485:14;;;;4513;;;;4314:1;4307:9;4267:267;;16774:427;;16928:2;;16916:9;16907:7;16903:23;16899:32;16896:2;;;-1:-1;;16934:12;16896:2;16992:17;16979:31;-1:-1;;;;;17022:6;17019:30;17016:2;;;-1:-1;;17052:12;17016:2;17153:22;;4723:4;4711:17;;4707:27;-1:-1;4697:2;;-1:-1;;4738:12;4697:2;4785:6;4772:20;4807:105;4822:89;4904:6;4822:89;:::i;4807:105::-;4940:21;;;4997:14;;;;4972:17;;;5098:4;5086:17;;;5077:27;;;;5074:36;-1:-1;5071:2;;;-1:-1;;5113:12;5071:2;-1:-1;5139:10;;5133:231;5158:6;5155:1;5152:13;5133:231;;;5098:4;11256:9;11251:3;11247:19;11243:30;11240:2;;;-1:-1;;11276:12;11240:2;11304:20;5098:4;11304:20;:::i;:::-;5580;;11387:75;;11577:22;;;12355:20;11538:16;;;11531:75;11668:2;11721:22;;;6523:20;11683:16;;;11676:74;11811:2;11864:22;;;6523:20;11826:16;;;11819:74;5226:75;;5180:1;5173:9;;;;;5315:14;;;;5343;;;;5133:231;;;-1:-1;17072:113;;16890:311;-1:-1;;;;;;;;16890:311::o;17208:257::-;;17320:2;17308:9;17299:7;17295:23;17291:32;17288:2;;;-1:-1;;17326:12;17288:2;5459:6;5453:13;78077:5;74702:13;74695:21;78055:5;78052:32;78042:2;;-1:-1;;78088:12;17472:366;;;17593:2;17581:9;17572:7;17568:23;17564:32;17561:2;;;-1:-1;;17599:12;17561:2;-1:-1;;5580:20;;;17751:2;17790:22;;;12355:20;;-1:-1;17555:283::o;17845:491::-;;;;17983:2;17971:9;17962:7;17958:23;17954:32;17951:2;;;-1:-1;;17989:12;17951:2;-1:-1;;5580:20;;;18141:2;18180:22;;12355:20;;-1:-1;18249:2;18288:22;;;5580:20;;17945:391;-1:-1;17945:391::o;18343:721::-;;;;;18507:3;18495:9;18486:7;18482:23;18478:33;18475:2;;;-1:-1;;18514:12;18475:2;5593:6;5580:20;18566:63;;18666:2;18709:9;18705:22;12355:20;18674:63;;18774:2;18817:9;18813:22;5580:20;18782:63;;18910:2;18899:9;18895:18;18882:32;-1:-1;;;;;18926:6;18923:30;18920:2;;;-1:-1;;18956:12;18920:2;18986:62;19040:7;19031:6;19020:9;19016:22;18986:62;:::i;:::-;18976:72;;;18469:595;;;;;;;:::o;19071:::-;;;;19218:2;19206:9;19197:7;19193:23;19189:32;19186:2;;;-1:-1;;19224:12;19186:2;5593:6;5580:20;19276:63;;19376:2;19419:9;19415:22;12355:20;19384:63;;19512:2;19501:9;19497:18;19484:32;-1:-1;;;;;19528:6;19525:30;19522:2;;;-1:-1;;19558:12;19522:2;19588:62;19642:7;19633:6;19622:9;19618:22;19588:62;:::i;19673:721::-;;;;;19837:3;19825:9;19816:7;19812:23;19808:33;19805:2;;;-1:-1;;19844:12;19805:2;5593:6;5580:20;19896:63;;19996:2;20039:9;20035:22;12355:20;20004:63;;20132:2;20121:9;20117:18;20104:32;-1:-1;;;;;20148:6;20145:30;20142:2;;;-1:-1;;20178:12;20142:2;20208:62;20262:7;20253:6;20242:9;20238:22;20208:62;:::i;:::-;19799:595;;;;-1:-1;20198:72;;20307:2;20346:22;5580:20;;-1:-1;;;19799:595::o;20401:951::-;;;;;;20591:3;20579:9;20570:7;20566:23;20562:33;20559:2;;;-1:-1;;20598:12;20559:2;5593:6;5580:20;20650:63;;20750:2;20793:9;20789:22;12355:20;20758:63;;20886:2;20875:9;20871:18;20858:32;-1:-1;;;;;20910:18;20902:6;20899:30;20896:2;;;-1:-1;;20932:12;20896:2;20962:62;21016:7;21007:6;20996:9;20992:22;20962:62;:::i;:::-;20952:72;;21061:2;21104:9;21100:22;5580:20;21069:63;;21197:3;21186:9;21182:19;21169:33;21155:47;;20910:18;21214:6;21211:30;21208:2;;;-1:-1;;21244:12;21208:2;;21274:62;21328:7;21319:6;21308:9;21304:22;21274:62;:::i;:::-;21264:72;;;20553:799;;;;;;;;:::o;21359:843::-;;;;;;21538:3;21526:9;21517:7;21513:23;21509:33;21506:2;;;-1:-1;;21545:12;21506:2;5593:6;5580:20;21597:63;;21697:2;21740:9;21736:22;12355:20;21705:63;;21805:2;21847:9;21843:22;6523:20;21813:62;;21940:2;21929:9;21925:18;21912:32;-1:-1;;;;;21956:6;21953:30;21950:2;;;-1:-1;;21986:12;21950:2;22016:62;22070:7;22061:6;22050:9;22046:22;22016:62;:::i;:::-;21500:702;;;;-1:-1;21500:702;;22115:3;22154:22;6523:20;;21500:702;-1:-1;;;21500:702::o;22209:613::-;;;;;22362:3;22350:9;22341:7;22337:23;22333:33;22330:2;;;-1:-1;;22369:12;22330:2;-1:-1;;5580:20;;;22521:2;22560:22;;12355:20;;-1:-1;22629:2;22667:22;;6523:20;;22736:2;22774:22;6523:20;;-1:-1;22324:498;-1:-1;22324:498::o;22829:365::-;;;22952:2;22940:9;22931:7;22927:23;22923:32;22920:2;;;-1:-1;;22958:12;22920:2;23016:17;23003:31;-1:-1;;;;;23054:18;23046:6;23043:30;23040:2;;;-1:-1;;23076:12;23040:2;23161:6;23150:9;23146:22;;;5778:3;5771:4;5763:6;5759:17;5755:27;5745:2;;-1:-1;;5786:12;5745:2;5829:6;5816:20;23054:18;5848:6;5845:30;5842:2;;;-1:-1;;5878:12;5842:2;5973:3;22952:2;5953:17;5914:6;5939:32;;5936:41;5933:2;;;-1:-1;;5980:12;5933:2;22952;5910:17;;;;;23096:82;;-1:-1;22914:280;;-1:-1;;;;22914:280::o;23201:291::-;;23330:2;23318:9;23309:7;23305:23;23301:32;23298:2;;;-1:-1;;23336:12;23298:2;12104:20;23330:2;12104:20;:::i;:::-;12355;;12185:75;;-1:-1;12192:16;23292:200;-1:-1;23292:200::o;23499:241::-;;23603:2;23591:9;23582:7;23578:23;23574:32;23571:2;;;-1:-1;;23609:12;23571:2;-1:-1;12355:20;;23565:175;-1:-1;23565:175::o;23747:263::-;;23862:2;23850:9;23841:7;23837:23;23833:32;23830:2;;;-1:-1;;23868:12;23830:2;-1:-1;12503:13;;23824:186;-1:-1;23824:186::o;28858:323::-;;28990:5;71910:12;73118:6;73113:3;73106:19;29073:52;29118:6;73155:4;73150:3;73146:14;73155:4;29099:5;29095:16;29073:52;:::i;:::-;8872:19;77507:14;-1:-1;;77503:28;29137:39;;;;73155:4;29137:39;;28938:243;-1:-1;;28938:243::o;44701:1129::-;;28560:5;28537:3;28530:37;28560:5;45122:2;45117:3;45113:12;28530:37;77614:14;;25155:5;77618:2;77614:14;;45222:12;45117:3;45222:12;25089:74;28560:5;45349:12;45117:3;45349:12;28530:37;29698:5;71910:12;29809:52;29854:6;45460:12;45117:3;45460:12;45122:2;29835:5;29831:16;29809:52;:::i;:::-;29873:16;;;45460:12;29873:16;;28530:37;;;;-1:-1;45682:12;;;28530:37;45793:12;;;;-1:-1;;;;;45015:815::o;45837:520::-;32978:66;32958:87;;32942:2;33064:12;;28530:37;;;;46320:12;;;46054:303::o;46364:222::-;-1:-1;;;;;75233:54;;;;25246:37;;46491:2;46476:18;;46462:124::o;46838:349::-;-1:-1;;;;;75233:54;;;;24914:58;;47173:2;47158:18;;28530:37;47001:2;46986:18;;46972:215::o;47534:370::-;47711:2;47725:47;;;71910:12;;47696:18;;;73106:19;;;47534:370;;47711:2;71211:14;;;;73146;;;;47534:370;25734:260;25759:6;25756:1;25753:13;25734:260;;;25820:13;;28530:37;;72658:14;;;;24171;;;;25781:1;25774:9;25734:260;;47911:538;48172:2;48186:47;;;71910:12;;48157:18;;;73106:19;;;47911:538;;48172:2;73146:14;;;;;;26670:17;;;26661:27;;;;71211:14;;;47911:538;26840:456;26865:6;26862:1;26859:13;26840:456;;;26917:20;;;-1:-1;;26917:20;26905:33;;26966:13;;42702:23;;28530:37;;42862:16;;;42856:23;42933:14;;;28530:37;43025:16;;43019:23;42630:4;43062:14;;;43055:38;;;43108:71;42621:14;;;43019:23;43108:71;:::i;:::-;27275:14;;;;26986:156;-1:-1;;;72658:14;;;;26887:1;26880:9;26840:456;;48456:494;48695:2;48709:47;;;71910:12;;48680:18;;;73106:19;;;48456:494;;48695:2;73146:14;;;;;;71211;;;48456:494;27975:353;28000:6;27997:1;27994:13;27975:353;;;28067:6;28061:13;43506:16;43500:23;77843:1;77836:5;77833:12;77823:2;;77849:9;77823:2;31154:67;;43688:16;;43682:23;43759:14;;;28530:37;24807:14;;;;72658;;;;28022:1;28015:9;27975:353;;;-1:-1;48762:178;;48666:284;-1:-1;;;;;;;48666:284::o;48957:210::-;74702:13;;74695:21;28423:34;;49078:2;49063:18;;49049:118::o;49174:222::-;28530:37;;;49301:2;49286:18;;49272:124::o;49403:528::-;;28560:5;28537:3;28530:37;28560:5;49768:2;49757:9;49753:18;28530:37;49604:2;49805;49794:9;49790:18;49783:48;49845:76;49604:2;49593:9;49589:18;49907:6;49845:76;:::i;49938:548::-;28530:37;;;75449:4;75438:16;;;;50306:2;50291:18;;44654:35;50389:2;50374:18;;28530:37;50472:2;50457:18;;28530:37;50145:3;50130:19;;50116:370::o;50764:240::-;50900:2;50885:18;;77726:1;77716:12;;77706:2;;77732:9;77706:2;31005:59;;;50871:133;:::o;51236:310::-;;51383:2;51404:17;51397:47;51458:78;51383:2;51372:9;51368:18;51522:6;51458:78;:::i;51553:416::-;51753:2;51767:47;;;32233:2;51738:18;;;73106:19;32269:26;73146:14;;;32249:47;32315:12;;;51724:245::o;51976:416::-;52176:2;52190:47;;;32566:2;52161:18;;;73106:19;32602:33;73146:14;;;32582:54;32655:12;;;52147:245::o;52399:416::-;52599:2;52613:47;;;33315:2;52584:18;;;73106:19;33351:30;73146:14;;;33331:51;33401:12;;;52570:245::o;52822:416::-;53022:2;53036:47;;;33652:2;53007:18;;;73106:19;33688:34;73146:14;;;33668:55;-1:-1;;;33743:12;;;33736:30;33785:12;;;52993:245::o;53245:416::-;53445:2;53459:47;;;34036:2;53430:18;;;73106:19;34072:29;73146:14;;;34052:50;34121:12;;;53416:245::o;53668:416::-;53868:2;53882:47;;;34372:2;53853:18;;;73106:19;34408:31;73146:14;;;34388:52;34459:12;;;53839:245::o;54091:416::-;54291:2;54305:47;;;34710:2;54276:18;;;73106:19;34746:34;73146:14;;;34726:55;-1:-1;;;34801:12;;;34794:26;34839:12;;;54262:245::o;54514:416::-;54714:2;54728:47;;;35090:2;54699:18;;;73106:19;35126:29;73146:14;;;35106:50;35175:12;;;54685:245::o;54937:416::-;55137:2;55151:47;;;35426:2;55122:18;;;73106:19;-1:-1;;;73146:14;;;35442:38;35499:12;;;55108:245::o;55360:416::-;55560:2;55574:47;;;35750:2;55545:18;;;73106:19;35786:34;73146:14;;;35766:55;-1:-1;;;35841:12;;;35834:26;35879:12;;;55531:245::o;55783:416::-;55983:2;55997:47;;;36130:2;55968:18;;;73106:19;-1:-1;;;73146:14;;;36146:45;36210:12;;;55954:245::o;56206:416::-;56406:2;56420:47;;;36461:2;56391:18;;;73106:19;36497:32;73146:14;;;36477:53;36549:12;;;56377:245::o;56629:416::-;56829:2;56843:47;;;36800:2;56814:18;;;73106:19;36836:34;73146:14;;;36816:55;-1:-1;;;36891:12;;;36884:25;36928:12;;;56800:245::o;57052:416::-;57252:2;57266:47;;;57237:18;;;73106:19;37215:34;73146:14;;;37195:55;37269:12;;;57223:245::o;57475:416::-;57675:2;57689:47;;;37520:2;57660:18;;;73106:19;37556:32;73146:14;;;37536:53;37608:12;;;57646:245::o;57898:416::-;58098:2;58112:47;;;37859:2;58083:18;;;73106:19;37895:29;73146:14;;;37875:50;37944:12;;;58069:245::o;58321:416::-;58521:2;58535:47;;;38195:2;58506:18;;;73106:19;38231:30;73146:14;;;38211:51;38281:12;;;58492:245::o;58744:416::-;58944:2;58958:47;;;38532:2;58929:18;;;73106:19;-1:-1;;;73146:14;;;38548:44;38611:12;;;58915:245::o;59167:416::-;59367:2;59381:47;;;38862:2;59352:18;;;73106:19;-1:-1;;;73146:14;;;38878:42;38939:12;;;59338:245::o;59590:416::-;59790:2;59804:47;;;39190:2;59775:18;;;73106:19;39226:26;73146:14;;;39206:47;39272:12;;;59761:245::o;60013:416::-;60213:2;60227:47;;;39523:2;60198:18;;;73106:19;39559:31;73146:14;;;39539:52;39610:12;;;60184:245::o;60436:416::-;60636:2;60650:47;;;60621:18;;;73106:19;39897:34;73146:14;;;39877:55;39951:12;;;60607:245::o;60859:416::-;61059:2;61073:47;;;40202:2;61044:18;;;73106:19;40238:27;73146:14;;;40218:48;40285:12;;;61030:245::o;61282:416::-;61482:2;61496:47;;;40536:2;61467:18;;;73106:19;40572:31;73146:14;;;40552:52;40623:12;;;61453:245::o;61705:416::-;61905:2;61919:47;;;40874:2;61890:18;;;73106:19;40910:32;73146:14;;;40890:53;40962:12;;;61876:245::o;62128:416::-;62328:2;62342:47;;;41213:2;62313:18;;;73106:19;-1:-1;;;73146:14;;;41229:44;41292:12;;;62299:245::o;62551:416::-;62751:2;62765:47;;;41543:2;62736:18;;;73106:19;41579:31;73146:14;;;41559:52;41630:12;;;62722:245::o;62974:416::-;63174:2;63188:47;;;41881:2;63159:18;;;73106:19;41917:31;73146:14;;;41897:52;41968:12;;;63145:245::o;63397:416::-;63597:2;63611:47;;;42219:2;63582:18;;;73106:19;42255:33;73146:14;;;42235:54;42308:12;;;63568:245::o;63820:322::-;44078:23;;28530:37;;63997:2;63982:18;;63968:174::o;64378:417::-;;28560:5;28537:3;28530:37;64551:2;64669;64658:9;64654:18;64647:48;64709:76;64551:2;64540:9;64536:18;64771:6;64709:76;:::i;64802:612::-;;28560:5;28537:3;28530:37;65021:2;65139;65128:9;65124:18;65117:48;65179:76;65021:2;65010:9;65006:18;65241:6;65179:76;:::i;:::-;65303:9;65297:4;65293:20;65288:2;65277:9;65273:18;65266:48;65328:76;65399:4;65390:6;65328:76;:::i;65421:544::-;;28560:5;28537:3;28530:37;65630:2;65748;65737:9;65733:18;65726:48;65788:76;65630:2;65619:9;65615:18;65850:6;65788:76;:::i;:::-;65780:84;;31635:5;65951:2;65940:9;65936:18;31584:58;65601:364;;;;;;:::o;66507:636::-;;28560:5;28537:3;28530:37;28560:5;66897:2;66886:9;66882:18;28530:37;66734:3;66934:2;66923:9;66919:18;66912:48;66974:76;66734:3;66723:9;66719:19;67036:6;66974:76;:::i;:::-;66966:84;;28560:5;67129:2;67118:9;67114:18;28530:37;66705:438;;;;;;;:::o;67150:518::-;;67346:2;67335:9;67331:18;28560:5;28537:3;28530:37;67508:2;28560:5;67508:2;67497:9;67493:18;28530:37;67346:2;67545;67534:9;67530:18;67523:48;-1:-1;30041:5;30035:12;30075:1;;30064:9;30060:17;30088:1;30083:247;;;;30341:1;30336:400;;;;30053:683;;30083:247;30180:70;30161:4;30157:1;30146:9;30142:17;30138:28;30238:3;30180:70;:::i;:::-;-1:-1;;30269:25;;30257:38;;30309:14;;;-1:-1;30083:247;;30336:400;30405:1;30394:9;30390:17;30421:70;30484:6;30479:3;30421:70;:::i;:::-;30513:37;30544:5;30513:37;:::i;:::-;-1:-1;30574:130;30588:6;30585:1;30582:13;30574:130;;;30647:14;;30634:11;;;30627:35;30681:15;;;;30603:12;;30574:130;;;30718:11;;;;;-1:-1;;;30053:683;-1:-1;67577:81;;67317:351;-1:-1;;;;;;;;;67317:351::o;67675:756::-;28530:37;;;44078:23;;68201:2;68186:18;;28530:37;44078:23;68334:2;68319:18;;28530:37;68417:2;68402:18;;28530:37;67986:3;67971:19;;67957:474::o;68438:256::-;68500:2;68494:9;68526:17;;;-1:-1;;;;;68586:34;;68622:22;;;68583:62;68580:2;;;68658:1;;68648:12;68580:2;68500;68667:22;68478:216;;-1:-1;68478:216::o;68701:342::-;;-1:-1;;;;;68890:6;68887:30;68884:2;;;-1:-1;;68920:12;68884:2;-1:-1;68965:4;68953:17;;;69018:15;;68821:222::o;71643:157::-;;71737:14;;;71779:4;71766:18;;;71696:104::o;76715:268::-;76780:1;76787:101;76801:6;76798:1;76795:13;76787:101;;;76868:11;;;76862:18;76849:11;;;76842:39;76823:2;76816:10;76787:101;;;76903:6;76900:1;76897:13;76894:2;;;-1:-1;;76780:1;76950:16;;76943:27;76764:219::o;77872:117::-;-1:-1;;;;;75233:54;;77931:35;;77921:2;;77980:1;;77970:12;77921:2;77915:74;:::o",
  "source": "// SPDX-License-Identifier: AGPL-3.0-only\npragma solidity ^0.6.0;\n\npragma experimental ABIEncoderV2;\n\nimport \"../Voting.sol\";\nimport \"../../../common/implementation/FixedPoint.sol\";\n\n// Test contract used to access internal variables in the Voting contract.\ncontract VotingTest is Voting {\n    constructor(\n        uint256 _phaseLength,\n        FixedPoint.Unsigned memory _gatPercentage,\n        FixedPoint.Unsigned memory _inflationRate,\n        uint256 _rewardsExpirationTimeout,\n        address _votingToken,\n        address _finder,\n        address _timerAddress\n    )\n        public\n        Voting(\n            _phaseLength,\n            _gatPercentage,\n            _inflationRate,\n            _rewardsExpirationTimeout,\n            _votingToken,\n            _finder,\n            _timerAddress\n        )\n    {}\n\n    function getPendingPriceRequestsArray() external view returns (bytes32[] memory) {\n        return pendingPriceRequests;\n    }\n}\n",
  "sourcePath": "/home/circleci/protocol/packages/core/contracts/oracle/implementation/test/VotingTest.sol",
  "ast": {
    "absolutePath": "/home/circleci/protocol/packages/core/contracts/oracle/implementation/test/VotingTest.sol",
    "exportedSymbols": {
      "VotingTest": [
        23424
      ]
    },
    "id": 23425,
    "license": "AGPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 23382,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:23:78"
      },
      {
        "id": 23383,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "67:33:78"
      },
      {
        "absolutePath": "/home/circleci/protocol/packages/core/contracts/oracle/implementation/Voting.sol",
        "file": "../Voting.sol",
        "id": 23384,
        "nodeType": "ImportDirective",
        "scope": 23425,
        "sourceUnit": 22796,
        "src": "102:23:78",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/circleci/protocol/packages/core/contracts/common/implementation/FixedPoint.sol",
        "file": "../../../common/implementation/FixedPoint.sol",
        "id": 23385,
        "nodeType": "ImportDirective",
        "scope": 23425,
        "sourceUnit": 2374,
        "src": "126:55:78",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 23386,
              "name": "Voting",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 22795,
              "src": "281:6:78",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Voting_$22795",
                "typeString": "contract Voting"
              }
            },
            "id": 23387,
            "nodeType": "InheritanceSpecifier",
            "src": "281:6:78"
          }
        ],
        "contractDependencies": [
          3114,
          22795,
          23752,
          23784,
          24040,
          24180,
          25752,
          25861
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 23424,
        "linearizedBaseContracts": [
          23424,
          22795,
          24040,
          24180,
          23752,
          23784,
          25861,
          25752,
          3114
        ],
        "name": "VotingTest",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 23413,
              "nodeType": "Block",
              "src": "812:2:78",
              "statements": []
            },
            "documentation": null,
            "id": 23414,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 23404,
                    "name": "_phaseLength",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 23389,
                    "src": "616:12:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 23405,
                    "name": "_gatPercentage",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 23391,
                    "src": "642:14:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Unsigned_$887_memory_ptr",
                      "typeString": "struct FixedPoint.Unsigned memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 23406,
                    "name": "_inflationRate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 23393,
                    "src": "670:14:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Unsigned_$887_memory_ptr",
                      "typeString": "struct FixedPoint.Unsigned memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 23407,
                    "name": "_rewardsExpirationTimeout",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 23395,
                    "src": "698:25:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 23408,
                    "name": "_votingToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 23397,
                    "src": "737:12:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 23409,
                    "name": "_finder",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 23399,
                    "src": "763:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 23410,
                    "name": "_timerAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 23401,
                    "src": "784:13:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 23411,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 23403,
                  "name": "Voting",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 22795,
                  "src": "596:6:78",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Voting_$22795_$",
                    "typeString": "type(contract Voting)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "596:211:78"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 23402,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23389,
                  "mutability": "mutable",
                  "name": "_phaseLength",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 23414,
                  "src": "315:20:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23388,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "315:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23391,
                  "mutability": "mutable",
                  "name": "_gatPercentage",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 23414,
                  "src": "345:41:78",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Unsigned_$887_memory_ptr",
                    "typeString": "struct FixedPoint.Unsigned"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 23390,
                    "name": "FixedPoint.Unsigned",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 887,
                    "src": "345:19:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Unsigned_$887_storage_ptr",
                      "typeString": "struct FixedPoint.Unsigned"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23393,
                  "mutability": "mutable",
                  "name": "_inflationRate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 23414,
                  "src": "396:41:78",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Unsigned_$887_memory_ptr",
                    "typeString": "struct FixedPoint.Unsigned"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 23392,
                    "name": "FixedPoint.Unsigned",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 887,
                    "src": "396:19:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Unsigned_$887_storage_ptr",
                      "typeString": "struct FixedPoint.Unsigned"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23395,
                  "mutability": "mutable",
                  "name": "_rewardsExpirationTimeout",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 23414,
                  "src": "447:33:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23394,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "447:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23397,
                  "mutability": "mutable",
                  "name": "_votingToken",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 23414,
                  "src": "490:20:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23396,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "490:7:78",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23399,
                  "mutability": "mutable",
                  "name": "_finder",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 23414,
                  "src": "520:15:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23398,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "520:7:78",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23401,
                  "mutability": "mutable",
                  "name": "_timerAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 23414,
                  "src": "545:21:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23400,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "545:7:78",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "305:267:78"
            },
            "returnParameters": {
              "id": 23412,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "812:0:78"
            },
            "scope": 23424,
            "src": "294:520:78",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 23422,
              "nodeType": "Block",
              "src": "901:44:78",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23420,
                    "name": "pendingPriceRequests",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 20512,
                    "src": "918:20:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                      "typeString": "bytes32[] storage ref"
                    }
                  },
                  "functionReturnParameters": 23419,
                  "id": 23421,
                  "nodeType": "Return",
                  "src": "911:27:78"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "f116961f",
            "id": 23423,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPendingPriceRequestsArray",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 23415,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "857:2:78"
            },
            "returnParameters": {
              "id": 23419,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23418,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 23423,
                  "src": "883:16:78",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 23416,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "883:7:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 23417,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "883:9:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "882:18:78"
            },
            "scope": 23424,
            "src": "820:125:78",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 23425,
        "src": "258:689:78"
      }
    ],
    "src": "42:906:78"
  },
  "legacyAST": {
    "absolutePath": "/home/circleci/protocol/packages/core/contracts/oracle/implementation/test/VotingTest.sol",
    "exportedSymbols": {
      "VotingTest": [
        23424
      ]
    },
    "id": 23425,
    "license": "AGPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 23382,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:23:78"
      },
      {
        "id": 23383,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "67:33:78"
      },
      {
        "absolutePath": "/home/circleci/protocol/packages/core/contracts/oracle/implementation/Voting.sol",
        "file": "../Voting.sol",
        "id": 23384,
        "nodeType": "ImportDirective",
        "scope": 23425,
        "sourceUnit": 22796,
        "src": "102:23:78",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/circleci/protocol/packages/core/contracts/common/implementation/FixedPoint.sol",
        "file": "../../../common/implementation/FixedPoint.sol",
        "id": 23385,
        "nodeType": "ImportDirective",
        "scope": 23425,
        "sourceUnit": 2374,
        "src": "126:55:78",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 23386,
              "name": "Voting",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 22795,
              "src": "281:6:78",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Voting_$22795",
                "typeString": "contract Voting"
              }
            },
            "id": 23387,
            "nodeType": "InheritanceSpecifier",
            "src": "281:6:78"
          }
        ],
        "contractDependencies": [
          3114,
          22795,
          23752,
          23784,
          24040,
          24180,
          25752,
          25861
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 23424,
        "linearizedBaseContracts": [
          23424,
          22795,
          24040,
          24180,
          23752,
          23784,
          25861,
          25752,
          3114
        ],
        "name": "VotingTest",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 23413,
              "nodeType": "Block",
              "src": "812:2:78",
              "statements": []
            },
            "documentation": null,
            "id": 23414,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 23404,
                    "name": "_phaseLength",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 23389,
                    "src": "616:12:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 23405,
                    "name": "_gatPercentage",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 23391,
                    "src": "642:14:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Unsigned_$887_memory_ptr",
                      "typeString": "struct FixedPoint.Unsigned memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 23406,
                    "name": "_inflationRate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 23393,
                    "src": "670:14:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Unsigned_$887_memory_ptr",
                      "typeString": "struct FixedPoint.Unsigned memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 23407,
                    "name": "_rewardsExpirationTimeout",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 23395,
                    "src": "698:25:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 23408,
                    "name": "_votingToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 23397,
                    "src": "737:12:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 23409,
                    "name": "_finder",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 23399,
                    "src": "763:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 23410,
                    "name": "_timerAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 23401,
                    "src": "784:13:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 23411,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 23403,
                  "name": "Voting",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 22795,
                  "src": "596:6:78",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Voting_$22795_$",
                    "typeString": "type(contract Voting)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "596:211:78"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 23402,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23389,
                  "mutability": "mutable",
                  "name": "_phaseLength",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 23414,
                  "src": "315:20:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23388,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "315:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23391,
                  "mutability": "mutable",
                  "name": "_gatPercentage",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 23414,
                  "src": "345:41:78",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Unsigned_$887_memory_ptr",
                    "typeString": "struct FixedPoint.Unsigned"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 23390,
                    "name": "FixedPoint.Unsigned",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 887,
                    "src": "345:19:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Unsigned_$887_storage_ptr",
                      "typeString": "struct FixedPoint.Unsigned"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23393,
                  "mutability": "mutable",
                  "name": "_inflationRate",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 23414,
                  "src": "396:41:78",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Unsigned_$887_memory_ptr",
                    "typeString": "struct FixedPoint.Unsigned"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 23392,
                    "name": "FixedPoint.Unsigned",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 887,
                    "src": "396:19:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Unsigned_$887_storage_ptr",
                      "typeString": "struct FixedPoint.Unsigned"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23395,
                  "mutability": "mutable",
                  "name": "_rewardsExpirationTimeout",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 23414,
                  "src": "447:33:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23394,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "447:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23397,
                  "mutability": "mutable",
                  "name": "_votingToken",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 23414,
                  "src": "490:20:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23396,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "490:7:78",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23399,
                  "mutability": "mutable",
                  "name": "_finder",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 23414,
                  "src": "520:15:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23398,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "520:7:78",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23401,
                  "mutability": "mutable",
                  "name": "_timerAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 23414,
                  "src": "545:21:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23400,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "545:7:78",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "305:267:78"
            },
            "returnParameters": {
              "id": 23412,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "812:0:78"
            },
            "scope": 23424,
            "src": "294:520:78",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 23422,
              "nodeType": "Block",
              "src": "901:44:78",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 23420,
                    "name": "pendingPriceRequests",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 20512,
                    "src": "918:20:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                      "typeString": "bytes32[] storage ref"
                    }
                  },
                  "functionReturnParameters": 23419,
                  "id": 23421,
                  "nodeType": "Return",
                  "src": "911:27:78"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "f116961f",
            "id": 23423,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPendingPriceRequestsArray",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 23415,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "857:2:78"
            },
            "returnParameters": {
              "id": 23419,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23418,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 23423,
                  "src": "883:16:78",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 23416,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "883:7:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 23417,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "883:9:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "882:18:78"
            },
            "scope": 23424,
            "src": "820:125:78",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 23425,
        "src": "258:689:78"
      }
    ],
    "src": "42:906:78"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2021-02-27T02:08:44.444Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "batchCommit((bytes32,uint256,bytes,bytes32,bytes)[])": {
        "details": "Using `encryptedVote` is optional. If included then commitment is emitted in an event. Look at `project-root/common/Constants.js` for the tested maximum number of commitments that can fit in one transaction.",
        "params": {
          "commits": "struct to encapsulate an `identifier`, `time`, `hash` and optional `encryptedVote`."
        }
      },
      "batchCommit((bytes32,uint256,bytes32,bytes)[])": {
        "details": "Using `encryptedVote` is optional. If included then commitment is stored on chain. Look at `project-root/common/Constants.js` for the tested maximum number of commitments that can fit in one transaction.",
        "params": {
          "commits": "array of structs that encapsulate an `identifier`, `time`, `hash` and optional `encryptedVote`."
        }
      },
      "batchReveal((bytes32,uint256,int256,bytes,int256)[])": {
        "details": "For more info on reveals, review the comment for `revealVote`.",
        "params": {
          "reveals": "array of the Reveal struct which contains an identifier, time, price and salt."
        }
      },
      "batchReveal((bytes32,uint256,int256,int256)[])": {
        "details": "For more information on reveals, review the comment for `revealVote`.",
        "params": {
          "reveals": "array of the Reveal struct which contains an identifier, time, price and salt."
        }
      },
      "commitAndEmitEncryptedVote(bytes32,uint256,bytes,bytes32,bytes)": {
        "details": "An encrypted version of the vote is emitted in an event `EncryptedVote` to allow off-chain infrastructure to retrieve the commit. The contents of `encryptedVote` are never used on chain: it is purely for convenience.",
        "params": {
          "ancillaryData": "arbitrary data appended to a price request to give the voters more info from the caller.",
          "encryptedVote": "offchain encrypted blob containing the voters amount, time and salt.",
          "hash": "keccak256 hash of the price you want to vote for and a `int256 salt`.",
          "identifier": "unique price pair identifier. Eg: BTC/USD price pair.",
          "time": "unix timestamp of for the price request."
        }
      },
      "commitAndEmitEncryptedVote(bytes32,uint256,bytes32,bytes)": {
        "details": "An encrypted version of the vote is emitted in an event `EncryptedVote` to allow off-chain infrastructure to retrieve the commit. The contents of `encryptedVote` are never used on chain: it is purely for convenience.",
        "params": {
          "encryptedVote": "offchain encrypted blob containing the voters amount, time and salt.",
          "hash": "keccak256 hash of the price you want to vote for and a `int256 salt`.",
          "identifier": "unique price pair identifier. Eg: BTC/USD price pair.",
          "time": "unix timestamp of for the price request."
        }
      },
      "commitVote(bytes32,uint256,bytes,bytes32)": {
        "details": "`identifier`, `time` must correspond to a price request that's currently in the commit phase. Commits can be changed.Since transaction data is public, the salt will be revealed with the vote. While this is the system’s expected behavior, voters should never reuse salts. If someone else is able to guess the voted price and knows that a salt will be reused, then they can determine the vote pre-reveal.",
        "params": {
          "ancillaryData": "arbitrary data appended to a price request to give the voters more info from the caller.",
          "hash": "keccak256 hash of the `price`, `salt`, voter `address`, `time`, current `roundId`, and `identifier`.",
          "identifier": "uniquely identifies the committed vote. EG BTC/USD price pair.",
          "time": "unix timestamp of the price being voted on."
        }
      },
      "commitVote(bytes32,uint256,bytes32)": {
        "details": "`identifier`, `time` must correspond to a price request that's currently in the commit phase. Commits can be changed.Since transaction data is public, the salt will be revealed with the vote. While this is the system’s expected behavior, voters should never reuse salts. If someone else is able to guess the voted price and knows that a salt will be reused, then they can determine the vote pre-reveal.",
        "params": {
          "hash": "keccak256 hash of the `price`, `salt`, voter `address`, `time`, current `roundId`, and `identifier`.",
          "identifier": "uniquely identifies the committed vote. EG BTC/USD price pair.",
          "time": "unix timestamp of the price being voted on."
        }
      },
      "getCurrentRoundId()": {
        "returns": {
          "_0": "uint256 representing the unique round ID."
        }
      },
      "getCurrentTime()": {
        "returns": {
          "_0": "uint for the current Testable timestamp."
        }
      },
      "getPendingRequests()": {
        "returns": {
          "_0": "pendingRequests array containing identifiers of type `PendingRequest`. and timestamps for all pending requests."
        }
      },
      "getPrice(bytes32,uint256)": {
        "details": "If the price is not available, the method reverts.",
        "params": {
          "identifier": "uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.",
          "time": "unix timestamp for the price request."
        },
        "returns": {
          "_0": "int256 representing the resolved price for the given identifier and timestamp."
        }
      },
      "getPrice(bytes32,uint256,bytes)": {
        "details": "If the price is not available, the method reverts.",
        "params": {
          "ancillaryData": "arbitrary data appended to a price request to give the voters more info from the caller.",
          "identifier": "uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.",
          "time": "unix timestamp of for the price request."
        },
        "returns": {
          "_0": "int256 representing the resolved price for the given identifier and timestamp."
        }
      },
      "getPriceRequestStatuses((bytes32,uint256,bytes)[])": {
        "details": "If the status for a particular request is NotRequested, the lastVotingRound will always be 0.",
        "params": {
          "requests": "array of type PendingRequest which includes an identifier and timestamp for each request."
        },
        "returns": {
          "_0": "requestStates a list, in the same order as the input list, giving the status of each of the specified price requests."
        }
      },
      "getVotePhase()": {
        "returns": {
          "_0": "Phase to indicate the current phase. Either { Commit, Reveal, NUM_PHASES_PLACEHOLDER }."
        }
      },
      "hasPrice(bytes32,uint256)": {
        "details": "Time must be in the past and the identifier must be supported.",
        "params": {
          "identifier": "uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.",
          "time": "unix timestamp for the price request."
        },
        "returns": {
          "_0": "bool if the DVM has resolved to a price for the given identifier and timestamp."
        }
      },
      "hasPrice(bytes32,uint256,bytes)": {
        "details": "Time must be in the past and the identifier must be supported.",
        "params": {
          "ancillaryData": "arbitrary data appended to a price request to give the voters more info from the caller.",
          "identifier": "uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.",
          "time": "unix timestamp of for the price request."
        },
        "returns": {
          "_0": "_hasPrice bool if the DVM has resolved to a price for the given identifier and timestamp."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "requestPrice(bytes32,uint256)": {
        "details": "Time must be in the past and the identifier must be supported.",
        "params": {
          "identifier": "uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.",
          "time": "unix timestamp for the price request."
        }
      },
      "requestPrice(bytes32,uint256,bytes)": {
        "details": "Time must be in the past and the identifier must be supported. The length of the ancillary data is limited such that this method abides by the EVM transaction gas limit.",
        "params": {
          "ancillaryData": "arbitrary data appended to a price request to give the voters more info from the caller.",
          "identifier": "uniquely identifies the price requested. eg BTC/USD (encoded as bytes32) could be requested.",
          "time": "unix timestamp for the price request."
        }
      },
      "retrieveRewards(address,uint256,(bytes32,uint256)[])": {
        "details": "Can only retrieve rewards if calling for a valid round and if the call is done within the timeout threshold (not expired).",
        "params": {
          "roundId": "the round from which voting rewards will be retrieved from.",
          "toRetrieve": "array of PendingRequests which rewards are retrieved from.",
          "voterAddress": "voter for which rewards will be retrieved. Does not have to be the caller."
        },
        "returns": {
          "_0": "total amount of rewards returned to the voter."
        }
      },
      "retrieveRewards(address,uint256,(bytes32,uint256,bytes)[])": {
        "details": "Can only retrieve rewards if calling for a valid round and if the call is done within the timeout threshold (not expired). Note that a named return value is used here to avoid a stack to deep error.",
        "params": {
          "roundId": "the round from which voting rewards will be retrieved from.",
          "toRetrieve": "array of PendingRequests which rewards are retrieved from.",
          "voterAddress": "voter for which rewards will be retrieved. Does not have to be the caller."
        },
        "returns": {
          "totalRewardToIssue": "total amount of rewards returned to the voter."
        }
      },
      "revealVote(bytes32,uint256,int256,bytes,int256)": {
        "details": "The revealed `price`, `salt`, `address`, `time`, `roundId`, and `identifier`, must hash to the latest `hash` that `commitVote()` was called with. Only the committer can reveal their vote.",
        "params": {
          "ancillaryData": "arbitrary data appended to a price request to give the voters more info from the caller.",
          "identifier": "voted on in the commit phase. EG BTC/USD price pair.",
          "price": "voted on during the commit phase.",
          "salt": "value used to hide the commitment price during the commit phase.",
          "time": "specifies the unix timestamp of the price being voted on."
        }
      },
      "revealVote(bytes32,uint256,int256,int256)": {
        "details": "The revealed `price`, `salt`, `address`, `time`, `roundId`, and `identifier`, must hash to the latest `hash` that `commitVote()` was called with. Only the committer can reveal their vote.",
        "params": {
          "identifier": "voted on in the commit phase. EG BTC/USD price pair.",
          "price": "voted on during the commit phase.",
          "salt": "value used to hide the commitment price during the commit phase.",
          "time": "specifies the unix timestamp of the price is being voted on."
        }
      },
      "setCurrentTime(uint256)": {
        "details": "Will revert if not running in test mode.",
        "params": {
          "time": "timestamp to set current Testable time to."
        }
      },
      "setGatPercentage((uint256))": {
        "details": "This method is public because calldata structs are not currently supported by solidity.",
        "params": {
          "newGatPercentage": "sets the next round's Gat percentage."
        }
      },
      "setInflationRate((uint256))": {
        "details": "This method is public because calldata structs are not currently supported by solidity.",
        "params": {
          "newInflationRate": "sets the next round's inflation rate."
        }
      },
      "setMigrated(address)": {
        "details": "Can only be called by the contract owner.",
        "params": {
          "newVotingAddress": "the newly migrated contract address."
        }
      },
      "setRewardsExpirationTimeout(uint256)": {
        "details": "This change only applies to rounds that have not yet begun.",
        "params": {
          "NewRewardsExpirationTimeout": "how long a caller can wait before choosing to withdraw their rewards."
        }
      },
      "snapshotCurrentRound(bytes)": {
        "details": "This function can be called multiple times, but only the first call per round into this function or `revealVote` will create the round snapshot. Any later calls will be a no-op. Will revert unless called during reveal period.",
        "params": {
          "signature": "signature required to prove caller is an EOA to prevent flash loans from being included in the snapshot."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "batchCommit((bytes32,uint256,bytes,bytes32,bytes)[])": {
        "notice": "Submit a batch of commits in a single transaction."
      },
      "batchCommit((bytes32,uint256,bytes32,bytes)[])": {
        "notice": "Submit a batch of commits in a single transaction."
      },
      "batchReveal((bytes32,uint256,int256,bytes,int256)[])": {
        "notice": "Reveal multiple votes in a single transaction. Look at `project-root/common/Constants.js` for the tested maximum number of reveals. that can fit in one transaction."
      },
      "batchReveal((bytes32,uint256,int256,int256)[])": {
        "notice": "Reveal multiple votes in a single transaction. Look at `project-root/common/Constants.js` for the tested maximum number of reveals. that can fit in one transaction."
      },
      "commitAndEmitEncryptedVote(bytes32,uint256,bytes,bytes32,bytes)": {
        "notice": "commits a vote and logs an event with a data blob, typically an encrypted version of the vote"
      },
      "commitAndEmitEncryptedVote(bytes32,uint256,bytes32,bytes)": {
        "notice": "commits a vote and logs an event with a data blob, typically an encrypted version of the vote"
      },
      "commitVote(bytes32,uint256,bytes,bytes32)": {
        "notice": "Commit a vote for a price request for `identifier` at `time`."
      },
      "commitVote(bytes32,uint256,bytes32)": {
        "notice": "Commit a vote for a price request for `identifier` at `time`."
      },
      "getCurrentRoundId()": {
        "notice": "Returns the current round ID, as a function of the current time."
      },
      "getCurrentTime()": {
        "notice": "Gets the current time. Will return the last time set in `setCurrentTime` if running in test mode. Otherwise, it will return the block timestamp."
      },
      "getPendingRequests()": {
        "notice": "Gets the queries that are being voted on this round."
      },
      "getPrice(bytes32,uint256)": {
        "notice": "Gets the price for `identifier` and `time` if it has already been requested and resolved."
      },
      "getPrice(bytes32,uint256,bytes)": {
        "notice": "Gets the price for `identifier` and `time` if it has already been requested and resolved."
      },
      "getPriceRequestStatuses((bytes32,uint256,bytes)[])": {
        "notice": "Gets the status of a list of price requests, identified by their identifier and time."
      },
      "getVotePhase()": {
        "notice": "Returns the current voting phase, as a function of the current time."
      },
      "hasPrice(bytes32,uint256)": {
        "notice": "Whether the price for `identifier` and `time` is available."
      },
      "hasPrice(bytes32,uint256,bytes)": {
        "notice": "Whether the price for `identifier` and `time` is available."
      },
      "requestPrice(bytes32,uint256)": {
        "notice": "Enqueues a request (if a request isn't already present) for the given `identifier`, `time` pair."
      },
      "requestPrice(bytes32,uint256,bytes)": {
        "notice": "Enqueues a request (if a request isn't already present) for the given `identifier`, `time` pair."
      },
      "retrieveRewards(address,uint256,(bytes32,uint256)[])": {
        "notice": "Retrieves rewards owed for a set of resolved price requests."
      },
      "retrieveRewards(address,uint256,(bytes32,uint256,bytes)[])": {
        "notice": "Retrieves rewards owed for a set of resolved price requests."
      },
      "revealVote(bytes32,uint256,int256,bytes,int256)": {
        "notice": "Reveal a previously committed vote for `identifier` at `time`."
      },
      "revealVote(bytes32,uint256,int256,int256)": {
        "notice": "Reveal a previously committed vote for `identifier` at `time`."
      },
      "setCurrentTime(uint256)": {
        "notice": "Sets the current time."
      },
      "setGatPercentage((uint256))": {
        "notice": "Resets the Gat percentage. Note: this change only applies to rounds that have not yet begun."
      },
      "setInflationRate((uint256))": {
        "notice": "Resets the inflation rate. Note: this change only applies to rounds that have not yet begun."
      },
      "setMigrated(address)": {
        "notice": "Disables this Voting contract in favor of the migrated one."
      },
      "setRewardsExpirationTimeout(uint256)": {
        "notice": "Resets the rewards expiration timeout."
      },
      "snapshotCurrentRound(bytes)": {
        "notice": "Snapshot the current round's token balances and lock in the inflation rate and GAT."
      }
    },
    "version": 1
  }
}